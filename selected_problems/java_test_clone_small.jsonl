[{"id": 609, "code1": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n  public static void main(String[] args) {\n    FastScanner sc = new FastScanner();\n    int N = sc.nextInt();\n    int L = sc.nextInt();\n    long T = sc.nextLong();\n    \n    long[][] ari = sc.nextLongTable(N, 2);\n    \n    long[] cl = new long[N];\n    long[] ccl = new long[N];\n\n    int p = 0, q = 0;\n    for (int i = 0; i < N; i ++) {\n      if (ari[i][1] == 1) {\n        cl[p ++] = L - ari[i][0];\n      } else {\n        ccl[q ++] = ari[i][0];\n      }\n    }\n    cl = Arrays.copyOf(cl, p);\n    ccl = Arrays.copyOf(ccl, q);\n    Arrays.sort(cl);\n\n    long[] rets = new long[N];\n    for (int i = 0; i < N ;i ++) {\n      if (ari[i][1] == 1) {\n        int count = (int)(count(ccl, ari[i][0], ari[i][0] + 2L * T, L) % N);\n        rets[(i + count) % N] = (ari[i][0] + T) % L;\n      } else {\n        int count = (int)(count(cl, L - ari[i][0], L - ari[i][0] + 2L * T, L) % N);\n        rets[(i + N - count) % N] = (ari[i][0] + L - T % L) % L;\n      }\n    }\n    \n    for (int i = 0; i < N; i ++) {\n      System.out.println(rets[i]);\n    }\n  }\n  \n  private static long count(long[] xs, long f, long t, int L) {\n    long ret = 0;\n    int n = xs.length;\n    {\n      ret += t / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(t % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret += ind;\n    }\n    {\n      ret -= f / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(f % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret -= ind;\n    }\n    return ret;\n  }\n}\n\n\n\n\nclass FastScanner {\n\tpublic static String debug = null;\n\n\tprivate final InputStream in = System.in;\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate byte[] buffer = new byte[1024];\n\tprivate boolean eos = false;\n\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tif (debug != null) {\n\t\t\t\t\tbuflen = debug.length();\n\t\t\t\t\tbuffer = debug.getBytes();\n\t\t\t\t\tdebug = \"\";\n\t\t\t\t\teos = true;\n\t\t\t\t} else {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen < 0) {\n\t\t\t\teos = true;\n\t\t\t\treturn false;\n\t\t\t} else if (buflen == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate int readByte() {\n\t\tif (hasNextByte())\n\t\t\treturn buffer[ptr++];\n\t\telse\n\t\t\treturn -1;\n\t}\n\n\tprivate static boolean isPrintableChar(int c) {\n\t\treturn 33 <= c && c <= 126;\n\t}\n\n\tprivate void skipUnprintable() {\n\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\tptr++;\n\t}\n\n\tpublic boolean isEOS() {\n\t\treturn this.eos;\n\t}\n\n\tpublic boolean hasNext() {\n\t\tskipUnprintable();\n\t\treturn hasNextByte();\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile (isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic long nextLong() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile (true) {\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\treturn minus ? -n : n;\n\t\t\t} else {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tpublic int nextInt() {\n\t\treturn (int) nextLong();\n\t}\n\n\tpublic long[] nextLongList(int n) {\n\t\treturn nextLongTable(1, n)[0];\n\t}\n\n\tpublic int[] nextIntList(int n) {\n\t\treturn nextIntTable(1, n)[0];\n\t}\n\n\tpublic long[][] nextLongTable(int n, int m) {\n\t\tlong[][] ret = new long[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextLong();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic int[][] nextIntTable(int n, int m) {\n\t\tint[][] ret = new int[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextInt();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\nclass Person implements Comparable<Person> {\n\n    final int no;\n    final double time;\n\n    Person( final int no, final double time ) {\n\tthis.no = no;\n\tthis.time = time;\n    }\n    \n    public int compareTo( final Person p ) {\n\treturn Double.compare( time, p.time );\n    }\n\n    public String toString() {\n\treturn String.format( \"%d %.2f\", no, time );\n    }\n}\n\nclass Main {\n\n    public static void main( final String[] args ) {\n\n\tfinal Scanner stdin = new Scanner( System.in );\n\tfinal ArrayList<Person> last = new ArrayList<Person>();\n\tfinal ArrayList<Person> rest = new ArrayList<Person>();\n\t\n\tfor ( int i = 0; i < 3; i++ ) {\n\t    final ArrayList<Person> semifinal = new ArrayList<Person>();\n\t    for ( int j = 0; j < 8; j++ ) {\n\t\tsemifinal.add( new Person( stdin.nextInt(), stdin.nextDouble() ) );\n\t    }\n\t    Collections.sort( semifinal );\n\t    last.add( semifinal.remove( 0 ) );\n\t    last.add( semifinal.remove( 0 ) );\n\t    rest.addAll( semifinal );\n\t}\n\tCollections.sort( rest );\n\tlast.add( rest.remove( 0 ) );\n\tlast.add( rest.remove( 0 ) );\n\tfor ( Person p : last ) {\n\t    System.out.println( p );\n\t}\n    }    \n}", "label": 0}, {"id": 516, "code1": "import java.util.ArrayList;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\n/**\n * Created by shoya on 2017/04/12.\n */\npublic class Main {\n    public static void main(String... args) {\n        Scanner sc = new Scanner(System.in);\n        int V = sc.nextInt();\n        int E = sc.nextInt();\n        int r = sc.nextInt();\n        DijkstraClass dijkstra = new DijkstraClass(V, E, r);\n        for (int i = 0; i < E; i++) {\n            int s = sc.nextInt();\n            int d = sc.nextInt();\n            int c = sc.nextInt();\n            dijkstra.addDistande(s, d, c);\n        }\n        int[] dist = dijkstra.dikstra();\n        for (int i = 0; i < dist.length; i++){\n            if (dist[i] == 1 << 30)\n                System.out.println(\"INF\");\n            else\n                System.out.println(dist[i]);\n        }\n        return;\n    }\n\n\n    private static class DijkstraClass {\n        class edge{\n            int dest, cost;\n            edge(int dest, int cost){\n                this.dest = dest;\n                this.cost = cost;\n            }\n        }\n\n        private final int INF = 1 << 30;\n        private int S;\n        private int V;\n        private ArrayList<ArrayList<edge>> edgesOfNodes = new ArrayList<ArrayList<edge>>();\n\n        DijkstraClass(int V, int E, int Start){\n            this.S = Start;\n            this.V = V;\n            for (int i = 0; i < V; i++)\n                edgesOfNodes.add(new ArrayList<edge>());\n        }\n\n        void addDistande(int source, int dest, int cost){\n            edgesOfNodes.get(source).add(new edge(dest, cost));\n        }\n\n\n        int[] dikstra(){\n            class costAndNode implements Comparable {\n                int cost, node;\n                costAndNode(int cost, int node){\n                    this.cost = cost;\n                    this.node = node;\n                }\n                @Override\n                public int compareTo(Object o) {\n                    return this.cost - ((costAndNode) o).cost;\n                }\n            }\n\n            PriorityQueue<costAndNode> pque = new PriorityQueue<costAndNode>();\n            int[] distances = new int[V];\n            for (int i = 0; i < V; i++)\n                distances[i] = INF;\n            distances[S] = 0;\n\n            pque.add(new costAndNode(0, S));\n            while (!pque.isEmpty()){\n                costAndNode item = pque.poll();\n                if (distances[item.node] < item.cost)\n                    continue;\n\n                //System.out.printf(\"Focusing on Node %d\\n\", item.node);\n                //for (int i = 0; i < V; i++)\n                //    System.out.printf(\"%d \", distances[i]);\n                //System.out.println();\n\n                for (edge e : edgesOfNodes.get(item.node)) {\n                    //System.out.printf(\"Node %d -> %d, Cost %d -> %d\\n\",\n                    //        item.node, e.dest, distances[e.dest],\n                    //        distances[item.node] + e.cost);\n                    if (distances[e.dest] > distances[item.node] + e.cost) {\n                        distances[e.dest] = distances[item.node] + e.cost;\n                        pque.add(new costAndNode(distances[e.dest], e.dest));\n                    }\n                }\n            }\n\n            return distances;\n        }\n\n    }\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\n/*\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            pass System Test!\n*/\n\npublic class Main {\n  private static class Task {\n    void solve(FastScanner in, PrintWriter out) {\n      int H = in.nextInt();\n      int W = in.nextInt();\n      char[][] map = new char[H][];\n      for (int i = 0; i < H; i++) {\n        map[i] = in.next().toCharArray();\n      }\n\n      boolean[][] red = new boolean[H][W];\n      boolean[][] blue = new boolean[H][W];\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (j == 0) red[i][j] = true;\n          else if (j == W - 1) blue[i][j] = true;\n          else if (i % 2 == 0) red[i][j] = true;\n          else blue[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (map[i][j] == '.') continue;\n          blue[i][j] = true;\n          red[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(red[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(blue[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n    }\n  }\n\n  /**\n   * \u3053\u3053\u304b\u3089\u4e0b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n   */\n  public static void main(String[] args) {\n    OutputStream outputStream = System.out;\n    FastScanner in = new FastScanner();\n    PrintWriter out = new PrintWriter(outputStream);\n    Task solver = new Task();\n    solver.solve(in, out);\n    out.close();\n  }\n  private static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int bufferLength = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < bufferLength) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          bufferLength = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (bufferLength <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    double[] nextDoubleArray(int n) {\n      double[] array = new double[n];\n      for (int i = 0; i < n; i++) {\n        array[i] = nextDouble();\n      }\n      return array;\n    }\n\n    double[][] nextDoubleMap(int n, int m) {\n      double[][] map = new double[n][];\n      for (int i = 0; i < n; i++) {\n        map[i] = nextDoubleArray(m);\n      }\n      return map;\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int n) {\n      int[] array = new int[n];\n      for (int i = 0; i < n; i++) array[i] = nextInt();\n      return array;\n    }\n\n    public long[] nextLongArray(int n) {\n      long[] array = new long[n];\n      for (int i = 0; i < n; i++) array[i] = nextLong();\n      return array;\n    }\n\n    public String[] nextStringArray(int n) {\n      String[] array = new String[n];\n      for (int i = 0; i < n; i++) array[i] = next();\n      return array;\n    }\n\n    public char[][] nextCharMap(int n) {\n      char[][] array = new char[n][];\n      for (int i = 0; i < n; i++) array[i] = next().toCharArray();\n      return array;\n    }\n  }\n}\n", "label": 0}, {"id": 566, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        BRemovingBlocks solver = new BRemovingBlocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BRemovingBlocks {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] a = in.readLongArray(n);\n\n            Modulo.mod = MiscUtils.MOD7;\n\n            long[] s = new long[n];\n            s[0] = 1;\n            for (int i = 1; i < n; i++) {\n                s[i] = Modulo.add(s[i - 1], Modulo.rev(i + 1));\n            }\n\n            long ans = 0;\n            for (int i = 0; i < n; i++) {\n                long sum = Modulo.mlt(a[i], s[i] + s[n - 1 - i] - 1);\n                ans = Modulo.add(ans, sum);\n            }\n            for (int i = 1; i <= n; i++) ans = Modulo.mlt(ans, i);\n            out.printLine(ans);\n        }\n\n    }\n\n    static class Modulo {\n        public static long mod;\n        private long value;\n\n        public Modulo(long value) {\n            this.value = (value % mod + mod) % mod;\n        }\n\n        public static long add(long a, long b) {\n            return ((a + b) % mod + mod) % mod;\n        }\n\n        public static long mlt(long a, long b) {\n            return ((a % mod + mod) * (b % mod + mod)) % mod;\n        }\n\n        public static long rev(long a) {\n            //return pow(a, mod - 2);\n            return (Euclid.extgcd(a, mod, new long[3])[0] % mod + mod) % mod;\n        }\n\n        public String toString() {\n            return \"\" + value;\n        }\n\n    }\n\n    static class Euclid {\n        public static long[] extgcd(long a, long b, long[] is) {\n            if (a == 0) {\n                is[0] = 0;\n                is[1] = 1;\n                is[2] = b;\n            } else {\n                extgcd(b % a, a, is);\n                long x = is[1] - b / a * is[0];\n                is[1] = is[0];\n                is[0] = x;\n            }\n            return is;\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n", "code2": "/*\n *           AUTHOR: Maria Theresa M. Padayhag\n *             DATE: 20160326\n *  PRE-REQUIREMENT: JDK 1.8\n */\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.time.*;\nimport java.time.format.TextStyle;\nimport java.util.Locale;\n\nclass DayIndentifier\n{\n\tLocalDate date = null;\n\t\n\tpublic \tDayIndentifier( String inMonth, String inDay )\n\t{\n\t\t// NumberFormatException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tint month = Integer.parseInt( inMonth );\n\t\tint day   = Integer.parseInt( inDay );\n\t\t\n\t\t// DateTimeException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tdate = LocalDate.of( 2004, month, day );\n\t}\n\t\n\tpublic String getDayOfWeek()\n\t{\n\t\t// NullPointerException might be thrown here\n\t\t// but it will handled by the caller.\n\t\treturn date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.ENGLISH);\n\t}\n}\n\npublic class Main\n{\n\tpublic static boolean toExit( String[] dataset )\n\t{\n\t\tfor(String data: dataset)\n\t\t{\n\t\t\tif(data.equals(\"0\"))\n\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tpublic static void main( String args[] ) throws IOException\n\t{\n\t\tBufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );\n\t\tString input;\n\t\tString dataset[];\n\t\tDayIndentifier di;\n\t\t\n\t\tREAD: \n\t\twhile( ( input = br.readLine() ) != null ) {\n\t\t\ttry {\n\t\t\t\tdataset = input.split(\" \");\n\t\t\t\n\t\t\t\tif( toExit( dataset ) ) {\n\t\t\t\t\tbreak READ;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( dataset.length != 2 ) {\n\t\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\t\tcontinue READ;\n\t\t\t\t} \t\t\n\t\t\t\t\n\t\t\t\tdi = new DayIndentifier(dataset[0], dataset[1]);\n\t\t\t\tSystem.out.println( di.getDayOfWeek() );\n\t\t\t} catch( Exception e ) {\n\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\tcontinue READ;\n\t\t\t}\t\t\n\t\t}\n\t}\n}", "label": 0}, {"id": 101, "code1": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 59, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "code2": "import java.util.Scanner;\n\n\npublic class Main{\n\t\n\tpublic static void main(String[] args){\n\t\tint[] blood = new int[] {0, 0, 0, 0};\t//A, B, AB, O\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNextLine()) {\n\t\t\tString line = sc.nextLine();\n\t\t\tScanner scstr = new Scanner(line);\n\t\t\tscstr.useDelimiter(\",\"); scstr.next();\n\t\t\t\n\t\t\tString b = scstr.next(); scstr.close();\n\t\t\tif(b.equals(\"end\")) break;\n\t\t\tif(b.equals(\"A\")) blood[0]++;\n\t\t\telse if(b.equals(\"B\")) blood[1]++;\n\t\t\telse if(b.equals(\"AB\")) blood[2]++;\n\t\t\telse blood[3]++;\n\t\t}\n\t\tsc.close();\n\t\tfor(int n: blood) System.out.println(n);\n\t}\n}", "label": 1}, {"id": 248, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "code2": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t == 0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\tt = t + sc.nextInt() - sc.nextInt();\n\t\t\t\n\t\t\tif(t <= 0)System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}sc.close();\n\t\t}\n}", "label": 1}, {"id": 290, "code1": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tlong h = stdIn.nextLong();\n\t\tlong w = stdIn.nextLong();\n\t\t\n\t\tlong cnt = 0;\n\t\tif(h==1 || w == 1) {\n\t\t\tSystem.out.println(1);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(h % 2 == 0 && w % 2 == 0) { //h\u5076\u6570\u3001w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else if(h % 2 == 0 && w % 2 != 0) { //h\u5076\u6570\u3001w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}else if( h % 2 != 0 && w % 2 == 0) { // h\u5947\u6570,w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else {                                //h\u5947\u6570,w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(cnt);\n\n\t}\n\n}\n", "code2": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.System.in;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long[] x = new long[n];\n        for(int i=0;i<n;i++) x[i]=sc.nextLong();\n        long ans= 0;\n        for(int i=0;i<n-1;i++){\n            ans += Math.min(A*(x[i+1]-x[i]),B);\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(ans);\n        out.flush();\n    }\n}\n", "label": 0}, {"id": 434, "code1": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n    static int searchP(long p,int[] ws){\n        int count = 1;\n        int sum = 0; \n        for(int i = 0; i < ws.length; i++){\n            if(sum + ws[i] <= p) {\n            sum += ws[i];\n            } else {\n                count++;\n                if(ws[i] <= p){\n                sum = ws[i];\n                } else{\n                    count += 99999;\n                }\n            }\n        }\n        return count;\n    }\n    static long solve(long p, int[] ws, long k){\n        long right = p;\n        long left = 0;\n        long mid;\n        while(right - left > 1) {\n            mid = (left + right) / 2;\n            int v = searchP(mid,ws);\n            if(k >= v) {\n                right = mid;\n            } else {\n               left = mid;\n                \n            }\n        }\n    return right;\n    }\n    public static void main(String...args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        \n        String[] info = br.readLine().split(\" \");\n        int n = Integer.parseInt(info[0]);\n        int k = Integer.parseInt(info[1]);\n        int[] ws = new int[n];\n        for(int i = 0; i < n; i++) {\n            ws[i] = Integer.parseInt(br.readLine());\n        }\n        long p = 100000 * 10000;\n        System.out.println(solve(p,ws,k));\n        \n    }\n}\n\n\n\n", "code2": "import java.io.File;\nimport java.io.IOException;\nimport java.util.*;\n \npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\t//File file = new File(\"input.txt\");\n\t\t//Scanner in = new Scanner(file);\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tString SS = in.next();\n\t\tString T = in.next();\n\t\t\n\t\tint index = SS.length() - T.length();\n\t\t\n\t\twhile(index >= 0){\n\t\t\tString s = SS.substring(index, index + T.length());\n\t\t\t\n\t\t\tboolean tf = true;\n\t\t\tfor(int i = 0; i < T.length(); i++){\n\t\t\t\tif(s.charAt(i) != '?' && s.charAt(i) != T.charAt(i)){\n\t\t\t\t\ttf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(tf){\n\t\t\t\tSS = new StringBuilder(SS).replace(index, index + s.length(), T).toString();\n\t\t\t\tSS = SS.replace('?', 'a');\n\t\t\t\tSystem.out.println(SS);\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"UNRESTORABLE\");\n\t}\n}", "label": 0}, {"id": 633, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "label": 0}, {"id": 405, "code1": "import java.util.*;\nimport java.io.*;\n\n\nclass Main {\n\n    public static void main(String[] args) throws IOException\n    {\n        PrintWriter out = new PrintWriter(System.out);\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        int n = Integer.parseInt(br.readLine());\n        Long arr[] = new Long[n];\n        StringTokenizer st1 = new StringTokenizer(br.readLine());\n        for(int i = 0 ; i < n ; i++)\n        {\n            arr[i] = Long.parseLong(st1.nextToken());\n        }\n        Arrays.sort(arr);\n        long sum = arr[n-1];\n        int ind = n-2;\n        for(int i = 0 ; i < n-2 ; i++)\n        {\n            sum += arr[ind];\n\n            if(i%2 != 0)\n                ind--;\n        }\n        out.println(sum);\n\n        out.flush();\n        out.close();\n\n    }\n\n    static class pair{\n        long x1;\n        long x2;\n\n        public pair(long x1 , long x2)\n        {\n            this.x1 = x1;\n            this.x2 = x2;\n        }\n\n    }\n\n}\n", "code2": "import java.util.*;\npublic class Main{\n    public static void main(String args[]) {\n        Scanner cin = new Scanner(System.in);\n        while(cin.hasNext()){\n        \tint n = cin.nextInt();\n        \tint[][] vote = readMatrix(cin,n,2);\n        \tSystem.out.println(getNum(vote,n));\n        }\n    }\n    public static long getNum(int[][] vote, int n){\n    \tlong[] result={vote[0][0],vote[0][1]};\n    \tlong result1;\n    \tfor(int i=1;i<n;i++){\n    \t\tresult1 = result[1];\n    \t\tif(result[0]>vote[i][0]){\n    \t\t\tif(result[0]%vote[i][0]!=0) result[0] += vote[i][0]-result[0]%vote[i][0];\n    \t\t}else{result[0]=vote[i][0];}\n    \t\tresult[1] = result[0]/vote[i][0]*vote[i][1];\n    \t\tif(result1>result[1]){\n    \t\t\tresult[1] = result1;\n    \t\t\tif(result[1]%vote[i][1]!=0) result[1] += vote[i][1]-result[1]%vote[i][1];\n    \t\t\t result[0] = result[1]/vote[i][1]*vote[i][0];\n    \t\t}\n    \t}\n    \treturn result[0]+result[1];\n    }\n    public static int[][] readMatrix(Scanner in,int n,int m){\n    \tint[][] mtx = new int[n][m];\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<m;j++){\n    \t\t\tmtx[i][j] = in.nextInt();\n    \t\t}\n    \t}\n    \treturn mtx;\n    }\n    \n}", "label": 0}, {"id": 510, "code1": "import java.util.*;\nimport java.io.*;\n\npublic class Main implements Runnable {\n    public static void main(String[] args) {\n        Thread.setDefaultUncaughtExceptionHandler((t,e)->System.exit(1));\n        // keep stack\n        new Thread(null, new Main(), \"\", 16 * 1024 * 1024).start();\n    }\n    public void run() {\n        FastScanner sc = new FastScanner();\n        PrintWriter out = new PrintWriter(System.out);\n        long X = sc.nextLong();\n        long Y = sc.nextLong();\n\n        long count = 1;\n        while(true) {\n            long A = X * 2;\n            if (Y < A) {\n                break;\n            }\n            X = A;\n            count++;\n        }\n        out.printf(\"%d\\n\", count);\n        out.flush();\n    }\n}\n\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        } else {\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private int readByte() {\n        if (hasNextByte()) {\n            return buffer[ptr++];\n        }\n        else {\n            return -1;\n        }\n    }\n\n    private static boolean isPrintableChar(int c) {\n        return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n        while (hasNextByte() && !isPrintableChar(buffer[ptr])) {\n            ptr++;\n        }\n    }\n\n    public boolean hasNext() {\n        skipUnprintable();\n        return hasNextByte();\n    }\n\n    public String next() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while (isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n\n    public int nextInt() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        int n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while (true) {\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            } else if (b == -1 || !isPrintableChar(b)) {\n                return minus ? -n : n;\n            } else {\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n\n    public long nextLong() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while (true) {\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            } else if (b == -1 || !isPrintableChar(b)) {\n                return minus ? -n : n;\n            } else {\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n}", "code2": "\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.Comparator;\nimport java.util.ArrayList;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author silviase\n */\npublic class Main {\n    \n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        DijkstraVerify solver = new DijkstraVerify();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class DijkstraVerify {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int source = in.nextInt();\n            Graph g = new Graph(n);\n            for (int i = 0; i < m; i++) {\n                g.addEdge(new Edge(in.nextInt(), in.nextInt(), in.nextInt()));\n            }\n            long[] d = g.dijkstra(source);\n            for (int i = 0; i < n; i++) {\n                if (d[i] > 1e15) out.println(\"INF\");\n                else out.println(d[i]);\n            }\n        }\n\n    }\n\n    static class Graph {\n        public int size;\n        public ArrayList<Edge>[] adj;\n        public int[] inDeg;\n        public int[] vertexCost;\n\n        @SuppressWarnings(\"unchecked\")\n        public Graph(int size) {\n            this.size = size;\n            adj = new ArrayList[size];\n            inDeg = new int[size];\n            vertexCost = new int[size];\n            for (int i = 0; i < size; i++) {\n                adj[i] = new ArrayList<>();\n            }\n        }\n\n        public void addEdge(Edge e) {\n            adj[e.from].add(e);\n            inDeg[e.to]++;\n        }\n\n        public long[] dijkstra(int from) {\n            long[] d = new long[size];\n            PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.comparing(e -> d[e]));\n            for (int i = 0; i < size; i++) {\n                d[i] = (i == from) ? 0 : (long) 1e18;\n                pq.add(i);\n            }\n            // System.out.println(Arrays.toString(pq.toArray()));\n            while (!pq.isEmpty()) {\n                int search = pq.poll();\n                // System.out.println(\"now: \" + search);\n                ArrayList<Edge> edges = adj[search];\n                for (Edge e : edges) {\n                    // System.out.println(e.toString());\n                    long cmp = d[search] + e.cost;\n                    if (d[e.to] > d[search] + e.cost) {\n                        // \u66f4\u65b0\u304c\u5165\u308b\n                        // \u51e6\u7406\u3092\u5165\u308c\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u306b\u5165\u308c\u308b\n                        d[e.to] = d[search] + e.cost;\n                        pq.add(e.to);\n                    }\n                }\n                //  System.out.println(Arrays.toString(pq.toArray()));\n            }\n            return d;\n        }\n\n    }\n\n    static class Edge {\n        public int from;\n        public int to;\n        public long cost;\n\n        public Edge(int to) {\n            this.to = to;\n        }\n\n        public Edge(int to, long cost) {\n            this.to = to;\n            this.cost = cost;\n        }\n\n        public Edge(int from, int to, long cost) {\n            this.from = from;\n            this.to = to;\n            this.cost = cost;\n        }\n\n        public String toString() {\n            return \"Edge{\" +\n                    \"from=\" + from +\n                    \", to=\" + to +\n                    \", cost=\" + cost +\n                    '}';\n        }\n\n    }\n}\n\n\n", "label": 0}, {"id": 360, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tchar[] s = in.nextChars();\n\n\t\t\tlong[][] dp = new long[n+1][n+1];\n\t\t\tArrays.fill(dp[0], 1);\n\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tif (s[i] == '<') {\n\t\t\t\t\tfor (int j = 0; j < n-i; j++) {\n\t\t\t\t\t\tdp[i+1][j] += dp[i][j];\n\t\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 0; j < n-i; j++) {\n\t\t\t\t\t\tdp[i+1][0] += dp[i][j];\n\t\t\t\t\t\tdp[i+1][j] -= dp[i][j] - MOD;\n\t\t\t\t\t\tdp[i+1][0] %= MOD;\n\t\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (int j = 1; j < n-1-i; j++) {\n\t\t\t\t\tdp[i+1][j] += dp[i+1][j-1];\n\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(dp[n-1][0]);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.io.IOException;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nimport java.io.PrintWriter;\n\n@SuppressWarnings(\"unchecked\")\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        final String s;\n\n        try (\n            BufferedReader reader = new BufferedReader(\n                new InputStreamReader(System.in))) {\n            s = reader.readLine();\n        }\n\n        PrintWriter out = new PrintWriter(System.out);\n\n        final String[] sl = s.split(\" \");\n        int A = Integer.parseInt(sl[0]);\n        int B = Integer.parseInt(sl[1]);\n        int C = Integer.parseInt(sl[2]);\n\n        int max = Math.max(A, Math.max(B, C));\n\n        int sum = 3 * max - A - B - C;\n\n        int ans;\n\n        if (sum % 2 == 0) ans = sum / 2;\n        else ans = (int)Math.ceil((double)sum / 2) + 1;\n\n        out.println(ans);\n\n        out.flush();\n    }\n}\n", "label": 0}, {"id": 67, "code1": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        long n = sc.nextLong();\n        long k = sc.nextLong();\n\n        if (n < k)\n        {\n            long candidate = Math.abs(n-k);\n            long candidate2 = Math.abs(candidate-k);\n            System.out.println(Math.min(candidate,candidate2));\n        }\n        else\n        {\n            if (n%k == 0) System.out.println(0);\n            else\n            {\n                long candidate = n%k;\n                long candidate2 = Math.abs(candidate-k);\n                System.out.println(Math.min(candidate,candidate2));\n            }\n        }\n\n        sc.close();\n    }\n}", "label": 1}, {"id": 3, "code1": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/10 10:58 \u4e0b\u5348\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.next();\n        long sum = 0;\n        int length = s.length();\n        for(int i = 0;i<length;i++){\n            sum += (s.charAt(i)-'0');\n        }\n        System.out.println(sum % 9==0?\"Yes\":\"No\");\n    }\n}\n", "code2": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "label": 1}, {"id": 169, "code1": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * ABC118C\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = sc.nextInt();\n        }\n        Arrays.sort(A);\n        int min0 = A[0];\n        int min = min0 + 1;\n        int tmp = 0;\n        while (tmp != min) {\n            tmp = min;\n            for (int i = 0; i < N; i++) {\n                if (A[i] % min < min && A[i] % min != 0) {\n                    min = A[i] % min;\n                }\n            }\n        }\n\n        System.out.println(min);\n\n        sc.close();\n    }\n}", "label": 1}, {"id": 192, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "import java.io.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 37, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "label": 1}, {"id": 748, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] d = in.nextIntArray(n);\n            int ans = 0;\n            LOOP:\n            for (int i = 24; i >= 0; i--) {\n                boolean[] vis = new boolean[n];\n                int[] time = new int[n + 1];\n                for (int j = 0; j < n; j++) {\n                    int idx = -1, t = 1 << 29;\n                    for (int k = 0; k < n; k++) {\n                        for (int r = 0; r < 2; r++) {\n                            int cur = r == 0 ? d[k] : 24 - d[k];\n                            if (!vis[k] && cur >= time[j] + i && (idx == -1 || cur < t)) {\n                                idx = k;\n                                t = cur;\n                                break;\n                            }\n                        }\n                    }\n                    if (idx == -1) continue LOOP;\n                    vis[idx] = true;\n                    time[j + 1] = t;\n                }\n                if ((24 - time[n]) % 24 >= i) {\n                    ans = i;\n                    break;\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "code2": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "label": 0}, {"id": 559, "code1": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)1e9+7;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint n = io.nextInt();\n\t\t\tint K = io.nextInt();\n\t\t\tint L = io.nextInt();\n\n\t\t\tUnionFind uf1 = new UnionFind(n);\n\t\t\tUnionFind uf2 = new UnionFind(n);\n\t\t\tUnionFind uf3 = new UnionFind(n);\n\t\t\t\n\t\t\tfor (int i = 0; i < K; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf1.union(a, b);\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < L; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf2.union(a, b);\n\t\t\t}\n\n\t\t\tTreeSet<Integer>[] s1 = new TreeSet[n];\n\t\t\tTreeSet<Integer>[] s2 = new TreeSet[n];\n\t\t\tfor (int i = 0; i < n; i++) if (uf1.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf1.next[j]) { s.add(j); }\n\t\t\t\ts1[i] = s;\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) if (uf2.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf2.next[j]) { s.add(j); }\n\t\t\t\ts2[i] = s;\n\t\t\t}\n\t\t\t\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint r1 = uf1.root(i);\n\t\t\t\tint r2 = uf2.root(i);\n\n\t\t\t\tif (!s1[r1].contains(i)) continue;\n\n\t\t\t\tTreeSet<Integer> a = s1[r1].size() < s2[r2].size() ? s1[r1] : s2[r2];\n\t\t\t\tTreeSet<Integer> b = s1[r1].size() < s2[r2].size() ? s2[r2] : s1[r1];\n\t\t\t\tList<Integer> same = new ArrayList<>();\n\t\t\t\tfor (int t : a) {\n\t\t\t\t\tif (b.contains(t)) same.add(t);\n\t\t\t\t}\n\t\t\t\tfor (int t : same) {\n\t\t\t\t\ts1[r1].remove(t);\n\t\t\t\t\ts2[r2].remove(t);\n\t\t\t\t\tans[t] = same.size();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tprintArrayLn(ans);\n\t\t}\n\t}\n\t\n\tstatic\n\tclass UnionFind {\n\t\tprivate int[] data;\n\t\tprivate int[] next;\n\t\tprivate int[] last;\n\t\t\n\t\tpublic UnionFind(int size) {\n\t\t\tdata = new int[size];\n\t\t\tnext = new int[size];\n\t\t\tlast = new int[size];\n\t\t\tclear();\n\t\t}\n\t\t\n\t\tpublic void clear() {\n\t\t\tArrays.fill(data, -1);\n\t\t\tArrays.fill(next, -1);\n\t\t\tfor(int i = 0; i < last.length; i++) {\n\t\t\t\tlast[i] = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic int root(int x) { return data[x] < 0 ? x : (data[x] = root(data[x])); }\n\t\t\n\t\tpublic void union(int x, int y) {\n\t\t\tif((x = root(x)) != (y = root(y))) {\n\t\t\t\tif(data[y] < data[x]) { final int t = x; x = y; y = t; }\n\t\t\t\tdata[x] += data[y];\n\t\t\t\tdata[y] = x;\n\t\t\t\tnext[last[x]] = y;\n\t\t\t\tlast[x] = last[y];\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic boolean same(int x, int y) { return root(x) == root(y); }\n\t\tpublic int size(int x) { return -data[root(x)]; }\n\t}\n\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "code2": "import java.util.*;\nclass Main\n{\n    static long mod = 1000000007;\n    public static void main (String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        for(int i = 0; i < n; i++){\n            a[i] = sc.nextLong();\n        }\n        long[] b = new long[n+1];\n        b[0] = 0;\n        for(int i = 1; i <= n; i++){\n            b[i] = (b[i-1] + pow(i, mod - 2)) % mod;\n        }\n        long ans = 0;\n        for(int i = 0; i < n; i++){\n            ans += a[i] * (b[i+1] + b[n - i] - 1);\n            ans %= mod;\n        }\n        for(int i = 1; i <= n; i++){\n            ans *= i;\n            ans %= mod;\n        }\n        System.out.println(ans);\n    }\n    static long pow(long a, long p){\n        if(p == 0) return 1;\n        else if(p % 2 == 0){\n            long d = pow(a, p/2);\n            return d * d % mod;\n        }\n        else return pow(a, p-1) * a % mod;\n    }\n}", "label": 0}, {"id": 643, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "code2": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\nimport java.util.function.*;\nimport static java.lang.System.out;\n\npublic final class Main {\n    public static void main(String[] args) throws Exception {\n        try (var input = new Reader()) {\n            int k = input.nextInt();\n            int a = input.nextInt();\n          \tint b = input.nextInt();\n          \tfor (int i = a; i <= b; ++i) {\n              \tif (i % k == 0) {\n                  out.printf(\"OK%n\");\n                  return;\n                }\n            }\n          \tout.printf(\"NG%n\");\n        }\n    }\n\n    private static final class Reader implements AutoCloseable {\n        private final int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private FileInputStream fis;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        private Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private Reader(String filename) throws IOException {\n            fis = new FileInputStream(filename);\n            din = new DataInputStream(fis);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') { break; }\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        private int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg) { c = read(); }\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) { buffer[0] = -1; }\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) { fillBuffer(); }\n            return buffer[bufferPointer++];\n        }\n\n        @Override\n        public void close() throws Exception {\n            if (fis != null) {\n                fis.close();\n            }\n\n            if (din != null) {\n                din.close();\n            }\n        }\n    }\n}\n\n", "label": 0}, {"id": 337, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "label": 0}, {"id": 428, "code1": "import java.util.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\tint cnt(int s,int g,int cnt,int xy[][],int n){\n\t\tint result = 0;\n\t\tint c[] = new int [n+1];\n\t\tint d[] = new int [n+1];\n\t\tc[s] = 1;\n\t\tif(s == g && cnt > 0)result = 1;\n\t\tfor(int i = 1;i < cnt;i++){\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tfor(int k = 1;k < n+1;k++){\n\t\t\t\t\tif(xy[j][k] == 1 && c[j] == i){\n\t\t\t\t\t\td[k] = i + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tc[j] = d[j];\n\t\t\t}\n\t\t\tif(c[g] > 0){\n\t\t\t\tresult = c[g];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i == 101){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tvoid doIt() { \n\t\tint n = sc.nextInt();\n\t\tint xy[][] = new int [n+1][n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tint r1 = sc.nextInt();\n\t\t\tint k1 = sc.nextInt();\n\t\t\tfor(int j = 0;j < k1;j++){\n\t\t\t\tint t = sc.nextInt();\n\t\t\t\txy[r1][t] = 1;\n\t\t\t}\n    \t }\n\t\tint p = sc.nextInt();\n\t\tfor(int i = 0;i < p;i++){\n\t\t\tint s = sc.nextInt();\n\t\t\tint d = sc.nextInt();\n\t\t\tint TTL = sc.nextInt();\n\t\t\tint ans = cnt(s,d,TTL,xy,n);\n\t\t\tif(ans == 0){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t//\u4e2d\u8eab\n\t\tfor(int i = 1;i <= n;i++){\n\t\t\tfor(int j = 1;j <= n;j++){\n\t\t\t\tSystem.out.print(xy[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t*/\n     }\n    public static void main(String[] args) {\n    \t// TODO Auto-generated method stub\n    \tnew Main().doIt();\n    }\n}", "code2": "import java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic Scanner sc;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//InputStream in = new FileInputStream(\"src/input.txt\");\n\t\tInputStream in = System.in;\n\t\t//PrintStream out = new PrintStream(\"src/output.txt\");\n\n\t\t//System.setOut(out);\n\n\t\tsc = new Scanner(in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] a = new int[N];\n\t\tint answer = 0;\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tif(a[a[i]-1] == i+1){\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(answer/2);\n\n\t\t//out.close();\n\t}\n}", "label": 0}, {"id": 525, "code1": "// -*- coding: utf-8 -*-\n//import java.awt.*;\nimport java.io.*;\nimport java.math.*;\nimport java.text.*;\nimport java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream;\n    if (args.length > 0 && args[0].equals(\"devTesting\")) {\n      try {\n        inputStream = new FileInputStream(args[1]);\n      } catch(FileNotFoundException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      inputStream = System.in;\n    }\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskC solver = new TaskC();\n    int testCase = 1;\n    solver.solve(1, in, out);\n    out.close();\n  }\n  \n  static class TaskC {\n    long h, w;\n    \n    void solve(int testNumber, InputReader in, PrintWriter out) {\n      h = in.nextInt();\n      w = in.nextInt();\n      char[][] superpost = new char[(int) h][];\n      for (int i = 0; i < h; ++i)\n        superpost[i] = in.next().toCharArray();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 0 && j < w - 1 || j == 0 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 1 && j > 0 || j == w - 1 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n          out.println();\n      }\n    }\n    \n  }\n      \n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream));\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n    \n    public String nextLine() {\n      try {\n        return reader.readLine();\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n    \n    public double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    public boolean hasInput() {\n      try {\n        if (tokenizer != null && tokenizer.hasMoreTokens()) {\n          return true;\n        }\n        reader.mark(1);\n        int ch = reader.read();\n        if (ch != -1) {\n          reader.reset();\n          return true;\n        }\n        return false;\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    \n  }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tInteger[] num = new Integer[n];\n\t\tStringBuilder s = new StringBuilder(\"\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tnum[i] = scan.nextInt();\n\t\t}\n\t\tArrays.sort(num);\n\t\t\n\t\ts.append(num[0]);\n\t\tfor(int i=1;i<num.length;i++){\n\t\t\ts.append(\" \"+num[i]);\n\t\t}\n\t\t\n\t\tSystem.out.println(s);\n\t}\n}", "label": 0}, {"id": 346, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "label": 0}, {"id": 443, "code1": "import java.io.File;\nimport java.io.IOException;\nimport java.util.*;\n \npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\t//File file = new File(\"input.txt\");\n\t\t//Scanner in = new Scanner(file);\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tString SS = in.next();\n\t\tString T = in.next();\n\t\t\n\t\tint index = SS.length() - T.length();\n\t\t\n\t\twhile(index >= 0){\n\t\t\tString s = SS.substring(index, index + T.length());\n\t\t\t\n\t\t\tboolean tf = true;\n\t\t\tfor(int i = 0; i < T.length(); i++){\n\t\t\t\tif(s.charAt(i) != '?' && s.charAt(i) != T.charAt(i)){\n\t\t\t\t\ttf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(tf){\n\t\t\t\tSS = new StringBuilder(SS).replace(index, index + s.length(), T).toString();\n\t\t\t\tSS = SS.replace('?', 'a');\n\t\t\t\tSystem.out.println(SS);\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"UNRESTORABLE\");\n\t}\n}", "code2": "\nimport java.util.*;\n\npublic class Main {\n    public static void main(final String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        // final int a = sc.nextInt();\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\n        // final String s1 = sc.next();\n        final int a = sc.nextInt();\n        final int b = sc.nextInt();\n        final int c = sc.nextInt();\n        final int k = sc.nextInt();\n        sc.close();\n        int result = 0;\n        if (a >= k) {\n            result = k;\n        } else if (b >= k - a) {\n            result = a;\n        } else if (c >= k - b - a) {\n            result = 2 * a + b - k;\n        }\n\n        System.out.println(result);\n    }\n}\n", "label": 0}, {"id": 779, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport java.util.Random;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tint[][] G;\n\tMap<Integer,List<Integer>> Genb = new HashMap<>();\n\tint V;\n\tint E;\n\tint Venb;\n\tint Eenb;\n\tlong START_TIME;\n\tint GenbSize;//Genb\u30b0\u30e9\u30d5\u306e1\u8fba\n\tRandom rand = new Random();\n\tpublic void calc() {\n\n\t\tsb = new StringBuilder();\n\n\n\t\t//\u5165\u529b\u51e6\u7406\n\t\tIO sc = new IO();\n\t\tchar[] s = sc.next().toCharArray();\n\t\tlong ans = s.length/2 + s.length%2;\n\t\tchar f = s[0];\n\t\tlong min = INF;\n\t\tfor (int i=1; i < s.length;i++) {\n\t\t\tif (s[i] != f) {\n\t\t\t\tmin = Math.min(min, Math.max(i, s.length-i));\n\t\t\t\tf = s[i];\n\t\t\t}else {\n\t\t\t}\n\t\t}\n\n\t\tans = Math.min(min,s.length);\n\n\t\tSystem.out.println(ans);\n\n\n\n\t}\n\t//\u5f97\u70b9\u8a08\u7b97\u30e1\u30bd\u30c3\u30c9\n\tpublic int calcScore(int[] ans) {\n\t\tint ret = 0;\n\t\tfor (int i=0; i < Venb; i++) {\n\t\t\tif (ans[i] != 0) {\n\t\t\t\tfor(int t: Genb.get(i)) {\n\t\t\t\t\t//\u81ea\u5206\u3088\u308a\u5c0f\u3055\u3044\u8fba\u306b\u5bfe\u3057\u3066\u306f2\u91cd\u306b\u306a\u308b\u306e\u3067\u8db3\u3055\u306a\u3044\n\t\t\t\t\t//\u9802\u70b9\u306b\u306a\u306b\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u306a\u3044\u5834\u5408\u3082\u8db3\u3055\u306a\u3044\n\t\t\t\t\tif (t < i || ans[t] == 0) continue;\n\t\t\t\t\t//\u3053\u306e\u8fba\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u308b\u91cd\u307f\u8db3\u3059\n\t\t\t\t\tret += G[ans[i]][ans[t]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}", "code2": "import java.util.*;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc=new Scanner(System.in);\n    System.out.println((sc.nextInt()+sc.nextInt()+1)/2);\n  }\n}", "label": 0}, {"id": 707, "code1": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.*;\nimport java.text.DecimalFormat;\nimport java.util.*;\n\n\n\n\npublic class Main {\n    private static int n,N;\n    private static int [] A;\n    private static int [] B;\n\n    private static int getLeft(){\n        int s = N/2 + 1;\n        while (s > 1 && B[s] != B[s-1]) s--;\n        return s;\n    }\n    private static int getRight(){\n        int e = N/2+1;\n        while (e < N && B[e] != B[e+1]) e++;\n        return e;\n    }\n\n    private static boolean valid(int x) {\n        for (int i = 1;i <= N;i++)\n            B[i] = (A[i] >= x) ? 1 : 0;\n        int s = getLeft(),e = getRight(),mid = N/2 + 1;\n        if (s == mid || e == mid) return B[mid] == 1;\n\n//        System.err.println(s + \" \" + e);\n        int prv = 0;\n        int l = B[s],r = B[e];\n\n        while (s <= e) {\n            int h = Math.max(s,e);\n            h = Math.min(h,N+1-h) - 1;\n            int rem = h - prv;\n            prv = h;\n            if (rem == 0) break;\n            int len = e-s-1;\n            if (2*rem <= len) {\n                s += rem;\n                e -= rem;\n            }\n            else {\n                if (l == r) return l == 1;\n                if (mid-s < e-mid) return l == 1;\n                else return r==1;\n            }\n        }\n//        System.err.println(\": \" + s + \" \" + e);\n        if (l == r) return l == 1;\n        int pos = mid - s;\n        if (l == 0) return pos%2 == 0;\n        return pos%2 == 1;\n    }\n    public static void main(String[] args) throws Exception {\n        IO io = new IO(null,null);\n        n = io.getNextInt();\n        N = 2*n-1;\n        A = new int[N+1];\n        B = new int[N+1];\n        for (int i = 1;i <= N;i++)\n            A[i] = io.getNextInt();\n\n        int s = 1,e = N;\n        while (s < e) {\n            int m = s + (e-s+1)/2;\n            if (valid(m)) s = m;\n            else e = m - 1;\n        }\n        io.println(s);\n\n        io.close();\n    }\n    private static void bf(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        TreeSet<ArrayList<Integer>> vis = new TreeSet<>(new Comparator<ArrayList<Integer>>() {\n            @Override\n            public int compare(ArrayList<Integer> o1, ArrayList<Integer> o2) {\n                for (int i = 0;i < n;i++)\n                    if (!o1.get(i).equals(o2.get(i)))\n                        return o1.get(i) - o2.get(i);\n                return 0;\n            }\n        });\n\n        while (!vis.contains(A)) {\n            System.err.println(A);\n            vis.add((ArrayList<Integer>)A.clone());\n            int prv = A.get(0);\n            for (int i = 1;i+1 < n;i++){\n                int cur = A.get(i);\n                if (prv != cur) A.set(i,A.get(i+1));\n                prv = cur;\n            }\n        }\n    }\n\n    private static void bftri(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        while (!A.isEmpty()) {\n            System.err.println(A);\n\n            ArrayList<Integer> B = new ArrayList<>();\n            int prv = A.get(0);\n            for (int i = 1;i+1 < A.size();i++){\n                int cur = A.get(i);\n                if (prv != cur) B.add(A.get(i+1));\n                else B.add(cur);\n                prv = cur;\n            }\n            A = B;\n        }\n    }\n}\n\nclass pair{\n    int s,e,v;\n    public pair(int s,int e,int v) {\n        this.s = s;\n        this.e = e;\n        this.v = v;\n    }\n    public int getLen(){\n        return e-s+1;\n    }\n    @Override\n    public String toString(){\n        return \"(\" + s + \":\" + e + \", \" + v + \")\";\n    }\n}\n\n\nclass IO{\n    private BufferedReader br;\n    private StringTokenizer st;\n    private PrintWriter writer;\n    private String inputFile,outputFile;\n\n    public boolean hasMore() throws IOException{\n        if(st != null && st.hasMoreTokens()) return true;\n        if(br != null && br.ready()) return true;\n        return false;\n    }\n    public String getNext() throws FileNotFoundException, IOException{\n        while(st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public String getNextLine() throws FileNotFoundException, IOException{\n        return br.readLine().trim();\n    }\n\n    public int getNextInt() throws FileNotFoundException, IOException{\n        return Integer.parseInt(getNext());\n    }\n    public long getNextLong() throws FileNotFoundException, IOException{\n        return Long.parseLong(getNext());\n    }\n\n    public void print(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\" ,x);\n    }\n    public void println(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\\n\" ,x);\n    }\n    public void print(Object o) throws  IOException{\n        writer.print(o.toString());\n    }\n\n    public void println(Object o) throws  IOException{\n        writer.println(o.toString());\n    }\n    public IO(String x,String y) throws FileNotFoundException, IOException{\n        inputFile = x;\n        outputFile = y;\n        if(x != null) br = new BufferedReader(new FileReader(inputFile));\n        else br = new BufferedReader(new InputStreamReader(System.in));\n        if(y != null) writer = new PrintWriter(new BufferedWriter(new FileWriter(outputFile)));\n        else writer = new PrintWriter(new OutputStreamWriter(System.out));\n    }\n\n    protected void close() throws IOException{\n        br.close();\n        writer.close();\n    }\n    public void outputArr(Object [] A) throws IOException{\n        int L = A.length;\n        for (int i = 0;i < L;i++) {\n            if(i > 0) writer.print(\" \");\n            writer.print(A[i]);\n        }\n        writer.print(\"\\n\");\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "label": 0}, {"id": 581, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tint INF=1000000007;\n\t\tScanner sc=new Scanner(System.in);\n\t\tint V=sc.nextInt();\n\t\tArrayList<ArrayList<Integer>> v=new ArrayList<ArrayList<Integer>>();\n\t\tfor(int i=0; i<=V; i++) {\n\t\t\tv.add(new ArrayList<Integer>());\n\t\t}\n\t\tfor(int i=0; i<V-1; i++) {\n\t\t\tint a=sc.nextInt();\n\t\t\tint b=sc.nextInt();\n\t\t\t(v.get(a)).add(b);\n\t\t\t(v.get(b)).add(a);\n\t\t}\n\t\tint[] Fe=new int[V+1];\n\t\tint[] Su=new int[V+1];\n\t\tboolean[] Fe_V=new boolean[V+1];\n\t\tboolean[] Su_V=new boolean[V+1];\n\t\tArrays.fill(Fe, INF);\n\t\tArrays.fill(Su, INF);\n\t\tFe[1]=0;\n\t\tSu[V]=0;\n\t\tStack<Integer> Q=new Stack<Integer>();\n\t\tQ.add(1);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Fe_V[v.get(tmp).get(i)] && Fe[tmp]+1<Fe[v.get(tmp).get(i)]) {\n\t\t\t\t\tFe_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tFe[v.get(tmp).get(i)]=Fe[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tQ.add(V);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Su_V[v.get(tmp).get(i)] && Su[tmp]+1<Su[v.get(tmp).get(i)]) {\n\t\t\t\t\tSu_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tSu[v.get(tmp).get(i)]=Su[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint Su_w=0;\n\t\tint Fe_w=0;\n\t\tfor(int i=1; i<=V; i++) {\n\t\t\tif(Fe[i]<=Su[i]) {\n\t\t\t\tFe_w++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSu_w++;\n\t\t\t}\n\t\t}\n\t\tif(Su_w>=Fe_w) {\n\t\t\tSystem.out.println(\"Snuke\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"Fennec\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int a[][] = new int[n][n];\n\n        for (int i = 0; i < m; i++) {\n            int t1 = in.nextInt() - 1;\n            int t2 = in.nextInt() - 1;\n            a[t1][t2] = 1;\n            a[t2][t1] = 1;\n        }\n        List<Integer> order = new ArrayList<>();\n        order.add(0);\n        List<Integer> remain = new ArrayList<>();\n        for (int i = 1; i < n; i++) {\n            remain.add(i);\n        }\n        System.out.println(f(order, remain, a));\n    }\n\n    static int f(List<Integer> order, List<Integer> remain, int edges[][]) {\n        if (remain.size() == 0) {\n            int cur = order.get(0);\n            int next;\n            for (int p = 1; p < order.size(); p++) {\n                next = order.get(p);\n                if (edges[cur][next] == 1 || edges[next][cur] == 1) {\n                    cur = next; \n                } else {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n\n        int total = 0;\n        for (int p = 0; p < remain.size(); p++) {\n            order.add(remain.get(p));\n            remain.remove(p);\n            total += f(order, remain, edges);\n            remain.add(p, order.get(order.size() - 1));\n            order.remove(order.size() - 1);\n        }\n        return total;\n    }\n}", "label": 0}, {"id": 775, "code1": "\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tchar[] s = ns().toCharArray();\n\t\tint min = s.length;\n\t\tfor(int i = 0;i < s.length-1;i++){\n\t\t\tif(s[i] != s[i+1]){\n\t\t\t\tmin = Math.min(min, Math.max(i+1, s.length-(i+1)));\n\t\t\t}\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint w, h;\n\t\twhile ((w = in.nextInt()) != 0 && (h = in.nextInt()) != 0) {\n\t\t\tint xs = in.nextInt();\n\t\t\tint ys = in.nextInt();\n\t\t\tint xg = in.nextInt();\n\t\t\tint yg = in.nextInt();\n\t\t\tchar[][] b = new char[200][200];\n\t\t\tint n = in.nextInt();\n\t\t\twhile (n-- > 0) {\n\t\t\t\tsetBlock(b, in.next().charAt(0), in.nextInt(), in.nextInt(),\n\t\t\t\t\t\tin.nextInt());\n\t\t\t}\n\t\t\tString ans;\n\t\t\tif (b[xs][ys] == b[xg][yg] && b[xs][ys] != '0') {\n\t\t\t\tsolid(b, b[xs][ys], xs, ys, xg, yg);\n\t\t\t\tans = b[xs][ys] == b[xg][yg] ? \"OK\" : \"NG\";\n\t\t\t} else {\n\t\t\t\tans = \"NG\";\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\n\tpublic static void setBlock(char[][] b, char c, int d, int x, int y) {\n\t\tb[x][y] = b[x + 1][y] = b[x][y + 1] = b[x + 1][y + 1] = c;\n\t\tif (d == -1) {\n\t\t\treturn;\n\t\t} else if (d == 0) {\n\t\t\tsetBlock(b, c, -1, x + 2, y);\n\t\t} else if (d == 1) {\n\t\t\tsetBlock(b, c, -1, x, y + 2);\n\t\t}\n\t}\n\n\tpublic static void solid(char[][] b, char c, int x, int y, int xg, int yg) {\n\t\tif (b[x][y] == c) {\n\t\t\tb[x][y] = '*';\n\t\t\tif (x == xg && y == yg) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsolid(b, c, x + 1, y, xg, yg);\n\t\t\tsolid(b, c, x - 1, y, xg, yg);\n\t\t\tsolid(b, c, x, y + 1, xg, yg);\n\t\t\tsolid(b, c, x, y - 1, xg, yg);\n\t\t}\n\t}\n}", "label": 0}, {"id": 207, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "code2": "import java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) throws Exception{\n\t\tScanner scan=new Scanner(System.in);\n\t\tString A=scan.next();\n\t\tString B=scan.next();\n\t\tString C=scan.next();\n\t\tint ac=0,bc=0,cc=0,c=0;\n\t\tfor(;;) {\n\t\t\tif(c==0) {\n\t\t\t\tac++;\n\t\t\t\tif(ac==A.length()+1) {\n\t\t\t\t\tSystem.out.println(\"A\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(A.charAt(ac-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}if(c==1) {\n\t\t\t\tbc++;\n\t\t\t\tif(bc==B.length()+1) {\n\t\t\t\t\tSystem.out.println(\"B\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(B.charAt(bc-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}if(c==2) {\n\t\t\t\tcc++;\n\t\t\t\tif(cc==C.length()+1) {\n\t\t\t\t\tSystem.out.println(\"C\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(C.charAt(cc-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 295, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "label": 0}, {"id": 620, "code1": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            list.add(scanner.nextInt());\n        }\n        list.sort((val1, val2) -> val1 - val2);\n        int b = list.get(0);\n        for (int i = 1; i < list.size(); i++) {\n            int a = list.get(i);\n            int r = a % b;\n            while (r != 0) {\n                a = b;\n                b = r;\n                r = a % b;\n            }\n        }\n        System.out.println(b);\n    }\n}", "code2": "import java.io.*;\nimport java.util.*;\n\nclass Main{\n    public static void main(String args[])throws IOException{\n      try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){\n        //input\n        String[] input = br.readLine().split(\" \");\n        int N = Integer.parseInt(input[0]);\n        int M = Integer.parseInt(input[1]);\n\n        //for algorithm & input\n        boolean[] answer = new boolean[N+1];\n        int[] wrong = new int[N+1];\n      \n        Arrays.fill(answer, false);\n        Arrays.fill(wrong, 0);\n        int pena = 0;\n        int result = 0;\n\n        for(int i = 0; i < M; i++){\n          String[] in = br.readLine().split(\" \");\n          int num = Integer.parseInt(in[0]);\n         \n          if(answer[num] == false){\n            if(in[1].equals(\"AC\")){\n              answer[num] = true;\n              result++;\n              pena += wrong[num];\n            }else{\n              wrong[num] += 1;\n            }\n          }else{\n            continue;\n          }\n        }\n\n        System.out.println(result + \" \" + pena);\n\n      }\n    }\n}\n", "label": 0}, {"id": 328, "code1": "import java.io.*;\nimport java.util.*;\nimport static java.lang.System.out;\n\npublic class Main {\n    static MyReader in = new MyReader();\n\n    public static void main(String[] args) {\n        int N = in.i();\n        int k = ((int)Math.sqrt(1 + 8 * N) + 1) / 2;\n        out.println(k * (k - 1) / 2 == N ? solve(k) : \"No\");\n    }\n\n    static String solve(int k) {\n        StringBuilder sb = new StringBuilder(\"Yes\\n\");\n        sb.append(k).append('\\n');\n\n        for (int i = 1; i < k; i++) {\n            sb.append(k - 1).append(' ');\n\n            int t = 1 + i * (i - 1) / 2;\n            for (int j = 1; j < i; j++) {\n                sb.append(t++).append(' ');\n            }\n\n            for (int j = i; j < k; j++) {\n                sb.append(t).append(' ');\n                t += j;\n            }\n            sb.append('\\n');\n        }\n\n        sb.append(k - 1).append(' ');\n        int t = 1;\n        for (int i = 2; i <= k; i++) {\n            sb.append(t).append(' ');\n            t += i;\n        }\n\n        return sb.toString();\n    }\n}\n\nclass MyReader extends BufferedReader {\n    char[] cbuf = new char[1024];\n    int head = 0;\n    int tail = 0;\n\n    MyReader() {\n        super(new InputStreamReader(System.in));\n    }\n\n    char next() {\n        if (head == tail) {\n            try {\n                tail = super.read(cbuf, 0, cbuf.length);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            head = 0;\n        }\n        return cbuf[head++];\n    }\n\n    void back() {\n        head--;\n    }\n\n    boolean minus() {\n        boolean minus;\n        while (true) {\n            char c = next();\n            if (!isDelimiter(c)) {\n                if (!(minus = c == '-')) back();\n                return minus;\n            }\n        }\n    }\n\n    void skip() {\n        while (isDelimiter(next()));\n        back();\n    }\n\n    char[] s(int N) {\n        char[] cbuf = new char[N];\n        read(cbuf, 0, N);\n        return cbuf;\n    }\n\n    public int read(char[] cbuf, int off, int len) {\n        skip();\n        int i;\n        for (i = 0; i < cbuf.length; i++) {\n            char c = next();\n            if (isDelimiter(c)) {\n                break;\n            }\n            cbuf[i] = c;\n        }\n        return i;\n    }\n\n    boolean isDelimiter(char c) {\n        return c == ' ' || c == '\\n' || c == '\\r';\n    }\n\n    int i() {\n        boolean minus = minus();\n        int n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n\n    int[] ii(final int N) {\n        int[] a = new int[N];\n        for (int j = 0; j < a.length; j++) a[j] = i();\n        return a;\n    }\n\n    long l() {\n        boolean minus = minus();\n        long n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "label": 0}, {"id": 737, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int [] h = new int [N];\n        for(int i=0; i<N; i++){\n            h[i] = sc.nextInt();\n        }\n        Arrays.sort(h);\n        long min = 0;\n        long max = 1000000000;\n        long mid = 0;\n        while(max-min>1){\n            mid = max-(max-min)/2;\n            if(judge(mid,h,N,B,A-B)){\n                max = mid;\n            }else{\n                min = mid;\n            }\n        }\n        if(!judge(mid,h,N,B,A-B))mid++;\n        System.out.println(mid);\n    }\n    static boolean judge(long mid, int[]h, int N, int B, double C){\n        long Z=0;\n        for(int i=N-1; i>=0; i--){\n            long tmp = h[i]-mid*B;\n            if(tmp>0){\n                Z+=((long)(Math.ceil(tmp/C)));\n            }else{\n                break;\n            }\n        }\n        if(Z>mid)return false;\n        return true;\n    }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] d = in.nextIntArray(n);\n            int ans = 0;\n            LOOP:\n            for (int i = 24; i >= 0; i--) {\n                boolean[] vis = new boolean[n];\n                int[] time = new int[n + 1];\n                for (int j = 0; j < n; j++) {\n                    int idx = -1, t = 1 << 29;\n                    for (int k = 0; k < n; k++) {\n                        for (int r = 0; r < 2; r++) {\n                            int cur = r == 0 ? d[k] : 24 - d[k];\n                            if (!vis[k] && cur >= time[j] + i && (idx == -1 || cur < t)) {\n                                idx = k;\n                                t = cur;\n                                break;\n                            }\n                        }\n                    }\n                    if (idx == -1) continue LOOP;\n                    vis[idx] = true;\n                    time[j + 1] = t;\n                }\n                if ((24 - time[n]) % 24 >= i) {\n                    ans = i;\n                    break;\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 638, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tint x = sc.nextInt();\n\t\tint y = sc.nextInt();\n\t\tlong ans = 0;\n\t\tint tmp = Math.min(x, y);\n\t\tx -= tmp;\n\t\ty -= tmp;\n\t\tif(a + b < 2 * c) {\n\t\t\tans += tmp * (a + b);\n\t\t} else {\n\t\t\tans += tmp * 2 * c;\n\t\t}\n\t\tif(x % 2 == 1) {\n\t\t\tif(a < 2 * c) {\n\t\t\t\tans += a;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\tx--;\n\t\t}\n\t\tif(a < 2 * c) {\n\t\t\tans += a * x;\n\t\t} else {\n\t\t\tans += 2 * c * x;\n\t\t}\n\t\tif(y % 2 == 1) {\n\t\t\tif(b < 2 * c) {\n\t\t\t\tans += b;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\ty--;\n\t\t}\n\t\tif(b < 2 * c) {\n\t\t\tans += b * y;\n\t\t} else {\n\t\t\tans += 2 * c * y;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author GYSHGX868\n */\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    OutputWriter out = new OutputWriter(outputStream);\n    TaskA solver = new TaskA();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskA {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n      char a = in.nextChar();\n      char b = in.nextChar();\n      if (a == 'H') {\n        out.printLine(b);\n      } else {\n        out.printLine(b == 'H' ? 'D' : 'H');\n      }\n    }\n\n  }\n\n  static class InputReader {\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private InputReader.SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n      this.stream = stream;\n    }\n\n    public int read() {\n      if (numChars == -1) {\n        throw new InputMismatchException();\n      }\n      if (curChar >= numChars) {\n        curChar = 0;\n        try {\n          numChars = stream.read(buf);\n        } catch (IOException e) {\n          throw new InputMismatchException();\n        }\n        if (numChars <= 0) {\n          return -1;\n        }\n      }\n      return buf[curChar++];\n    }\n\n    public boolean isSpaceChar(int c) {\n      if (filter != null) {\n        return filter.isSpaceChar(c);\n      }\n      return isWhitespace(c);\n    }\n\n    public static boolean isWhitespace(int c) {\n      return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public char nextChar() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      return (char) c;\n    }\n\n    public interface SpaceCharFilter {\n      boolean isSpaceChar(int ch);\n\n    }\n\n  }\n\n  static class OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n      writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n      this.writer = new PrintWriter(writer);\n    }\n\n    public void printLine(char i) {\n      writer.println(i);\n    }\n\n    public void close() {\n      writer.close();\n    }\n\n  }\n}\n\n", "label": 0}, {"id": 490, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    private static int[] arr;\n\n    public static void main(String[] args) {\n\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        arr = Arrays.stream(input.split(\"\")).mapToInt(Integer::parseInt).toArray();\n\n        long sum = calc(0, arr.length - 1);\n        System.out.println(sum);\n    }\n\n    private static long calc(int position, int end) {\n        if (position > end) return 0;\n\n        long tmp = 0;\n        for (int i = position; i < end; i++) {\n            tmp += toInt(position, i) * Math.pow(2, (end - i - 1)) + calc(i + 1, end);\n        }\n        tmp += toInt(position, end);\n        return tmp;\n    }\n\n    private static long toInt(int start, int end) {\n        if (start == end) {\n//            System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + arr[start]);\n            return arr[start];\n        }\n\n        long tmp = 0;\n        for (int i = start; i <= end; i++) {\n            tmp += arr[i] * Math.pow(10, (end - i));\n        }\n//        System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + tmp);\n        return tmp;\n    }\n}", "label": 0}, {"id": 125, "code1": "import java.util.*;\npublic class Main {\n        static Scanner sc = new Scanner(System.in);\n        static void myout(Object t){System.out.println(t);}//standard output\n        static void myerr(Object t){System.err.println(t);}//standard error\n        static String getStr(){return sc.next();}\n        static int getInt(){return Integer.parseInt(getStr());}\n        static long getLong(){return Long.parseLong(getStr());}\n        static boolean isNext(){return sc.hasNext();}\n        static String[] mySplit(String str){return str.split(\"\");}\n        public static void main(String[] args){\n          int N = getInt();\n          int M = getInt();\n          if(N >= M){\n            myout(0);\n            return;\n          }\n          long output = 0;\n          ArrayList<Integer> list = new ArrayList<Integer>(M);\n          for(int i = 0; i < M; i++){\n            list.add(getInt());\n          }\n          Collections.sort(list);\n          //myout(list);\n          PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n          for(int i = 1; i < M; i++){\n            pq.add(Math.abs(list.get(i)-list.get(i-1)));\n          }\n          for(int i = 0; i < N-1; i++){\n            pq.poll();\n          }\n          while(pq.size() != 0){\n            output += pq.poll();\n          }\n          myout(output);\n        }\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u304b\u3089\n\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u307e\u3067\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint N=sc.nextInt();\n\t\tint M=sc.nextInt();\n\t\tint[] masu=new int[M];\n\t\tfor(int i=0; i<M; i++) {\n\t\t\tmasu[i]=sc.nextInt();\n\t\t}\n\t\tsc.close();\n\t\tArrays.sort(masu);\n\t\tif(M==1) {\n\t\t\tSystem.out.println(0);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tif(N==1) {\n\t\t\tSystem.out.println(masu[M-1]-masu[0]);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\telse {\n\t\t\tif(N>=M) {\t//\u30b3\u30de\u304c\u904e\u5270\u306e\u3068\u304d\n\t\t\t\tSystem.out.println(0);\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint[] sa=new int[M-1];\n\t\t\t\tfor(int i=0; i<M-1; i++) {\n\t\t\t\t\tsa[i]=masu[i+1]-masu[i];\n\t\t\t\t}\n\t\t\t\tArrays.sort(sa);\n\t\t\t\tint max=masu[M-1]-masu[0];\n\t\t\t\tfor(int i=0; i<N-1; i++) {\n\t\t\t\t\tmax-=sa[M-2-i];\n\t\t\t\t}\n\t\t\t\tSystem.out.println(max);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 368, "code1": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "code2": "/**\n * Created at 16:38 on 2019-08-27\n */\n\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n  static FastScanner sc = new FastScanner();\n  static Output out = new Output(System.out);\n\n  static final int[] dx = {0, 1, 0, -1};\n  static final int[] dy = {-1, 0, 1, 0};\n\n  static final long MOD = (long) (1e9 + 7);\n  static final long INF = Long.MAX_VALUE / 2;\n\n  public static class Solver {\n    public Solver() {\n\n      int Q = sc.nextInt();\n\n      for (int q=0; q<Q; q++) {\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long P = A * B;\n\n        long sqrt = sqrt(P-1);\n\n        long ans = 2*sqrt;\n\n        if (Math.min(A, B) <= sqrt) ans--; //\u9ad8\u6a4b\u541b\u3068\u540c\u3058\u9806\u4f4d\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f\n        if (sqrt * (sqrt+1) > P-1) ans--; //\u30c0\u30d6\u30eb\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f(x == y \u306e\u3068\u304d)\n\n        out.println(ans);\n      }\n\n\n    }\n\n    long sqrt(long n) {\n      long res = (long)Math.floor(Math.sqrt(n));\n      while (res * res > n) res--;\n      while ((res+1) * (res+1) <= n) res++;\n      return res;\n    }\n\n  }\n\n  public static void main(String[] args) {\n    new Solver();\n    out.flush();\n  }\n\n  static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < buflen) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          buflen = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (buflen <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    public boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    public long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int N, boolean oneBased) {\n      if (oneBased) {\n        int[] array = new int[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      } else {\n        int[] array = new int[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      }\n    }\n\n    public long[] nextLongArray(int N, boolean oneBased) {\n      if (oneBased) {\n        long[] array = new long[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      } else {\n        long[] array = new long[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      }\n    }\n  }\n\n  static class Output extends PrintWriter {\n\n    public Output(PrintStream ps) {\n      super(ps);\n    }\n\n    public void print(int[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(long[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(String[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(ArrayList a, String separator) {\n      for (int i = 0; i < a.size(); i++) {\n        if (i == 0) print(a.get(i));\n        else print(separator + a.get(i));\n      }\n      println();\n    }\n  }\n\n}\n", "label": 0}, {"id": 246, "code1": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "code2": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t == 0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\tt = t + sc.nextInt() - sc.nextInt();\n\t\t\t\n\t\t\tif(t <= 0)System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}sc.close();\n\t\t}\n}", "label": 1}, {"id": 398, "code1": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CTwoAlpinists solver = new CTwoAlpinists();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CTwoAlpinists {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] t = in.readLongArray(n);\n            long[] a = in.readLongArray(n);\n\n            long[] max = new long[n];\n            long[] actual = new long[n];\n\n            {\n                for (int i = 0; i < n; i++) {\n                    max[i] = Math.min(t[i], a[i]);\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = 0; i < n; i++) {\n                    if (t[i] > prev) {\n                        if (t[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = t[i];\n                        prev = t[i];\n                    }\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = n - 1; i >= 0; i--) {\n                    if (a[i] > prev) {\n                        if (a[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = a[i];\n                        prev = a[i];\n                    }\n                }\n            }\n\n            long ans = 1;\n            for (int i = 0; i < n; i++) {\n                if (actual[i] != 0) continue;\n                ans = (ans * max[i]) % MiscUtils.MOD7;\n            }\n\n            out.printLine(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n        public void printLine(int i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n}\n\n", "label": 0}, {"id": 729, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextInt();\n        }\n        int[] c = new int[n];\n        for (int i = 0; i < n; i++) {\n            c[i] = sc.nextInt();\n        }\n        Arrays.sort(a);\n        Arrays.sort(b);\n        Arrays.sort(c);\n        System.out.println(solve(a, b, c));\n    }\n\n    private static long solve(int[] a, int[] b, int[] c) {\n        int n = a.length;\n        long[] bmemo = new long[n];\n        int cidx = 0;\n        for (int j = 0; j < n; j++) {\n            for (int k = cidx; k < n; k++) {\n                if (b[j] >= c[k]) {\n                    cidx++;\n                } else {\n                    bmemo[j] = n - k;\n                    break;\n                }\n            }\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            bmemo[i] += bmemo[i + 1];\n        }\n        long sum = 0;\n        int bidx = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = bidx; j < n; j++) {\n                if (a[i] >= b[j]) {\n                    bidx++;\n                } else {\n                    sum += bmemo[j];\n                    break;\n                }\n            }\n        }\n        return sum;\n    }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tlong a = sc.nextLong();\n\t\tlong b = sc.nextLong();\n\t\tlong[] h = new long[n];\n\t\tfor(int i = 0; i < n; i++) h[i] = sc.nextLong();\n\t\tlong l = 0, r = Integer.MAX_VALUE;\n\t\twhile(r - l != 1) {\n\t\t\tlong mid = (r + l) / 2;\n\t\t\tlong[] x = Arrays.copyOf(h, h.length);\n\t\t\tlong cnt = 0;\n\t\t\tfor(int i = 0; i < x.length; i++) {\n\t\t\t\tif(x[i] - b * mid <= 0) continue;\n\t\t\t\tcnt += ((x[i] - b * mid) + (a - b - 1)) / (a - b);\n\t\t\t}\n\t\t\tif(mid >= cnt) r = mid;\n\t\t\telse l = mid;\n\t\t}\n\t\tSystem.out.println(r);\n\t}\n}\n", "label": 0}, {"id": 674, "code1": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid solve() {\n\t\tint r = in.nextInt(), c = in.nextInt();\n\t\tint[] cnt = new int[26];\n\t\tfor (int i = 0; i < r; i++) {\n\t\t\tfor (char ch : in.nextToken().toCharArray()){ \n\t\t\t\tcnt[ch - 'a']++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint cnt4 = (r / 2) * (c / 2);\n\t\tint cnt2 = (r / 2) * (c % 2) + (c / 2) * (r % 2);\n\t\tint cnt1 = (r % 2) * (c % 2);\n\t\t\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 4 && cnt4 > 0) {\n\t\t\t\tcnt[i] -= 4;\n\t\t\t\tcnt4--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 2 && cnt2 > 0) {\n\t\t\t\tcnt[i] -= 2;\n\t\t\t\tcnt2--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 1 && cnt1 > 0) {\n\t\t\t\tcnt[i] -= 1;\n\t\t\t\tcnt1--;\n\t\t\t}\n\t\t}\n\t\tout.println((cnt1 == 0 && cnt2 == 0 && cnt4 == 0) ? \"Yes\" : \"No\");\n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "label": 0}, {"id": 549, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleClocks solver = new CMultipleClocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleClocks {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            int N = in.nextInt();\n            long[] T = in.nextLongArray(N);\n            long ans = T[0];\n            for (int i = 1; i < N; i++) {\n                long gcd = gcd(ans, T[i]);\n                ans = T[i] * (ans / gcd);\n            }\n            out.println(ans);\n        }\n\n        private static long gcd(long m, long n) {\n            if (m < n) return gcd(n, m);\n            if (n == 0) return m;\n            return gcd(n, m % n);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "code2": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint l = in.nextInt();\n\t\t\tUnionFind u1 = new UnionFind(n);\n\t\t\tUnionFind u2 = new UnionFind(n);\n\t\t\tfor (int i = 0; i < k; i++) {\n\t\t\t\tint p = in.nextInt()-1;\n\t\t\t\tint q = in.nextInt()-1;\n\t\t\t\tu1.link(p, q);\n\t\t\t}\n\t\t\tfor (int i = 0; i < l; i++) {\n\t\t\t\tint r = in.nextInt()-1;\n\t\t\t\tint s = in.nextInt()-1;\n\t\t\t\tu2.link(r, s);\n\t\t\t}\n\t\t\tMap<Long, Integer> roots = new HashMap<Long, Integer>();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlong code = (long)u1.root(i)<< 32 | u2.root(i);\n\t\t\t\troots.merge(code, 1, Integer::sum);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (i > 0)out.print(\" \");\n\t\t\t\tlong code = (long)u1.root(i) << 32 | u2.root(i);\n\t\t\t\tout.print(roots.get(code));\n\t\t\t}\n\n\t\t}\n\n\t\tpublic class UnionFind {\n\t\t\tint[] data;\n\n\t\t\tpublic UnionFind(int n) {\n\t\t\t\tdata = new int[n];\n\t\t\t\tArrays.fill(data, -1);\n\t\t\t}\n\n\t\t\tboolean link(int x, int y) {\n\t\t\t\tx = root(x);\n\t\t\t\ty = root(y);\n\t\t\t\tif (x != y) {\n\t\t\t\t\tif (data[y] < data[x]) {\n\t\t\t\t\t\tdata[y] += data[x];\n\t\t\t\t\t\tdata[x] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[x] += data[y];\n\t\t\t\t\t\tdata[y] = x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn x != y;\n\t\t\t}\n\n\t\t\tint root(int x) {\n\t\t\t\treturn data[x] < 0 ? x : (data[x] = root(data[x]));\n\t\t\t}\n\t\t}\n\t}\n\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 115, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    while (true) {\n      int n = sc.nextInt();\n      int x = sc.nextInt();\n      if (n == 0 && x == 0) {\n        break;\n      }\n      int counter = 0;\n      for (int k = 1; k < n-1; k++) {\n        for (int j = k+1; j < n; j++) {\n          for (int i = j+1; i < n+1; i++) {\n            if (i+j+k == x) {\n              counter++;\n            }\n          }\n        }\n      }\n      System.out.println(counter);\n    }\n  }\n}", "label": 1}, {"id": 407, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CTwoAlpinists solver = new CTwoAlpinists();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CTwoAlpinists {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] t = in.readLongArray(n);\n            long[] a = in.readLongArray(n);\n\n            long[] max = new long[n];\n            long[] actual = new long[n];\n\n            {\n                for (int i = 0; i < n; i++) {\n                    max[i] = Math.min(t[i], a[i]);\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = 0; i < n; i++) {\n                    if (t[i] > prev) {\n                        if (t[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = t[i];\n                        prev = t[i];\n                    }\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = n - 1; i >= 0; i--) {\n                    if (a[i] > prev) {\n                        if (a[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = a[i];\n                        prev = a[i];\n                    }\n                }\n            }\n\n            long ans = 1;\n            for (int i = 0; i < n; i++) {\n                if (actual[i] != 0) continue;\n                ans = (ans * max[i]) % MiscUtils.MOD7;\n            }\n\n            out.printLine(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n        public void printLine(int i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n}\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    void solve() throws IOException {\n    \tint N = ni();\n\n    \tint[] T = new int[N];\n    \tint[] A = new int[N];\n\n    \tfor (int i=0; i<N; i++) {\n\t\t\tT[i] = ni();\n\t\t\tA[i] = ni();\n\t\t}\n\n    \tlong t = T[0];\n    \tlong a = A[0];\n\n    \tfor (int i=1; i<N; i++) {\n    \t\tlong x = (t%T[i]==0)? t/T[i] : (t/T[i] + 1);\n    \t\tlong y = (a%A[i]==0)? a/A[i] : (a/A[i] + 1);\n    \t\tt = T[i] * Math.max(x, y);\n    \t\ta = A[i] * Math.max(x, y);\n    \t}\n\n    \tout.println(t + a);\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}\n", "label": 0}, {"id": 80, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tif ((a <= c && b >= c) || (a >= c && b <= c)) {\n\t\t\tSystem.out.printf(\"Yes\");\n\t\t} else {\n\t\t\tSystem.out.printf(\"No\");\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 745, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] d = in.nextIntArray(n);\n            int ans = 0;\n            LOOP:\n            for (int i = 24; i >= 0; i--) {\n                boolean[] vis = new boolean[n];\n                int[] time = new int[n + 1];\n                for (int j = 0; j < n; j++) {\n                    int idx = -1, t = 1 << 29;\n                    for (int k = 0; k < n; k++) {\n                        for (int r = 0; r < 2; r++) {\n                            int cur = r == 0 ? d[k] : 24 - d[k];\n                            if (!vis[k] && cur >= time[j] + i && (idx == -1 || cur < t)) {\n                                idx = k;\n                                t = cur;\n                                break;\n                            }\n                        }\n                    }\n                    if (idx == -1) continue LOOP;\n                    vis[idx] = true;\n                    time[j + 1] = t;\n                }\n                if ((24 - time[n]) % 24 >= i) {\n                    ans = i;\n                    break;\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "label": 0}, {"id": 323, "code1": "import java.util.*;\nclass Main {\n\tstatic int n;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) break;\n\t\t\tint maxDistance = 0;\n\t\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d = sc.nextInt() + sc.nextInt();\n\t\t\t\tmap.put(d, p);\n\t\t\t\tmaxDistance = Math.max(d, maxDistance);\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d %d\\n\", map.get(maxDistance), maxDistance);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "label": 0}, {"id": 249, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\twhile(true){\n\t\t\tint t = stdIn.nextInt();\n\t\t\tif(t==0) return;\n\t\t\tint n = stdIn.nextInt();\n\t\t\tint sum = 0;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tsum+=(-1*(stdIn.nextInt()-stdIn.nextInt()));\n\t\t\t}\n\t\t\tif(sum>=t){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(t-sum);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 731, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextInt();\n        }\n        int[] c = new int[n];\n        for (int i = 0; i < n; i++) {\n            c[i] = sc.nextInt();\n        }\n        Arrays.sort(a);\n        Arrays.sort(b);\n        Arrays.sort(c);\n        System.out.println(solve(a, b, c));\n    }\n\n    private static long solve(int[] a, int[] b, int[] c) {\n        int n = a.length;\n        long[] bmemo = new long[n];\n        int cidx = 0;\n        for (int j = 0; j < n; j++) {\n            for (int k = cidx; k < n; k++) {\n                if (b[j] >= c[k]) {\n                    cidx++;\n                } else {\n                    bmemo[j] = n - k;\n                    break;\n                }\n            }\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            bmemo[i] += bmemo[i + 1];\n        }\n        long sum = 0;\n        int bidx = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = bidx; j < n; j++) {\n                if (a[i] >= b[j]) {\n                    bidx++;\n                } else {\n                    sum += bmemo[j];\n                    break;\n                }\n            }\n        }\n        return sum;\n    }\n}\n", "code2": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint[] v = new int[500000];\n        for(int i = 0;i < 500000;i++){\n            v[i] = 1;\n        }\n        int p = 3;\n        while(true){\n            if(p*p > 1000000){\n                break;\n            }else{\n                if(v[(p-1)/2] == 0){\n                    p += 2;\n                }else{\n                    int t = p*p;\n                    while(t < 1000000){\n                        v[(t-1)/2] = 0;\n                        t += 2*p;\n                    }\n                    p += 2;\n                }\n            }\n        }\n        v[0] = 0;\n\t\twhile(scan.hasNext()){\n\t\t\tint n = scan.nextInt();\n\t\t\tif(n == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor(int i = 1;i < n/2;i++){\n\t\t\t\tif(v[i] != 1){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(v[(n-2*i-2)/2] == 1){\n\t\t\t\t\tcount += ((n-2*i-2)/2 == i)?2:1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/2);\n        }\n\t}\n}", "label": 0}, {"id": 138, "code1": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "label": 1}, {"id": 212, "code1": "import java.util.*;\n\npublic class Main {    \n    \n  public static void main(String[] args) {              \n     Scanner sc = new Scanner(System.in);\n     \n     int N = sc.nextInt();\n     \n     int sum = 0;\n     int min = Integer.MAX_VALUE;\n     \n     int count = 0;\n     for(int i = 0;i < N;i++){\n         int a = sc.nextInt();\n         if(a%10 == 0){\n               count++;\n         }\n         sum += a;\n         if(a%10 != 0){\n           min = Math.min(min,a);\n         }\n     }\n     \n     if(count == N){\n         System.out.println(0);\n         return;\n     }     \n                           \n     if(sum%10 != 0){\n         System.out.println(sum);\n         return;\n     }else{\n         System.out.println(sum - min);\n         return;\n     }\n      \n  }          \n}", "code2": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 1}, {"id": 75, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "code2": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] $) {\n       Scanner sc = new Scanner(System.in);\n       int a = sc.nextInt();\n       int b = sc.nextInt();\n       int C = sc.nextInt();\n       double Cc = C * Math.PI /180;\n       System.out.println(b * Math.sin(Cc) * a /2);\n       System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(Cc)) + a + b);\n       System.out.println(b * Math.sin(Cc));\n    }\n}\n", "label": 1}, {"id": 517, "code1": "\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.Comparator;\nimport java.util.ArrayList;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author silviase\n */\npublic class Main {\n    \n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        DijkstraVerify solver = new DijkstraVerify();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class DijkstraVerify {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int source = in.nextInt();\n            Graph g = new Graph(n);\n            for (int i = 0; i < m; i++) {\n                g.addEdge(new Edge(in.nextInt(), in.nextInt(), in.nextInt()));\n            }\n            long[] d = g.dijkstra(source);\n            for (int i = 0; i < n; i++) {\n                if (d[i] > 1e15) out.println(\"INF\");\n                else out.println(d[i]);\n            }\n        }\n\n    }\n\n    static class Graph {\n        public int size;\n        public ArrayList<Edge>[] adj;\n        public int[] inDeg;\n        public int[] vertexCost;\n\n        @SuppressWarnings(\"unchecked\")\n        public Graph(int size) {\n            this.size = size;\n            adj = new ArrayList[size];\n            inDeg = new int[size];\n            vertexCost = new int[size];\n            for (int i = 0; i < size; i++) {\n                adj[i] = new ArrayList<>();\n            }\n        }\n\n        public void addEdge(Edge e) {\n            adj[e.from].add(e);\n            inDeg[e.to]++;\n        }\n\n        public long[] dijkstra(int from) {\n            long[] d = new long[size];\n            PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.comparing(e -> d[e]));\n            for (int i = 0; i < size; i++) {\n                d[i] = (i == from) ? 0 : (long) 1e18;\n                pq.add(i);\n            }\n            // System.out.println(Arrays.toString(pq.toArray()));\n            while (!pq.isEmpty()) {\n                int search = pq.poll();\n                // System.out.println(\"now: \" + search);\n                ArrayList<Edge> edges = adj[search];\n                for (Edge e : edges) {\n                    // System.out.println(e.toString());\n                    long cmp = d[search] + e.cost;\n                    if (d[e.to] > d[search] + e.cost) {\n                        // \u66f4\u65b0\u304c\u5165\u308b\n                        // \u51e6\u7406\u3092\u5165\u308c\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u306b\u5165\u308c\u308b\n                        d[e.to] = d[search] + e.cost;\n                        pq.add(e.to);\n                    }\n                }\n                //  System.out.println(Arrays.toString(pq.toArray()));\n            }\n            return d;\n        }\n\n    }\n\n    static class Edge {\n        public int from;\n        public int to;\n        public long cost;\n\n        public Edge(int to) {\n            this.to = to;\n        }\n\n        public Edge(int to, long cost) {\n            this.to = to;\n            this.cost = cost;\n        }\n\n        public Edge(int from, int to, long cost) {\n            this.from = from;\n            this.to = to;\n            this.cost = cost;\n        }\n\n        public String toString() {\n            return \"Edge{\" +\n                    \"from=\" + from +\n                    \", to=\" + to +\n                    \", cost=\" + cost +\n                    '}';\n        }\n\n    }\n}\n\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\n    void solve() throws IOException {\n        int h = ni(), w = ni();\n        String[] a = nsa(h);\n\n        char[][] ansR = new char[h][w];\n        char[][] ansB = new char[h][w];\n\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 || i < h - 1 && j % 2 == 0) {\n                    ansR[i][j] = '#';\n                    ansB[i][j] = '.';\n                } else {\n                    ansR[i][j] = '.';\n                    ansB[i][j] = '#';\n                }\n            }\n        }\n\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (a[i].charAt(j) == '#') {\n                    ansR[i][j] = '#';\n                    ansB[i][j] = '#';\n                }\n            }\n        }\n\n        for (int i = 0; i < h; i++) {\n            out.println(String.valueOf(ansR[i]));\n        }\n        out.println();\n        for (int i = 0; i < h; i++) {\n            out.println(String.valueOf(ansB[i]));\n        }\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    class INA {\n        int[][] a;\n\n        INA(int n, int m) throws IOException {\n            this(n, m, -1);\n        }\n\n        INA(int n, int m, int t) throws IOException {\n            a = new int[m][n];\n\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[j][i] = ni() + t;\n                }\n            }\n        }\n\n        int[] get(int i) {\n            return a[i - 1];\n        }\n    }\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}", "label": 0}, {"id": 488, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author cunbidun\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        EProductOfArithmeticProgression solver = new EProductOfArithmeticProgression();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class EProductOfArithmeticProgression {\n        private static final int MOD = (int) 1e6 + 3;\n        private InputReader in;\n        private PrintWriter out;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n            int q = in.nextInt();\n\n            int[] fac = new int[MOD + 1];\n            int[] inv = new int[MOD + 1];\n            fac[0] = 1;\n            inv[0] = Op.inv(1, MOD);\n            for (int i = 1; i <= MOD; i++) {\n                fac[i] = Op.mulMod(fac[i - 1], i, MOD);\n                inv[i] = Op.inv(fac[i], MOD);\n            }\n\n            while (q-- > 0) {\n                int x = in.nextInt();\n                int d = in.nextInt();\n                int n = in.nextInt();\n                if (d == 0) {\n                    out.println(Op.powMod(x, n, MOD));\n                    continue;\n                }\n                x = Op.mulMod(x, Op.inv(d, MOD), MOD);\n                int ans;\n                if (x + n - 1 >= MOD || x == 0) ans = 0;\n                else\n                    ans = Op.mulMod(fac[x + n - 1], inv[x - 1], MOD);\n                out.println(Op.mulMod(ans, Op.powMod(d, n, MOD), MOD));\n            }\n        }\n\n    }\n\n    static class Op {\n        public static int mulMod(int x, int y, int MOD) {\n            return (int) (((long) x * y) % MOD);\n        }\n\n        public static int powMod(int x, long p, int MOD) {\n            if (p == 0) return 1;\n            int t = powMod(x, p / 2, MOD);\n            if ((p & 1) == 1)\n                return mulMod(mulMod(t, t, MOD), x, MOD);\n            return mulMod(t, t, MOD);\n        }\n\n        public static int inv(int x, int MOD) {\n            return powMod(x, MOD - 2, MOD);\n        }\n\n    }\n\n    static class InputReader extends InputStream {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        private static boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    String S[] = sc.next().split(\"\");\n    \n    int n = (int)Math.pow(2, S.length - 1);\n    \n    long total = 0;\n    for (int i = 0; i < n; i++) {\n      String s = S[0];\n      \n      for (int j = 0; j < S.length - 1; j++) {\n        if ((1&i>>j) == 1) {\n          total += Long.parseLong(s);\n          s = S[j + 1];\n        } else {\n          s += S[j + 1];\n        }\n      }\n      total += Long.parseLong(s);\n    }\n    System.out.println(total);\n  }\n}", "label": 0}, {"id": 335, "code1": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 617, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void doIt(){\n\t\tScanner in = new Scanner(System.in);\n\t\tdata pp[][] = new data[3][8];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=0;s<8;s++){\n\t\t\t\tint ban=in.nextInt();\n\t\t\t\tdouble time=in.nextDouble();\n\t\t\t\tpp[i][s]=new data(ban,time);\n\t\t\t}\n\t\t\tArrays.sort(pp[i]);\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][0].code,pp[i][0].time);\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][1].code,pp[i][1].time);\n\t\t}\n\t\tdata ans[]=new data[18];\n\t\tint cnt=0;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=2;s<8;s++){\n\t\t\t\tans[cnt]=pp[i][s];\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(ans);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[0].code,ans[0].time);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[1].code,ans[1].time);\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain.doIt();\n\t}\n\tstatic class data implements Comparable<data>{\n\t\tint code;\n\t\tdouble time;\n\t\tdata(int code,double time){\n\t\t\tthis.code=code;\n\t\t\tthis.time=time;\n\t\t}\n\t\tpublic int compareTo(data o) {\n\t\t\treturn Double.compare(this.time,o.time);//\u3053\u308c\u3067\u6bd4\u3079\u3089\u308c\u308b\u3002\n\t\t}\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\n\nclass Main{\n    public static void main(String args[])throws IOException{\n      try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){\n        //input\n        String[] input = br.readLine().split(\" \");\n        int N = Integer.parseInt(input[0]);\n        int M = Integer.parseInt(input[1]);\n\n        //for algorithm & input\n        boolean[] answer = new boolean[N+1];\n        int[] wrong = new int[N+1];\n      \n        Arrays.fill(answer, false);\n        Arrays.fill(wrong, 0);\n        int pena = 0;\n        int result = 0;\n\n        for(int i = 0; i < M; i++){\n          String[] in = br.readLine().split(\" \");\n          int num = Integer.parseInt(in[0]);\n         \n          if(answer[num] == false){\n            if(in[1].equals(\"AC\")){\n              answer[num] = true;\n              result++;\n              pena += wrong[num];\n            }else{\n              wrong[num] += 1;\n            }\n          }else{\n            continue;\n          }\n        }\n\n        System.out.println(result + \" \" + pena);\n\n      }\n    }\n}\n", "label": 0}, {"id": 315, "code1": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\n\n\npublic class Main {\n\n\tprivate BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1);\n\n\tprivate String inputData = null;\n\n\tpublic String[] data = null;\n\n\tpublic int num = 0;\n\n\tpublic int count = 0;\n\n\tpublic HashMap<Integer, Integer> humanData = new HashMap<Integer, Integer>();\n\n\tpublic ArrayList<Integer> topId = new ArrayList<Integer>();\n\n\tpublic ArrayList<Integer> topLength = new ArrayList<Integer>();\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().start();\n\t\tSystem.exit(0);\n\t}\n\n\tpublic void start() {\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\tif (this.data.length == 1) {\n\t\t\t\tif (this.data[0].equals(\"0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.num = Integer.parseInt(this.data[0]);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.humanData.clear();\n\n\t\t\tfor (int i = 0; i < this.num; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\t\tthis.humanData.put(Integer.parseInt(data[0]),\n\t\t\t\t\t\tInteger.parseInt(data[1]) + Integer.parseInt(data[2]));\n\n\t\t\t}\n\n\t\t\tIterator<Integer> itId = this.humanData.keySet().iterator();\n\t\t\tint numCount = 0;\n\t\t\twhile (itId.hasNext()) {\n\t\t\t\tint id = itId.next();\n\t\t\t\tif (numCount == 0) {\n\t\t\t\t\tthis.topId.add(id);\n\t\t\t\t\tthis.topLength.add(this.humanData.get(id));\n\t\t\t\t} else {\n\t\t\t\t\tif (this.topLength.get(count) <= this.humanData.get(id)) {\n\t\t\t\t\t\tthis.topId.set(this.count, id);\n\t\t\t\t\t\tthis.topLength.set(this.count, this.humanData.get(id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumCount++;\n\t\t\t}\n\n\t\t\tthis.count++;\n\n\t\t}\n\n\t\tfor (int i = 0; i < this.topId.size(); i++) {\n\t\t\tSystem.out.println(this.topId.get(i) + \" \" + this.topLength.get(i));\n\t\t}\n\n\t}\n\n}", "label": 0}, {"id": 334, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "code2": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "label": 0}, {"id": 193, "code1": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "label": 1}, {"id": 236, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "code2": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "label": 1}, {"id": 153, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tInteger[] num = new Integer[n];\n\t\tStringBuilder s = new StringBuilder(\"\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tnum[i] = scan.nextInt();\n\t\t}\n\t\tArrays.sort(num);\n\t\t\n\t\ts.append(num[0]);\n\t\tfor(int i=1;i<num.length;i++){\n\t\t\ts.append(\" \"+num[i]);\n\t\t}\n\t\t\n\t\tSystem.out.println(s);\n\t}\n}", "code2": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "label": 1}, {"id": 760, "code1": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "code2": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()) {\n\t\t\tP[] ps = new P[4];\n\t\t\tString[] vs = sc.next().split(\",\");\n\t\t\tfor(int i=0;i<4;i++) ps[i] = new P( Double.parseDouble(vs[2*i]), Double.parseDouble(vs[2*i+1]) );\n\t\t\t\n\t\t\tSystem.out.println( ( cross(ps[0], ps[2], ps[1], ps[3])? \"YES\": \"NO\" ) );\n\t\t}\n\t}\n\t\n\tboolean cross(P p1, P p2, P q1, P q2) {\n\t\treturn p1.sub(p2).det(q1.sub(p2)) * p1.sub(p2).det(q2.sub(p2)) < 0.0 &&\n\t\t\t   q1.sub(q2).det(p1.sub(q2)) * q1.sub(q2).det(p2.sub(q2)) < 0.0;\n\t}\n\t\n\tclass P {\n\t\tdouble x, y;\n\t\tP(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t\n\t\tP sub(P p) {\n\t\t\treturn new P(x-p.x, y-p.y);\n\t\t}\n\t\t\n\t\tdouble det(P p) {\n\t\t\treturn x*p.y - p.x*y;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "label": 0}, {"id": 163, "code1": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    Scanner sc = new Scanner(System.in);\n    int a = sc.nextInt();\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n\n    if ((a == b  && a != c) || (b == c  && a != c) || (a == c  && a != b)) {\n      System.out.println(\"Yes\");\n    } else {\n      System.out.println(\"No\");\n    }\n\n  }\n}\n", "label": 1}, {"id": 313, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "code2": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "label": 0}, {"id": 350, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "code2": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\n \nclass Main implements Runnable {\n  // static Scanner in;\n  static FastReader in;\n  static PrintWriter out;\n  static int[][] dirs8 = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1}};\n  static int[][] dirs = {{0, -1}, {1, 0}, {0, +1}, {-1, 0}};\n \n  static int[][] E;\n  // static List<int[]>[] adj;\n  static List<Integer>[] adj;\n  static int[] vis;\n \n  static long INFL = (long) 1e15 + 7;\n  static int INF = (int) 1e9 + 7;\n  static int mod = 998244353;\n  \n  static int T, n, m, k, count, cur, w;\n  static boolean flag;\n  static int[] a, b;\n  static int[][] map;\n\n  static int[] par;\n  static boolean[] dp;\n\n  static void solve() throws Exception {\n    n = in.nextInt();\n    k = in.nextInt();\n    a = new int[n]; \n    for (int i = 0; i < n; i++) {a[i] = in.nextInt();}\n    dp = new boolean[k + 1];\n    // dp[i]: win(true) or loss(false) if \"I\" have i stones left and I am to play this round\n    dp[0] = false;\n    for (int i = 1; i <= k; i++) {\n      for (int x : a) {\n        if (x > i) {break;}\n        if (!dp[i - x]) {dp[i] = true; break;}\n      }\n    }\n    out.println(dp[k] ? \"First\" : \"Second\");\n  }\n\n\n  public static void main(String[] args) throws Exception {\n \n    // in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n    in = new FastReader();\n    out = new PrintWriter(System.out);\n \n    // int numOfTests = in.nextInt();\n    // for (int caseNum = 1; caseNum <= numOfTests; caseNum++) {\n    //   // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    //   // t.start();\n    //   // t.join();\n    //   solve();\n    // }\n \n    // // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    // // t.start();\n    // // t.join();\n    solve();\n \n    out.flush();\n    out.close();\n  }\n \n  @Override\n  public void run() {\n    try {\n      solve();\n    } catch (Exception e) {\n      e.printStackTrace(); \n    }\n  }\n \n  static class FastReader {\n    public BufferedReader br; \n    StringTokenizer st; \n    public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));} \n    String next() { \n      while (st == null || !st.hasMoreElements()) { \n          try {st = new StringTokenizer(br.readLine());} \n          catch (IOException e) {e.printStackTrace();} \n      } \n      return st.nextToken(); \n    } \n    int nextInt() {return Integer.parseInt(next());} \n    long nextLong() {return Long.parseLong(next());} \n    double nextDouble() {return Double.parseDouble(next());} \n    String nextLine() {\n      String str = \"\"; \n        try {str = br.readLine();} \n        catch (IOException e) {e.printStackTrace();} \n        return str; \n    }\n  }\n\n  static void as(boolean result) throws Exception {\n    if (!result) {\n      throw new Exception();\n    }\n  }\n\n  static int modInverse(int a, int m) { \n    int m0 = m; \n    int y = 0, x = 1; \n    if (m == 1) {return 0;} \n    while (a > 1) { \n      // q is quotient \n      int q = a / m; \n      int t = m; \n      // m is remainder now, process \n      // same as Euclid's algo \n      m = a % m; \n      a = t; \n      t = y; \n      // Update x and y \n      y = x - q * y; \n      x = t; \n    } \n    // Make x positive \n    if (x < 0) \n      x += m0; \n    return x; \n  } \n} \n", "label": 0}, {"id": 234, "code1": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "code2": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "label": 1}, {"id": 18, "code1": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "code2": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "label": 1}, {"id": 631, "code1": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n     \npublic class Main{\n\tpublic static void main(String[] args) throws Exception {\n\tIO io = new IO();\n\tPrintWriter out = new PrintWriter(System.out);\n\tSolver sr = new Solver();\n\tsr.solve(io,out);\n\tout.flush();\n\tout.close();\n    \t}\n\n\tstatic class Solver\n\t{\n      class Pair{\n        int x, y;\n        Pair(int a, int b)\n        {\n          x=a;\n          y=b;\n        }\n      }\n\t    void solve(IO io, PrintWriter out)\n\t    {\n           int i, j;\n          int n = io.nextInt();\n          int m = io.nextInt();\n          \n          ArrayList<Pair> ar = new ArrayList<>();\n          for(i=0 ; i<=n ; i++)\n            \tar.add(new Pair(0,0));\n          for(i=0 ; i<m ; i++)\n          {\n            int tmp=io.nextInt();\n            String str = io.next();\n            if(ar.get(tmp).x==0)\n            {\n              if(str.equals(\"WA\"))\n                ar.get(tmp).y++;\n              else\n                ar.get(tmp).x++;\n            }\n          }\n          int pen=0, correct=0;\n          for(Pair p : ar)\n          {\n            if(p.x!=0)\n            {\n              correct++;\n              pen+=p.y;\n            }\n          }\n            out.print(correct+\" \"+pen);\n\t    }\n    \t\n\t}\n\t//Special thanks to Petr (on codeforces) who inspired me to implement IO class!\n\tstatic class IO\n\t{\n    \tBufferedReader reader;\n        StringTokenizer tokenizer;\n    \tpublic IO() {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                tokenizer = null;\n            }\n     \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public String nextLine() {\n            String s=\"\";\n            try {\n                    s=reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            return s;\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    \tdouble nextDouble()\n    \t{\n    \t\treturn Double.parseDouble(next());\n    \t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "label": 0}, {"id": 340, "code1": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "label": 0}, {"id": 57, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "code2": "import java.util.Scanner;\n\tpublic class Main{\n\t\tpublic static void main(String args[]){\n\t\t\tScanner sc = new Scanner(System.in);\n\t\t\tint count[] = {0,0,0,0};\n\t\t\twhile(sc.hasNext()){\n\t\t\t\tString str = sc.nextLine();\n\t\t\t\tString [] blood = str.split(\",\");\n\t\t\t\t\tif(blood[1].equals(\"A\")){\n\t\t\t\t\t\tcount[0]++;\n\t\t\t\t\t}else if(blood[1].equals(\"B\")){\n\t\t\t\t\t\tcount[1]++;\n\t\t\t\t\t}else if(blood[1].equals(\"AB\")){\n\t\t\t\t\t\tcount[2]++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcount[3]++;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0; i < 4; i++ ){\n\t\t\t\tSystem.out.println(count[i]);\n\t\t\t}\n\t\t}\n\t}\t\t", "label": 1}, {"id": 401, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String[] args) {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    long[] a = new long[n];\n\n    for (int i = 0; i < n; i++) {\n      a[i] = sc.nextInt();\n    }\n\n    Arrays.sort(a); // \u6607\u9806\n    long sum = a[n - 1];\n\n    if (n == 2) {\n      System.out.println(sum);\n    } else {\n      if (n % 2 == 1) {\n        int num = n / 2;\n        sum += a[n - num - 1];\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      } else {\n        int num = n / 2;\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      }\n    }\n\n  }\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CTwoAlpinists solver = new CTwoAlpinists();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CTwoAlpinists {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] t = in.readLongArray(n);\n            long[] a = in.readLongArray(n);\n\n            long[] max = new long[n];\n            long[] actual = new long[n];\n\n            {\n                for (int i = 0; i < n; i++) {\n                    max[i] = Math.min(t[i], a[i]);\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = 0; i < n; i++) {\n                    if (t[i] > prev) {\n                        if (t[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = t[i];\n                        prev = t[i];\n                    }\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = n - 1; i >= 0; i--) {\n                    if (a[i] > prev) {\n                        if (a[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = a[i];\n                        prev = a[i];\n                    }\n                }\n            }\n\n            long ans = 1;\n            for (int i = 0; i < n; i++) {\n                if (actual[i] != 0) continue;\n                ans = (ans * max[i]) % MiscUtils.MOD7;\n            }\n\n            out.printLine(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n        public void printLine(int i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n}\n\n", "label": 0}, {"id": 568, "code1": "import java.util.*;\nclass Main\n{\n    static long mod = 1000000007;\n    public static void main (String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        for(int i = 0; i < n; i++){\n            a[i] = sc.nextLong();\n        }\n        long[] b = new long[n+1];\n        b[0] = 0;\n        for(int i = 1; i <= n; i++){\n            b[i] = (b[i-1] + pow(i, mod - 2)) % mod;\n        }\n        long ans = 0;\n        for(int i = 0; i < n; i++){\n            ans += a[i] * (b[i+1] + b[n - i] - 1);\n            ans %= mod;\n        }\n        for(int i = 1; i <= n; i++){\n            ans *= i;\n            ans %= mod;\n        }\n        System.out.println(ans);\n    }\n    static long pow(long a, long p){\n        if(p == 0) return 1;\n        else if(p % 2 == 0){\n            long d = pow(a, p/2);\n            return d * d % mod;\n        }\n        else return pow(a, p-1) * a % mod;\n    }\n}", "code2": "import java.util.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t// \u5165\u529b\n\t\tint n = sc.nextInt();\n\t\tGraph g = new Graph(n, false);\n\t\tfor(int i = 0; i < n-1; i++){\n\t\t    int a = sc.nextInt() - 1;\n\t\t    int b = sc.nextInt() - 1;\n\t\t    g.add(a, b);\n\t\t}\n\t\t\n\t\t// \u8a08\u7b97\n\t\tString result = \"Snuke\";\n\t\tlong[] distFromB = g.dijkstra(0);\n\t\tlong[] distFromW = g.dijkstra(n-1);\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < n; i++){\n\t\t    if(distFromB[i] <= distFromW[i]) cnt++;\n\t\t}\n\t\tif(cnt > (n-cnt)) result = \"Fennec\";\n\t\t\n\t\t// \u51fa\u529b\n\t\tSystem.out.println(result);\n\t}\n\n}\n\nclass Graph {\n\tint n;\n\tboolean directed;\n\tArrayList<Edge>[] adjList;\n\tint m;\n\tlong[] dist;\n\tlong[][] distWF;\n\tint start;\n\tint[] prev;\n\tArrayList<Integer> path;\n\tlong INF = 1001001001001001001L;\n\n\tpublic Graph (int n, boolean directed) {\n\t\tthis.n = n;\n\t\tthis.m = 0;\n\t\tthis.directed = directed;\n\t\tthis.adjList = new ArrayList[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tadjList[i] = new ArrayList<Edge>();\n\t\t}\n\t}\n\t\n\tpublic void add(int from, int to) {\n\t\tadd(from, to, 1);\n\t}\n\tpublic void add(int from, int to, int w) {\n\t\tadjList[from].add(new Edge(from, to, w));\n\t\tthis.m++;\n\t\tif(!directed){\n\t\t\tadjList[to].add(new Edge(to, from, w));\n\t\t\tthis.m++;\n\t\t}\n\t}\n\t\n\tpublic long[] bfs(int start) { // O(M)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tArrayDeque<Integer> q = new ArrayDeque<Integer>();\n\t\tq.add(start);\n\t\twhile(!q.isEmpty()){\n\t\t\tint now = q.poll();\n\t\t\tfor(Edge e : adjList[now]){\n\t\t\t\tif(dist[e.to] != INF) continue;\n\t\t\t\tdist[e.to] = dist[now] + e.w;\n\t\t\t\tprev[e.to] = now;\n\t\t\t\tq.add(e.to);\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[] dijkstra(int start) { // O(MlogM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tPriorityQueue<Vertex> q = new PriorityQueue<Vertex>((x, y) -> Long.compare(x.distance, y.distance));\n\t\tq.add(new Vertex(start, 0));\n\t\twhile(!q.isEmpty()){\n\t\t\tVertex now = q.poll();\n\t\t\tif(now.distance > dist[now.id]) continue; \n\t\t\tfor(Edge e : adjList[now.id]){\n\t\t\t\tlong newDist = now.distance + e.w;\n\t\t\t\tif(dist[e.to] <= newDist) continue;\n\t\t\t\tdist[e.to] = newDist;\n\t\t\t\tprev[e.to] = now.id;\n\t\t\t\tq.add(new Vertex(e.to, newDist));\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[][] wf() { // O(N^3)\n\t\tthis.distWF = new long[n][n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tArrays.fill(distWF[i], INF);\n\t\t\tdistWF[i][i] = 0;\n\t\t}\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tdistWF[e.from][e.to] = e.w;\n\t\t\t}\n\t\t}\n\t\tfor(int k = 0; k < n; k++){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\t\tdistWF[i][j] = min(distWF[i][j], distWF[i][k] + distWF[k][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn distWF;\n\t}\n\t\n\tpublic boolean bf(int start) { // O(NM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tboolean hasNegativeLoop = false;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tfor(Edge e : adjList[j]){\n\t\t\t\t\tif(dist[e.to] <= dist[e.from] + e.w) continue;\n\t\t\t\t\tdist[e.to] = dist[e.from] + e.w;\n\t\t\t\t\tprev[e.to] = e.from;\n\t\t\t\t\tif(i == n-1) hasNegativeLoop = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hasNegativeLoop;\n\t}\n\t\n\tpublic ArrayList<Integer> pathTo(int to){\n\t\tthis.path = new ArrayList<Integer>();\n\t\treturn pathToRec(to);\n\t}\n\t\n\tprivate ArrayList<Integer> pathToRec(int to){\n\t\tif(to != start) pathToRec(prev[to]);\n\t\tpath.add(to);\n\t\treturn path;\n\t}\n\t\n\tpublic String toString(){\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tsb.append(e.toString());\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tpublic String distToString(){\n\t\tif(dist != null) return Arrays.toString(dist);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tif(distWF[i][j] == INF){\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:INF\" + \"\\n\");\n\t\t\t\t}else{\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:\" + distWF[i][j] + \"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tclass Edge {\n\t\tint from;\n\t\tint to;\n\t\tint w;\n\t\t\n\t\tEdge(int from, int to, int w){\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.w = w;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"from:\" + from + \" to:\" + to + \" w:\" + w;\n\t\t}\n\t}\n\t\n\tclass Vertex {\n\t\tint id;\n\t\tlong distance;\n\t\t\n\t\tVertex(int id, long distance){\n\t\t\tthis.id = id;\n\t\t\tthis.distance = distance;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"id:\" + id + \" distance:\" + distance;\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 245, "code1": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "code2": "import java.util.*;\n\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method astub\n\t    \tScanner sc = new Scanner(System.in);\n\t    while(true){\n\t    \tint stime = 0; \n\t    \tint t = sc.nextInt();\n\t    \tif(t==0) break;\n\t    \tint n = sc.nextInt();\n\t    \tfor (int i=0;i<n;i++){\n\t    \t\tint time_s = sc.nextInt();\n\t    \t\tint time_f = sc.nextInt();\n\t    \t\tstime += time_f - time_s;\n\t    \t}\n\t    if(stime >= t) System.out.println(\"OK\"); \n\t    else System.out.println(t-stime);\n\t    }\n\t}\n}", "label": 1}, {"id": 523, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\n/*\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            pass System Test!\n*/\n\npublic class Main {\n  private static class Task {\n    void solve(FastScanner in, PrintWriter out) {\n      int H = in.nextInt();\n      int W = in.nextInt();\n      char[][] map = new char[H][];\n      for (int i = 0; i < H; i++) {\n        map[i] = in.next().toCharArray();\n      }\n\n      boolean[][] red = new boolean[H][W];\n      boolean[][] blue = new boolean[H][W];\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (j == 0) red[i][j] = true;\n          else if (j == W - 1) blue[i][j] = true;\n          else if (i % 2 == 0) red[i][j] = true;\n          else blue[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (map[i][j] == '.') continue;\n          blue[i][j] = true;\n          red[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(red[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(blue[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n    }\n  }\n\n  /**\n   * \u3053\u3053\u304b\u3089\u4e0b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n   */\n  public static void main(String[] args) {\n    OutputStream outputStream = System.out;\n    FastScanner in = new FastScanner();\n    PrintWriter out = new PrintWriter(outputStream);\n    Task solver = new Task();\n    solver.solve(in, out);\n    out.close();\n  }\n  private static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int bufferLength = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < bufferLength) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          bufferLength = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (bufferLength <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    double[] nextDoubleArray(int n) {\n      double[] array = new double[n];\n      for (int i = 0; i < n; i++) {\n        array[i] = nextDouble();\n      }\n      return array;\n    }\n\n    double[][] nextDoubleMap(int n, int m) {\n      double[][] map = new double[n][];\n      for (int i = 0; i < n; i++) {\n        map[i] = nextDoubleArray(m);\n      }\n      return map;\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int n) {\n      int[] array = new int[n];\n      for (int i = 0; i < n; i++) array[i] = nextInt();\n      return array;\n    }\n\n    public long[] nextLongArray(int n) {\n      long[] array = new long[n];\n      for (int i = 0; i < n; i++) array[i] = nextLong();\n      return array;\n    }\n\n    public String[] nextStringArray(int n) {\n      String[] array = new String[n];\n      for (int i = 0; i < n; i++) array[i] = next();\n      return array;\n    }\n\n    public char[][] nextCharMap(int n) {\n      char[][] array = new char[n][];\n      for (int i = 0; i < n; i++) array[i] = next().toCharArray();\n      return array;\n    }\n  }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "label": 0}, {"id": 332, "code1": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "label": 0}, {"id": 88, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "code2": "import java.io.IOException;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nimport java.io.PrintWriter;\n\n@SuppressWarnings(\"unchecked\")\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        final String s;\n\n        try (\n            BufferedReader reader = new BufferedReader(\n                new InputStreamReader(System.in))) {\n            s = reader.readLine();\n        }\n\n        PrintWriter out = new PrintWriter(System.out);\n\n        final String[] sl = s.split(\" \");\n        int A = Integer.parseInt(sl[0]);\n        int B = Integer.parseInt(sl[1]);\n        int C = Integer.parseInt(sl[2]);\n\n        int max = Math.max(A, Math.max(B, C));\n\n        int sum = 3 * max - A - B - C;\n\n        int ans;\n\n        if (sum % 2 == 0) ans = sum / 2;\n        else ans = (int)Math.ceil((double)sum / 2) + 1;\n\n        out.println(ans);\n\n        out.flush();\n    }\n}\n", "label": 1}, {"id": 17, "code1": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "code2": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        String word = input.next();\n        for (int i = 0; i < word.length(); i++) {\n            if ((i + 1) % 2 == 0) {\n                if (word.charAt(i) == 'R') {\n                    System.out.println(\"No\");\n                    return;\n                }\n            } else {\n                if (word.charAt(i) == 'L') {\n                    System.out.println(\"No\");\n                    return;\n                }\n            }\n        }\n        System.out.println(\"Yes\");\n    }\n}\n", "label": 1}, {"id": 77, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "code2": "import java.util.Scanner;\nclass Main {\n  public static void main(String[] args){\n    Scanner input = new Scanner(System.in);\n    int a, b, c;\n    a = input.nextInt();\n    b = input.nextInt();\n    c = input.nextInt();\n\n    double rad, l, s, h;\n    rad = c * Math.PI / 180.0;\n    s = 1 / 2.0 * Math.sin(rad) * a * b;\n    l = a + b + Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(rad));\n    h = 2 * s / a;\n\n    System.out.println(s + \"\\n\" + l + \"\\n\" + h);\n  }\n}", "label": 1}, {"id": 410, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CTwoAlpinists solver = new CTwoAlpinists();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CTwoAlpinists {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] t = in.readLongArray(n);\n            long[] a = in.readLongArray(n);\n\n            long[] max = new long[n];\n            long[] actual = new long[n];\n\n            {\n                for (int i = 0; i < n; i++) {\n                    max[i] = Math.min(t[i], a[i]);\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = 0; i < n; i++) {\n                    if (t[i] > prev) {\n                        if (t[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = t[i];\n                        prev = t[i];\n                    }\n                }\n            }\n\n            {\n                long prev = 0;\n                for (int i = n - 1; i >= 0; i--) {\n                    if (a[i] > prev) {\n                        if (a[i] > max[i]) {\n                            out.printLine(0);\n                            return;\n                        }\n                        actual[i] = a[i];\n                        prev = a[i];\n                    }\n                }\n            }\n\n            long ans = 1;\n            for (int i = 0; i < n; i++) {\n                if (actual[i] != 0) continue;\n                ans = (ans * max[i]) % MiscUtils.MOD7;\n            }\n\n            out.printLine(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n        public void printLine(int i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n}\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class Main {\n    public static void main(String[] args) {\n        Main main = new Main();\n        main.solve();\n    }\n\n    public void solve() {\n        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        int N = scan.nextInt();\n        List<Integer> candidate = new ArrayList<>();\n        for (int i = 1; i <= N; i++) {\n            candidate.add(i);\n        }\n        scan.nextLine();\n        String p = scan.nextLine();\n        String q = scan.nextLine();\n        List<List<Integer>> list = make(candidate);\n        List<String> strings = new ArrayList();\n        for (List<Integer> x : list) {\n            strings.add(x.stream().map(i -> i.toString()).collect(Collectors.joining(\" \")));\n        }\n        int len = strings.size();\n        int l = 0;\n        int r = 0;\n        for (int i = 0; i < len; i++) {\n            if (p.equals(strings.get(i))) {\n                l = i;\n            }\n            if (q.equals(strings.get(i))) {\n                r = i;\n            }\n        }\n        System.out.println(Math.abs(l - r));\n    }\n\n    public static List<List<Integer>> make(List<Integer> candidate) {\n        if (candidate.size() == 0) {\n            List<List<Integer>> empty = new ArrayList<>();\n            empty.add(new ArrayList<>());\n            return empty;\n        }\n\n        return candidate.stream().flatMap(i -> {\n            List<Integer> rest = new ArrayList<>(candidate);\n            rest.remove(i);\n            return make(rest).stream().map(list -> {\n                list.add(0, i);\n                return list;\n            });\n        }).collect(Collectors.toList());\n    }\n}\n", "label": 0}, {"id": 596, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    private static class FastScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        int array[] = new int[3], num = 0;\n        int count = 0;\n\n        while (count < 3) {\n            num = sc.nextInt();\n            if (0 < num && num < 10) {\n                array[count] = num;\n                count++;\n            }\n        }\n\n\n        for (int i = 0; i < 3; i++) {\n            for (int j = i + 1; j < 3; j++) {\n                if (array[i] == array[j]) {\n                    count = count - 1;\n                }\n            }\n        }\n        if (count == 2) {\n            System.out.print(\"Yes\");\n        } else {\n            System.out.print(\"No\");\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] a = new int[n];\n\t\tint i;\n\t\t\n\t\tfor (i = 0; i < n; i++)\n\t\t\ta[i] = stdIn.nextInt();\n\t\t\n\t\tint count = SelectionSort(a, n);\n\t\t\n\t\tSystem.out.print(a[0]);\n\t\tfor (i = 1; i < n; i++)\n\t\t\tSystem.out.print(\" \" + a[i]);\n\t\tSystem.out.println();\n\t\tSystem.out.println(count);\n\t}\n\t\n\tpublic static int SelectionSort(int[] a, int n) {\n\t\tint i, j, minat, t, count = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tminat = i;\n\t\t\tfor (j = i + 1; j < n; j++)\n\t\t\t\tif (a[j] < a[minat])\n\t\t\t\t\tminat = j;\n\t\t\tif (i != minat) {\n\t\t\t\tt = a[i];\n\t\t\t\ta[i] = a[minat];\n\t\t\t\ta[minat] = t;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}", "label": 0}, {"id": 654, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        try (Scanner s = new Scanner(System.in)) {\n            int k = s.nextInt();\n            int a = s.nextInt();\n            int b = s.nextInt();\n            int mod = a % k;\n            int d = b - a;\n            System.out.println((mod == 0 || (k - mod) <= d) ? \"OK\" : \"NG\");\n        }\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n, m;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        m = sc.nextInt();\n        solve();\n    }\n\n    void solve() {\n        int ans = n * 100 + 1800 * m;\n        System.out.println(ans * pow(2, m));\n    }\n\n    long pow(long x, int n) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = ans * x;\n            }\n            x = x * x;\n            n >>= 1;\n        }\n        return ans;\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "label": 0}, {"id": 480, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "code2": "\npublic class Main {\n\n  static int mod = 1000003;\n  static int[][] fif = enumFIF(mod * 3, mod);\n\n  private static void solve() {\n    int q = ni();\n\n    for (int i = 0; i < q; i++) {\n      int x = ni();\n      int d = ni();\n      int n = ni();\n      out.println(f(x, d, n));\n    }\n  }\n\n  private static long f(int x, int d, int n) {\n    if (x == 0) {\n      return 0;\n    } else if (d == 0) {\n      return pow(x, n, mod);\n    }\n\n    int y = (int) (x * invl(d, mod) % mod);\n    if (n >= mod || y % mod > (y + n - 1) % mod) {\n      return 0;\n    }\n\n    long z = fif[0][y + n - 1] * invl(fif[0][y - 1], mod) % mod;\n    z *= pow(d, n, mod);\n    z %= mod;\n\n    return z;\n  }\n\n  public static long pow(long a, long n, long mod) {\n    // a %= mod;\n    long ret = 1;\n    int x = 63 - Long.numberOfLeadingZeros(n);\n    for (; x >= 0; x--) {\n      ret = ret * ret % mod;\n      if (n << 63 - x < 0)\n        ret = ret * a % mod;\n    }\n    return ret;\n  }\n\n\n  public static int[][] enumFIF(int n, int mod) {\n    int[] f = new int[n + 1];\n    int[] invf = new int[n + 1];\n    f[0] = 1;\n    for (int i = 1; i <= n; i++) {\n      f[i] = (int) ((long) f[i - 1] * i % mod);\n    }\n    long a = f[n];\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    invf[n] = (int) (p < 0 ? p + mod : p);\n    for (int i = n - 1; i >= 0; i--) {\n      invf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n    }\n    return new int[][] {f, invf};\n  }\n\n  public static long invl(long a, long mod) {\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    return p < 0 ? p + mod : p;\n  }\n\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n\n", "label": 0}, {"id": 641, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tint x = sc.nextInt();\n\t\tint y = sc.nextInt();\n\t\tlong ans = 0;\n\t\tint tmp = Math.min(x, y);\n\t\tx -= tmp;\n\t\ty -= tmp;\n\t\tif(a + b < 2 * c) {\n\t\t\tans += tmp * (a + b);\n\t\t} else {\n\t\t\tans += tmp * 2 * c;\n\t\t}\n\t\tif(x % 2 == 1) {\n\t\t\tif(a < 2 * c) {\n\t\t\t\tans += a;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\tx--;\n\t\t}\n\t\tif(a < 2 * c) {\n\t\t\tans += a * x;\n\t\t} else {\n\t\t\tans += 2 * c * x;\n\t\t}\n\t\tif(y % 2 == 1) {\n\t\t\tif(b < 2 * c) {\n\t\t\t\tans += b;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\ty--;\n\t\t}\n\t\tif(b < 2 * c) {\n\t\t\tans += b * y;\n\t\t} else {\n\t\t\tans += 2 * c * y;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\n", "code2": "/*\n    Arnab Chanda \n*/\n\n// All imports here\n\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.InputStream;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n// Template code starts here //\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Debugger debug = new Debugger(out);\n        Objectify objectify = new Objectify(debug);\n        Task solver = new Task();\n        int test = 1;\n        while(test-->0){\n            solver.solve(1, in, out, debug, objectify);\n        }\n\t\tout.close();\n\t}\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n \n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public Double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public float nextFloat() {\n        return Float.parseFloat(next());\n    }\n \n}\n\nclass Debugger{\n    PrintWriter out;\n\n    Debugger(PrintWriter out){    \n        this.out = out;\n    }\n\n    public <T> void printList(List<T> arrayList){\n        for( Object ob: arrayList){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printSet(Set<T> set){\n        for(Object ob: set){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printMap(Map<?,?> map){\n        for(Object ob: map.keySet()){\n            System.out.println(ob+\" : \"+map.get(ob));\n        }\n    }\n}\n\nclass Objectify{\n    \n    Debugger debug;\n\n    Objectify(Debugger ob){ debug = ob; }\n\n    public void printArr(int[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(double[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(long[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(char[] arr){ debug.printList( String.valueOf(arr).chars().mapToObj(c -> (char) c).collect(Collectors.toList())); }\n    public void printArr(String[] arr){ debug.printList(Arrays.asList(arr)); }\n\n    public void printMatrix(int[][] arr){ for(int a[]:arr) printArr(a); }\n    public void printMatrix(double[][] arr){ for(double a[]:arr) printArr(a); }\n    public void printMatrix(long[][] arr){ for(long a[]:arr) printArr(a); }\n    public void printMatrix(char[][] arr){ for(char a[]:arr) printArr(a); }\n    public void printMatrix(String[][] arr){ for(String a[]:arr) printArr(a); }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Template code ends here\n\n\nclass Task {\n\n    final long MOD = (int)Math.pow(10,9)+7;\n\n    public void solve(int testNumber, InputReader sc, PrintWriter out, Debugger debug, Objectify objectify) {\n        \n        // write your code here\n        int k = sc.nextInt();\n\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n\n        for(int i = A; i <= B; ++i){\n            if (i%k == 0){\n                out.println(\"OK\");\n                return;\n                // break;\n            }\n        }\n\n        out.println(\"NG\");\n    }\n}", "label": 0}, {"id": 530, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "code2": "import java.io.FileNotFoundException;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tMaxHeapSort maxheap = new MaxHeapSort(new int[] {});\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tmaxheap.add(a[i]);\n\t\t}\n\t\ta = maxheap.sortedArray();\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tSystem.out.print(a[i] + (i == n - 1 ? \"\\n\" : \" \"));\n\t\t}\n\t}\n\n\tclass MaxHeapSort {\n\t\tint n;\n\t\tint[] v;\n\n\t\tpublic MaxHeapSort(int[] v_) {\n\t\t\tif (v_.length > 1_000_000)\n\t\t\t\tthrow new AssertionError();\n\t\t\tv = Arrays.copyOf(v_, 1_000_000);\n\t\t\tn = v_.length;\n\t\t\tfor (int i = n; i >= 0; --i) {\n\t\t\t\tmaxHeapify(i);\n\t\t\t}\n\t\t}\n\n\t\tvoid add(int val) {\n\t\t\tv[n] = val;\n\t\t\tint cur = n;\n\t\t\t++n;\n\t\t\twhile (cur > 0) {\n\t\t\t\tcur = (cur - 1) / 2;\n\t\t\t\tmaxHeapify(cur);\n\t\t\t}\n\t\t}\n\n\t\tint[] sortedArray() {\n\t\t\tint sz = n;\n\t\t\tint[] ret = new int[sz];\n\t\t\tfor (int i = 0; i < sz; ++i) {\n\t\t\t\tret[sz - 1 - i] = poll();\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tint poll() {\n\t\t\tint ret = v[0];\n\t\t\tv[0] = v[n - 1];\n\t\t\tv[n - 1] = ret;\n\t\t\t--n;\n\t\t\tmaxHeapify(0);\n\t\t\treturn ret;\n\t\t}\n\n\t\tvoid maxHeapify(int cur) {\n\t\t\tif (2 * cur + 1 >= n)\n\t\t\t\treturn;\n\t\t\tif (v[cur] >= v[2 * cur + 1] && (2 * cur + 2 >= n || v[cur] >= v[2 * cur + 2])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint dst = -1;\n\t\t\tif (2 * cur + 2 >= n || v[2 * cur + 1] >= v[2 * cur + 2]) {\n\t\t\t\tdst = 2 * cur + 1;\n\t\t\t} else {\n\t\t\t\tdst = 2 * cur + 2;\n\t\t\t}\n\t\t\tint tmp = v[cur];\n\t\t\tv[cur] = v[dst];\n\t\t\tv[dst] = tmp;\n\t\t\tmaxHeapify(dst);\n\t\t}\n\t}\n\n\tstatic void tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n}", "label": 0}, {"id": 349, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner scanner=new FastScanner();\n\t\tint n=scanner.nextInt(),k=scanner.nextInt();\n\t\tint a[]=scanner.readArray(n);\n\t\t\n\t\tboolean dp[]=new boolean[k+1];\n//\t\tArrays.fill(dp, true);\n//\t\tdp[0]=false;\n\t\t\n\t\tfor(int stones=0;stones<=k;stones++) {\n\t\t\tfor(int j:a)\n\t\t\t\tif(j<=stones&&!dp[stones-j]) dp[stones]=true;\n\t\t}\n\t\tif(dp[k]) System.out.println(\"First\");\n\t\telse System.out.println(\"Second\");\n\t\n\t\t\n\t\t\n\n\t}\n\tstatic class FastScanner{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\t\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDoubel() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tint [] readArray(int n) {\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t}\n\n}\n\n", "label": 0}, {"id": 239, "code1": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        String S = sc.next();\n\n        System.out.println(solve(S));\n\n        sc.close();\n    }\n\n    static int solve(String S) {\n        for (int length = (S.length() - 1) / 2 * 2;; length -= 2) {\n            if (isEven(S.substring(0, length))) {\n                return length;\n            }\n        }\n    }\n\n    static boolean isEven(String s) {\n        return s.endsWith(s.substring(0, s.length() / 2));\n    }\n}", "label": 1}, {"id": 403, "code1": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\n\nimport static java.util.Comparator.reverseOrder;\n\npublic class Main {\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n\n        List<Long> inputList = new ArrayList<Long>();\n        for(int i = 0; i < n ;i++) {\n            inputList.add(sc.nextLong());\n        }\n\n        /*\n        List<Integer> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        for(int a: sortedList) {\n            System.out.println(a);\n        }\n        */\n        List<Long> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        long result = sortedList.get(0);\n        int index = 1;\n        int count = 0;\n        for (int i = 0; i < n - 2 ; i++) {\n            result += sortedList.get(index);\n            count = count + 1;\n            if (count == 2) {\n                count = 0;\n                index = index + 1;\n            }\n        }\n        System.out.println(result);\n    }\n}", "code2": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n\tpublic Main(){\n\t\tnew A().doIt();\n\t}\n\tclass A{\n\t\tlong euclid(long a, long b){\n\t\t    long temp;\n\n\t\t    if(a < b) { \n\t\t    \ttemp = a;\n\t\t    \ta = b;\n\t\t    \tb = temp;\n\t\t    }\n\t\t    if(a % b == 0) return b;\n\t\t    return euclid( b, a % b );\n\t\t}\n\t\tvoid doIt(){\n\t\t\tint n = sc.nextInt();\n\t\t\tlong A = 1;\n\t\t\tlong B = 1;\n\t\t\tfor(int i = 0;i < n;i++){\n\t\t\t\tlong aa = sc.nextLong();\n\t\t\t\tlong bb = sc.nextLong();\n\t\t\t\tif(A % aa != 0)A = A + aa - (A % aa);\n\t\t\t\tif(B % bb != 0)B = B + bb - (B % bb);\n\t\t\t\tlong max = Math.max(A/aa,B/bb);\n\t\t\t\tA = max * aa;\n\t\t\t\tB = max * bb;\n//\t\t\t\tSystem.out.println(A+\" \"+B);\n\t\t\t}\n\t\t\tSystem.out.println(A+B);\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 679, "code1": "import java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.PrimitiveIterator;\nimport java.util.Scanner;\nimport java.util.function.Supplier;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\nclass Main{\n\n\tprivate void solve(){\n\t\tint[] c=new int[26];\n\t\tint h=gInt(),w=gInt();\n\t\tSTRS(h).flatMapToInt(String::chars)\n\t\t\t\t.map(i->i-'a')\n\t\t\t\t.forEach(i->++c[i]);\n\t\tint one=(h%2)*(w%2);\n\n\t\tint two=(w%2==1?h/2*2:0)+(h%2==1?w/2*2:0);\n\t\tint four=h*w-one-two;\n\n\t\tSystem.err.println(one);\n\t\tSystem.err.println(two);\n\t\tSystem.err.println(four);\n\t\tSystem.err.println(Arrays.toString(c));\n\t\tfor(int i:rep(26)) {\n\t\t\twhile(four>0&&c[i]>=4) {\n\t\t\t\tfour-=4;\n\t\t\t\tc[i]-=4;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\ttwo-=c[i]/2*2;\n\t\t\tc[i]%=2;\n\t\t\tif(two<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\tone-=c[i];\n\t\t\tc[i]=0;\n\t\t\tif(one<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\n\t\t\t\tArrays.stream(c).noneMatch(i->i>0)\n\t\t\t\t?\"Yes\":\"No\");\n\t}\n\n\tpublic static void main(String[]$){\n\t\tnew Main().solve();\n\t}\n\n\tScanner s=new Scanner(System.in);\n\n\tint gInt(){\n\t\treturn Integer.parseInt(s.next());\n\t}\n\tlong gLong(){\n\t\treturn Long.parseLong(s.next());\n\t}\n\tdouble gDouble(){\n\t\treturn Double.parseDouble(s.next());\n\t}\n\n\tSupplierIterator<Integer> ints(int n){\n\t\treturn new SupplierIterator<>(n,this::gInt);\n\t}\n\tSupplierIterator<Long> longs(int n){\n\t\treturn new SupplierIterator<>(n,this::gLong);\n\t}\n\tSupplierIterator<Double> doubles(int n){\n\t\treturn new SupplierIterator<>(n,this::gDouble);\n\t}\n\tSupplierIterator<String> strs(int n){\n\t\treturn new SupplierIterator<>(n,s::next);\n\t}\n\n\tstatic class SupplierIterator<T> implements Iterable<T>,Iterator<T>{\n\t\tint\t\t\tt;\n\t\tSupplier<T>\tsupplier;\n\n\t\tSupplierIterator(int t,Supplier<T> supplier){\n\t\t\tthis.t=t;\n\t\t\tthis.supplier=supplier;\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<T> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn t>0;\n\t\t}\n\n\t\t@Override\n\t\tpublic T next(){\n\t\t\t--t;\n\t\t\treturn supplier.get();\n\t\t}\n\t}\n\n\n\tRange rep(int i){\n\t\treturn Range.rep(i);\n\t}\n\tRange rep(int f,int t,int d){\n\t\treturn Range.rep(f,t,d);\n\t}\n\tRange rep(int f,int t){\n\t\treturn rep(f,t,1);\n\t}\n\tRange rrep(int f,int t){\n\t\treturn rep(f,t,-1);\n\t}\n\n\tstatic class Range implements Iterable<Integer>,PrimitiveIterator.OfInt{\n\n\t\tint to,cur,d;\n\n\t\tRange(int from,int to,int d){\n\t\t\tthis.cur=from-d;\n\t\t\tthis.to=to;\n\t\t\tthis.d=d;\n\t\t}\n\n\t\tRange(int n){\n\t\t\tthis(0,n-1,1);\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<Integer> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn cur+d==to||(cur!=to&&(cur<to==cur+d<to));\n\t\t}\n\n\t\t@Override\n\t\tpublic int nextInt(){\n\t\t\treturn cur+=d;\n\t\t}\n\n\t\tstatic Range rep(int i){\n\t\t\treturn new Range(i);\n\t\t}\n\t\tstatic Range rep(int f,int t,int d){\n\t\t\treturn new Range(f,t,d);\n\t\t}\n\t\tstatic Range rep(int f,int t){\n\t\t\treturn rep(f,t,1);\n\t\t}\n\t\tstatic Range rrep(int f,int t){\n\t\t\treturn rep(f,t,-1);\n\t\t}\n\t}\n\n\n\tIntStream REP(int v){\n\t\treturn IntStream.range(0,v);\n\t}\n\tIntStream REP(int l,int r){\n\t\treturn IntStream.rangeClosed(l,r);\n\t}\n\n\tIntStream INTS(int n){\n\t\treturn REP(n).map(i->gInt());\n\t}\n\tStream<String> STRS(int n){\n\t\treturn REP(n).mapToObj(i->s.next());\n\t}\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "label": 0}, {"id": 51, "code1": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "label": 1}, {"id": 154, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tInteger[] num = new Integer[n];\n\t\tStringBuilder s = new StringBuilder(\"\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tnum[i] = scan.nextInt();\n\t\t}\n\t\tArrays.sort(num);\n\t\t\n\t\ts.append(num[0]);\n\t\tfor(int i=1;i<num.length;i++){\n\t\t\ts.append(\" \"+num[i]);\n\t\t}\n\t\t\n\t\tSystem.out.println(s);\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args){\n        Scanner s=new Scanner(System.in);\n        int n=s.nextInt();\n        int a[]=new int[n];\n        for(int i=0;i<n;i++)a[i]=s.nextInt();\n        Arrays.sort(a);\n        for(int i=0;i<n-1;i++)\n            System.out.print(a[i]+\" \");\n        System.out.println(a[n-1]);\n    }\n}\n//by TTTMongolia 11/05/2012", "label": 1}, {"id": 598, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n;\n    char[] cs;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        cs = sc.next().toCharArray();\n        solve();\n    }\n\n    void solve() {\n        int[] sumEastL = new int[n];\n        if (cs[0] == 'E') {\n            sumEastL[0] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            sumEastL[i] = sumEastL[i - 1] + (cs[i] == 'E' ? 1 : 0);\n        }\n        int min = 10000000;\n        for (int i = 0; i < n; i++) {\n            int num = sumEastL[n - 1] - sumEastL[i] + (i > 0 ? i - sumEastL[i - 1] : 0);\n            if (min > num) {\n                min = num;\n            }\n        }\n        System.out.println(min);\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] a = new int[n];\n\t\tint i;\n\t\t\n\t\tfor (i = 0; i < n; i++)\n\t\t\ta[i] = stdIn.nextInt();\n\t\t\n\t\tint count = SelectionSort(a, n);\n\t\t\n\t\tSystem.out.print(a[0]);\n\t\tfor (i = 1; i < n; i++)\n\t\t\tSystem.out.print(\" \" + a[i]);\n\t\tSystem.out.println();\n\t\tSystem.out.println(count);\n\t}\n\t\n\tpublic static int SelectionSort(int[] a, int n) {\n\t\tint i, j, minat, t, count = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tminat = i;\n\t\t\tfor (j = i + 1; j < n; j++)\n\t\t\t\tif (a[j] < a[minat])\n\t\t\t\t\tminat = j;\n\t\t\tif (i != minat) {\n\t\t\t\tt = a[i];\n\t\t\t\ta[i] = a[minat];\n\t\t\t\ta[minat] = t;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}", "label": 0}, {"id": 168, "code1": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * ABC118C\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = sc.nextInt();\n        }\n        Arrays.sort(A);\n        int min0 = A[0];\n        int min = min0 + 1;\n        int tmp = 0;\n        while (tmp != min) {\n            tmp = min;\n            for (int i = 0; i < N; i++) {\n                if (A[i] % min < min && A[i] % min != 0) {\n                    min = A[i] % min;\n                }\n            }\n        }\n\n        System.out.println(min);\n\n        sc.close();\n    }\n}", "label": 1}, {"id": 578, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tint INF=1000000007;\n\t\tScanner sc=new Scanner(System.in);\n\t\tint V=sc.nextInt();\n\t\tArrayList<ArrayList<Integer>> v=new ArrayList<ArrayList<Integer>>();\n\t\tfor(int i=0; i<=V; i++) {\n\t\t\tv.add(new ArrayList<Integer>());\n\t\t}\n\t\tfor(int i=0; i<V-1; i++) {\n\t\t\tint a=sc.nextInt();\n\t\t\tint b=sc.nextInt();\n\t\t\t(v.get(a)).add(b);\n\t\t\t(v.get(b)).add(a);\n\t\t}\n\t\tint[] Fe=new int[V+1];\n\t\tint[] Su=new int[V+1];\n\t\tboolean[] Fe_V=new boolean[V+1];\n\t\tboolean[] Su_V=new boolean[V+1];\n\t\tArrays.fill(Fe, INF);\n\t\tArrays.fill(Su, INF);\n\t\tFe[1]=0;\n\t\tSu[V]=0;\n\t\tStack<Integer> Q=new Stack<Integer>();\n\t\tQ.add(1);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Fe_V[v.get(tmp).get(i)] && Fe[tmp]+1<Fe[v.get(tmp).get(i)]) {\n\t\t\t\t\tFe_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tFe[v.get(tmp).get(i)]=Fe[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tQ.add(V);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Su_V[v.get(tmp).get(i)] && Su[tmp]+1<Su[v.get(tmp).get(i)]) {\n\t\t\t\t\tSu_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tSu[v.get(tmp).get(i)]=Su[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint Su_w=0;\n\t\tint Fe_w=0;\n\t\tfor(int i=1; i<=V; i++) {\n\t\t\tif(Fe[i]<=Su[i]) {\n\t\t\t\tFe_w++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSu_w++;\n\t\t\t}\n\t\t}\n\t\tif(Su_w>=Fe_w) {\n\t\t\tSystem.out.println(\"Snuke\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"Fennec\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t}\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\n\t\tint n = sc.nextInt();\n\n\t\tint a[] = new int[n];\n\t\tint b[] = new int[n];\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tb[i] = sc.nextInt();\n\t\t}\n\n\t\tlong ba = 0;\n\t\tlong ab = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (b[i] > a[i]) {\n\t\t\t\tba += (b[i] - a[i]) / 2;\n\t\t\t} else {\n\t\t\t\tab += (a[i] - b[i]);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tSystem.out.println(ab <= ba ? \"Yes\" : \"No\");\n\t}\n}\n", "label": 0}, {"id": 135, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "label": 1}, {"id": 462, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args)\n  {\n    Scanner scanner = new Scanner(System.in);\n    int[] a = new int[3];\n    int[] b = new int[3];\n\n    int iti = 0,ni=0,san=0,si =0;\n\n    int odd=0, even=0;\n\n    for(int i=0; i<3; i++){\n      a[i] = scanner.nextInt();\n      b[i] = scanner.nextInt();\n    }\n\n    for(int i=0; i<3; i++){\n      if(a[i] == 1){\n        iti++;\n      }\n      else if(a[i]==2)\n      {\n        ni++;\n      }else if(a[i] == 3)\n      {\n        san++;\n      }else if(a[i] == 4){\n        si++;\n      }\n\n      if(b[i] == 1){\n        iti++;\n      }\n      else if(b[i]==2)\n      {\n        ni++;\n      }else if(b[i] == 3)\n      {\n        san++;\n      }else if(b[i] == 4){\n        si++;\n      }\n    }\n\n    if(checkEven(iti)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(ni)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(san)){\n      even++;\n    }else{\n      odd++;\n    }\n\n    if(checkEven(si)){\n      even++;\n    }else{\n      odd++;\n    }\n\n      if(odd == 2 && even == 2)\n      {\n        System.out.println(\"YES\");\n      }else{\n        System.out.println(\"NO\");\n      }\n\n  }\n\n  public static boolean checkEven(int num){\n    if(num %2 == 0){\n      return true;\n    }\n    return false;\n  }\n\n}", "code2": "import java.util.*;\npublic class Main {\n        static Scanner sc = new Scanner(System.in);\n        static void myout(Object t){System.out.println(t);}//standard output\n        static void myerr(Object t){System.err.println(t);}//standard error\n        static String getStr(){return sc.next();}\n        static int getInt(){return Integer.parseInt(getStr());}\n        static long getLong(){return Long.parseLong(getStr());}\n        static boolean isNext(){return sc.hasNext();}\n        static String[] mySplit(String str){return str.split(\"\");}\n        public static void main(String[] args){\n          int N = getInt();\n          int M = getInt();\n          if(N >= M){\n            myout(0);\n            return;\n          }\n          long output = 0;\n          ArrayList<Integer> list = new ArrayList<Integer>(M);\n          for(int i = 0; i < M; i++){\n            list.add(getInt());\n          }\n          Collections.sort(list);\n          //myout(list);\n          PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n          for(int i = 1; i < M; i++){\n            pq.add(Math.abs(list.get(i)-list.get(i-1)));\n          }\n          for(int i = 0; i < N-1; i++){\n            pq.poll();\n          }\n          while(pq.size() != 0){\n            output += pq.poll();\n          }\n          myout(output);\n        }\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u304b\u3089\n\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u307e\u3067\n}\n", "label": 0}, {"id": 532, "code1": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n  private static Scanner sc;\n\n  public static void main(String[] args) {\n    sc = new Scanner(System.in);\n    new Main().solve();\n  }\n\n  private void solve() {\n    int N = sc.nextInt();\n    int[] a = new int[N + 2];\n    for (int i = 0; i < N; i++) {\n      a[i + 1] = sc.nextInt();\n    }\n    int sum = 0;\n    for (int i = 0; i <= N; i++) {\n      sum += Math.abs(a[i] - a[i + 1]);\n    }\n\n    for (int i = 0; i < N; i++) {\n      System.out.println(sum - Math.abs(a[i] - a[i + 1]) - Math.abs(a[i + 2] - a[i + 1]) + Math.abs(a[i] - a[i + 2]));\n    }\n  }\n}\n", "label": 0}, {"id": 116, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "label": 1}, {"id": 46, "code1": "import java.util.*;\nclass Main {\n\tstatic int n;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) break;\n\t\t\tint maxDistance = 0;\n\t\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d = sc.nextInt() + sc.nextInt();\n\t\t\t\tmap.put(d, p);\n\t\t\t\tmaxDistance = Math.max(d, maxDistance);\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d %d\\n\", map.get(maxDistance), maxDistance);\n\t\t}\n\t}\n}", "code2": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "label": 1}, {"id": 25, "code1": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.System.in;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long[] x = new long[n];\n        for(int i=0;i<n;i++) x[i]=sc.nextLong();\n        long ans= 0;\n        for(int i=0;i<n-1;i++){\n            ans += Math.min(A*(x[i+1]-x[i]),B);\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(ans);\n        out.flush();\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n\n        int[] X = new int[N];\n        for (int i = 0; i < N; i++) {\n            X[i] = sc.nextInt();\n        }\n\n        long ret = 0;\n\n        for (int i = 0; i < N - 1; i++) {\n            int distance = X[i+1] - X[i];\n\n            ret += Math.min(distance * A, B);\n        }\n\n        System.out.println(ret);\n    }\n}", "label": 1}, {"id": 142, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\t\n\t\tint[] x = {a, b, c};\n\t\t\n\t\tArrays.sort(x);\n\t\t\n\t\tSystem.out.println(x[0] + x[1]);\n\t\t\n\t}\n}\n", "label": 1}, {"id": 65, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        long n = sc.nextLong();\n        long k = sc.nextLong();\n\n        if (n < k)\n        {\n            long candidate = Math.abs(n-k);\n            long candidate2 = Math.abs(candidate-k);\n            System.out.println(Math.min(candidate,candidate2));\n        }\n        else\n        {\n            if (n%k == 0) System.out.println(0);\n            else\n            {\n                long candidate = n%k;\n                long candidate2 = Math.abs(candidate-k);\n                System.out.println(Math.min(candidate,candidate2));\n            }\n        }\n\n        sc.close();\n    }\n}", "label": 1}, {"id": 498, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        PrintWriter out = new PrintWriter(System.out);\n        InputStreamScanner in = new InputStreamScanner(System.in);\n        new Main().solve(in, out);\n        out.flush();\n    }\n\n    private void solve(InputStreamScanner in, PrintWriter out) {\n        String s = in.next();\n\n        long t = 0;\n        for (int i = 0; i < 1 << (s.length() - 1); i++) {\n            int p = 0;\n            for (int j = 0; j < s.length() - 1; j++) {\n                if ((1 & i >> j) == 1) {\n                    t += Long.parseLong(s.substring(p, j + 1));\n                    p = j + 1;\n                }\n            }\n            t += Long.parseLong(s.substring(p));\n        }\n\n        out.println(t);\n    }\n\n    static class InputStreamScanner {\n\n        private InputStream in;\n\n        private byte[] buf = new byte[1024];\n        private int len = 0;\n        private int off = 0;\n\n        InputStreamScanner(InputStream in)\t{\n            this.in = in;\n        }\n\n        String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); !isSpace(b);){\n                sb.appendCodePoint(b);\n                b = read();\n            }\n            return sb.toString();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        char nextChar() {\n            return (char)skip();\n        }\n\n        int skip() {\n            for (int b; (b = read()) != -1;) {\n                if (!isSpace(b)) {\n                    return b;\n                }\n            }\n            return -1;\n        }\n\n        private boolean isSpace(int c) {\n            return c < 33 || c > 126;\n        }\n\n        private int read() {\n            if (len == -1) {\n                throw new InputMismatchException(\"End of Input\");\n            }\n            if (off >= len){\n                off = 0;\n                try {\n                    len = in.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException(e.getMessage());\n                }\n                if (len <= 0) {\n                    return -1;\n                }\n            }\n            return buf[off++];\n        }\n    }\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\n\tint N,M;\n\tboolean[] first,second;\n\n\tpublic void solve() {\n\n\t\tN = nextInt();\n\t\tM = nextInt();\n\n\t\tfirst = new boolean[N];\n\t\tsecond = new boolean[N];\n\n\t\tfor(int i = 0;i < M;i++){\n\t\t\tint a = nextInt()-1;\n\t\t\tint b = nextInt()-1;\n\n\t\t\tif(a == 0){\n\t\t\t\tfirst[b] = true;\n\t\t\t}\n\n\t\t\tif(b == N-1){\n\t\t\t\tsecond[a] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 1;i < N - 1;i++){\n\t\t\tif(first[i] && second[i]){\n\t\t\t\tout.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tout.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "label": 0}, {"id": 436, "code1": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        new Solver().run();\n    }\n}\n\nclass Solver {\n\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] a = new int[N];\n\n        for (int i = 0; i < N; i++) {\n            a[i] = sc.nextInt();\n            a[i]--;\n        }\n\n        int cnt = 0;\n        for (int i = 0; i < N; i++) {\n            if (i == a[a[i]]) cnt++;\n        }\n\n        System.out.println(cnt / 2);\n\n        return;\n    }\n\n}", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n\n        char[] s = sc.next().toCharArray();\n        char[] t = sc.next().toCharArray();\n\n        boolean isAns = false;\n        for (int i = s.length-1; i >= t.length-1; i--) {\n            char[] tmp = s.clone();\n            isAns = true;\n            for (int j = 0; j < t.length; j++) {\n                if (s[i-j] == t[t.length-1-j] || s[i-j] == '?') {\n                    tmp[i-j] = t[t.length-1-j];\n                } else {\n                    isAns = false;\n                    break;\n                }\n            }\n\n            if (isAns) {\n                s = tmp;\n                break;\n            }\n        }\n\n        if (isAns) {\n            for (char c : s)\n                System.out.print(c == '?' ? 'a' : c);\n        } else {\n            System.out.println(\"UNRESTORABLE\");\n        }\n    }\n\n    static class MyScanner {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1 << 15);\n        StringTokenizer tokenizer;\n\n        String next() {\n            try {\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                }\n            } catch (IOException ignored) {\n            }\n            return tokenizer.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}", "label": 0}, {"id": 693, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScan in = new MyScan(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyScan in, PrintWriter out) {\n            int i = in.nextInt();\n\n            long[] md = new long[i];\n\n            int rm = i - 2;\n            int lx = i - 2;\n            while (rm >= 0) {\n                md[lx + 1] = Util.c(rm, lx);\n                rm -= 2;\n                lx--;\n            }\n            long res = 0;\n            long prev = 0;\n            for (int m = 1; m < i; m++) {\n                long cur = Util.fact(m) * Util.fact(i - m - 1) % Util._m;\n                cur = cur * (md[m]) % Util._m;\n\n\n                res += (cur - prev + Util._m) * m % Util._m;\n                prev = cur;\n\n            }\n\n\n            out.println(res % Util._m);\n\n        }\n\n    }\n\n    static class MyScan {\n        private final InputStream in;\n        private byte[] inbuf = new byte[1024];\n        public int lenbuf = 0;\n        public int ptrbuf = 0;\n\n        public MyScan(InputStream in) {\n            this.in = in;\n        }\n\n        private int readByte() {\n            if (lenbuf == -1) throw new InputMismatchException();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = in.read(inbuf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (lenbuf <= 0) return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = num * 10 + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n    }\n\n    static class Util {\n        public static final long M07 = 1000_000_007;\n        public static long _m = M07;\n        private static long[] fact;\n        private static long[] inv;\n        private static long[] ifact;\n\n        public static void l() {\n            fact = new long[1000001];\n            inv = new long[1000001];\n            ifact = new long[1000001];\n            for (int s = 0; s < 2; s++) {\n                fact[s] = 1;\n                ifact[s] = 1;\n                inv[s] = 1;\n            }\n            inv[0] = 0;\n            for (int i = 2; i < inv.length; i++) {\n                inv[i] = (_m - (_m / i) * inv[(int) (_m % i)] % _m) % _m;\n            }\n            for (int i = 2; i < fact.length; i++) {\n                fact[i] = i * fact[i - 1] % _m;\n                ifact[i] = inv[i] * ifact[i - 1] % _m;\n            }\n        }\n\n        public static long c(int a, int b) {\n            if (fact == null) l();\n            return ifact[a] * ifact[b - a] % _m * fact[b] % _m;\n        }\n\n        public static long fact(int a) {\n            if (fact == null) l();\n            return fact[a];\n        }\n\n    }\n}\n\n", "code2": "    import java.io.*;\n    import java.util.*;\n\n    public class Main {\n        public static void main(String[] args) throws IOException {\n            FastReader scan = new FastReader();\n            //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"taming.out\")));\n            PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n            Task solver = new Task();\n            //int t = scan.nextInt();\n            int t = 1;\n            for(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n            out.close();\n        }\n        static class Task {\n            boolean[][] matrix;\n            boolean[][] vis;\n            public void solve(int testNumber, FastReader sc, PrintWriter pw){\n                int n = sc.nextInt();\n                int m = sc.nextInt();\n                matrix = new boolean[n][m];\n                vis = new boolean[n][m];\n                long sum = 0;\n                for(int i=0;i<n;i++){\n                    String str = sc.nextLine();\n                    for(int j=0;j<m;j++){\n                        matrix[i][j]=(str.charAt(j)=='#');\n                    }\n                }\n                for(int i=0;i<n;i++){\n                    for(int j=0;j<m;j++){\n                        if(!vis[i][j]){\n                            int[] x = dfs(i,j,matrix[i][j]);\n                            sum+=((long)(x[0]))*x[1];\n                        }\n                    }\n                }\n                pw.println(sum);\n            }\n            public int[] dfs (int x, int y, boolean c){\n                int[] dx = {-1,1,0,0};\n                int[] dy = {0,0,-1,1};\n                if(x<0||y<0||x>=matrix.length||y>=matrix[0].length||vis[x][y]||matrix[x][y]!=c){\n                    return new int[]{0,0};\n                }\n                int a = 0;\n                int b = 0;\n                vis[x][y]=true;\n                if(c){\n                    a++;\n                }\n                else{\n                    b++;\n                }\n                for(int i=0;i<4;i++){\n                    int[] tt = dfs(x+dx[i],y+dy[i],!c);\n                    a+=tt[0];\n                    b+=tt[1];\n                }\n                return new int[]{a,b};\n            }\n        }\n        static class tup implements Comparable<tup> {\n            int a, b;\n            tup() {\n            }\n            ;\n\n\n\n            tup(int a, int b) {\n                this.a=a;\n                this.b=b;\n            }\n\n            @Override\n            public int compareTo(tup o2) {\n                return 0;\n            }\n        }\n        static void shuffle(long[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                long temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a,int l, int rb) {\n            Random get = new Random();\n            for (int i = l; i < rb; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static class FastReader {\n            BufferedReader br;\n            StringTokenizer st;\n\n            public FastReader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            public FastReader(String s) throws FileNotFoundException {\n                br = new BufferedReader(new FileReader(new File(s)));\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n        }\n\n    }", "label": 0}, {"id": 13, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main{\n    public static Scanner scan  = new Scanner(System.in);\n    public static void main(String[]args){\n        String s;\n        boolean flag;\n\n        flag=false;\n        s=next();\n\n        for(int i=0;i<s.length();i++){\n            if(i%2==0){\n                if(s.charAt(i)=='R'||s.charAt(i)=='U'||s.charAt(i)=='D'){\n                    flag=true;\n                }\n                else{\n                    flag=false;\n                    break;\n                }\n            }\n            else{\n                if(s.charAt(i)=='L'||s.charAt(i)=='U'||s.charAt(i)=='D'){\n                    flag=true;\n                }\n                else{\n                    flag=false;\n                    break;\n                }\n            }\n        }\n        yesNo(flag);\n    }\n\n\n\n    public static int nextInt(){\n        return Integer.parseInt(scan.next());\n    }\n    public static long nextLong(){\n        return Long.parseLong(scan.next());\n    }\n    public static String next(){\n        return scan.next();\n    }\n    public static double nextDouble(){\n        return Double.parseDouble(scan.next());\n    }\n    public static float nextFloat(){\n        return Float.parseFloat(scan.next());\n    }\n\n    //Yes or No\n    public static void yesNo(boolean flag){\n        if(flag) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n    }\n    public static void print(Object a){\n        System.out.println(a);\n    }\n}", "label": 1}, {"id": 363, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tchar[] s = in.nextChars();\n\n\t\t\tlong[][] dp = new long[n+1][n+1];\n\t\t\tArrays.fill(dp[0], 1);\n\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tif (s[i] == '<') {\n\t\t\t\t\tfor (int j = 0; j < n-i; j++) {\n\t\t\t\t\t\tdp[i+1][j] += dp[i][j];\n\t\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 0; j < n-i; j++) {\n\t\t\t\t\t\tdp[i+1][0] += dp[i][j];\n\t\t\t\t\t\tdp[i+1][j] -= dp[i][j] - MOD;\n\t\t\t\t\t\tdp[i+1][0] %= MOD;\n\t\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (int j = 1; j < n-1-i; j++) {\n\t\t\t\t\tdp[i+1][j] += dp[i+1][j-1];\n\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(dp[n-1][0]);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String args[]) {\n\tScanner sc = new Scanner(System.in);\n\n\twhile (true) {\n\t    int n = sc.nextInt();\n\t    int ans = 0;\n\t    if (n == 0) {\n\t\tbreak;\n\t    }\n\t    \n\t    ans = solve(n);\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static int solve(int n) {\n\t//int max = 123456 * 2;\n\t//int prime[] = new prime[123456 * 2 + 1];\n\tboolean is_prime[] = new boolean[123456 * 2 + 1];\n\tint count = 0;\n\n\t//int p = 0;\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t    is_prime[i] = true;\n\t}\n\n\tis_prime[0] = is_prime[1] = false;\n\tfor (int i = 2; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\t// prime[p++] = i;\n\t\tfor (int j = 2 * i; j <= 2 * n; j += i) {\n\t\t    is_prime[j] = false;\n\t\t}\n\t    }\n\t}\n\tfor (int i = n + 1; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\tcount++;\n\t    }\n\t}\n\t\n\treturn count;\n    }\n}", "label": 0}, {"id": 359, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tvoid solve() {\n\t\tint n = scn.nextInt(), mod = (int) 1e9 + 7;\n\t\tchar[] cmp = scn.next().toCharArray();\n\t\t\n\t\tint[][] dp = new int[n + 1][n + 1];\n\t\tdp[1][1] = 1;\n\t\t\n\t\tfor(int len = 2; len <= n; len++) {\n\t\t\tint[] pref = new int[n + 1];\n\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\tpref[i] = (pref[i - 1] + dp[len - 1][i]) % mod;\n\t\t\t}\n\t\t\tfor(int curr = 1; curr <= len; curr++) {\n\t\t\t\tint L, R;\n\t\t\t\tif(cmp[len - 2] == '<') {\n\t\t\t\t\tL = 1;\n\t\t\t\t\tR = curr - 1;\n\t\t\t\t} else {\n\t\t\t\t\tL = curr;\n\t\t\t\t\tR = n;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(L <= R) {\n\t\t\t\t\tdp[len][curr] += (pref[R] - pref[L - 1]);\n\t\t\t\t\tif(dp[len][curr] >= mod) {\n\t\t\t\t\t\tdp[len][curr] -= mod;\n\t\t\t\t\t} else if(dp[len][curr] < 0) {\n\t\t\t\t\t\tdp[len][curr] += mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int curr = 1; curr <= n; curr++) {\n\t\t\tans += dp[n][curr];\n\t\t\tif(ans >= mod) {\n\t\t\t\tans -= mod;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = true;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new Main(), \"Main\", 1 << 26).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tpublic FastReader() {\n\t\t\tis = System.in;\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] IndIntArray(int n) {\n\t\t\tint[][] a = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = new int[] { nextInt(), i };\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tint c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] shuffle(long[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tlong c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tlong[] uniq(long[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tlong[] rv = new long[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] reverse(long[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] compress(int[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tint[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] compress(long[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tlong[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "label": 0}, {"id": 73, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "code2": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] $) {\n       Scanner sc = new Scanner(System.in);\n       int a = sc.nextInt();\n       int b = sc.nextInt();\n       int C = sc.nextInt();\n       double Cc = C * Math.PI /180;\n       System.out.println(b * Math.sin(Cc) * a /2);\n       System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(Cc)) + a + b);\n       System.out.println(b * Math.sin(Cc));\n    }\n}\n", "label": 1}, {"id": 509, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nclass FastScanner {\n\tprivate final InputStream in = System.in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n\t\treturn (int) nl;\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner scan=new FastScanner();\n\tstatic Scanner scanner=new Scanner(System.in);\n\tstatic long mod=1000000007;\n\tstatic double eps=0.0000000001;\n\tstatic int big=Integer.MAX_VALUE;\n\tstatic long gcd (long a, long b) {return b>0?gcd(b,a%b):a;}\n\tstatic long lcm (long a, long b) {return a*b/gcd(a,b);}\n\tstatic int max(int a,int b) {return a>b?a:b;}\n\tstatic int min(int a,int b) {return a<b?a:b;}\n\tstatic long factorial(int i) {return i==1?1:i*factorial(i-1);}\n\tstatic int lower_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<=key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic int upper_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic boolean isPrime (long n) {\n\t\tif (n==2) return true;\n\t\tif (n<2 || n%2==0) return false;\n\t\tdouble d = Math.sqrt(n);\n\t\tfor (int i=3; i<=d; i+=2)if(n%i==0){return false;}\n\t\treturn true;\n\t}\n\tstatic int upper_division(int a,int b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lupper_division(long a,long b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lmax(long a,long b) {return Math.max(a, b);}\n\tstatic long lmin(long a,long b) {return Math.min(a, b);}\n\tstatic int[] setArray(int a) {\n\t\tint b[]=new int[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextInt();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic long[] lsetArray(int a) {\n\t\tlong b[]=new long[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextLong();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic String reverce(String str) {\n\t\tString strr=\"\";\n\t\tfor(int i=str.length()-1;i>=0;i--) {\n\t\t\tstrr+=str.charAt(i);\n\t\t}\n\t\treturn strr;\n\t}\n\tpublic static void printArray(char[] ch) {\n\t\tfor(int i=0;i<ch.length-1;i++) {\n\t\t\tSystem.out.print(ch[i]+\" \");\n\t\t}\n\t\tSystem.out.println(ch[ch.length-1]);\n\t}\n\tpublic static int[][] doublesort(int[][]a) {\n\t\tArrays.sort(a,(x,y)->Integer.compare(x[0],y[0]));\n\t\treturn a;\n\t}\n\tstatic long modpow(long x,long n,long mo) {\n\t\tlong sum=1;\n\t\twhile(n>0) {\n\t\t\tif((n&1)==1) {\n\t\t\t\tsum=sum*x%mo;\n\t\t\t}\n\t\t\tx=x*x%mo;\n\t\t\tn>>=1;\n\t\t}\n\t\treturn sum;\n\t}\n\tpublic static char[] revch(char ch[]) {\n\t\tchar ret[]=new char[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static int[] revint(int ch[]) {\n\t\tint ret[]=new int[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static void warshall_floyd(int v[][],int n) {\n\t\tfor(int k=0;k<n;k++)\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t\tv[i][j]=min(v[i][j],v[i][k]+v[k][j]);\n\t}\n\tpublic static void main(String[] args) {\n\t\tlong a=scan.nextLong();\n\t\tlong b=scan.nextLong();\n\t\tint cnt=0;\n\t\tlong now=a;\n\t\twhile(now<=b) {\n\t\t\tcnt++;\n\t\t\tnow*=2;\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\n/**\n * Created by shoya on 2017/04/12.\n */\npublic class Main {\n    public static void main(String... args) {\n        Scanner sc = new Scanner(System.in);\n        int V = sc.nextInt();\n        int E = sc.nextInt();\n        int r = sc.nextInt();\n        DijkstraClass dijkstra = new DijkstraClass(V, E, r);\n        for (int i = 0; i < E; i++) {\n            int s = sc.nextInt();\n            int d = sc.nextInt();\n            int c = sc.nextInt();\n            dijkstra.addDistande(s, d, c);\n        }\n        int[] dist = dijkstra.dikstra();\n        for (int i = 0; i < dist.length; i++){\n            if (dist[i] == 1 << 30)\n                System.out.println(\"INF\");\n            else\n                System.out.println(dist[i]);\n        }\n        return;\n    }\n\n\n    private static class DijkstraClass {\n        class edge{\n            int dest, cost;\n            edge(int dest, int cost){\n                this.dest = dest;\n                this.cost = cost;\n            }\n        }\n\n        private final int INF = 1 << 30;\n        private int S;\n        private int V;\n        private ArrayList<ArrayList<edge>> edgesOfNodes = new ArrayList<ArrayList<edge>>();\n\n        DijkstraClass(int V, int E, int Start){\n            this.S = Start;\n            this.V = V;\n            for (int i = 0; i < V; i++)\n                edgesOfNodes.add(new ArrayList<edge>());\n        }\n\n        void addDistande(int source, int dest, int cost){\n            edgesOfNodes.get(source).add(new edge(dest, cost));\n        }\n\n\n        int[] dikstra(){\n            class costAndNode implements Comparable {\n                int cost, node;\n                costAndNode(int cost, int node){\n                    this.cost = cost;\n                    this.node = node;\n                }\n                @Override\n                public int compareTo(Object o) {\n                    return this.cost - ((costAndNode) o).cost;\n                }\n            }\n\n            PriorityQueue<costAndNode> pque = new PriorityQueue<costAndNode>();\n            int[] distances = new int[V];\n            for (int i = 0; i < V; i++)\n                distances[i] = INF;\n            distances[S] = 0;\n\n            pque.add(new costAndNode(0, S));\n            while (!pque.isEmpty()){\n                costAndNode item = pque.poll();\n                if (distances[item.node] < item.cost)\n                    continue;\n\n                //System.out.printf(\"Focusing on Node %d\\n\", item.node);\n                //for (int i = 0; i < V; i++)\n                //    System.out.printf(\"%d \", distances[i]);\n                //System.out.println();\n\n                for (edge e : edgesOfNodes.get(item.node)) {\n                    //System.out.printf(\"Node %d -> %d, Cost %d -> %d\\n\",\n                    //        item.node, e.dest, distances[e.dest],\n                    //        distances[item.node] + e.cost);\n                    if (distances[e.dest] > distances[item.node] + e.cost) {\n                        distances[e.dest] = distances[item.node] + e.cost;\n                        pque.add(new costAndNode(distances[e.dest], e.dest));\n                    }\n                }\n            }\n\n            return distances;\n        }\n\n    }\n}", "label": 0}, {"id": 687, "code1": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScan in = new MyScan(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyScan in, PrintWriter out) {\n            int i = in.nextInt();\n\n            long[] md = new long[i];\n\n            int rm = i - 2;\n            int lx = i - 2;\n            while (rm >= 0) {\n                md[lx + 1] = Util.c(rm, lx);\n                rm -= 2;\n                lx--;\n            }\n            long res = 0;\n            long prev = 0;\n            for (int m = 1; m < i; m++) {\n                long cur = Util.fact(m) * Util.fact(i - m - 1) % Util._m;\n                cur = cur * (md[m]) % Util._m;\n\n\n                res += (cur - prev + Util._m) * m % Util._m;\n                prev = cur;\n\n            }\n\n\n            out.println(res % Util._m);\n\n        }\n\n    }\n\n    static class MyScan {\n        private final InputStream in;\n        private byte[] inbuf = new byte[1024];\n        public int lenbuf = 0;\n        public int ptrbuf = 0;\n\n        public MyScan(InputStream in) {\n            this.in = in;\n        }\n\n        private int readByte() {\n            if (lenbuf == -1) throw new InputMismatchException();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = in.read(inbuf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (lenbuf <= 0) return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = num * 10 + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n    }\n\n    static class Util {\n        public static final long M07 = 1000_000_007;\n        public static long _m = M07;\n        private static long[] fact;\n        private static long[] inv;\n        private static long[] ifact;\n\n        public static void l() {\n            fact = new long[1000001];\n            inv = new long[1000001];\n            ifact = new long[1000001];\n            for (int s = 0; s < 2; s++) {\n                fact[s] = 1;\n                ifact[s] = 1;\n                inv[s] = 1;\n            }\n            inv[0] = 0;\n            for (int i = 2; i < inv.length; i++) {\n                inv[i] = (_m - (_m / i) * inv[(int) (_m % i)] % _m) % _m;\n            }\n            for (int i = 2; i < fact.length; i++) {\n                fact[i] = i * fact[i - 1] % _m;\n                ifact[i] = inv[i] * ifact[i - 1] % _m;\n            }\n        }\n\n        public static long c(int a, int b) {\n            if (fact == null) l();\n            return ifact[a] * ifact[b - a] % _m * fact[b] % _m;\n        }\n\n        public static long fact(int a) {\n            if (fact == null) l();\n            return fact[a];\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 555, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tString[][] a = new String[n][];\n\t\t\tint p;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ts = sc.next().replaceAll(\":\", \" \").replaceAll(\",\", \" \");\n\t\t\t\ta[i] = s.split(\" \");\n\t\t\t\tp = a[i].length-1;\n\t\t\t\ta[i][p] = a[i][p].substring(0,a[i][p].length()-1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tArrayList<String> list = new ArrayList<String>();\n\t\t\tfor(int i=1;i<a[0].length;i++) list.add(a[0][i]);\n\t\t\t\n\t\t\tboolean flag;\n\t\t\twhile(true){\n\t\t\t\tflag = false;\n\t\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\t\tif(list.contains(a[i][0])==true){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\tlist.remove(list.indexOf(a[i][0]));\n\t\t\t\t\t\tfor(int j=1;j<a[i].length;j++){\n\t\t\t\t\t\t\tif(list.contains(a[i][j])==false) list.add(a[i][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==false) break;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(list.size());\n\t\t}\t\n\t}\t\n}", "code2": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n\tstatic final Reader in = new Reader();\n\tstatic final long M=(long)1e9+7;\n\t\n\tpublic static void main(String[] args) {\n\t\tint n=in.nextInt();\n\t\tlong[] ps = new long[n+1];\n\t\tlong nf=1;\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tps[i]=(ps[i-1]+in.nextInt())%M;\n\t\t\tnf=nf*i%M;\n\t\t}\n\t\tlong ans=nf*ps[n]%M, s=0;\n\t\tfor(int i=1; i<=n-1; ++i) {\n\t\t\ts=(s+ps[n-i]-ps[i]+M)%M;\n\t\t\tans=(ans+nf*modI((long)(i+1)*(i>=n-1?1:i+2), M)%M*2*s+nf*modI(i+1, M)%M*(ps[i]+ps[n]-ps[n-i]+M))%M;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tstatic long modI(long a, long m) {\n\t\treturn (a%=m)<=1?1:(1-modI(m%a, a)*m)/a+m;\n\t}\n\t\n\tstatic class Reader {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st;\n\t\tString next() {\n\t\t\twhile(st==null||!st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}", "label": 0}, {"id": 264, "code1": "import java.util.*;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc=new Scanner(System.in);\n    System.out.println((sc.nextInt()+sc.nextInt()+1)/2);\n  }\n}", "code2": "import java.util.Scanner;\n//import java.util.Arrays;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\t//\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tSystem.out.println((a + b) % 2 == 0 ? (a + b) / 2 : (a + b) / 2 + 1);\n\t}\n}\n", "label": 1}, {"id": 450, "code1": "import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Random;\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\n\n            _Scanner sc = new _Scanner(in);\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int c = sc.nextInt();\n            int k = sc.nextInt();\n\n            if (a + b >= k) {\n                out.println(Math.min(k, a));\n            } else {\n                out.println(a - (k - a - b));\n            }\n        }\n    }\n\n    private static void reverse(int[] vs) {\n        for (int i = 0; i < vs.length / 2; i++) {\n            swap(vs, i, vs.length - 1 - i);\n        }\n    }\n\n    static class _Scanner {\n        InputStream is;\n        _Scanner(InputStream is) {\n            this.is = is;\n        }\n        byte[] bb = new byte[1 << 15];\n        int k, l;\n        byte getc() {\n            try {\n                if (k >= l) {\n                    k = 0;\n                    l = is.read(bb);\n                    if (l < 0) return -1;\n                }\n                return bb[k++];\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        byte skip() {\n            byte b;\n            while ((b = getc()) <= 32)\n                ;\n            return b;\n        }\n\n        int nextInt() {\n            int n = 0;\n            int sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        long nextLong() {\n            long n = 0;\n            long sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        public String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); b > 32; b = getc()) {\n                sb.append(((char) b));\n            }\n            return sb.toString();\n        }\n    }\n\n    private static void shuffle(int[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void shuffle(Object[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void swap(int[] ar, int i, int j) {\n        int t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n    private static void swap(Object[] ar, int i, int j) {\n        Object t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n\n}\n", "code2": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "label": 0}, {"id": 205, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 336, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "label": 0}, {"id": 280, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "code2": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "label": 0}, {"id": 474, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScanner in = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C solver = new C();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C {\n        int N;\n        int M;\n\n        public void solve(int testNumber, MyScanner in, PrintWriter out) {\n            N = in.Int();\n            M = in.Int();\n            DSU dsu = new DSU(N);\n            for (int i = 0; i < M; i++) {\n                int A = in.Int() - 1;\n                int B = in.Int() - 1;\n                dsu.merge(A, B);\n            }\n            out.println(dsu.groups().size() - 1);\n        }\n\n    }\n\n    static class DSU {\n        private int n;\n        private int[] parentOrSize;\n\n        public DSU(int n) {\n            this.n = n;\n            this.parentOrSize = new int[n];\n            Arrays.fill(parentOrSize, -1);\n        }\n\n        int merge(int a, int b) {\n            if (!(0 <= a && a < n))\n                throw new IndexOutOfBoundsException(\"a=\" + a);\n            if (!(0 <= b && b < n))\n                throw new IndexOutOfBoundsException(\"b=\" + b);\n\n            int x = leader(a);\n            int y = leader(b);\n            if (x == y) return x;\n            if (-parentOrSize[x] < -parentOrSize[y]) {\n                int tmp = x;\n                x = y;\n                y = tmp;\n            }\n            parentOrSize[x] += parentOrSize[y];\n            parentOrSize[y] = x;\n            return x;\n        }\n\n        int leader(int a) {\n            if (parentOrSize[a] < 0) {\n                return a;\n            } else {\n                parentOrSize[a] = leader(parentOrSize[a]);\n                return parentOrSize[a];\n            }\n        }\n\n        ArrayList<ArrayList<Integer>> groups() {\n            int[] leaderBuf = new int[n];\n            int[] groupSize = new int[n];\n            for (int i = 0; i < n; i++) {\n                leaderBuf[i] = leader(i);\n                groupSize[leaderBuf[i]]++;\n            }\n            ArrayList<ArrayList<Integer>> result = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                result.add(new ArrayList<>(groupSize[i]));\n            }\n            for (int i = 0; i < n; i++) {\n                result.get(leaderBuf[i]).add(i);\n            }\n            result.removeIf(ArrayList::isEmpty);\n            return result;\n        }\n\n    }\n\n    static class MyScanner {\n        private BufferedReader in;\n        private StringTokenizer st;\n\n        public MyScanner(InputStream stream) {\n            in = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    String rl = in.readLine();\n                    if (rl == null) {\n                        return null;\n                    }\n                    st = new StringTokenizer(rl);\n                } catch (IOException e) {\n                    return null;\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int Int() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "label": 0}, {"id": 345, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "label": 0}, {"id": 309, "code1": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint[] a = in.nextIntArray(n);\n\n\t\t\tint count = 0;\n\n\t\t\tfor (int l = 0, r = 0; l < n; l = r) {\n\t\t\t\twhile (r < n && a[l] == a[r]) {\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t\t\tint len = r-l;\n\t\t\t\tcount += len/2;\n\t\t\t}\n\n\t\t\tout.println(count);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\t}\n\n}\n", "code2": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "label": 0}, {"id": 453, "code1": "import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Random;\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\n\n            _Scanner sc = new _Scanner(in);\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int c = sc.nextInt();\n            int k = sc.nextInt();\n\n            if (a + b >= k) {\n                out.println(Math.min(k, a));\n            } else {\n                out.println(a - (k - a - b));\n            }\n        }\n    }\n\n    private static void reverse(int[] vs) {\n        for (int i = 0; i < vs.length / 2; i++) {\n            swap(vs, i, vs.length - 1 - i);\n        }\n    }\n\n    static class _Scanner {\n        InputStream is;\n        _Scanner(InputStream is) {\n            this.is = is;\n        }\n        byte[] bb = new byte[1 << 15];\n        int k, l;\n        byte getc() {\n            try {\n                if (k >= l) {\n                    k = 0;\n                    l = is.read(bb);\n                    if (l < 0) return -1;\n                }\n                return bb[k++];\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        byte skip() {\n            byte b;\n            while ((b = getc()) <= 32)\n                ;\n            return b;\n        }\n\n        int nextInt() {\n            int n = 0;\n            int sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        long nextLong() {\n            long n = 0;\n            long sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        public String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); b > 32; b = getc()) {\n                sb.append(((char) b));\n            }\n            return sb.toString();\n        }\n    }\n\n    private static void shuffle(int[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void shuffle(Object[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void swap(int[] ar, int i, int j) {\n        int t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n    private static void swap(Object[] ar, int i, int j) {\n        Object t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n\n}\n", "code2": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args)\n  {\n    Scanner scanner = new Scanner(System.in);\n    int[] a = new int[3];\n    int[] b = new int[3];\n\n    int iti = 0,ni=0,san=0,si =0;\n\n    int odd=0, even=0;\n\n    for(int i=0; i<3; i++){\n      a[i] = scanner.nextInt();\n      b[i] = scanner.nextInt();\n    }\n\n    for(int i=0; i<3; i++){\n      if(a[i] == 1){\n        iti++;\n      }\n      else if(a[i]==2)\n      {\n        ni++;\n      }else if(a[i] == 3)\n      {\n        san++;\n      }else if(a[i] == 4){\n        si++;\n      }\n\n      if(b[i] == 1){\n        iti++;\n      }\n      else if(b[i]==2)\n      {\n        ni++;\n      }else if(b[i] == 3)\n      {\n        san++;\n      }else if(b[i] == 4){\n        si++;\n      }\n    }\n\n    if(checkEven(iti)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(ni)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(san)){\n      even++;\n    }else{\n      odd++;\n    }\n\n    if(checkEven(si)){\n      even++;\n    }else{\n      odd++;\n    }\n\n      if(odd == 2 && even == 2)\n      {\n        System.out.println(\"YES\");\n      }else{\n        System.out.println(\"NO\");\n      }\n\n  }\n\n  public static boolean checkEven(int num){\n    if(num %2 == 0){\n      return true;\n    }\n    return false;\n  }\n\n}", "label": 0}, {"id": 287, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    String[] s = sc.next().split(\"\");\n    int l =  s.length;\n    int count =0;\n    for(int i=0; i<l; i++){\n      if(s[i].equals(\"U\")||s[i].equals(\"D\")){\n        count +=1;\n        continue;\n      }\n\n\n      if(i%2==0){\n        if(s[i].equals(\"R\")){\n          count += 1;\n        }\n      }else{\n        if(s[i].equals(\"L\")){\n          count += 1;\n        }\n      }\n    }\n    if(count == l){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n\n\n\n\n  }\n}", "code2": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.System.in;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long[] x = new long[n];\n        for(int i=0;i<n;i++) x[i]=sc.nextLong();\n        long ans= 0;\n        for(int i=0;i<n-1;i++){\n            ans += Math.min(A*(x[i+1]-x[i]),B);\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(ans);\n        out.flush();\n    }\n}\n", "label": 0}, {"id": 155, "code1": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args){\n        Scanner s=new Scanner(System.in);\n        int n=s.nextInt();\n        int a[]=new int[n];\n        for(int i=0;i<n;i++)a[i]=s.nextInt();\n        Arrays.sort(a);\n        for(int i=0;i<n-1;i++)\n            System.out.print(a[i]+\" \");\n        System.out.println(a[n-1]);\n    }\n}\n//by TTTMongolia 11/05/2012", "label": 1}, {"id": 548, "code1": "import java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    static void solve() {\n        int n = nextInt();\n\n        long ans = nextLong();\n//        System.out.println(ans);\n        for (int i = 1; i < n; i++) {\n            long t = nextLong();\n            ans = lcm(ans, t);\n//            System.out.println(ans);\n        }\n        out.println(ans);\n    }\n\n    static final int MOD = 1_000_000_007;\n    static long[] fac, finv, inv;\n\n    // nCk\u306e\u521d\u671f\u5316\n    static void comInit(int max) {\n        fac = new long[max];\n        finv = new long[max];\n        inv = new long[max];\n        fac[0] = fac[1] = 1;\n        finv[0] = finv[1] = 1;\n        inv[1] = 1;\n\n        for (int i = 2; i < max; i++) {\n            fac[i] = fac[i - 1] * i % MOD;\n            inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;\n            finv[i] = finv[i - 1] * inv[i] % MOD;\n        }\n    }\n\n    // nCk\u306e\u8a08\u7b97\n    static long com(int n, int k) {\n        if (n < k)\n            return 0;\n        if (n < 0 || k < 0)\n            return 0;\n        return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n    }\n\n    static PrintWriter out;\n    static Scanner sc;\n\n    static int[][] newIntArray(int h, int w, int value) {\n        int[][] ret = new int[h][w];\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                ret[i][j] = value;\n            }\n        }\n        return ret;\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(sc.next());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(sc.next());\n    }\n\n    static String nextString() {\n        return sc.next();\n    }\n\n    static int[] nextIntArray(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    static List<Integer> nextIntList(int n) {\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextInt());\n        }\n        return list;\n    }\n\n    static List<Double> nextDoubleList(int n) {\n        List<Double> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add((double) nextInt());\n        }\n        return list;\n    }\n\n    static List<Long> nextLongList(int n) {\n        List<Long> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextLong());\n        }\n        return list;\n    }\n\n    static char[][] nextCharArray(int h, int w) {\n        char[][] c = new char[h][w];\n        for (int i = 0; i < h; i++) {\n            String str = nextString();\n            for (int j = 0; j < w; j++) {\n                c[i][j] = str.charAt(j);\n            }\n        }\n        return c;\n    }\n\n    static <T extends Comparable<? super T>> void sort(List<T> list) {\n        Collections.sort(list);\n    }\n\n    // greatest common divisor\n    // \u6700\u5927\u516c\u7d04\u6570\n    static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    // least common multiple\n    // \u6700\u5c0f\u516c\u500d\u6570\n    static long lcm(long a, long b) {\n        if (a >= b && a % b == 0)\n            return a;\n        if (b > a && b % a == 0)\n            return b;\n\n//        return a * b / gcd(a, b);\n        if (a > b) {\n            return (a / gcd(a, b)) * b;\n        } else {\n            return (b / gcd(a, b)) * a;\n        }\n    }\n\n    // base\u306en\u4e57\u3092\u8a08\u7b97\u3092\u8fd4\u3059\n    static int pow(int base, int n) {\n        int ret = 1;\n        for (int i = 0; i < n; i++) {\n            ret *= base;\n        }\n        return ret;\n    }\n\n    // return n^k mod m\n    static long powMod(long n, long k, long m) {\n        if (k == 0) {\n            return 1;\n        } else if (k % 2 == 1) {\n            return powMod(n, k - 1, m) * n % m;\n        } else {\n            long tmp = powMod(n, k / 2, m);\n            return tmp * tmp % m;\n        }\n    }\n\n    // int\u3092length\u6841\u306ebit\u6587\u5b57\u5217\u306b\u5909\u63db\n    static String toBitString(int length, int n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = length - 1; i >= 0; i--) {\n            if ((n >> i) % 2 == 1) {\n                sb.append(\"1\");\n            } else {\n                sb.append(\"0\");\n            }\n        }\n        return sb.toString();\n    }\n\n    public static void main(String[] args) {\n        out = new PrintWriter(System.out);\n        sc = new Scanner(System.in);\n\n        solve();\n\n        out.flush();\n        sc.close();\n    }\n\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static HashMap<String,HashSet<String>> map;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tmap = new HashMap<String, HashSet<String>>();\n\t\t\tString first = null;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString[] s = sc.next().split(\":\");\n\t\t\t\tif(i == 0) first = s[0];\n\t\t\t\ts[1] = s[1].replaceAll(\"\\\\.\", \"\");\n\t\t\t\tString[] ss = s[1].split(\",\");\n\t\t\t\tmap.put(s[0], new HashSet<String>());\n\t\t\t\tfor(String tmp : ss){\n\t\t\t\t\tmap.get(s[0]).add(tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(String si : map.keySet()){\n\t\t\t\tfor(String sj : map.keySet()){\n\t\t\t\t\tif(map.get(si).contains(sj)){\n\t\t\t\t\t\tmap.get(si).remove(sj);\n\t\t\t\t\t\tmap.get(si).addAll(map.get(sj));\n\t\t\t\t\t}\n\t\t\t\t\tif(map.get(sj).contains(si)){\n\t\t\t\t\t\tmap.get(sj).remove(si);\n\t\t\t\t\t\tmap.get(sj).addAll(map.get(si));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(map.get(first).size());\n\t\t}\n\t}\n/*\n\tpublic static HashSet<String> solve(String group){\n\t\tfor(String s : map.get(group)){\n\n\t\t}\n\n\t}\n\t*/\n}", "label": 0}, {"id": 278, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        int n = str.length();\n        int digitSum = 0;\n        for (int i = 0; i < n; i++)\n            digitSum += (str.charAt(i) - '0');\n        if(digitSum % 9 == 0) {\n            System.out.println(\"Yes\");\n        }\n        else {\n            System.out.println(\"No\");\n        }\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    String[] s = sc.next().split(\"\");\n    int l =  s.length;\n    int count =0;\n    for(int i=0; i<l; i++){\n      if(s[i].equals(\"U\")||s[i].equals(\"D\")){\n        count +=1;\n        continue;\n      }\n\n\n      if(i%2==0){\n        if(s[i].equals(\"R\")){\n          count += 1;\n        }\n      }else{\n        if(s[i].equals(\"L\")){\n          count += 1;\n        }\n      }\n    }\n    if(count == l){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n\n\n\n\n  }\n}", "label": 0}, {"id": 766, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.lang.Math;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tFS reader = new FS();\n\t\t// write reader\n\t\tint N = reader.nextInt();\n\t\tint T = reader.nextInt();\n\t\tint A = reader.nextInt();\n\t\tint[] H = new int[N];\n\t\tfor(int i=0; i<N; i++) {\n\t\t    H[i] = reader.nextInt();\n\t\t}\n\t\tint ans     = -1;\n\t\tdouble diff = 1000000;\n\t\tfor(int i=0; i<N; i++) {\n\t\t    double tmp = Math.abs((double)T-(double)H[i]*0.006-(double)A);\n\t\t    if (tmp < diff) {\n\t\t        ans = i+1;\n\t\t        diff = tmp;\n\t\t    }\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tpublic static void solver(int H, int W, boolean[][] matrix) {\n\t\t// write logic\n\t}\n\t\n\t// Read Class\n\tstatic class FS {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\tprivate int readByte() { return hasNextByte() ? buffer[ptr++] : -1;}\n\t\tprivate boolean isPrintableChar(int c) {return 33 <= c && c <= 126;}\n\t\tprivate void skipUnprintable() {while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n\t\n\t\tpublic boolean hasNext() { skipUnprintable(); return hasNextByte();}\n\t\tpublic String next() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile(isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile(true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if(b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n}\n", "code2": "\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tchar[] s = ns().toCharArray();\n\t\tint min = s.length;\n\t\tfor(int i = 0;i < s.length-1;i++){\n\t\t\tif(s[i] != s[i+1]){\n\t\t\t\tmin = Math.min(min, Math.max(i+1, s.length-(i+1)));\n\t\t\t}\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 529, "code1": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "code2": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "label": 0}, {"id": 754, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.lang.Math;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tFS reader = new FS();\n\t\t// write reader\n\t\tint N = reader.nextInt();\n\t\tint T = reader.nextInt();\n\t\tint A = reader.nextInt();\n\t\tint[] H = new int[N];\n\t\tfor(int i=0; i<N; i++) {\n\t\t    H[i] = reader.nextInt();\n\t\t}\n\t\tint ans     = -1;\n\t\tdouble diff = 1000000;\n\t\tfor(int i=0; i<N; i++) {\n\t\t    double tmp = Math.abs((double)T-(double)H[i]*0.006-(double)A);\n\t\t    if (tmp < diff) {\n\t\t        ans = i+1;\n\t\t        diff = tmp;\n\t\t    }\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tpublic static void solver(int H, int W, boolean[][] matrix) {\n\t\t// write logic\n\t}\n\t\n\t// Read Class\n\tstatic class FS {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\tprivate int readByte() { return hasNextByte() ? buffer[ptr++] : -1;}\n\t\tprivate boolean isPrintableChar(int c) {return 33 <= c && c <= 126;}\n\t\tprivate void skipUnprintable() {while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n\t\n\t\tpublic boolean hasNext() { skipUnprintable(); return hasNextByte();}\n\t\tpublic String next() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile(isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile(true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if(b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 465, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args)\n  {\n    Scanner scanner = new Scanner(System.in);\n    int[] a = new int[3];\n    int[] b = new int[3];\n\n    int iti = 0,ni=0,san=0,si =0;\n\n    int odd=0, even=0;\n\n    for(int i=0; i<3; i++){\n      a[i] = scanner.nextInt();\n      b[i] = scanner.nextInt();\n    }\n\n    for(int i=0; i<3; i++){\n      if(a[i] == 1){\n        iti++;\n      }\n      else if(a[i]==2)\n      {\n        ni++;\n      }else if(a[i] == 3)\n      {\n        san++;\n      }else if(a[i] == 4){\n        si++;\n      }\n\n      if(b[i] == 1){\n        iti++;\n      }\n      else if(b[i]==2)\n      {\n        ni++;\n      }else if(b[i] == 3)\n      {\n        san++;\n      }else if(b[i] == 4){\n        si++;\n      }\n    }\n\n    if(checkEven(iti)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(ni)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(san)){\n      even++;\n    }else{\n      odd++;\n    }\n\n    if(checkEven(si)){\n      even++;\n    }else{\n      odd++;\n    }\n\n      if(odd == 2 && even == 2)\n      {\n        System.out.println(\"YES\");\n      }else{\n        System.out.println(\"NO\");\n      }\n\n  }\n\n  public static boolean checkEven(int num){\n    if(num %2 == 0){\n      return true;\n    }\n    return false;\n  }\n\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScanner in = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C solver = new C();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C {\n        int N;\n        int M;\n\n        public void solve(int testNumber, MyScanner in, PrintWriter out) {\n            N = in.Int();\n            M = in.Int();\n            DSU dsu = new DSU(N);\n            for (int i = 0; i < M; i++) {\n                int A = in.Int() - 1;\n                int B = in.Int() - 1;\n                dsu.merge(A, B);\n            }\n            out.println(dsu.groups().size() - 1);\n        }\n\n    }\n\n    static class DSU {\n        private int n;\n        private int[] parentOrSize;\n\n        public DSU(int n) {\n            this.n = n;\n            this.parentOrSize = new int[n];\n            Arrays.fill(parentOrSize, -1);\n        }\n\n        int merge(int a, int b) {\n            if (!(0 <= a && a < n))\n                throw new IndexOutOfBoundsException(\"a=\" + a);\n            if (!(0 <= b && b < n))\n                throw new IndexOutOfBoundsException(\"b=\" + b);\n\n            int x = leader(a);\n            int y = leader(b);\n            if (x == y) return x;\n            if (-parentOrSize[x] < -parentOrSize[y]) {\n                int tmp = x;\n                x = y;\n                y = tmp;\n            }\n            parentOrSize[x] += parentOrSize[y];\n            parentOrSize[y] = x;\n            return x;\n        }\n\n        int leader(int a) {\n            if (parentOrSize[a] < 0) {\n                return a;\n            } else {\n                parentOrSize[a] = leader(parentOrSize[a]);\n                return parentOrSize[a];\n            }\n        }\n\n        ArrayList<ArrayList<Integer>> groups() {\n            int[] leaderBuf = new int[n];\n            int[] groupSize = new int[n];\n            for (int i = 0; i < n; i++) {\n                leaderBuf[i] = leader(i);\n                groupSize[leaderBuf[i]]++;\n            }\n            ArrayList<ArrayList<Integer>> result = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                result.add(new ArrayList<>(groupSize[i]));\n            }\n            for (int i = 0; i < n; i++) {\n                result.get(leaderBuf[i]).add(i);\n            }\n            result.removeIf(ArrayList::isEmpty);\n            return result;\n        }\n\n    }\n\n    static class MyScanner {\n        private BufferedReader in;\n        private StringTokenizer st;\n\n        public MyScanner(InputStream stream) {\n            in = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    String rl = in.readLine();\n                    if (rl == null) {\n                        return null;\n                    }\n                    st = new StringTokenizer(rl);\n                } catch (IOException e) {\n                    return null;\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int Int() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 306, "code1": "import java.util.Scanner;\npublic class Main { \n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) { \n        while (true) { \n        int n = sc.nextInt(); \n            if (n == 0) { \n            break; \n            } \n            int[] scores = new int[n]; \n            for (int i = 0; i < scores.length; i++) { \n            scores[i] = sc.nextInt(); \n            } \n            double average = 0, variance = 0;\n            for(int i = 0; i < scores.length; i++){ \n                average += scores[i]; \n            } \n            average = average/n; \n            for(int i = 0; i < scores.length; i++){ \n                variance += (scores[i]-average)*(scores[i]-average); \n            }\n            variance = variance/n;\n            System.out.println(Math.sqrt(variance)); \n            } \n        } \n    }\n}\n", "code2": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "label": 0}, {"id": 408, "code1": "\nimport static java.lang.Math.*;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic int modP = 1000000007;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong[] t = in.nextLongArray(n), a = in.nextLongArray(n);\n\n\t\t\tlong[] tCalc = new long[n];\n\t\t\tArrays.fill(tCalc, -1);\n\n\t\t\tlong[] aCalc = new long[n];\n\t\t\tArrays.fill(aCalc, -1);\n\n\t\t\tlong[] tDef = new long[n];\n\t\t\tlong[] aDef = new long[n];\n\n\t\t\tlong tMax = -1, aMax = -1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tMax < t[i]) {\n\t\t\t\t\ttMax = t[i];\n\t\t\t\t\ttDef[i] = t[i];\n\t\t\t\t} else {\n\t\t\t\t\ttCalc[i] = tMax;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = n-1; i >= 0; i--) {\n\t\t\t\tif (aMax < a[i]) {\n\t\t\t\t\taMax = a[i];\n\t\t\t\t\taDef[i] = a[i];\n\t\t\t\t} else {\n\t\t\t\t\taCalc[i] = aMax;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (aCalc[i] == -1 && tCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] != tDef[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (aCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] > tCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (tCalc[i] == -1) {\n\t\t\t\t\tif (tDef[i] > aCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlong ans = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tCalc[i] == -1 || aCalc[i] == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tans = ans * min(aCalc[i],tCalc[i]) % modP;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.util.*;\npublic class Main{\n    public static void main(String args[]) {\n        Scanner cin = new Scanner(System.in);\n        while(cin.hasNext()){\n        \tint n = cin.nextInt();\n        \tint[][] vote = readMatrix(cin,n,2);\n        \tSystem.out.println(getNum(vote,n));\n        }\n    }\n    public static long getNum(int[][] vote, int n){\n    \tlong[] result={vote[0][0],vote[0][1]};\n    \tlong result1;\n    \tfor(int i=1;i<n;i++){\n    \t\tresult1 = result[1];\n    \t\tif(result[0]>vote[i][0]){\n    \t\t\tif(result[0]%vote[i][0]!=0) result[0] += vote[i][0]-result[0]%vote[i][0];\n    \t\t}else{result[0]=vote[i][0];}\n    \t\tresult[1] = result[0]/vote[i][0]*vote[i][1];\n    \t\tif(result1>result[1]){\n    \t\t\tresult[1] = result1;\n    \t\t\tif(result[1]%vote[i][1]!=0) result[1] += vote[i][1]-result[1]%vote[i][1];\n    \t\t\t result[0] = result[1]/vote[i][1]*vote[i][0];\n    \t\t}\n    \t}\n    \treturn result[0]+result[1];\n    }\n    public static int[][] readMatrix(Scanner in,int n,int m){\n    \tint[][] mtx = new int[n][m];\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<m;j++){\n    \t\t\tmtx[i][j] = in.nextInt();\n    \t\t}\n    \t}\n    \treturn mtx;\n    }\n    \n}", "label": 0}, {"id": 36, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "code2": "import java.util.*;\nclass Main\n{\n    public static void main (String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for(int i = 0; i < n; i++) a[i] = sc.nextInt();\n        int ans = 0;\n        int tmp = 101;\n        for(int i = 1; i < n; i++){\n            if(a[i] == a[i-1]){\n                a[i] = ++tmp;\n                ans++;\n            }\n        }\n        System.out.print(ans);\n    }\n}", "label": 1}, {"id": 485, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author cunbidun\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        EProductOfArithmeticProgression solver = new EProductOfArithmeticProgression();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class EProductOfArithmeticProgression {\n        private static final int MOD = (int) 1e6 + 3;\n        private InputReader in;\n        private PrintWriter out;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n            int q = in.nextInt();\n\n            int[] fac = new int[MOD + 1];\n            int[] inv = new int[MOD + 1];\n            fac[0] = 1;\n            inv[0] = Op.inv(1, MOD);\n            for (int i = 1; i <= MOD; i++) {\n                fac[i] = Op.mulMod(fac[i - 1], i, MOD);\n                inv[i] = Op.inv(fac[i], MOD);\n            }\n\n            while (q-- > 0) {\n                int x = in.nextInt();\n                int d = in.nextInt();\n                int n = in.nextInt();\n                if (d == 0) {\n                    out.println(Op.powMod(x, n, MOD));\n                    continue;\n                }\n                x = Op.mulMod(x, Op.inv(d, MOD), MOD);\n                int ans;\n                if (x + n - 1 >= MOD || x == 0) ans = 0;\n                else\n                    ans = Op.mulMod(fac[x + n - 1], inv[x - 1], MOD);\n                out.println(Op.mulMod(ans, Op.powMod(d, n, MOD), MOD));\n            }\n        }\n\n    }\n\n    static class Op {\n        public static int mulMod(int x, int y, int MOD) {\n            return (int) (((long) x * y) % MOD);\n        }\n\n        public static int powMod(int x, long p, int MOD) {\n            if (p == 0) return 1;\n            int t = powMod(x, p / 2, MOD);\n            if ((p & 1) == 1)\n                return mulMod(mulMod(t, t, MOD), x, MOD);\n            return mulMod(t, t, MOD);\n        }\n\n        public static int inv(int x, int MOD) {\n            return powMod(x, MOD - 2, MOD);\n        }\n\n    }\n\n    static class InputReader extends InputStream {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        private static boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "label": 0}, {"id": 150, "code1": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long x = sc.nextLong();\n    long ax = 0;\n    if (a > 0) {\n      ax = ((a - 1) / x) + 1;\n    }\n    long bx = (b / x) + 1;\n    System.out.println(bx - ax);\n  }\n}", "label": 1}, {"id": 770, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br =\n\t\t\t\tnew BufferedReader(new InputStreamReader(System.in));\n\t\tfor (String str; (str=br.readLine()) != null; ) {\n\t\t\tString[] data = str.split(\",\");\n\n\t\t\tdouble xa = Double.parseDouble(data[0]);\n\t\t\tdouble ya = Double.parseDouble(data[1]);\n\n\t\t\tdouble xb = Double.parseDouble(data[2]);\n\t\t\tdouble yb = Double.parseDouble(data[3]);\n\n\t\t\tdouble xc = Double.parseDouble(data[4]);\n\t\t\tdouble yc = Double.parseDouble(data[5]);\n\n\t\t\tdouble xd = Double.parseDouble(data[6]);\n\t\t\tdouble yd = Double.parseDouble(data[7]);\n\t\t\t/*\n\t\t\t * vector ab : (xb-xa, yb-ya)\n\t\t\t * vector ac\n\t\t\t * vector ad\n\t\t\t * vector bc : (xc-xb, yc-yb)\n\t\t\t * vector ba\n\t\t\t * vector bd\n\t\t\t * vector cd : (xd-xc, yd-yc)\n\t\t\t * vector ca\n\t\t\t * vector cb\n\t\t\t */\n\t\t\tVector2d a = new Vector2d(xa, ya);\n\t\t\tVector2d b = new Vector2d(xb, yb);\n\t\t\tVector2d c = new Vector2d(xc, yc);\n\t\t\tVector2d d = new Vector2d(xd, yd);\n\t\t\tif ( isSameSide(a, b, c, d)\n\t\t\t\t\t&& isSameSide(b, c, d, a)\n\t\t\t\t\t&& isSameSide(c, d, a, b) ) {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static class Vector2d {\n\t\tprivate double x;\n\t\tprivate double y;\n\n\t\tpublic Vector2d(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t// vecotr this - v\n\t\tpublic Vector2d minus(Vector2d v) {\n\t\t\treturn new Vector2d(this.x - v.x, this.y - v.y);\n\t\t}\n\t\t// outerProduct this x b\n\t\tpublic double op(Vector2d b) {\n\t\t\treturn this.x * b.y  -  this.y * b.x;\n\t\t}\n\t}\n\t/*\n\t * outerProduct\n\t * a = (a.x, a.y)\n\t * b = (b.x, b.y)\n\t */\n//\tpublic static double op(Vector2d a, Vector2d b) {\n//\t\treturn a.x * b.y  -  a.y * b.x;\n//\t}\n\n\t// line ab, point c, point d\n\tpublic static boolean isSameSide(\n\t\t\tVector2d a, Vector2d b, Vector2d c, Vector2d d) {\n\t\tVector2d ab = b.minus(a);\n\t\tVector2d ac = c.minus(a);\n\t\tVector2d ad = d.minus(a);\n//\t\tif ( op(ab, ac) > 0 && op(ab, ad) > 0 ) {\n\t\tif ( ab.op(ac) > 0 && ab.op(ad) > 0 ) {\n\t\t\treturn true;\n//\t\t} else if ( op(ab, ac) < 0 && op(ab, ad) < 0 ) {\n\t\t} else if ( ab.op(ac) < 0 && ab.op(ad) < 0 ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport java.util.Random;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tint[][] G;\n\tMap<Integer,List<Integer>> Genb = new HashMap<>();\n\tint V;\n\tint E;\n\tint Venb;\n\tint Eenb;\n\tlong START_TIME;\n\tint GenbSize;//Genb\u30b0\u30e9\u30d5\u306e1\u8fba\n\tRandom rand = new Random();\n\tpublic void calc() {\n\n\t\tsb = new StringBuilder();\n\n\n\t\t//\u5165\u529b\u51e6\u7406\n\t\tIO sc = new IO();\n\t\tchar[] s = sc.next().toCharArray();\n\t\tlong ans = s.length/2 + s.length%2;\n\t\tchar f = s[0];\n\t\tlong min = INF;\n\t\tfor (int i=1; i < s.length;i++) {\n\t\t\tif (s[i] != f) {\n\t\t\t\tmin = Math.min(min, Math.max(i, s.length-i));\n\t\t\t\tf = s[i];\n\t\t\t}else {\n\t\t\t}\n\t\t}\n\n\t\tans = Math.min(min,s.length);\n\n\t\tSystem.out.println(ans);\n\n\n\n\t}\n\t//\u5f97\u70b9\u8a08\u7b97\u30e1\u30bd\u30c3\u30c9\n\tpublic int calcScore(int[] ans) {\n\t\tint ret = 0;\n\t\tfor (int i=0; i < Venb; i++) {\n\t\t\tif (ans[i] != 0) {\n\t\t\t\tfor(int t: Genb.get(i)) {\n\t\t\t\t\t//\u81ea\u5206\u3088\u308a\u5c0f\u3055\u3044\u8fba\u306b\u5bfe\u3057\u3066\u306f2\u91cd\u306b\u306a\u308b\u306e\u3067\u8db3\u3055\u306a\u3044\n\t\t\t\t\t//\u9802\u70b9\u306b\u306a\u306b\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u306a\u3044\u5834\u5408\u3082\u8db3\u3055\u306a\u3044\n\t\t\t\t\tif (t < i || ans[t] == 0) continue;\n\t\t\t\t\t//\u3053\u306e\u8fba\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u308b\u91cd\u307f\u8db3\u3059\n\t\t\t\t\tret += G[ans[i]][ans[t]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}", "label": 0}, {"id": 223, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n    \tint N = sc.nextInt();\n    \tint cnt = 0;\n    \tfor(int i=3; i>=0; i--) {\n    \t\tint answer = (int) (N/(Math.pow(10, i)));\n    \t\tN %= Math.pow(10, i);\n    \t\tif(answer == 2) {\n    \t\t\tcnt++;\n    \t\t}\n    \t}\n\t    System.out.println(cnt);\n    }\n}", "label": 1}, {"id": 203, "code1": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = Integer.parseInt(sc.next());\n\t\tsc.close();\n\t\tMain m = new Main();\n\n\t\twhile (true) {\n\t\t\tif(m.searchPrime(num)) {\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tnum++;\n\t\t\t};\n\t\t}\n\t\tSystem.out.println(num);\n\n\t}\n\n\tpublic boolean searchPrime(int num) {\n\t\t//true == prime\n\t\t//false == not prime\n\t\tboolean isPrimeFlg = true;\n\t\tint numsPiv = (int)Math.sqrt(num);\n\t\tfor (int i = 2; i < numsPiv; i++) {\n\t\t\tif (num % i == 0) {\n\t\t\t\tisPrimeFlg = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn isPrimeFlg;\n\t}\n}", "label": 1}, {"id": 431, "code1": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n    static int searchP(long p,int[] ws){\n        int count = 1;\n        int sum = 0; \n        for(int i = 0; i < ws.length; i++){\n            if(sum + ws[i] <= p) {\n            sum += ws[i];\n            } else {\n                count++;\n                if(ws[i] <= p){\n                sum = ws[i];\n                } else{\n                    count += 99999;\n                }\n            }\n        }\n        return count;\n    }\n    static long solve(long p, int[] ws, long k){\n        long right = p;\n        long left = 0;\n        long mid;\n        while(right - left > 1) {\n            mid = (left + right) / 2;\n            int v = searchP(mid,ws);\n            if(k >= v) {\n                right = mid;\n            } else {\n               left = mid;\n                \n            }\n        }\n    return right;\n    }\n    public static void main(String...args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        \n        String[] info = br.readLine().split(\" \");\n        int n = Integer.parseInt(info[0]);\n        int k = Integer.parseInt(info[1]);\n        int[] ws = new int[n];\n        for(int i = 0; i < n; i++) {\n            ws[i] = Integer.parseInt(br.readLine());\n        }\n        long p = 100000 * 10000;\n        System.out.println(solve(p,ws,k));\n        \n    }\n}\n\n\n\n", "code2": "import java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic Scanner sc;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//InputStream in = new FileInputStream(\"src/input.txt\");\n\t\tInputStream in = System.in;\n\t\t//PrintStream out = new PrintStream(\"src/output.txt\");\n\n\t\t//System.setOut(out);\n\n\t\tsc = new Scanner(in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] a = new int[N];\n\t\tint answer = 0;\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tif(a[a[i]-1] == i+1){\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(answer/2);\n\n\t\t//out.close();\n\t}\n}", "label": 0}, {"id": 713, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class Main{\n    public static void main (String[] args) throws java.lang.Exception {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                long cur = i * m + j * n - 2 * (i * j);\n                if (cur == k) {\n                    w.println(\"Yes\");\n                    w.close();\n                    return;\n                }\n            }\n        }\n        w.println(\"No\");\n        w.close();\n    }\n\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n\n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String nextString() {\n            return next();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}", "label": 0}, {"id": 694, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint n;\n\tlong mo = 1_000_000_000 + 7;\n\tlong[] fac = new long[3000000];\n\tlong[] ifac = new long[3000000];\n\tlong[] inv = new long[3000000];\n\t{\n\t\tfac[0] = 1;\n\t\tfor (int i = 1; i < fac.length; ++i) {\n\t\t\tfac[i] = i * fac[i - 1] % mo;\n\t\t}\n\t\tinv[1] = 1;\n\t\tfor (int i = 2; i < inv.length; ++i) {\n\t\t\tinv[i] = mo - inv[(int) (mo % i)] * (mo / i) % mo;\n\t\t}\n\t\tifac[0] = 1;\n\t\tfor (int i = 1; i < ifac.length; ++i) {\n\t\t\tifac[i] = ifac[i - 1] * inv[i] % mo;\n\t\t}\n\t}\n\n\tlong comb(int n, int k) {\n\t\treturn fac[n] * ifac[n - k] % mo * ifac[k] % mo;\n\t}\n\n\tlong g(int k) {\n\t\tif (2 * k < n)\n\t\t\treturn 0;\n\t\tint a = 2 * k - n;\n\t\tint b = n - k;\n\t\treturn comb(a - 1 + b, b - 1) * fac[k] % mo * fac[n - 1 - k] % mo;\n\t}\n\n\tlong f(int k) {\n\t\treturn (g(k) - g(k - 1) + mo) % mo;\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner();\n\t\tn = (int) sc.nextLong();\n\t\tlong ans = 0;\n\t\tfor (int i = (n + 1) / 2; i <= n - 1; ++i) {\n\t\t\tans = (ans + f(i) * i % mo) % mo;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n\tlong pow(long a, long n) {\n\t\tlong ret = 1;\n\t\tfor (; n > 0; n >>= 1, a = a * a % mo) {\n\t\t\tif (n % 2 == 1) {\n\t\t\t\tret = ret * a % mo;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tlong inv(long a) {\n\t\treturn pow(a, mo - 2);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tclass Scanner {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[ptr++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isPrintableChar(int c) {\n\t\t\treturn 33 <= c && c <= 126;\n\t\t}\n\n\t\tprivate void skipUnprintable() {\n\t\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\t\tptr++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskipUnprintable();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint h = Integer.parseInt(sa[0]);\n\t\tint w = Integer.parseInt(sa[1]);\n\t\tchar[][] s = new char[h][w];\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\ts[i] = br.readLine().toCharArray();\n\t\t}\n\t\tbr.close();\n\n\t\tint[] dx = {0, 0, -1, 1};\n\t\tint[] dy = {-1, 1, 0, 0};\n\t\tboolean[][] visit = new boolean[h][w];\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\tfor (int j = 0; j < w; j++) {\n\t\t\t\tif (visit[i][j]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong kuro = 0;\n\t\t\t\tlong siro = 0;\n\t\t\t\tQueue<Integer> que = new ArrayDeque<Integer>();\n\t\t\t\tque.add(i * 1000 + j);\n\t\t\t\tvisit[i][j] = true;\n\t\t\t\twhile (!que.isEmpty()) {\n\t\t\t\t\tint cur = que.poll();\n\t\t\t\t\tint x = cur / 1000;\n\t\t\t\t\tint y = cur % 1000;\n\t\t\t\t\tif (s[x][y] == '#') {\n\t\t\t\t\t\tkuro++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsiro++;\n\t\t\t\t\t}\n\t\t\t\t\tfor (int a = 0; a < 4; a++) {\n\t\t\t\t\t\tint xx = x + dx[a];\n\t\t\t\t\t\tint yy = y + dy[a];\n\t\t\t\t\t\tif (0 <= xx && xx < h && 0 <= yy && yy < w\n\t\t\t\t\t\t\t\t&& !visit[xx][yy] && s[x][y] != s[xx][yy]) {\n\t\t\t\t\t\t\tque.add(xx * 1000 + yy);\n\t\t\t\t\t\t\tvisit[xx][yy] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans += kuro * siro;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 371, "code1": "import java.util.*;\npublic class Main {\n\tint n;\n\tint[] num;\n\tScanner stdin =new Scanner(System.in);\n\t\n\tvoid Solve(){\n\t\tnum=new int[21000000];\n\t\twhile(true){\n\t\t\tn=stdin.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tSystem.out.println(findPrime(n+1,2*n));\n\t\t}\n\t\t\n\t}\n\tint findPrime(int a,int b){\n\t\tint count=0;\n\t\tfor(int i=a;i<=b;i++){\n\t\t\tif(judgePrime(i)) count++;\n\t\t}\n\t\t\n\t\treturn count;\n\t}\n\t\n\tboolean judgePrime(int p){\n\t\tif(num[p]==1) return true;\n\t\tif(num[p]==-1) return false;\n\t\t\n\t\tif(p<4){\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tif(p%2==0){\n\t\t\t\tnum[p]=-1;\n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=3;i<p;i++){\n\t\t\t\tif(p%i==0){\n\t\t\t\t\tnum[p]=-1;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t\n\tpublic static void main(String args[]){\n\t\tMain m=new Main();\n\t\tm.Solve();\n\t}\n\t\n}", "code2": "/**\n * Created at 16:38 on 2019-08-27\n */\n\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n  static FastScanner sc = new FastScanner();\n  static Output out = new Output(System.out);\n\n  static final int[] dx = {0, 1, 0, -1};\n  static final int[] dy = {-1, 0, 1, 0};\n\n  static final long MOD = (long) (1e9 + 7);\n  static final long INF = Long.MAX_VALUE / 2;\n\n  public static class Solver {\n    public Solver() {\n\n      int Q = sc.nextInt();\n\n      for (int q=0; q<Q; q++) {\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long P = A * B;\n\n        long sqrt = sqrt(P-1);\n\n        long ans = 2*sqrt;\n\n        if (Math.min(A, B) <= sqrt) ans--; //\u9ad8\u6a4b\u541b\u3068\u540c\u3058\u9806\u4f4d\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f\n        if (sqrt * (sqrt+1) > P-1) ans--; //\u30c0\u30d6\u30eb\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f(x == y \u306e\u3068\u304d)\n\n        out.println(ans);\n      }\n\n\n    }\n\n    long sqrt(long n) {\n      long res = (long)Math.floor(Math.sqrt(n));\n      while (res * res > n) res--;\n      while ((res+1) * (res+1) <= n) res++;\n      return res;\n    }\n\n  }\n\n  public static void main(String[] args) {\n    new Solver();\n    out.flush();\n  }\n\n  static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < buflen) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          buflen = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (buflen <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    public boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    public long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int N, boolean oneBased) {\n      if (oneBased) {\n        int[] array = new int[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      } else {\n        int[] array = new int[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      }\n    }\n\n    public long[] nextLongArray(int N, boolean oneBased) {\n      if (oneBased) {\n        long[] array = new long[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      } else {\n        long[] array = new long[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      }\n    }\n  }\n\n  static class Output extends PrintWriter {\n\n    public Output(PrintStream ps) {\n      super(ps);\n    }\n\n    public void print(int[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(long[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(String[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(ArrayList a, String separator) {\n      for (int i = 0; i < a.size(); i++) {\n        if (i == 0) print(a.get(i));\n        else print(separator + a.get(i));\n      }\n      println();\n    }\n  }\n\n}\n", "label": 0}, {"id": 503, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass Solver extends Main{\n\tSolver(){\n\t\t\n\t}\n}//Solver_end\n\n@SuppressWarnings(\"unchecked\")\nclass Main{\n\tstatic int imax=Integer.MAX_VALUE;\n\tstatic long lmax=Long.MAX_VALUE;\n\t\n\tpublic static void main(String[] args) throws FileNotFoundException{\n\t\t\n\t\t\n\t\tScanner sc=new Scanner(System.in);\n\t\t//Scanner sc=new Scanner(fp);\n\t\t\n\t\tint[] data=readlnI(sc,\" \");\n\t\tint n=data[0];\n\t\tint m=data[1];\n\t\tint[] path=new int[200000];\n\t\t\n\t\tfor(int i=0;i<m; i++){\n\t\t\tint[] line=readlnI(sc,\" \");\n\t\t\tif(line[0]==1){\n\t\t\t\tpath[line[1]-1]+=1;\n\t\t\t}else if(line[1]==n){\n\t\t\t\tpath[line[0]-1]+=1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tboolean fnd=false;\n\t\t\n\t\tfor(int x:path){\n\t\t\tif(x==2)fnd=true;\n\t\t}\n\t\t\n\t\tputs(fnd==true ? \"POSSIBLE\" : \"IMPOSSIBLE\");\n\t\t\n\t}//main_end\n\t\n//---------------------------------------------------------------------------\n\tstatic int readI(Scanner sc){\n\t\treturn Integer.parseInt(sc.nextLine().trim());\n\t}\n\tstatic long readL(Scanner sc){\n\t\treturn Long.parseLong(sc.nextLine().trim());\n\t}\n\tstatic String readS(Scanner sc){\n\t\treturn sc.nextLine().trim();\n\t}\n\tstatic int[] readlnI(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToInt(Integer::parseInt).toArray();\n\t}\n\tstatic long[] readlnL(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToLong(Long::parseLong).toArray();\n\t}\n\tstatic String[] readlnS(Scanner sc, String dl){\n\t\treturn sc.nextLine().trim().split(dl);\n\t}\n\t@SuppressWarnings(\"unchecked\")\n\tstatic <T> void puts(T... args){\n\t\tfor(int i=0; i<args.length-1; i++){\n\t\t\tSystem.out.printf(\"%s \",args[i]);\n\t\t}\n\t\tSystem.out.println(args[args.length-1]);\n\t}\n\tstatic void puts(int[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void puts(long[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void bs(){\n\t\tSystem.out.println(\"\");\n\t}\n\tstatic int sum(int[] ary){\n\t\tint sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic long sum(long[] ary){\n\t\tlong sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic void tblSort(int[][] tbl){\n\t\tArrays.sort(tbl, new Comparator<int[]>(){\n\t\t\t@Override\n\t\t\tpublic int compare(int[] a, int[] b){\n\t\t\t\tif(a[0]==b[0]){\n\t\t\t\t\treturn b[1]-a[1];\n\t\t\t\t}else{\n\t\t\t\t\treturn b[0]-a[0];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nclass FastScanner {\n\tprivate final InputStream in = System.in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n\t\treturn (int) nl;\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner scan=new FastScanner();\n\tstatic Scanner scanner=new Scanner(System.in);\n\tstatic long mod=1000000007;\n\tstatic double eps=0.0000000001;\n\tstatic int big=Integer.MAX_VALUE;\n\tstatic long gcd (long a, long b) {return b>0?gcd(b,a%b):a;}\n\tstatic long lcm (long a, long b) {return a*b/gcd(a,b);}\n\tstatic int max(int a,int b) {return a>b?a:b;}\n\tstatic int min(int a,int b) {return a<b?a:b;}\n\tstatic long factorial(int i) {return i==1?1:i*factorial(i-1);}\n\tstatic int lower_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<=key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic int upper_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic boolean isPrime (long n) {\n\t\tif (n==2) return true;\n\t\tif (n<2 || n%2==0) return false;\n\t\tdouble d = Math.sqrt(n);\n\t\tfor (int i=3; i<=d; i+=2)if(n%i==0){return false;}\n\t\treturn true;\n\t}\n\tstatic int upper_division(int a,int b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lupper_division(long a,long b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lmax(long a,long b) {return Math.max(a, b);}\n\tstatic long lmin(long a,long b) {return Math.min(a, b);}\n\tstatic int[] setArray(int a) {\n\t\tint b[]=new int[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextInt();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic long[] lsetArray(int a) {\n\t\tlong b[]=new long[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextLong();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic String reverce(String str) {\n\t\tString strr=\"\";\n\t\tfor(int i=str.length()-1;i>=0;i--) {\n\t\t\tstrr+=str.charAt(i);\n\t\t}\n\t\treturn strr;\n\t}\n\tpublic static void printArray(char[] ch) {\n\t\tfor(int i=0;i<ch.length-1;i++) {\n\t\t\tSystem.out.print(ch[i]+\" \");\n\t\t}\n\t\tSystem.out.println(ch[ch.length-1]);\n\t}\n\tpublic static int[][] doublesort(int[][]a) {\n\t\tArrays.sort(a,(x,y)->Integer.compare(x[0],y[0]));\n\t\treturn a;\n\t}\n\tstatic long modpow(long x,long n,long mo) {\n\t\tlong sum=1;\n\t\twhile(n>0) {\n\t\t\tif((n&1)==1) {\n\t\t\t\tsum=sum*x%mo;\n\t\t\t}\n\t\t\tx=x*x%mo;\n\t\t\tn>>=1;\n\t\t}\n\t\treturn sum;\n\t}\n\tpublic static char[] revch(char ch[]) {\n\t\tchar ret[]=new char[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static int[] revint(int ch[]) {\n\t\tint ret[]=new int[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static void warshall_floyd(int v[][],int n) {\n\t\tfor(int k=0;k<n;k++)\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t\tv[i][j]=min(v[i][j],v[i][k]+v[k][j]);\n\t}\n\tpublic static void main(String[] args) {\n\t\tlong a=scan.nextLong();\n\t\tlong b=scan.nextLong();\n\t\tint cnt=0;\n\t\tlong now=a;\n\t\twhile(now<=b) {\n\t\t\tcnt++;\n\t\t\tnow*=2;\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n}", "label": 0}, {"id": 270, "code1": "import java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint[] team=new int[100];\n\t\tint[] data=new int[100];\n\t\tint ptr=0;\n\t\twhile(true){\n\t\t\tString str=sc.next();\n\t\t\tif(str.equals(\"0,0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tteam[ptr]=Integer.parseInt(str.split(\",\")[0]);\n\t\t\tdata[ptr]=Integer.parseInt(str.split(\",\")[1]);\n\t\t\tptr++;\n\t\t}\n\t\tfor(int i=0;i<ptr;i++){\n\t\t\tfor(int j=ptr-1;j>=i+1;j--){\n\t\t\t\tif(data[j]>data[j-1]){\n\t\t\t\t\tint box=data[j];\n\t\t\t\t\tdata[j]=data[j-1];\n\t\t\t\t\tdata[j-1]=box;\n\t\t\t\t\tbox=team[j];\n\t\t\t\t\tteam[j]=team[j-1];\n\t\t\t\t\tteam[j-1]=box;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint[] ranking=new int[ptr];\n\t\tint checkRank=data[0];\n\t\tint rank=1;\n\t\tfor(int i=0;i<ptr;i++){\n\t\t\tif(data[i]!=checkRank){\n\t\t\t\tcheckRank=data[i];\n\t\t\t\trank++;\n\t\t\t}\n\t\t\tranking[i]=rank;\n\t\t}\n\t\twhile(sc.hasNext()){\n\t\t\tint searchTeam=sc.nextInt();\n\t\t\tfor(int i=0;i<ptr;i++){\n\t\t\t\tif(team[i]==searchTeam){\n\t\t\t\t\tSystem.out.println(ranking[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\ttry(Scanner sc = new Scanner(System.in)){\n\t\t\tint[] A = new int[101];\n\t\t\twhile(true){\n\t\t\t\tString[] SS = sc.next().split(\",\", 0);\n\t\t\t\tint team = Integer.parseInt(SS[0]);\n\t\t\t\tint score = Integer.parseInt(SS[1]);\n\t\t\t\tif(team == 0 && score == 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tA[team] = score;\n\t\t\t}\n\t\t\twhile(sc.hasNext()){\n\t\t\t\tint num = A[sc.nextInt()];\n\t\t\t\tSet<Integer> set = new HashSet<>();\n\t\t\t\tfor(int i = 0; i < 101; i++){\n\t\t\t\t\tif(num < A[i]){\n\t\t\t\t\t\tset.add(A[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(set.size() + 1);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 198, "code1": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "code2": "class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\t\n\t\tfor (i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 374, "code1": "import java.util.*;\npublic class Main {\n\tint n;\n\tint[] num;\n\tScanner stdin =new Scanner(System.in);\n\t\n\tvoid Solve(){\n\t\tnum=new int[21000000];\n\t\twhile(true){\n\t\t\tn=stdin.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tSystem.out.println(findPrime(n+1,2*n));\n\t\t}\n\t\t\n\t}\n\tint findPrime(int a,int b){\n\t\tint count=0;\n\t\tfor(int i=a;i<=b;i++){\n\t\t\tif(judgePrime(i)) count++;\n\t\t}\n\t\t\n\t\treturn count;\n\t}\n\t\n\tboolean judgePrime(int p){\n\t\tif(num[p]==1) return true;\n\t\tif(num[p]==-1) return false;\n\t\t\n\t\tif(p<4){\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tif(p%2==0){\n\t\t\t\tnum[p]=-1;\n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=3;i<p;i++){\n\t\t\t\tif(p%i==0){\n\t\t\t\t\tnum[p]=-1;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t\n\tpublic static void main(String args[]){\n\t\tMain m=new Main();\n\t\tm.Solve();\n\t}\n\t\n}", "code2": "import java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tchar[] s = sc.next().toCharArray();\n\t\tStack<Character> st = new Stack<>();\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\tif (s[i] == 'T') {\n\t\t\t\tif (st.isEmpty()) cnt++;\n\t\t\t\telse st.pop();\n\t\t\t} else {\n\t\t\t\tst.push('S');\n\t\t\t}\n\t\t}\n\t\tcnt += st.size();\n\t\tSystem.out.println(cnt);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 537, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tInteger[] num = new Integer[n];\n\t\tStringBuilder s = new StringBuilder(\"\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tnum[i] = scan.nextInt();\n\t\t}\n\t\tArrays.sort(num);\n\t\t\n\t\ts.append(num[0]);\n\t\tfor(int i=1;i<num.length;i++){\n\t\t\ts.append(\" \"+num[i]);\n\t\t}\n\t\t\n\t\tSystem.out.println(s);\n\t}\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleClocks solver = new CMultipleClocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleClocks {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            int N = in.nextInt();\n            long[] T = in.nextLongArray(N);\n            long ans = T[0];\n            for (int i = 1; i < N; i++) {\n                long gcd = gcd(ans, T[i]);\n                ans = T[i] * (ans / gcd);\n            }\n            out.println(ans);\n        }\n\n        private static long gcd(long m, long n) {\n            if (m < n) return gcd(n, m);\n            if (n == 0) return m;\n            return gcd(n, m % n);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 570, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] days={\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\"};\n\t\twhile(sc.hasNextInt()){\n\t\t\tint month=sc.nextInt();\n\t\t\tint day=sc.nextInt();\n\t\t\tint a=modd(month);\n\t\t\tint b=a+day;\n\t\t\tif(month==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif((b-1)%7==0){\n\t\t\t\tSystem.out.println(days[0]);\n\t\t}else if((b-1)%7==1){\n\t\t\tSystem.out.println(days[1]);\n\t\t}else if((b-1)%7==2){\n\t\t\tSystem.out.println(days[2]);\n\t\t}else if((b-1)%7==3){\n\t\t\tSystem.out.println(days[3]);\n\t\t}else if((b-1)%7==4){\n\t\t\tSystem.out.println(days[4]);\n\t\t}else if((b-1)%7==5){\n\t\t\tSystem.out.println(days[5]);\n\t\t}else if((b-1)%7==6){\n\t\t\tSystem.out.println(days[6]);\n\t\t}\n\t}\n\n\t}\n\tpublic static int modd(int month){\n\t\tint[] months={31,29,31,30,31,30,31,31,30,31,30,31};\n\t\tint a=0;\n\t\tfor(int i=0; i<=month-2; i++){\n\t\t\ta+=months[i];\n\t\t}\n\n\t\treturn a;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.stream.IntStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.util.PriorityQueue;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.AbstractCollection;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            Dijkstra d = new Dijkstra(n);\n            for (int i = 0; i < n - 1; i++) {\n                int from = in.readInt() - 1;\n                int to = in.readInt() - 1;\n                d.addUndirectedEdge(from, to, 1);\n            }\n            long[] dist1 = d.getDist(0);\n            long[] distN = d.getDist(n - 1);\n            long count1 = IntStream.range(0, n)\n                    .filter(i -> dist1[i] <= distN[i])\n                    .count();\n            out.printLine(count1 > n - count1 ? \"Fennec\" : \"Snuke\");\n        }\n\n    }\n\n    static class Dijkstra {\n        int n;\n        ArrayList<Pair>[] G;\n        private long INF = Long.MAX_VALUE / 3;\n\n        public Dijkstra(int n) {\n            this.n = n;\n            G = new ArrayList[n];\n            for (int i = 0; i < n; i++) {\n                G[i] = new ArrayList<>();\n            }\n        }\n\n        public void addUndirectedEdge(int from, int to, long cost) {\n            G[from].add(new Pair(to, cost));\n            G[to].add(new Pair(from, cost));\n        }\n\n        public long[] getDist(int s) {\n            PriorityQueue<Pair> Q = new PriorityQueue<>();\n            Q.add(new Pair(s, 0));\n            long[] dist = new long[n];\n            Arrays.fill(dist, INF);\n            boolean[] used = new boolean[n];\n            while (!Q.isEmpty()) {\n                Pair p = Q.poll();\n                if (used[p.x]) continue;\n                used[p.x] = true;\n                dist[p.x] = p.y;\n\n                for (Pair edge : G[p.x]) {\n                    Q.add(new Pair(edge.x, p.y + edge.y));\n                }\n            }\n            return dist;\n        }\n\n        class Pair implements Comparable<Pair> {\n            int x;\n            long y;\n\n            Pair(int x, long y) {\n                this.x = x;\n                this.y = y;\n            }\n\n            public int compareTo(Pair p) {\n                return Long.compare(y, p.y);\n            }\n\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 675, "code1": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int h = scanner.nextInt();\n        int w = scanner.nextInt();\n        String[] letters = new String[h];\n\n        int[] occurrences = new int[26];\n        int numOfFours = 0;\n        int numOfTwos = 0;\n        int numOfOnes = 0;\n\n        for (int i = 0; i < letters.length; i++) {\n            letters[i] = scanner.next();\n            for (int j = 0; j < letters[i].length(); j++) {\n                occurrences[letters[i].charAt(j) - 'a']++;\n            }\n        }\n        boolean isPossible = true;\n\n        if (h % 2 == 0 && w % 2 == 0){\n            for (int occurrence : occurrences) {\n                if (occurrence % 4 != 0) {\n                    isPossible = false;\n                    break;\n                } else numOfFours += (occurrence / 4);\n            }\n\n            if (numOfFours != (h/2)*(w/2)) isPossible = false;\n        }\n        else if (h % 2 == 0 && w % 2 == 1){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (h/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2)) isPossible = false;\n        }\n        else if (h % 2 == 1 && w % 2 == 0){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (w/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (w/2)) isPossible = false;\n        }\n        else {\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfTwos < ((h/2) + (w/2)) && occurrences[i] >= 2){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] == 1) {\n                    numOfOnes++;\n                    occurrences[i] -= 1;\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2) + (w/2) || numOfOnes != 1) isPossible = false;\n        }\n\n        System.out.println(isPossible?\"Yes\":\"No\");\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 52, "code1": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "label": 1}, {"id": 173, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "label": 1}, {"id": 712, "code1": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int count = 0;\n    for(int i = 0; i < N.length(); i++){\n      if(N.charAt(i) == '2') count++;\n    }\n    System.out.println(count);\n  }\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int k = in.nextInt();\n            String ans = \"No\";\n            for (int i = 0; i <= n; i++) {\n                for (int j = 0; j <= m; j++) {\n                    int v = (n - i) * j + i * (m - j);\n                    if (v == k) {\n                        ans = \"Yes\";\n                    }\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 720, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[]args) {\n\t\ttry(Scanner scan = new Scanner(System.in)){\n\n\t\t\tint N = scan.nextInt();\n\t\t\tint M = scan.nextInt();\n\t\t\tint K = scan.nextInt();\n\n\n\n\t\t\tint goukei = 0;\n\t\t\tint ok = 0;\n\t\t\tfor(int i = 0;i<=N;i++) {\n\t\t\t\tfor(int j = 0;j<=M;j++) {\n\t\t\t\t\tgoukei =  i*M+j*N-2*i*j;\n\t\t\t\t\tif(goukei==K) {\n\t\t\t\t\t\tok=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok==1)System.out.println(\"Yes\");\n\t\t\telse System.out.println(\"No\");\n\n\t\t}\n\n\n\t}\n\n\n}\n", "code2": "\npublic class Main {\n\n\n  private static void solve() {\n    int N = ni();\n    int C = ni();\n    int[][] D = ntable(C, C);\n    int[][] c = ntable(N, N);\n\n    int[][] dp = new int[C][3];\n    for (int i = 0; i < C; i++) {\n      for (int x = 0; x < N; x++) {\n        for (int y = 0; y < N; y++) {\n          dp[i][(x + y) % 3] += D[c[x][y] - 1][i];\n        }\n      }\n    }\n\n    int min = Integer.MAX_VALUE;\n    for (int i = 0; i < C; i++) {\n      for (int j = 0; j < C; j++) {\n        if (i == j)\n          continue;\n        for (int k = 0; k < C; k++) {\n          if (i == k || j == k)\n            continue;\n\n          int now = dp[i][0] + dp[j][1] + dp[k][2];\n          min = Math.min(now, min);\n        }\n      }\n    }\n    System.out.println(min);\n  }\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n", "label": 0}, {"id": 723, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[]args) {\n\t\ttry(Scanner scan = new Scanner(System.in)){\n\n\t\t\tint N = scan.nextInt();\n\t\t\tint M = scan.nextInt();\n\t\t\tint K = scan.nextInt();\n\n\n\n\t\t\tint goukei = 0;\n\t\t\tint ok = 0;\n\t\t\tfor(int i = 0;i<=N;i++) {\n\t\t\t\tfor(int j = 0;j<=M;j++) {\n\t\t\t\t\tgoukei =  i*M+j*N-2*i*j;\n\t\t\t\t\tif(goukei==K) {\n\t\t\t\t\t\tok=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok==1)System.out.println(\"Yes\");\n\t\t\telse System.out.println(\"No\");\n\n\t\t}\n\n\n\t}\n\n\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong[] a = new long[n];\n\t\tlong[] b = new long[n];\n\t\tlong[] c = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = Long.parseLong(sc.next());\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tb[i] = Long.parseLong(sc.next());\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tc[i] = Long.parseLong(sc.next());\n\t\tArrays.sort(a);\n\t\tArrays.sort(b);\n\t\tArrays.sort(c);\n\t\tlong[] u = new long[n];\n\t\tint index = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (index < n && a[index] < b[i])\n\t\t\t\tindex++;\n\t\t\tif (i == 0)\n\t\t\t\tu[i] = index;\n\t\t\telse\n\t\t\t\tu[i] = u[i - 1] + index;\n\t\t}\n\t\tint[] l = new int[n];\n\t\tindex = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (index < n && b[index] < c[i])\n\t\t\t\tindex++;\n\t\t\tl[i] = index;\n\t\t}\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (l[i] != 0)\n\t\t\t\tans += u[l[i] - 1];\n\t\tSystem.out.println(ans);\n\n\t}\n}", "label": 0}, {"id": 48, "code1": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0)break;\n\t\t\tint[] a = new int[n];\n\t\t\tint x,y,z,v;\n\t\t\tint babaa = 0;\n\t\t\tv = 0;\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\ta[i] = sc.nextInt();\n\t\t\t\tx = sc.nextInt();\n\t\t\t\ty = sc.nextInt();\n\t\t\t\tz = x + y;\n\t\t\t\tif(v < z){\n\t\t\t\t\tbabaa = a[i];\n\t\t\t\t\tv = z;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(babaa + \" \" + v);\n\t\t}sc.close();\n\t}\n}", "label": 1}, {"id": 690, "code1": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "    import java.io.*;\n    import java.util.*;\n\n    public class Main {\n        public static void main(String[] args) throws IOException {\n            FastReader scan = new FastReader();\n            //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"taming.out\")));\n            PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n            Task solver = new Task();\n            //int t = scan.nextInt();\n            int t = 1;\n            for(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n            out.close();\n        }\n        static class Task {\n            boolean[][] matrix;\n            boolean[][] vis;\n            public void solve(int testNumber, FastReader sc, PrintWriter pw){\n                int n = sc.nextInt();\n                int m = sc.nextInt();\n                matrix = new boolean[n][m];\n                vis = new boolean[n][m];\n                long sum = 0;\n                for(int i=0;i<n;i++){\n                    String str = sc.nextLine();\n                    for(int j=0;j<m;j++){\n                        matrix[i][j]=(str.charAt(j)=='#');\n                    }\n                }\n                for(int i=0;i<n;i++){\n                    for(int j=0;j<m;j++){\n                        if(!vis[i][j]){\n                            int[] x = dfs(i,j,matrix[i][j]);\n                            sum+=((long)(x[0]))*x[1];\n                        }\n                    }\n                }\n                pw.println(sum);\n            }\n            public int[] dfs (int x, int y, boolean c){\n                int[] dx = {-1,1,0,0};\n                int[] dy = {0,0,-1,1};\n                if(x<0||y<0||x>=matrix.length||y>=matrix[0].length||vis[x][y]||matrix[x][y]!=c){\n                    return new int[]{0,0};\n                }\n                int a = 0;\n                int b = 0;\n                vis[x][y]=true;\n                if(c){\n                    a++;\n                }\n                else{\n                    b++;\n                }\n                for(int i=0;i<4;i++){\n                    int[] tt = dfs(x+dx[i],y+dy[i],!c);\n                    a+=tt[0];\n                    b+=tt[1];\n                }\n                return new int[]{a,b};\n            }\n        }\n        static class tup implements Comparable<tup> {\n            int a, b;\n            tup() {\n            }\n            ;\n\n\n\n            tup(int a, int b) {\n                this.a=a;\n                this.b=b;\n            }\n\n            @Override\n            public int compareTo(tup o2) {\n                return 0;\n            }\n        }\n        static void shuffle(long[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                long temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a,int l, int rb) {\n            Random get = new Random();\n            for (int i = l; i < rb; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static class FastReader {\n            BufferedReader br;\n            StringTokenizer st;\n\n            public FastReader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            public FastReader(String s) throws FileNotFoundException {\n                br = new BufferedReader(new FileReader(new File(s)));\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n        }\n\n    }", "label": 0}, {"id": 421, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[] fact = new int[9];\n\n\n\tpublic static void main(String[] args) {\n\t\tfact[1] = 1;\n\t\tfor(int i = 2; i <= 8; i++)\n\t\t\tfact[i] = fact[i-1] * i;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] p = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tp[i] = sc.nextInt();\n\n\t\tint[] q = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tq[i] = sc.nextInt();\n\n\t\tint ans = Math.abs(getPosi(p) - getPosi(q));\n\t\tSystem.out.println(ans);\n        return;\n    }\n\n\tstatic private int getPosi(int[] x) {\n\n\t\t\tint l = x.length;\n\t\t\tint p = 1;\n\n\t\t\tfor(int i = 0; i < l; i++) {\n\t\t\t\tp += fact[l-i-1] * (x[i]-1);\n\t\t\t\tfor(int j = i+1; j < l; j++) {\n\t\t\t\t\tif(x[j] > x[i])\n\t\t\t\t\t\tx[j]--;\n\t\t\t\t}\n\t\t\t}\n\t\treturn p;\n\n\t}\n\n}\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n    static class FS {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            return hasNextByte() ? buffer[ptr++] : -1;\n        }\n\n        private boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        private void skipUnprintable() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n        }\n\n        public boolean hasNext() {\n            skipUnprintable();\n            return hasNextByte();\n        }\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while (isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n    }\n\n    static int[] np;\n    static int n;\n\n    public static void main(String[] args) throws Exception {\n        FS fs = new FS();\n//        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n//        String s = bf.readLine();\n//        int n = Integer.parseInt(s.substring(0, s.indexOf(' ')));//n packages\n//        int k = Integer.parseInt(s.substring(s.indexOf(' '), s.length()));//k trucks\n        n = fs.nextInt();\n        int k = fs.nextInt();\n\n\n        np = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n\n            np[i] = fs.nextInt();\n            max = max < np[i] ? np[i] : max;\n        }\n        int p = 0;\n        int resids = 0;\n\n        int maxInt = 10000 *100000;\n        int minInt = max-1;\n        int mid = (maxInt + minInt) / 2;\n        while (maxInt - minInt > 1) {\n            int v = checkN(mid);\n            if (v > k) minInt = mid;\n            else maxInt = mid;\n\n            mid = (maxInt + minInt) / 2;\n        }\n        System.out.println(maxInt);\n    }\n\n    private static int checkN(int p) {\n        int resids = p;\n        int ink = 1;//\u5f53\u524d\u5df2\u7528\u5361\u8f66\n        for (int i = 0; i < n; i++) {\n            int j = np[i];\n            if (resids >= j) {\n                resids -= j;\n            } else {\n                ink++;\n                resids = p;\n                i--;\n            }\n        }\n        return ink;\n    }\n}\n", "label": 0}, {"id": 662, "code1": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt(), m = in.nextInt();\n\t\tout.println((1L << m) * (1900 * m + 100 * (n - m))); \n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.List;\n\npublic class Main {\n\n\tprivate static final String NO = \"No\";\n\tprivate static final String YES = \"Yes\";\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\tprivate List<Integer>[] g;\n\n\tprivate static final long MOD = 998244353;\n\tprivate static final int INF = Integer.MAX_VALUE;\n\n\tvoid solve() {\n\t\tint T = 1;\n\t\tfor (int i = 0; i < T; i++)\n\t\t\tsolve(i);\n\t}\n\n\tvoid solve(int T) {\n\t\tint n = ni();\n\t\twhile (!isPrime(n))\n\t\t\tn++;\n\t\tout.println(n);\n\t}\n\n\tprivate boolean isPrime(int n) {\n\t\tfor (int i = 2; i <= Math.sqrt(n); i++)\n\t\t\tif (n % i == 0)\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t// a^b\n\tlong power(long a, long b) {\n\t\tlong x = 1, y = a;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 != 0) {\n\t\t\t\tx = (x * y) % MOD;\n\t\t\t}\n\t\t\ty = (y * y) % MOD;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn x % MOD;\n\t}\n\n\tprivate long gcd(long a, long b) {\n\t\twhile (a != 0) {\n\t\t\tlong tmp = b % a;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\t\treturn b;\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\tprivate boolean vis[];\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate List<Integer> na2(int n) {\n\t\tList<Integer> a = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta.add(ni());\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl();\n\t\treturn a;\n\t}\n\n\tprivate long[][] nl(int n, int m) {\n\t\tlong[][] a = new long[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl(m);\n\t\treturn a;\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}", "label": 0}, {"id": 99, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 6, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        final String N = sc.next();\n        \n        int total = N.codePoints().map(c -> c - '0').sum();\n        System.out.println(total % 9 == 0 ? \"Yes\" : \"No\");\n    }\n}\n", "label": 1}, {"id": 244, "code1": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "label": 1}, {"id": 362, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tvoid solve() {\n\t\tint n = scn.nextInt(), mod = (int) 1e9 + 7;\n\t\tchar[] cmp = scn.next().toCharArray();\n\t\t\n\t\tint[][] dp = new int[n + 1][n + 1];\n\t\tdp[1][1] = 1;\n\t\t\n\t\tfor(int len = 2; len <= n; len++) {\n\t\t\tint[] pref = new int[n + 1];\n\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\tpref[i] = (pref[i - 1] + dp[len - 1][i]) % mod;\n\t\t\t}\n\t\t\tfor(int curr = 1; curr <= len; curr++) {\n\t\t\t\tint L, R;\n\t\t\t\tif(cmp[len - 2] == '<') {\n\t\t\t\t\tL = 1;\n\t\t\t\t\tR = curr - 1;\n\t\t\t\t} else {\n\t\t\t\t\tL = curr;\n\t\t\t\t\tR = n;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(L <= R) {\n\t\t\t\t\tdp[len][curr] += (pref[R] - pref[L - 1]);\n\t\t\t\t\tif(dp[len][curr] >= mod) {\n\t\t\t\t\t\tdp[len][curr] -= mod;\n\t\t\t\t\t} else if(dp[len][curr] < 0) {\n\t\t\t\t\t\tdp[len][curr] += mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int curr = 1; curr <= n; curr++) {\n\t\t\tans += dp[n][curr];\n\t\t\tif(ans >= mod) {\n\t\t\t\tans -= mod;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = true;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new Main(), \"Main\", 1 << 26).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tpublic FastReader() {\n\t\t\tis = System.in;\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] IndIntArray(int n) {\n\t\t\tint[][] a = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = new int[] { nextInt(), i };\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tint c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] shuffle(long[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tlong c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tlong[] uniq(long[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tlong[] rv = new long[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] reverse(long[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] compress(int[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tint[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] compress(long[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tlong[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tint n;\n\tint[] num;\n\tScanner stdin =new Scanner(System.in);\n\t\n\tvoid Solve(){\n\t\tnum=new int[21000000];\n\t\twhile(true){\n\t\t\tn=stdin.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tSystem.out.println(findPrime(n+1,2*n));\n\t\t}\n\t\t\n\t}\n\tint findPrime(int a,int b){\n\t\tint count=0;\n\t\tfor(int i=a;i<=b;i++){\n\t\t\tif(judgePrime(i)) count++;\n\t\t}\n\t\t\n\t\treturn count;\n\t}\n\t\n\tboolean judgePrime(int p){\n\t\tif(num[p]==1) return true;\n\t\tif(num[p]==-1) return false;\n\t\t\n\t\tif(p<4){\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tif(p%2==0){\n\t\t\t\tnum[p]=-1;\n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=3;i<p;i++){\n\t\t\t\tif(p%i==0){\n\t\t\t\t\tnum[p]=-1;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t\n\tpublic static void main(String args[]){\n\t\tMain m=new Main();\n\t\tm.Solve();\n\t}\n\t\n}", "label": 0}, {"id": 761, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br =\n\t\t\t\tnew BufferedReader(new InputStreamReader(System.in));\n\t\tfor (String str; (str=br.readLine()) != null; ) {\n\t\t\tString[] data = str.split(\",\");\n\n\t\t\tdouble xa = Double.parseDouble(data[0]);\n\t\t\tdouble ya = Double.parseDouble(data[1]);\n\n\t\t\tdouble xb = Double.parseDouble(data[2]);\n\t\t\tdouble yb = Double.parseDouble(data[3]);\n\n\t\t\tdouble xc = Double.parseDouble(data[4]);\n\t\t\tdouble yc = Double.parseDouble(data[5]);\n\n\t\t\tdouble xd = Double.parseDouble(data[6]);\n\t\t\tdouble yd = Double.parseDouble(data[7]);\n\t\t\t/*\n\t\t\t * vector ab : (xb-xa, yb-ya)\n\t\t\t * vector ac\n\t\t\t * vector ad\n\t\t\t * vector bc : (xc-xb, yc-yb)\n\t\t\t * vector ba\n\t\t\t * vector bd\n\t\t\t * vector cd : (xd-xc, yd-yc)\n\t\t\t * vector ca\n\t\t\t * vector cb\n\t\t\t */\n\t\t\tVector2d a = new Vector2d(xa, ya);\n\t\t\tVector2d b = new Vector2d(xb, yb);\n\t\t\tVector2d c = new Vector2d(xc, yc);\n\t\t\tVector2d d = new Vector2d(xd, yd);\n\t\t\tif ( isSameSide(a, b, c, d)\n\t\t\t\t\t&& isSameSide(b, c, d, a)\n\t\t\t\t\t&& isSameSide(c, d, a, b) ) {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static class Vector2d {\n\t\tprivate double x;\n\t\tprivate double y;\n\n\t\tpublic Vector2d(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t// vecotr this - v\n\t\tpublic Vector2d minus(Vector2d v) {\n\t\t\treturn new Vector2d(this.x - v.x, this.y - v.y);\n\t\t}\n\t\t// outerProduct this x b\n\t\tpublic double op(Vector2d b) {\n\t\t\treturn this.x * b.y  -  this.y * b.x;\n\t\t}\n\t}\n\t/*\n\t * outerProduct\n\t * a = (a.x, a.y)\n\t * b = (b.x, b.y)\n\t */\n//\tpublic static double op(Vector2d a, Vector2d b) {\n//\t\treturn a.x * b.y  -  a.y * b.x;\n//\t}\n\n\t// line ab, point c, point d\n\tpublic static boolean isSameSide(\n\t\t\tVector2d a, Vector2d b, Vector2d c, Vector2d d) {\n\t\tVector2d ab = b.minus(a);\n\t\tVector2d ac = c.minus(a);\n\t\tVector2d ad = d.minus(a);\n//\t\tif ( op(ab, ac) > 0 && op(ab, ad) > 0 ) {\n\t\tif ( ab.op(ac) > 0 && ab.op(ad) > 0 ) {\n\t\t\treturn true;\n//\t\t} else if ( op(ab, ac) < 0 && op(ab, ad) < 0 ) {\n\t\t} else if ( ab.op(ac) < 0 && ab.op(ad) < 0 ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n}", "label": 0}, {"id": 519, "code1": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)924844033;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint ai = io.nextInt();\n\t\t\tint ao = io.nextInt();\n\t\t\tint at = io.nextInt();\n\t\t\tint aj = io.nextInt();\n\t\t\tint al = io.nextInt();\n\t\t\tint as = io.nextInt();\n\t\t\tint az = io.nextInt();\n\t\t\t\n\t\t\tlong ans = 0;\n\t\t\t\n\t\t\tint cnt = aj % 2 + al % 2 + ai % 2;\n\t\t\tif (cnt >= 2) {\n\t\t\t\tif (aj > 0 && al > 0 && ai > 0) {\n\t\t\t\t\tai--;\n\t\t\t\t\taj--;\n\t\t\t\t\tal--;\n\t\t\t\t\tans += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans += ao;\n\t\t\tans += ai / 2 * 2;\n\t\t\tans += aj / 2 * 2;\n\t\t\tans += al / 2 * 2;\n\t\t\t\n\t\t\tio.out.println(ans);\n\t\t}\n\t}\n\t\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\n/*\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            pass System Test!\n*/\n\npublic class Main {\n  private static class Task {\n    void solve(FastScanner in, PrintWriter out) {\n      int H = in.nextInt();\n      int W = in.nextInt();\n      char[][] map = new char[H][];\n      for (int i = 0; i < H; i++) {\n        map[i] = in.next().toCharArray();\n      }\n\n      boolean[][] red = new boolean[H][W];\n      boolean[][] blue = new boolean[H][W];\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (j == 0) red[i][j] = true;\n          else if (j == W - 1) blue[i][j] = true;\n          else if (i % 2 == 0) red[i][j] = true;\n          else blue[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (map[i][j] == '.') continue;\n          blue[i][j] = true;\n          red[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(red[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(blue[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n    }\n  }\n\n  /**\n   * \u3053\u3053\u304b\u3089\u4e0b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n   */\n  public static void main(String[] args) {\n    OutputStream outputStream = System.out;\n    FastScanner in = new FastScanner();\n    PrintWriter out = new PrintWriter(outputStream);\n    Task solver = new Task();\n    solver.solve(in, out);\n    out.close();\n  }\n  private static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int bufferLength = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < bufferLength) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          bufferLength = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (bufferLength <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    double[] nextDoubleArray(int n) {\n      double[] array = new double[n];\n      for (int i = 0; i < n; i++) {\n        array[i] = nextDouble();\n      }\n      return array;\n    }\n\n    double[][] nextDoubleMap(int n, int m) {\n      double[][] map = new double[n][];\n      for (int i = 0; i < n; i++) {\n        map[i] = nextDoubleArray(m);\n      }\n      return map;\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int n) {\n      int[] array = new int[n];\n      for (int i = 0; i < n; i++) array[i] = nextInt();\n      return array;\n    }\n\n    public long[] nextLongArray(int n) {\n      long[] array = new long[n];\n      for (int i = 0; i < n; i++) array[i] = nextLong();\n      return array;\n    }\n\n    public String[] nextStringArray(int n) {\n      String[] array = new String[n];\n      for (int i = 0; i < n; i++) array[i] = next();\n      return array;\n    }\n\n    public char[][] nextCharMap(int n) {\n      char[][] array = new char[n][];\n      for (int i = 0; i < n; i++) array[i] = next().toCharArray();\n      return array;\n    }\n  }\n}\n", "label": 0}, {"id": 587, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\n\t\tint n = sc.nextInt();\n\n\t\tint a[] = new int[n];\n\t\tint b[] = new int[n];\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tb[i] = sc.nextInt();\n\t\t}\n\n\t\tlong ba = 0;\n\t\tlong ab = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (b[i] > a[i]) {\n\t\t\t\tba += (b[i] - a[i]) / 2;\n\t\t\t} else {\n\t\t\t\tab += (a[i] - b[i]);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tSystem.out.println(ab <= ba ? \"Yes\" : \"No\");\n\t}\n}\n", "code2": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "label": 0}, {"id": 664, "code1": "// package arc.arc085;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n        long time = m * 1900 + (n - m) * 100;\n\n        out.println(time * (1<<m));\n        out.flush();\n    }\n\n    public static void debug(Object... o) {\n        System.err.println(Arrays.deepToString(o));\n    }\n\n    public static class InputReader {\n        private static final int BUFFER_LENGTH = 1 << 12;\n        private InputStream stream;\n        private byte[] buf = new byte[BUFFER_LENGTH];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int next() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public char nextChar() {\n            return (char) skipWhileSpace();\n        }\n\n        public String nextToken() {\n            int c = skipWhileSpace();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.append((char) c);\n                c = next();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            int c = skipWhileSpace();\n            long sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = next();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = next();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            return Double.valueOf(nextToken());\n        }\n\n        int skipWhileSpace() {\n            int c = next();\n            while (isSpaceChar(c)) {\n                c = next();\n            }\n            return c;\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n}", "code2": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "label": 0}, {"id": 756, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        double num = 0.006;\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        sc.nextLine();\n        int T = sc.nextInt();\n        int A = sc.nextInt();\n        sc.nextLine();\n        int num2 = Integer.MAX_VALUE;\n        int tmp;\n        int ans = 0;\n        for(int i = 0; i < N; i++){\n            tmp = sc.nextInt();\n            tmp = T*1000 - tmp*6;\n            tmp = Math.abs(A*1000 - tmp);\n            if(tmp < num2){\n                num2 = tmp;\n                ans = i+1;\n            }\n        }\n        System.out.println(ans);\n    }\n}", "label": 0}, {"id": 292, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "label": 0}, {"id": 659, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.List;\n\npublic class Main {\n\n\tprivate static final String NO = \"No\";\n\tprivate static final String YES = \"Yes\";\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\tprivate List<Integer>[] g;\n\n\tprivate static final long MOD = 998244353;\n\tprivate static final int INF = Integer.MAX_VALUE;\n\n\tvoid solve() {\n\t\tint T = 1;\n\t\tfor (int i = 0; i < T; i++)\n\t\t\tsolve(i);\n\t}\n\n\tvoid solve(int T) {\n\t\tint n = ni();\n\t\twhile (!isPrime(n))\n\t\t\tn++;\n\t\tout.println(n);\n\t}\n\n\tprivate boolean isPrime(int n) {\n\t\tfor (int i = 2; i <= Math.sqrt(n); i++)\n\t\t\tif (n % i == 0)\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t// a^b\n\tlong power(long a, long b) {\n\t\tlong x = 1, y = a;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 != 0) {\n\t\t\t\tx = (x * y) % MOD;\n\t\t\t}\n\t\t\ty = (y * y) % MOD;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn x % MOD;\n\t}\n\n\tprivate long gcd(long a, long b) {\n\t\twhile (a != 0) {\n\t\t\tlong tmp = b % a;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\t\treturn b;\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\tprivate boolean vis[];\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate List<Integer> na2(int n) {\n\t\tList<Integer> a = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta.add(ni());\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl();\n\t\treturn a;\n\t}\n\n\tprivate long[][] nl(int n, int m) {\n\t\tlong[][] a = new long[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl(m);\n\t\treturn a;\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}", "label": 0}, {"id": 291, "code1": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong a = in.nextLong(), b = in.nextLong();\n\t\t\tlong[] x = in.nextLongArray(n);\n\n\t\t\tlong ans = 0;\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tans += Math.min(a * (x[i+1] - x[i]), b);\n\t\t\t}\n\t\t\tout.println(ans);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tpublic char[][] next2DChars(int h, int w) {\n\t\t\tchar[][] s = new char[h][w];\n\t\t\tfor (int i = 0; i < h; i++) {\n\t\t\t\ts[i] = nextChars();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 375, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String args[]) {\n\tScanner sc = new Scanner(System.in);\n\n\twhile (true) {\n\t    int n = sc.nextInt();\n\t    int ans = 0;\n\t    if (n == 0) {\n\t\tbreak;\n\t    }\n\t    \n\t    ans = solve(n);\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static int solve(int n) {\n\t//int max = 123456 * 2;\n\t//int prime[] = new prime[123456 * 2 + 1];\n\tboolean is_prime[] = new boolean[123456 * 2 + 1];\n\tint count = 0;\n\n\t//int p = 0;\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t    is_prime[i] = true;\n\t}\n\n\tis_prime[0] = is_prime[1] = false;\n\tfor (int i = 2; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\t// prime[p++] = i;\n\t\tfor (int j = 2 * i; j <= 2 * n; j += i) {\n\t\t    is_prime[j] = false;\n\t\t}\n\t    }\n\t}\n\tfor (int i = n + 1; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\tcount++;\n\t    }\n\t}\n\t\n\treturn count;\n    }\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n        long nl = nextLong();\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n        return (int) nl;\n    }\n    public double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner stdIn=new FastScanner();\n\tpublic static void main(String[] args) {\n\t\tString X=stdIn.next();\n\t\tint N=X.length();\n\t\tint s=0,t=0,ans=N;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tchar a=X.charAt(i);\n\t\t\tif(a=='S')\n\t\t\t\ts++;\n\t\t\telse{\n\t\t\t\tif(s!=0){\n\t\t\t\t\tans-=2;\n\t\t\t\t\ts--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 122, "code1": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n       int ar[]=new int[] {0,0,0,0};\n       for(int i=0;i<3;i++)\n       {\n           int a=sc.nextInt();\n           int b=sc.nextInt();\n           ar[a-1]+=1;\n           ar[b-1]+=1;\n       }\n       \n       for(int i = 0; i < 4; i++) {\n\t\t\tif(ar[i] < 1 || ar[i] > 2) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"YES\");\n       \n//       for(int i:ar)\n//       {\n//           if(i>2)\n//           {\n//               System.out.println(\"NO\");\n//               System.exit(0);\n//           }\n//       }\n//       System.out.println(\"YES\");\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a[] = new int[3];\n\t\tint b[] = new int[3];\n\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t\tb[i] = sc.nextInt();\n\t\t}\n\t\tint n[] = new int[4];\n\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tfor (int j = 1; j <= 4; j++) {\n\t\t\t\tif (a[i]== j) {\n\t\t\t\t\tn[j-1]++;\n\t\t\t\t}\n\t\t\t\tif (b[i]==j) {\n\t\t\t\t\tn[j-1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tArrays.sort(n);\n\t\tif (n[3] >= 3) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t} else {\n\t\t\tSystem.out.println(\"YES\");\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 187, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "code2": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String a = sc.next();\n        String b = sc.next();\n        if(a.equals(b)){\n            System.out.println('H');\n        }else{\n            System.out.println('D');\n        }\n    }\n}", "label": 1}, {"id": 128, "code1": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int a = scan.nextInt();\n        int b = scan.nextInt();\n        int c = scan.nextInt();\n\n        System.out.println(Math.max(0,c-Math.max(0,a-b)));\n    }\n}\n", "label": 1}, {"id": 695, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint mod = 1000000007;\n\t\tlong[][] res =  guessLeaned(1000000007, \n\t\t\t\t1, 4, 16, 84, 516, 3696, 30096, 275040, 2786400, 31000320, 375736320, 928152292\n\t\t\t\t);\n\t\t\n\t\tlong[] u = {1, 4, 16};\n\t\tfor(int i = 3;i <= n;i++){\n\t\t\tlong v = f(res, u, i, mod);\n\t\t\tfor(int j = 0;j < 2;j++){\n\t\t\t\tu[j] = u[j+1];\n\t\t\t}\n\t\t\tu[2] = v;\n\t\t}\n\t\tout.println(u[0]);\n\t}\n\t\n\tpublic static long f(long[][] ged, long[] prevs, long x, int mod)\n\t{\n\t\tint n = ged.length;\n\t\tassert prevs.length == n-1;\n\t\tx -= n-1;\n\t\t\n\t\tlong s = 0;\n\t\tlong tar = 0;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tlong co = 0;\n\t\t\tfor(int j = ged[i].length-1;j >= 0;j--){\n\t\t\t\tco = (co * x + ged[i][j]) % mod;\n\t\t\t}\n\t\t\tif(i < n-1){\n\t\t\t\ts += co * prevs[i];\n\t\t\t\ts %= mod;\n\t\t\t}else{\n\t\t\t\ttar = co;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong ret = -invl(tar, mod) * s % mod;\n\t\tif(ret < 0)ret += mod;\n\t\treturn ret;\n\t}\n\t\n\tpublic static long[][] guessLeaned(int mod, long... a)\n\t{\n\t\tint n = a.length;\n\t\t\n\t\t// #formula >= #variable\n\t\t// n-r+2 >= r(r+1)/2\n\t\tfor(int r = n;r >= 1;r--){\n\t\t\tif(n-r+2 < r*(r+1)/2)continue;\n\t\t\tint[][] M = new int[n-r+2][r*(r+1)/2];\n\t\t\tfor(int i = 0;i < n-r+1;i++){\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int j = 0;j < r;j++){\n\t\t\t\t\tlong prod = 1;\n\t\t\t\t\tfor(int k = 0;k <= r-j-1;k++){\n\t\t\t\t\t\tM[i][p++] = (int)(prod*a[i+j]%mod);\n\t\t\t\t\t\tprod = prod * i % mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tM[n-r+1][0] = 1;\n\t\t\t\n\t\t\tint[] v = new int[n-r+2];\n\t\t\tv[n-r+1] = 1;\n\t\t\t\n\t\t\tResult res = gaussElimination(M, v, mod);\n\t\t\tif(res.exists){\n\t\t\t\tlong[][] ret = new long[r][];\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int i = 0;i < r;i++){\n\t\t\t\t\tret[i] = new long[r-i];\n\t\t\t\t\tfor(int j = 0;j < r-i;j++){\n\t\t\t\t\t\tret[i][j] = res.sol[p++];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic static Result gaussElimination(int[][] M, int[] v, int mod)\n\t{\n\t\tint n = M.length, m = M[0].length;\n\t\tint[] head = new int[n];\n\t\t\n\t\t// if not needed, comment out.\n\t\tfor(int[] row : M){\n\t\t\tfor(int i = 0;i < row.length;i++){\n\t\t\t\trow[i] %= mod;\n\t\t\t\tif(row[i] < 0)row[i] += mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forward Elimination\n\t\tint row = 0;\n\t\tfor(int col = 0;col < m;col++){\n\t\t\t// select pivot\n\t\t\tboolean pivotFound = false;\n\t\t\tout:\n\t\t\tfor(int prow = row;prow < n;prow++){\n\t\t\t\tif(M[prow][col] != 0){\n\t\t\t\t\t// pivot found\n\t\t\t\t\tif(prow != row){\n\t\t\t\t\t\t// swap rows\n\t\t\t\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\t\t\t\tint u = M[prow][k]; M[prow][k] = M[row][k]; M[row][k] = u;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint dum = v[prow]; v[prow] = v[row]; v[row] = dum;\n\t\t\t\t\t}\n\t\t\t\t\tpivotFound = true;\n\t\t\t\t\tbreak out;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!pivotFound)continue;\n\t\t\thead[row] = col;\n\t\t\t\n\t\t\t// diag to 1\n\t\t\tlong imul = invl(M[row][col], mod);\n\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\tM[row][k] = (int)(M[row][k] * imul % mod);\n\t\t\t}\n\t\t\tv[row] = (int)(v[row] * imul % mod);\n\t\t\t\n\t\t\tfor(int j = row+1;j < n;j++){\n\t\t\t\tif(M[j][col] != 0){\n\t\t\t\t\tlong mul = mod-M[j][col];\n\t\t\t\t\tfor(int k = col;k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[row][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[row] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t\trow++;\n\t\t}\n\t\t\n\t\tResult ret = new Result();\n\t\tret.mat = M;\n\t\tfor(int i = row;i < n;i++){\n\t\t\tif(v[i] != 0){\n\t\t\t\tret.rank = row;\n\t\t\t\tret.exists = false;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = row-1;i >= 0;i--){\n\t\t\tfor(int j = i-1;j >= 0;j--){\n\t\t\t\tif(M[j][head[i]] != 0){\n\t\t\t\t\tlong mul = mod-M[j][head[i]];\n\t\t\t\t\tfor(int k = head[i];k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[i][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[i] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] retv = new int[m];\n\t\tfor(int i = 0;i < row;i++){\n\t\t\tretv[head[i]] = v[i];\n\t\t}\n\t\t\n\t\tret.sol = retv;\n\t\tret.rank = row;\n\t\tret.exists = true;\n\t\treturn ret;\n\t}\n\t\n\tpublic static class Result\n\t{\n\t\tpublic int[][] mat;\n\t\tpublic int[] sol;\n\t\tpublic int rank;\n\t\tpublic boolean exists;\n\t}\n\t\n\tpublic static long invl(long a, long mod) {\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\treturn p < 0 ? p + mod : p;\n\t}\n\n\n\t\n\tpublic static long C(int n, int r, int mod, int[][] fif) {\n\t\tif (n < 0 || r < 0 || r > n)\n\t\t\treturn 0;\n\t\treturn (long) fif[0][n] * fif[1][r] % mod * fif[1][n - r] % mod;\n\t}\n\n\t\n\tpublic static int[][] enumFIF(int n, int mod) {\n\t\tint[] f = new int[n + 1];\n\t\tint[] invf = new int[n + 1];\n\t\tf[0] = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tf[i] = (int) ((long) f[i - 1] * i % mod);\n\t\t}\n\t\tlong a = f[n];\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\tinvf[n] = (int) (p < 0 ? p + mod : p);\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tinvf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n\t\t}\n\t\treturn new int[][] { f, invf };\n\t}\n\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int N = in.nextInt();\n            int A[] = new int[2 * N - 1];\n            for (int i = 0; i < 2 * N - 1; i++) {\n                A[i] = in.nextInt();\n            }\n\n            int lo = 0, hi = 2 * N;\n\n            while (lo + 1 < hi) {\n                int mid = lo + (hi - lo) / 2;\n\n                if (onTopAtLeast(mid, A)) {\n                    lo = mid;\n                } else {\n                    hi = mid;\n                }\n            }\n\n            out.println(lo);\n        }\n\n        private boolean onTopAtLeast(int x, int[] a) {\n            int LEN = a.length; // LEN = 2*N-1\n            int[] b = new int[LEN];\n            for (int i = 0; i < LEN; i++) {\n                b[i] = a[i] < x ? 0 : 1;\n            }\n            int[] c = new int[LEN - 2];\n            for (int i = 1; i < LEN - 1; i++) {\n                c[i - 1] = b[i - 1] + b[i] + b[i + 1] < 2 ? 0 : 1;\n            }\n\n            int MID = c.length / 2;\n            int left = MID;\n            int right = MID;\n\n            while (left > 0 && c[left - 1] != c[left]) left--;\n            while (right < c.length - 1 && c[right] != c[right + 1]) right++;//C[1, 2*N-3]\n\n            int ANS = (MID - left < right - MID) ? c[left] : c[right];\n\n            return ANS == 1;\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n", "label": 0}, {"id": 61, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "label": 1}, {"id": 588, "code1": "import java.util.*;\n\npublic class Main {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int cnt = 0;\n\n    List<Integer>[] lists = new ArrayList[n];\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n\n    void run() {\n\n        for (int i=0; i<n; i++) lists[i] = new ArrayList<>();\n\n        int m = sc.nextInt();\n        for (int i=0; i<m; i++) {\n            int s = sc.nextInt() - 1;\n            int t = sc.nextInt() - 1;\n            lists[s].add(t);\n            lists[t].add(s);\n        }\n\n        dfs(\"\", n);\n\n        System.out.println(cnt);\n\n    }\n\n    void dfs(String s, int n) {\n\n        if (s.length() == n) {\n//            System.out.println(s);\n            if (s.charAt(0) == '0') {\n                boolean check = true;\n                for (int i=0; i<s.length()-1; i++) {\n                    if (!lists[s.charAt(i) - 48].contains(s.charAt(i+1) - 48)) {\n                        check = false;\n                        break;\n                    }\n                }\n                if (check) cnt++;\n            }\n\n        } else {\n            for (int i=0; i<n; i++) {\n                if (s.contains(String.valueOf(i))) continue;\n                dfs(s + i, n);\n            }\n        }\n    }\n\n\n}\n\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int A = scanner.nextInt();\n        int B = scanner.nextInt();\n        int C = scanner.nextInt();\n\n        if ((A == B && A != C) || (A == C && A != B) || (B == C &&  A != B)) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}\n", "label": 0}, {"id": 507, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\n\tint N,M;\n\tboolean[] first,second;\n\n\tpublic void solve() {\n\n\t\tN = nextInt();\n\t\tM = nextInt();\n\n\t\tfirst = new boolean[N];\n\t\tsecond = new boolean[N];\n\n\t\tfor(int i = 0;i < M;i++){\n\t\t\tint a = nextInt()-1;\n\t\t\tint b = nextInt()-1;\n\n\t\t\tif(a == 0){\n\t\t\t\tfirst[b] = true;\n\t\t\t}\n\n\t\t\tif(b == N-1){\n\t\t\t\tsecond[a] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 1;i < N - 1;i++){\n\t\t\tif(first[i] && second[i]){\n\t\t\t\tout.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tout.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "code2": "\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.Comparator;\nimport java.util.ArrayList;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author silviase\n */\npublic class Main {\n    \n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        DijkstraVerify solver = new DijkstraVerify();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class DijkstraVerify {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int source = in.nextInt();\n            Graph g = new Graph(n);\n            for (int i = 0; i < m; i++) {\n                g.addEdge(new Edge(in.nextInt(), in.nextInt(), in.nextInt()));\n            }\n            long[] d = g.dijkstra(source);\n            for (int i = 0; i < n; i++) {\n                if (d[i] > 1e15) out.println(\"INF\");\n                else out.println(d[i]);\n            }\n        }\n\n    }\n\n    static class Graph {\n        public int size;\n        public ArrayList<Edge>[] adj;\n        public int[] inDeg;\n        public int[] vertexCost;\n\n        @SuppressWarnings(\"unchecked\")\n        public Graph(int size) {\n            this.size = size;\n            adj = new ArrayList[size];\n            inDeg = new int[size];\n            vertexCost = new int[size];\n            for (int i = 0; i < size; i++) {\n                adj[i] = new ArrayList<>();\n            }\n        }\n\n        public void addEdge(Edge e) {\n            adj[e.from].add(e);\n            inDeg[e.to]++;\n        }\n\n        public long[] dijkstra(int from) {\n            long[] d = new long[size];\n            PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.comparing(e -> d[e]));\n            for (int i = 0; i < size; i++) {\n                d[i] = (i == from) ? 0 : (long) 1e18;\n                pq.add(i);\n            }\n            // System.out.println(Arrays.toString(pq.toArray()));\n            while (!pq.isEmpty()) {\n                int search = pq.poll();\n                // System.out.println(\"now: \" + search);\n                ArrayList<Edge> edges = adj[search];\n                for (Edge e : edges) {\n                    // System.out.println(e.toString());\n                    long cmp = d[search] + e.cost;\n                    if (d[e.to] > d[search] + e.cost) {\n                        // \u66f4\u65b0\u304c\u5165\u308b\n                        // \u51e6\u7406\u3092\u5165\u308c\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u306b\u5165\u308c\u308b\n                        d[e.to] = d[search] + e.cost;\n                        pq.add(e.to);\n                    }\n                }\n                //  System.out.println(Arrays.toString(pq.toArray()));\n            }\n            return d;\n        }\n\n    }\n\n    static class Edge {\n        public int from;\n        public int to;\n        public long cost;\n\n        public Edge(int to) {\n            this.to = to;\n        }\n\n        public Edge(int to, long cost) {\n            this.to = to;\n            this.cost = cost;\n        }\n\n        public Edge(int from, int to, long cost) {\n            this.from = from;\n            this.to = to;\n            this.cost = cost;\n        }\n\n        public String toString() {\n            return \"Edge{\" +\n                    \"from=\" + from +\n                    \", to=\" + to +\n                    \", cost=\" + cost +\n                    '}';\n        }\n\n    }\n}\n\n\n", "label": 0}, {"id": 305, "code1": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 591, "code1": "\n\nimport java.util.*;\nimport java.io.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\tScanner sc=new Scanner(System.in);\n\t     int n=sc.nextInt();\n\t     int m=sc.nextInt();\n\t     ArrayList<ArrayList<Integer>> a=new ArrayList<>();\nfor(int i=0;i<n;i++) {\n\ta.add(new ArrayList<Integer>());\n}\nfor(int j=0;j<m;j++) {\n\tint x=sc.nextInt()-1;\n\tint y=sc.nextInt()-1;\n\ta.get(x).add(y);\n\ta.get(y).add(x);\n}\nboolean vis[]=new boolean[n];\nans=0;\n\tSystem.out.println(dfs(a,0,vis,1,n));\n\t}\nstatic int ans=0;\t\n\tstatic int dfs(ArrayList<ArrayList<Integer>> a,int src,boolean vis[],int count,int n) {\n\t\tvis[src]=true;\n\t\tfor(int i:a.get(src)) {\n\t\t\tif(vis[i]==false) {\n\t\t\t\t\n\t\t\t\tdfs(a,i,vis,count+1,n);\n\t\t\t}\n\t\t}\n\t\tif(count==n) {\n\t\tans++;\n\t\tvis[src]=false;\n\t\t\t}else {\n\t\t\t\tvis[src]=false;\n\t\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\tstatic int[] arr(int n,Scanner sc) {\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\treturn a;\n}\n\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n;\n    char[] cs;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        cs = sc.next().toCharArray();\n        solve();\n    }\n\n    void solve() {\n        int[] sumEastL = new int[n];\n        if (cs[0] == 'E') {\n            sumEastL[0] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            sumEastL[i] = sumEastL[i - 1] + (cs[i] == 'E' ? 1 : 0);\n        }\n        int min = 10000000;\n        for (int i = 0; i < n; i++) {\n            int num = sumEastL[n - 1] - sumEastL[i] + (i > 0 ? i - sumEastL[i - 1] : 0);\n            if (min > num) {\n                min = num;\n            }\n        }\n        System.out.println(min);\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "label": 0}, {"id": 20, "code1": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "code2": "import java.util.Scanner;\n \npublic class Main {\n \n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tlong N = input.nextLong();\n\t\tlong M = input.nextLong();\n      \tif (M==1||N==1) System.out.println(1);\n\t\telse if (N%2==1&&M%2==1) System.out.println(M*N/2+1);\n\t\telse System.out.println(M*N/2);\n\t}\n}", "label": 1}, {"id": 385, "code1": "import java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString str=sc.next();\n\t\t\tStack<Integer> st=new Stack<Integer>();\n\t\t\tfor(int i=0;i<str.length();i++){\n\t\t\t\tif(st.isEmpty() || st.peek()==1 || str.charAt(i)=='S') st.add(str.charAt(i)=='S' ? 0 : 1);\n\t\t\t\telse st.pop();\n\t\t\t}\n\t\t\tSystem.out.println(st.size());\n\t\t}\n\t}\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "label": 0}, {"id": 347, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "code2": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner scanner=new FastScanner();\n\t\tint n=scanner.nextInt(),k=scanner.nextInt();\n\t\tint a[]=scanner.readArray(n);\n\t\t\n\t\tboolean dp[]=new boolean[k+1];\n//\t\tArrays.fill(dp, true);\n//\t\tdp[0]=false;\n\t\t\n\t\tfor(int stones=0;stones<=k;stones++) {\n\t\t\tfor(int j:a)\n\t\t\t\tif(j<=stones&&!dp[stones-j]) dp[stones]=true;\n\t\t}\n\t\tif(dp[k]) System.out.println(\"First\");\n\t\telse System.out.println(\"Second\");\n\t\n\t\t\n\t\t\n\n\t}\n\tstatic class FastScanner{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\t\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDoubel() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tint [] readArray(int n) {\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t}\n\n}\n\n", "label": 0}, {"id": 605, "code1": "import java.util.Scanner;\n\tpublic class Main {\n\tprivate static Scanner scanner;\n\tpublic static void main(String args[]) {\n\n\t\tscanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt();\n\t\tint[] b = new int[a];\n\t\tint minj,count = 0;\n\t\tfor(int i=0;i < a;i++) b[i] = scanner.nextInt();\n\n\t\tfor(int i = 0;i < a;i++) {\n\t\t\tminj = i;\n\t\t\tfor(int j = i;j < a;j++) {\n\t\t\t\tif(b[j] < b[minj]) {\n\t\t\t\t\tminj = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tif(minj != i) {\n\t\t\t\t\tint tmp = b[i];\n\t\t\t\t\tb[i] = b[minj];\n\t\t\t\t\tb[minj] = tmp;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t}\n\t\tfor(int i=0;i < a;i++) {\n\t\t\tSystem.out.print(b[i]);\n\t\t\tif(i == a-1) System.out.println(\"\");\n\t\t\telse System.out.print(\" \");\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\t}\n\n", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void doIt(){\n\t\tScanner in = new Scanner(System.in);\n\t\tdata pp[][] = new data[3][8];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=0;s<8;s++){\n\t\t\t\tint ban=in.nextInt();\n\t\t\t\tdouble time=in.nextDouble();\n\t\t\t\tpp[i][s]=new data(ban,time);\n\t\t\t}\n\t\t\tArrays.sort(pp[i]);\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][0].code,pp[i][0].time);\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][1].code,pp[i][1].time);\n\t\t}\n\t\tdata ans[]=new data[18];\n\t\tint cnt=0;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=2;s<8;s++){\n\t\t\t\tans[cnt]=pp[i][s];\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(ans);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[0].code,ans[0].time);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[1].code,ans[1].time);\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain.doIt();\n\t}\n\tstatic class data implements Comparable<data>{\n\t\tint code;\n\t\tdouble time;\n\t\tdata(int code,double time){\n\t\t\tthis.code=code;\n\t\t\tthis.time=time;\n\t\t}\n\t\tpublic int compareTo(data o) {\n\t\t\treturn Double.compare(this.time,o.time);//\u3053\u308c\u3067\u6bd4\u3079\u3089\u308c\u308b\u3002\n\t\t}\n\t}\n}", "label": 0}, {"id": 430, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n    static class FS {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            return hasNextByte() ? buffer[ptr++] : -1;\n        }\n\n        private boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        private void skipUnprintable() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n        }\n\n        public boolean hasNext() {\n            skipUnprintable();\n            return hasNextByte();\n        }\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while (isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n    }\n\n    static int[] np;\n    static int n;\n\n    public static void main(String[] args) throws Exception {\n        FS fs = new FS();\n//        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n//        String s = bf.readLine();\n//        int n = Integer.parseInt(s.substring(0, s.indexOf(' ')));//n packages\n//        int k = Integer.parseInt(s.substring(s.indexOf(' '), s.length()));//k trucks\n        n = fs.nextInt();\n        int k = fs.nextInt();\n\n\n        np = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n\n            np[i] = fs.nextInt();\n            max = max < np[i] ? np[i] : max;\n        }\n        int p = 0;\n        int resids = 0;\n\n        int maxInt = 10000 *100000;\n        int minInt = max-1;\n        int mid = (maxInt + minInt) / 2;\n        while (maxInt - minInt > 1) {\n            int v = checkN(mid);\n            if (v > k) minInt = mid;\n            else maxInt = mid;\n\n            mid = (maxInt + minInt) / 2;\n        }\n        System.out.println(maxInt);\n    }\n\n    private static int checkN(int p) {\n        int resids = p;\n        int ink = 1;//\u5f53\u524d\u5df2\u7528\u5361\u8f66\n        for (int i = 0; i < n; i++) {\n            int j = np[i];\n            if (resids >= j) {\n                resids -= j;\n            } else {\n                ink++;\n                resids = p;\n                i--;\n            }\n        }\n        return ink;\n    }\n}\n", "code2": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        new Solver().run();\n    }\n}\n\nclass Solver {\n\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] a = new int[N];\n\n        for (int i = 0; i < N; i++) {\n            a[i] = sc.nextInt();\n            a[i]--;\n        }\n\n        int cnt = 0;\n        for (int i = 0; i < N; i++) {\n            if (i == a[a[i]]) cnt++;\n        }\n\n        System.out.println(cnt / 2);\n\n        return;\n    }\n\n}", "label": 0}, {"id": 533, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n + 2];\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tsc.close();\n\n\t\tint sum = 0;\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tsum += Math.abs(a[i] - a[i + 1]);\n\t\t}\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tSystem.out.println(sum + Math.abs(a[i- 1] - a[i + 1])\n\t\t\t\t\t- Math.abs(a[i] - a[i + 1]) - Math.abs(a[i] - a[i - 1]));\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 689, "code1": "import java.util.*;\n\npublic class Main {    \n    \n  public static void main(String[] args) {              \n     Scanner sc = new Scanner(System.in);\n     \n     int N = sc.nextInt();\n     \n     int sum = 0;\n     int min = Integer.MAX_VALUE;\n     \n     int count = 0;\n     for(int i = 0;i < N;i++){\n         int a = sc.nextInt();\n         if(a%10 == 0){\n               count++;\n         }\n         sum += a;\n         if(a%10 != 0){\n           min = Math.min(min,a);\n         }\n     }\n     \n     if(count == N){\n         System.out.println(0);\n         return;\n     }     \n                           \n     if(sum%10 != 0){\n         System.out.println(sum);\n         return;\n     }else{\n         System.out.println(sum - min);\n         return;\n     }\n      \n  }          \n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\nimport java.util.StringTokenizer;\n\n\nclass Main{\n\tstatic int[][] ban;\n\tstatic boolean[][] visited;\n\tstatic long sum=0;\n\tstatic int H,W;\n\tstatic long kuro=0;\n\tstatic long siro=0;\n\tpublic static void main(String[] args) {\n\t\tSC sc=new SC(System.in);\n\t\tH=sc.nextInt();\n\t\tW=sc.nextInt();\n\t\tvisited=new boolean[H][W];\n\t\tban=new int[H][W];\n\t\tString s;\n\t\tfor(int i=0; i<H; i++){\n\t\t\ts=sc.next();\n\t\t\tfor(int j=0; j<W; j++){\n\t\t\t\tif(s.charAt(j)=='#'){\n\t\t\t\t\tban[i][j]=1;\t//\u9ed2\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tban[i][j]=0;\t//\u767d\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(int i=0; i<H; i++){\t\t//\u3057\u3089\u3079\u308b\n\t\t\tfor(int j=0; j<W; j++){\n\t\t\t\tif(ban[i][j]==1 && !visited[i][j]){\n\t\t\t\t\tkuro=0; siro=0;\n\t\t\t\t\tdfs(i,j);\n\t\t\t\t\tsum+=kuro*siro;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpl(sum);\n\t}\n\n\tpublic static void dfs(int y,int x){\n\t\tint[] vx={0,1,0,-1};\n\t\tint[] vy={-1,0,1,0};\n\t\tif(ban[y][x]==1){\n\t\t\tkuro++;\n\t\t}\n\t\telse{\n\t\t\tsiro++;\n\t\t}\n\t\tvisited[y][x]=true;\n\t\tfor(int i=0; i<4; i++){\n\t\t\tif(x+vx[i]>=0 && x+vx[i]<W && y+vy[i]>=0 && y+vy[i]<H){\n\t\t\t\tif(ban[y][x]!=ban[y+vy[i]][x+vx[i]] && !visited[y+vy[i]][x+vx[i]]){\n\t\t\t\t\tdfs(y+vy[i],x+vx[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void pl(Object o) {\n\t\tSystem.out.println(o);\n\t}\n\tpublic static void pl() {\n\t\tSystem.out.println();\n\t}\n\tpublic static void p(Object o) {\n\t\tSystem.out.print(o);\n\t}\n\tstatic class SC {\n\t\tprivate BufferedReader reader = null;\n\t\tprivate StringTokenizer tokenizer = null;\n\t\tpublic SC(InputStream in) {\n\t\t\treader = new BufferedReader(new InputStreamReader(in));\n\t\t}\n\t\tpublic String next() {\n\t\t\tif (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new UncheckedIOException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new UncheckedIOException(e);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 0}, {"id": 711, "code1": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    //input\n    int d = sc.nextInt();\n    /*\n    int[] c = new int[26]; //array of decrease\n    for(int i = 0; i < c.length; i++){\n      c[i] = sc.nextInt();\n    }\n    */\n\n    int[] c = new int[26];\n    for(int i = 0; i < 26; i++){\n      c[i] = sc.nextInt();\n    }\n\n    int[][] s = new int[d][26]; //two dimensional array of increase\n    for(int row = 0; row < s.length; row++){ //day\n      for(int col = 0; col < s[row].length; col++){ //contest number\n        s[row][col] = sc.nextInt();\n      }\n    }\n    int[] t = new int[d]; //array of contest numbers of the day\n    for(int i = 0; i < t.length; i++){\n      t[i] = 13;\n    }\n\n    //output\n    //based on increase\n    /*\n    int largestNum = s[0][0];\n    int largestNumRow = 0;\n    int largestNumCol = 0;\n    for(int row = 0; row < s.length; row++){\n      for(int col = 0; col < s[row].length; col++){\n        if( s[row][col] > largestNum ){\n          largestNum = s[row][col];\n          largestNumRow = row;\n          largestNumCol = col;\n        }\n      }\n    }\n\n    int largestNuM = c.get(0);\n    int largestNumPos = 0;\n    for(int j = 0; j < c.size(); j++){\n      if( c.get(j) > largestNuM ){\n        largestNuM = c.get(j);\n        largestNumPos = j;\n      }\n    }\n\n    for(int i = 0; i < d; i++){\n      if( largestNum > largestNuM ){\n        System.out.println(largestNumCol+1);\n      }else{\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n    /*\n\n    for(int m = 0; m < d; m++){\n      if( m%2 == 0 ){\n        System.out.println(largestNumCol+1);\n      }else{\n        int largestNuM = c.get(0);\n        int largestNumPos = 0;\n        for(int j = 0; j < c.size(); j++){\n          if( c.get(j) > largestNuM ){\n            largestNuM = c.get(j);\n            largestNumPos = j;\n          }\n        }\n        c.remove(largestNumPos);\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n\n    for(int i = 0; i < d; i++){\n      System.out.println((int)(Math.random()*26+1));\n      //System.out.println(largestNumCol+1);\n    }\n\n    /*\n    int value = 0;\n    for(int i = 0; i < t.length; i++){\n      int contestNum = t[i]-1;\n      int day = i+1;\n      value += s[day-1][contestNum]; //increase\n      for(int j = 0; j < c.length; j++){\n        if( !(j == contestNum) ){\n          int daySinceLast = day;\n          for(int m = 0; m < i; m++){\n            if( j == t[m]-1 ){\n              daySinceLast = day-m-1;\n            }\n          }\n          value -= c[j]*(daySinceLast); //decrease (amount of decrease * days since last one)\n        }\n      }\n      System.out.println(value);\n    }\n    */\n\n\n  }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[]args) {\n\t\ttry(Scanner scan = new Scanner(System.in)){\n\n\t\t\tint N = scan.nextInt();\n\t\t\tint M = scan.nextInt();\n\t\t\tint K = scan.nextInt();\n\n\n\n\t\t\tint goukei = 0;\n\t\t\tint ok = 0;\n\t\t\tfor(int i = 0;i<=N;i++) {\n\t\t\t\tfor(int j = 0;j<=M;j++) {\n\t\t\t\t\tgoukei =  i*M+j*N-2*i*j;\n\t\t\t\t\tif(goukei==K) {\n\t\t\t\t\t\tok=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok==1)System.out.println(\"Yes\");\n\t\t\telse System.out.println(\"No\");\n\n\t\t}\n\n\n\t}\n\n\n}\n", "label": 0}, {"id": 5, "code1": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/10 10:58 \u4e0b\u5348\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.next();\n        long sum = 0;\n        int length = s.length();\n        for(int i = 0;i<length;i++){\n            sum += (s.charAt(i)-'0');\n        }\n        System.out.println(sum % 9==0?\"Yes\":\"No\");\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in)) {\n\t\t\tString n = sc.next();\n\t\t\tint len = n.length();\n\t\t\tint amari = 0;\n\t\t\tfor (int i = 0; i < len; i++) {\n\t\t\t\tint keta = Integer.parseInt(n.substring(i, i + 1));\n\t\t\t\tamari = (amari + keta) % 9;\n\t\t\t}\n\t\t\tif (amari % 9 == 0) {\n\t\t\t\tSystem.out.println(\"Yes\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 649, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "code2": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "label": 0}, {"id": 542, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n + 2];\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tsc.close();\n\n\t\tint sum = 0;\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tsum += Math.abs(a[i] - a[i + 1]);\n\t\t}\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tSystem.out.println(sum + Math.abs(a[i- 1] - a[i + 1])\n\t\t\t\t\t- Math.abs(a[i] - a[i + 1]) - Math.abs(a[i] - a[i - 1]));\n\t\t}\n\t}\n}\n", "code2": "import java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    static void solve() {\n        int n = nextInt();\n\n        long ans = nextLong();\n//        System.out.println(ans);\n        for (int i = 1; i < n; i++) {\n            long t = nextLong();\n            ans = lcm(ans, t);\n//            System.out.println(ans);\n        }\n        out.println(ans);\n    }\n\n    static final int MOD = 1_000_000_007;\n    static long[] fac, finv, inv;\n\n    // nCk\u306e\u521d\u671f\u5316\n    static void comInit(int max) {\n        fac = new long[max];\n        finv = new long[max];\n        inv = new long[max];\n        fac[0] = fac[1] = 1;\n        finv[0] = finv[1] = 1;\n        inv[1] = 1;\n\n        for (int i = 2; i < max; i++) {\n            fac[i] = fac[i - 1] * i % MOD;\n            inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;\n            finv[i] = finv[i - 1] * inv[i] % MOD;\n        }\n    }\n\n    // nCk\u306e\u8a08\u7b97\n    static long com(int n, int k) {\n        if (n < k)\n            return 0;\n        if (n < 0 || k < 0)\n            return 0;\n        return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n    }\n\n    static PrintWriter out;\n    static Scanner sc;\n\n    static int[][] newIntArray(int h, int w, int value) {\n        int[][] ret = new int[h][w];\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                ret[i][j] = value;\n            }\n        }\n        return ret;\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(sc.next());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(sc.next());\n    }\n\n    static String nextString() {\n        return sc.next();\n    }\n\n    static int[] nextIntArray(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    static List<Integer> nextIntList(int n) {\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextInt());\n        }\n        return list;\n    }\n\n    static List<Double> nextDoubleList(int n) {\n        List<Double> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add((double) nextInt());\n        }\n        return list;\n    }\n\n    static List<Long> nextLongList(int n) {\n        List<Long> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextLong());\n        }\n        return list;\n    }\n\n    static char[][] nextCharArray(int h, int w) {\n        char[][] c = new char[h][w];\n        for (int i = 0; i < h; i++) {\n            String str = nextString();\n            for (int j = 0; j < w; j++) {\n                c[i][j] = str.charAt(j);\n            }\n        }\n        return c;\n    }\n\n    static <T extends Comparable<? super T>> void sort(List<T> list) {\n        Collections.sort(list);\n    }\n\n    // greatest common divisor\n    // \u6700\u5927\u516c\u7d04\u6570\n    static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    // least common multiple\n    // \u6700\u5c0f\u516c\u500d\u6570\n    static long lcm(long a, long b) {\n        if (a >= b && a % b == 0)\n            return a;\n        if (b > a && b % a == 0)\n            return b;\n\n//        return a * b / gcd(a, b);\n        if (a > b) {\n            return (a / gcd(a, b)) * b;\n        } else {\n            return (b / gcd(a, b)) * a;\n        }\n    }\n\n    // base\u306en\u4e57\u3092\u8a08\u7b97\u3092\u8fd4\u3059\n    static int pow(int base, int n) {\n        int ret = 1;\n        for (int i = 0; i < n; i++) {\n            ret *= base;\n        }\n        return ret;\n    }\n\n    // return n^k mod m\n    static long powMod(long n, long k, long m) {\n        if (k == 0) {\n            return 1;\n        } else if (k % 2 == 1) {\n            return powMod(n, k - 1, m) * n % m;\n        } else {\n            long tmp = powMod(n, k / 2, m);\n            return tmp * tmp % m;\n        }\n    }\n\n    // int\u3092length\u6841\u306ebit\u6587\u5b57\u5217\u306b\u5909\u63db\n    static String toBitString(int length, int n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = length - 1; i >= 0; i--) {\n            if ((n >> i) % 2 == 1) {\n                sb.append(\"1\");\n            } else {\n                sb.append(\"0\");\n            }\n        }\n        return sb.toString();\n    }\n\n    public static void main(String[] args) {\n        out = new PrintWriter(System.out);\n        sc = new Scanner(System.in);\n\n        solve();\n\n        out.flush();\n        sc.close();\n    }\n\n}\n", "label": 0}, {"id": 201, "code1": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = Integer.parseInt(sc.next());\n\t\tsc.close();\n\t\tMain m = new Main();\n\n\t\twhile (true) {\n\t\t\tif(m.searchPrime(num)) {\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tnum++;\n\t\t\t};\n\t\t}\n\t\tSystem.out.println(num);\n\n\t}\n\n\tpublic boolean searchPrime(int num) {\n\t\t//true == prime\n\t\t//false == not prime\n\t\tboolean isPrimeFlg = true;\n\t\tint numsPiv = (int)Math.sqrt(num);\n\t\tfor (int i = 2; i < numsPiv; i++) {\n\t\t\tif (num % i == 0) {\n\t\t\t\tisPrimeFlg = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn isPrimeFlg;\n\t}\n}", "label": 1}, {"id": 161, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int A = scanner.nextInt();\n        int B = scanner.nextInt();\n        int C = scanner.nextInt();\n\n        if ((A == B && A != C) || (A == C && A != B) || (B == C &&  A != B)) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}\n", "code2": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "label": 1}, {"id": 109, "code1": "import java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic Scanner sc;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//InputStream in = new FileInputStream(\"src/input.txt\");\n\t\tInputStream in = System.in;\n\t\t//PrintStream out = new PrintStream(\"src/output.txt\");\n\n\t\t//System.setOut(out);\n\n\t\tsc = new Scanner(in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] a = new int[N];\n\t\tint answer = 0;\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tif(a[a[i]-1] == i+1){\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(answer/2);\n\n\t\t//out.close();\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint s = sc.nextInt();\n  \t\tint rabs[] = new int[s]; \n      \tlong stack_num;\n      \tlong like = 0;\n      \t\n      \tfor(int i = 0;i < s; i++){\n        \trabs[i] = sc.nextInt();\n        }\n      \n      \tfor(int i = 0; i < s;i++){ \n          if(rabs[rabs[i]-1] == (i + 1)) like++;\n        }\n \t\t\n      \tSystem.out.println(like/2);\n        \n\t}\n}\n", "label": 1}, {"id": 399, "code1": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "code2": "\nimport static java.lang.Math.*;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic int modP = 1000000007;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong[] t = in.nextLongArray(n), a = in.nextLongArray(n);\n\n\t\t\tlong[] tCalc = new long[n];\n\t\t\tArrays.fill(tCalc, -1);\n\n\t\t\tlong[] aCalc = new long[n];\n\t\t\tArrays.fill(aCalc, -1);\n\n\t\t\tlong[] tDef = new long[n];\n\t\t\tlong[] aDef = new long[n];\n\n\t\t\tlong tMax = -1, aMax = -1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tMax < t[i]) {\n\t\t\t\t\ttMax = t[i];\n\t\t\t\t\ttDef[i] = t[i];\n\t\t\t\t} else {\n\t\t\t\t\ttCalc[i] = tMax;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = n-1; i >= 0; i--) {\n\t\t\t\tif (aMax < a[i]) {\n\t\t\t\t\taMax = a[i];\n\t\t\t\t\taDef[i] = a[i];\n\t\t\t\t} else {\n\t\t\t\t\taCalc[i] = aMax;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (aCalc[i] == -1 && tCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] != tDef[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (aCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] > tCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (tCalc[i] == -1) {\n\t\t\t\t\tif (tDef[i] > aCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlong ans = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tCalc[i] == -1 || aCalc[i] == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tans = ans * min(aCalc[i],tCalc[i]) % modP;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 268, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint id[]=new int[10000];\n\t\tint sc[]=new int[10000];\n\t\tint i=0;\n\t\tint j=0;\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tString str[]=in.next().split(\",\");\n\t\t\tif(str[0].equals(\"0\")&&str[1].equals(\"0\"))\n\t\t\t\tbreak;\n\t\t\tid[i++]=Integer.valueOf(str[0]);\n\t\t\tsc[j++]=Integer.valueOf(str[1]);\n\t\t}\n\t\twhile(in.hasNext())\n\t\t{\n\t\t\tint n=in.nextInt();\n\t\t\tint se=0;\n\t\t\tfor(int m=0;m<i;m++)\n\t\t\t{\n\t\t\t\tif(n==id[m])\n\t\t\t\t{\n\t\t\t\t\tse=m;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean b[] =new boolean[31];\n\t\t\tArrays.fill(b, true);\n\t\t\tint ans=1;\n\t\t\tfor(int l=0;l<i;l++)\n\t\t\t{\n\t\t\t\tif(sc[se]<sc[l]&&b[sc[l]])\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t\tb[sc[l]]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint[] team=new int[100];\n\t\tint[] data=new int[100];\n\t\tint ptr=0;\n\t\twhile(true){\n\t\t\tString str=sc.next();\n\t\t\tif(str.equals(\"0,0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tteam[ptr]=Integer.parseInt(str.split(\",\")[0]);\n\t\t\tdata[ptr]=Integer.parseInt(str.split(\",\")[1]);\n\t\t\tptr++;\n\t\t}\n\t\tfor(int i=0;i<ptr;i++){\n\t\t\tfor(int j=ptr-1;j>=i+1;j--){\n\t\t\t\tif(data[j]>data[j-1]){\n\t\t\t\t\tint box=data[j];\n\t\t\t\t\tdata[j]=data[j-1];\n\t\t\t\t\tdata[j-1]=box;\n\t\t\t\t\tbox=team[j];\n\t\t\t\t\tteam[j]=team[j-1];\n\t\t\t\t\tteam[j-1]=box;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint[] ranking=new int[ptr];\n\t\tint checkRank=data[0];\n\t\tint rank=1;\n\t\tfor(int i=0;i<ptr;i++){\n\t\t\tif(data[i]!=checkRank){\n\t\t\t\tcheckRank=data[i];\n\t\t\t\trank++;\n\t\t\t}\n\t\t\tranking[i]=rank;\n\t\t}\n\t\twhile(sc.hasNext()){\n\t\t\tint searchTeam=sc.nextInt();\n\t\t\tfor(int i=0;i<ptr;i++){\n\t\t\t\tif(team[i]==searchTeam){\n\t\t\t\t\tSystem.out.println(ranking[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 545, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n + 2];\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tsc.close();\n\n\t\tint sum = 0;\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tsum += Math.abs(a[i] - a[i + 1]);\n\t\t}\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tSystem.out.println(sum + Math.abs(a[i- 1] - a[i + 1])\n\t\t\t\t\t- Math.abs(a[i] - a[i + 1]) - Math.abs(a[i] - a[i - 1]));\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static HashMap<String,HashSet<String>> map;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tmap = new HashMap<String, HashSet<String>>();\n\t\t\tString first = null;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString[] s = sc.next().split(\":\");\n\t\t\t\tif(i == 0) first = s[0];\n\t\t\t\ts[1] = s[1].replaceAll(\"\\\\.\", \"\");\n\t\t\t\tString[] ss = s[1].split(\",\");\n\t\t\t\tmap.put(s[0], new HashSet<String>());\n\t\t\t\tfor(String tmp : ss){\n\t\t\t\t\tmap.get(s[0]).add(tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(String si : map.keySet()){\n\t\t\t\tfor(String sj : map.keySet()){\n\t\t\t\t\tif(map.get(si).contains(sj)){\n\t\t\t\t\t\tmap.get(si).remove(sj);\n\t\t\t\t\t\tmap.get(si).addAll(map.get(sj));\n\t\t\t\t\t}\n\t\t\t\t\tif(map.get(sj).contains(si)){\n\t\t\t\t\t\tmap.get(sj).remove(si);\n\t\t\t\t\t\tmap.get(sj).addAll(map.get(si));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(map.get(first).size());\n\t\t}\n\t}\n/*\n\tpublic static HashSet<String> solve(String group){\n\t\tfor(String s : map.get(group)){\n\n\t\t}\n\n\t}\n\t*/\n}", "label": 0}, {"id": 422, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class Main {\n    public static void main(String[] args) {\n        Main main = new Main();\n        main.solve();\n    }\n\n    public void solve() {\n        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        int N = scan.nextInt();\n        List<Integer> candidate = new ArrayList<>();\n        for (int i = 1; i <= N; i++) {\n            candidate.add(i);\n        }\n        scan.nextLine();\n        String p = scan.nextLine();\n        String q = scan.nextLine();\n        List<List<Integer>> list = make(candidate);\n        List<String> strings = new ArrayList();\n        for (List<Integer> x : list) {\n            strings.add(x.stream().map(i -> i.toString()).collect(Collectors.joining(\" \")));\n        }\n        int len = strings.size();\n        int l = 0;\n        int r = 0;\n        for (int i = 0; i < len; i++) {\n            if (p.equals(strings.get(i))) {\n                l = i;\n            }\n            if (q.equals(strings.get(i))) {\n                r = i;\n            }\n        }\n        System.out.println(Math.abs(l - r));\n    }\n\n    public static List<List<Integer>> make(List<Integer> candidate) {\n        if (candidate.size() == 0) {\n            List<List<Integer>> empty = new ArrayList<>();\n            empty.add(new ArrayList<>());\n            return empty;\n        }\n\n        return candidate.stream().flatMap(i -> {\n            List<Integer> rest = new ArrayList<>(candidate);\n            rest.remove(i);\n            return make(rest).stream().map(list -> {\n                list.add(0, i);\n                return list;\n            });\n        }).collect(Collectors.toList());\n    }\n}\n", "code2": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n    static int searchP(long p,int[] ws){\n        int count = 1;\n        int sum = 0; \n        for(int i = 0; i < ws.length; i++){\n            if(sum + ws[i] <= p) {\n            sum += ws[i];\n            } else {\n                count++;\n                if(ws[i] <= p){\n                sum = ws[i];\n                } else{\n                    count += 99999;\n                }\n            }\n        }\n        return count;\n    }\n    static long solve(long p, int[] ws, long k){\n        long right = p;\n        long left = 0;\n        long mid;\n        while(right - left > 1) {\n            mid = (left + right) / 2;\n            int v = searchP(mid,ws);\n            if(k >= v) {\n                right = mid;\n            } else {\n               left = mid;\n                \n            }\n        }\n    return right;\n    }\n    public static void main(String...args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        \n        String[] info = br.readLine().split(\" \");\n        int n = Integer.parseInt(info[0]);\n        int k = Integer.parseInt(info[1]);\n        int[] ws = new int[n];\n        for(int i = 0; i < n; i++) {\n            ws[i] = Integer.parseInt(br.readLine());\n        }\n        long p = 100000 * 10000;\n        System.out.println(solve(p,ws,k));\n        \n    }\n}\n\n\n\n", "label": 0}, {"id": 174, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "code2": "import java.util.*;\nimport java.math.*;\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner s=new Scanner(System.in);\n\t\tint a=s.nextInt();\n\t\tBigInteger bi=new BigInteger(\"1\");\n\t\tfor(int i=0;i<a;i++)bi=bi.multiply(new BigInteger(\"\"+(i+2)));\n\t\tbi=bi.add(new BigInteger(\"2\"));\n\t\tSystem.out.println(bi.toString());\n\t\tfor(int i=0;i<a;i++)System.out.println(2+i);\n\t}\n}", "label": 1}, {"id": 91, "code1": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\t\n\t\tint a=sc.nextInt();\t\n\t\tint b=sc.nextInt();\t\n\t\tint c=sc.nextInt();\t\n\t\t\n\t\tint total=a+b+c;\n\t\tint min=Math.min(Math.min(a,b),Math.min(b,c));\n\t\tint max=Math.max(Math.max(a,b),Math.max(b,c));\n\t\tint ans=total-min-max;\n\t\t\n\t\tint count=0;\n\t\tcount=max-ans;\n\t\tmin+=count;\n\t\tcount+=(max-min)/2;\n\t\tif((max-min)%2==1){\n\t\t\tcount+=2;\n\t\t}\n\t\tSystem.out.println(count);\n\t\tsc.close();\n\t}\n}", "label": 1}, {"id": 477, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScanner in = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C solver = new C();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C {\n        int N;\n        int M;\n\n        public void solve(int testNumber, MyScanner in, PrintWriter out) {\n            N = in.Int();\n            M = in.Int();\n            DSU dsu = new DSU(N);\n            for (int i = 0; i < M; i++) {\n                int A = in.Int() - 1;\n                int B = in.Int() - 1;\n                dsu.merge(A, B);\n            }\n            out.println(dsu.groups().size() - 1);\n        }\n\n    }\n\n    static class DSU {\n        private int n;\n        private int[] parentOrSize;\n\n        public DSU(int n) {\n            this.n = n;\n            this.parentOrSize = new int[n];\n            Arrays.fill(parentOrSize, -1);\n        }\n\n        int merge(int a, int b) {\n            if (!(0 <= a && a < n))\n                throw new IndexOutOfBoundsException(\"a=\" + a);\n            if (!(0 <= b && b < n))\n                throw new IndexOutOfBoundsException(\"b=\" + b);\n\n            int x = leader(a);\n            int y = leader(b);\n            if (x == y) return x;\n            if (-parentOrSize[x] < -parentOrSize[y]) {\n                int tmp = x;\n                x = y;\n                y = tmp;\n            }\n            parentOrSize[x] += parentOrSize[y];\n            parentOrSize[y] = x;\n            return x;\n        }\n\n        int leader(int a) {\n            if (parentOrSize[a] < 0) {\n                return a;\n            } else {\n                parentOrSize[a] = leader(parentOrSize[a]);\n                return parentOrSize[a];\n            }\n        }\n\n        ArrayList<ArrayList<Integer>> groups() {\n            int[] leaderBuf = new int[n];\n            int[] groupSize = new int[n];\n            for (int i = 0; i < n; i++) {\n                leaderBuf[i] = leader(i);\n                groupSize[leaderBuf[i]]++;\n            }\n            ArrayList<ArrayList<Integer>> result = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                result.add(new ArrayList<>(groupSize[i]));\n            }\n            for (int i = 0; i < n; i++) {\n                result.get(leaderBuf[i]).add(i);\n            }\n            result.removeIf(ArrayList::isEmpty);\n            return result;\n        }\n\n    }\n\n    static class MyScanner {\n        private BufferedReader in;\n        private StringTokenizer st;\n\n        public MyScanner(InputStream stream) {\n            in = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    String rl = in.readLine();\n                    if (rl == null) {\n                        return null;\n                    }\n                    st = new StringTokenizer(rl);\n                } catch (IOException e) {\n                    return null;\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int Int() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "code2": "\npublic class Main {\n\n  static int mod = 1000003;\n  static int[][] fif = enumFIF(mod * 3, mod);\n\n  private static void solve() {\n    int q = ni();\n\n    for (int i = 0; i < q; i++) {\n      int x = ni();\n      int d = ni();\n      int n = ni();\n      out.println(f(x, d, n));\n    }\n  }\n\n  private static long f(int x, int d, int n) {\n    if (x == 0) {\n      return 0;\n    } else if (d == 0) {\n      return pow(x, n, mod);\n    }\n\n    int y = (int) (x * invl(d, mod) % mod);\n    if (n >= mod || y % mod > (y + n - 1) % mod) {\n      return 0;\n    }\n\n    long z = fif[0][y + n - 1] * invl(fif[0][y - 1], mod) % mod;\n    z *= pow(d, n, mod);\n    z %= mod;\n\n    return z;\n  }\n\n  public static long pow(long a, long n, long mod) {\n    // a %= mod;\n    long ret = 1;\n    int x = 63 - Long.numberOfLeadingZeros(n);\n    for (; x >= 0; x--) {\n      ret = ret * ret % mod;\n      if (n << 63 - x < 0)\n        ret = ret * a % mod;\n    }\n    return ret;\n  }\n\n\n  public static int[][] enumFIF(int n, int mod) {\n    int[] f = new int[n + 1];\n    int[] invf = new int[n + 1];\n    f[0] = 1;\n    for (int i = 1; i <= n; i++) {\n      f[i] = (int) ((long) f[i - 1] * i % mod);\n    }\n    long a = f[n];\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    invf[n] = (int) (p < 0 ? p + mod : p);\n    for (int i = n - 1; i >= 0; i--) {\n      invf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n    }\n    return new int[][] {f, invf};\n  }\n\n  public static long invl(long a, long mod) {\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    return p < 0 ? p + mod : p;\n  }\n\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n\n", "label": 0}, {"id": 176, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) {\n\t\tBigInteger mul = BigInteger.valueOf(2);\n\t\tfor (int i = 3; i <= 1501; i += 2) {\n\t\t\tboolean ok = true;\n\t\t\tfor (int j = 3; j * j <= i; j += 2) {\n\t\t\t\tif (i % j == 0) {\n\t\t\t\t\tok = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ok) {\n\t\t\t\tmul = mul.multiply(BigInteger.valueOf(i));\n\t\t\t}\n\t\t}\n\t\tint N = sc.nextInt();\n\t\tmul = mul.add(BigInteger.valueOf(2));\n\t\tSystem.out.println(mul);\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\tint b = i + 2;\n\t\t\tfor (int j = 2; j <= b; ++j) {\n\t\t\t\tif (b % j == 0) {\n\t\t\t\t\tSystem.out.println(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}", "label": 1}, {"id": 294, "code1": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "code2": "import java.util.Scanner;\npublic class Main { \n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) { \n        while (true) { \n        int n = sc.nextInt(); \n            if (n == 0) { \n            break; \n            } \n            int[] scores = new int[n]; \n            for (int i = 0; i < scores.length; i++) { \n            scores[i] = sc.nextInt(); \n            } \n            double average = 0, variance = 0;\n            for(int i = 0; i < scores.length; i++){ \n                average += scores[i]; \n            } \n            average = average/n; \n            for(int i = 0; i < scores.length; i++){ \n                variance += (scores[i]-average)*(scores[i]-average); \n            }\n            variance = variance/n;\n            System.out.println(Math.sqrt(variance)); \n            } \n        } \n    }\n}\n", "label": 0}, {"id": 451, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint A = sc.nextInt();\n\t\tint B = sc.nextInt();\n\t\tint C = sc.nextInt();\n\t\tint K = sc.nextInt();\n\t\tint res = 0;\n\t\tres+=Math.min(A, K);\n\t\tK -= res;\n\t\tif(K==0) {\n\t\t\tSystem.out.println(res);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tK-=B;\n\t\tif(K>0) {\n\t\t\tres-=Math.min(K, C);\n\t\t}\n\t\tSystem.out.println(res);\n\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n       int ar[]=new int[] {0,0,0,0};\n       for(int i=0;i<3;i++)\n       {\n           int a=sc.nextInt();\n           int b=sc.nextInt();\n           ar[a-1]+=1;\n           ar[b-1]+=1;\n       }\n       \n       for(int i = 0; i < 4; i++) {\n\t\t\tif(ar[i] < 1 || ar[i] > 2) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"YES\");\n       \n//       for(int i:ar)\n//       {\n//           if(i>2)\n//           {\n//               System.out.println(\"NO\");\n//               System.exit(0);\n//           }\n//       }\n//       System.out.println(\"YES\");\n    }\n}", "label": 0}, {"id": 318, "code1": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "code2": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = findK(n);\n        if(k==-1){\n            System.out.println(\"No\");\n            System.exit(0);\n        }\n        int[][] res = new int[k][k-1];\n        for(int i=0;i<k-1;i++) res[0][i] = i+1;\n        int[] index = new int[k];\n        for(int i=0;i<k;i++) index[i]=i;\n        for(int row=1;row<k;row++){\n            int idx = 0;\n            for(int j=0;j<row;j++) res[row][idx++] = res[j][index[j]++];\n            if(row==k-1) continue;\n            res[row][idx++]=res[row-1][k-2]+1;\n            while(idx<k-1){\n                res[row][idx] = res[row][idx-1]+1;\n                idx++;\n            }\n        }\n        System.out.println(\"Yes\");\n        System.out.println(k);\n        for(int i=0;i<k;i++){\n            System.out.print(Integer.toString(k-1)+\" \");\n            for(int j=0;j<k-1;j++){\n                System.out.print(Integer.toString(res[i][j])+\" \");\n            }\n            System.out.println(\"\");\n        }\n    }\n    static int findK(int n){\n        int k=1;\n        while(k*(k-1)<=2*n){\n            if(k*(k-1)==2*n) return k;\n            k++;\n        }\n        return -1;\n    }\n}\n", "label": 0}, {"id": 357, "code1": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\n \nclass Main implements Runnable {\n  // static Scanner in;\n  static FastReader in;\n  static PrintWriter out;\n  static int[][] dirs8 = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1}};\n  static int[][] dirs = {{0, -1}, {1, 0}, {0, +1}, {-1, 0}};\n \n  static int[][] E;\n  // static List<int[]>[] adj;\n  static List<Integer>[] adj;\n  static int[] vis;\n \n  static long INFL = (long) 1e15 + 7;\n  static int INF = (int) 1e9 + 7;\n  static int mod = 998244353;\n  \n  static int T, n, m, k, count, cur, w;\n  static boolean flag;\n  static int[] a, b;\n  static int[][] map;\n\n  static int[] par;\n  static boolean[] dp;\n\n  static void solve() throws Exception {\n    n = in.nextInt();\n    k = in.nextInt();\n    a = new int[n]; \n    for (int i = 0; i < n; i++) {a[i] = in.nextInt();}\n    dp = new boolean[k + 1];\n    // dp[i]: win(true) or loss(false) if \"I\" have i stones left and I am to play this round\n    dp[0] = false;\n    for (int i = 1; i <= k; i++) {\n      for (int x : a) {\n        if (x > i) {break;}\n        if (!dp[i - x]) {dp[i] = true; break;}\n      }\n    }\n    out.println(dp[k] ? \"First\" : \"Second\");\n  }\n\n\n  public static void main(String[] args) throws Exception {\n \n    // in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n    in = new FastReader();\n    out = new PrintWriter(System.out);\n \n    // int numOfTests = in.nextInt();\n    // for (int caseNum = 1; caseNum <= numOfTests; caseNum++) {\n    //   // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    //   // t.start();\n    //   // t.join();\n    //   solve();\n    // }\n \n    // // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    // // t.start();\n    // // t.join();\n    solve();\n \n    out.flush();\n    out.close();\n  }\n \n  @Override\n  public void run() {\n    try {\n      solve();\n    } catch (Exception e) {\n      e.printStackTrace(); \n    }\n  }\n \n  static class FastReader {\n    public BufferedReader br; \n    StringTokenizer st; \n    public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));} \n    String next() { \n      while (st == null || !st.hasMoreElements()) { \n          try {st = new StringTokenizer(br.readLine());} \n          catch (IOException e) {e.printStackTrace();} \n      } \n      return st.nextToken(); \n    } \n    int nextInt() {return Integer.parseInt(next());} \n    long nextLong() {return Long.parseLong(next());} \n    double nextDouble() {return Double.parseDouble(next());} \n    String nextLine() {\n      String str = \"\"; \n        try {str = br.readLine();} \n        catch (IOException e) {e.printStackTrace();} \n        return str; \n    }\n  }\n\n  static void as(boolean result) throws Exception {\n    if (!result) {\n      throw new Exception();\n    }\n  }\n\n  static int modInverse(int a, int m) { \n    int m0 = m; \n    int y = 0, x = 1; \n    if (m == 1) {return 0;} \n    while (a > 1) { \n      // q is quotient \n      int q = a / m; \n      int t = m; \n      // m is remainder now, process \n      // same as Euclid's algo \n      m = a % m; \n      a = t; \n      t = y; \n      // Update x and y \n      y = x - q * y; \n      x = t; \n    } \n    // Make x positive \n    if (x < 0) \n      x += m0; \n    return x; \n  } \n} \n", "code2": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "label": 0}, {"id": 390, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] field;\n\tstatic String[][] dp;\n\tstatic int h,w;\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tw = cin.nextInt();\n\t\t\th = cin.nextInt();\n\t\t\tif(w+h==0)break;\n\t\t\tfield=new int[h][w];\n\t\t\tdp=new String[h][w];\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tString s = cin.next();\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tdp[i][j]=\"\";\n\t\t\t\t\tif(Character.isDigit(s.charAt(j))){\n\t\t\t\t\t\tfield[i][j]=s.charAt(j)-'0';\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tfield[i][j]=-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<w;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[0][i]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[0][i]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[0][i-1].equals(\"0\")&&!dp[0][i-1].equals(\"\")){\n\t\t\t\t\t\t\tdp[0][i]=dp[0][i-1]+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[i][0]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[i][0]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[i-1][0].equals(\"0\")&&!dp[i-1][0].equals(\"\")){\n\t\t\t\t\t\t\tdp[i][0]=dp[i-1][0]+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tString ans=\"0\";\n\t\t\tfor(int i = 1;i<h;i++){\n\t\t\t\tfor(int j = 1;j<w;j++){\n\t\t\t\t\tif(field[i][j]==-1)continue;\n\t\t\t\t\tString s1=dp[i-1][j]+field[i][j];\n\t\t\t\t\tString s2=dp[i][j-1]+field[i][j];\n\t\t\t\t\tString s3=field[i][j]+\"\";\n\t\t\t\t\tif(big(s1,s2)>=0){\n\t\t\t\t\t\tif(big(s1,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(big(s2,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twhile(dp[i][j].charAt(0)=='0'&&dp[i][j].length()>1){\n\t\t\t\t\t\tdp[i][j]=dp[i][j].substring(1,dp[i][j].length());\n\t\t\t\t\t}\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//output();\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\tstatic int big(String s1,String s2){\n\t\tif(s1.length()==s2.length()){\n\t\t\treturn s1.compareTo(s2);\n\t\t}\n\t\treturn s1.length()-s2.length();\n\t}\n\tstatic void output(){\n\t\tfor(int i = 0;i<h;i++){\n\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\tSystem.out.print(dp[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println();\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 573, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] days={\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\"};\n\t\twhile(sc.hasNextInt()){\n\t\t\tint month=sc.nextInt();\n\t\t\tint day=sc.nextInt();\n\t\t\tint a=modd(month);\n\t\t\tint b=a+day;\n\t\t\tif(month==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif((b-1)%7==0){\n\t\t\t\tSystem.out.println(days[0]);\n\t\t}else if((b-1)%7==1){\n\t\t\tSystem.out.println(days[1]);\n\t\t}else if((b-1)%7==2){\n\t\t\tSystem.out.println(days[2]);\n\t\t}else if((b-1)%7==3){\n\t\t\tSystem.out.println(days[3]);\n\t\t}else if((b-1)%7==4){\n\t\t\tSystem.out.println(days[4]);\n\t\t}else if((b-1)%7==5){\n\t\t\tSystem.out.println(days[5]);\n\t\t}else if((b-1)%7==6){\n\t\t\tSystem.out.println(days[6]);\n\t\t}\n\t}\n\n\t}\n\tpublic static int modd(int month){\n\t\tint[] months={31,29,31,30,31,30,31,31,30,31,30,31};\n\t\tint a=0;\n\t\tfor(int i=0; i<=month-2; i++){\n\t\t\ta+=months[i];\n\t\t}\n\n\t\treturn a;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}", "code2": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        long[] b = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextLong();\n        }\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextLong();\n        }\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += b[i] - a[i];\n        }\n\n        long cnt = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] < b[i]) {\n                cnt += (b[i] - a[i] + 1) / 2;\n            }\n        }\n        if (cnt <= sum) {\n            System.out.println(\"Yes\");\n            return;\n        }\n        System.out.println(\"No\");\n    }\n}\n", "label": 0}, {"id": 282, "code1": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/10 10:58 \u4e0b\u5348\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.next();\n        long sum = 0;\n        int length = s.length();\n        for(int i = 0;i<length;i++){\n            sum += (s.charAt(i)-'0');\n        }\n        System.out.println(sum % 9==0?\"Yes\":\"No\");\n    }\n}\n", "code2": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "label": 0}, {"id": 514, "code1": "import java.util.ArrayList;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\n/**\n * Created by shoya on 2017/04/12.\n */\npublic class Main {\n    public static void main(String... args) {\n        Scanner sc = new Scanner(System.in);\n        int V = sc.nextInt();\n        int E = sc.nextInt();\n        int r = sc.nextInt();\n        DijkstraClass dijkstra = new DijkstraClass(V, E, r);\n        for (int i = 0; i < E; i++) {\n            int s = sc.nextInt();\n            int d = sc.nextInt();\n            int c = sc.nextInt();\n            dijkstra.addDistande(s, d, c);\n        }\n        int[] dist = dijkstra.dikstra();\n        for (int i = 0; i < dist.length; i++){\n            if (dist[i] == 1 << 30)\n                System.out.println(\"INF\");\n            else\n                System.out.println(dist[i]);\n        }\n        return;\n    }\n\n\n    private static class DijkstraClass {\n        class edge{\n            int dest, cost;\n            edge(int dest, int cost){\n                this.dest = dest;\n                this.cost = cost;\n            }\n        }\n\n        private final int INF = 1 << 30;\n        private int S;\n        private int V;\n        private ArrayList<ArrayList<edge>> edgesOfNodes = new ArrayList<ArrayList<edge>>();\n\n        DijkstraClass(int V, int E, int Start){\n            this.S = Start;\n            this.V = V;\n            for (int i = 0; i < V; i++)\n                edgesOfNodes.add(new ArrayList<edge>());\n        }\n\n        void addDistande(int source, int dest, int cost){\n            edgesOfNodes.get(source).add(new edge(dest, cost));\n        }\n\n\n        int[] dikstra(){\n            class costAndNode implements Comparable {\n                int cost, node;\n                costAndNode(int cost, int node){\n                    this.cost = cost;\n                    this.node = node;\n                }\n                @Override\n                public int compareTo(Object o) {\n                    return this.cost - ((costAndNode) o).cost;\n                }\n            }\n\n            PriorityQueue<costAndNode> pque = new PriorityQueue<costAndNode>();\n            int[] distances = new int[V];\n            for (int i = 0; i < V; i++)\n                distances[i] = INF;\n            distances[S] = 0;\n\n            pque.add(new costAndNode(0, S));\n            while (!pque.isEmpty()){\n                costAndNode item = pque.poll();\n                if (distances[item.node] < item.cost)\n                    continue;\n\n                //System.out.printf(\"Focusing on Node %d\\n\", item.node);\n                //for (int i = 0; i < V; i++)\n                //    System.out.printf(\"%d \", distances[i]);\n                //System.out.println();\n\n                for (edge e : edgesOfNodes.get(item.node)) {\n                    //System.out.printf(\"Node %d -> %d, Cost %d -> %d\\n\",\n                    //        item.node, e.dest, distances[e.dest],\n                    //        distances[item.node] + e.cost);\n                    if (distances[e.dest] > distances[item.node] + e.cost) {\n                        distances[e.dest] = distances[item.node] + e.cost;\n                        pque.add(new costAndNode(distances[e.dest], e.dest));\n                    }\n                }\n            }\n\n            return distances;\n        }\n\n    }\n}", "code2": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)924844033;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint ai = io.nextInt();\n\t\t\tint ao = io.nextInt();\n\t\t\tint at = io.nextInt();\n\t\t\tint aj = io.nextInt();\n\t\t\tint al = io.nextInt();\n\t\t\tint as = io.nextInt();\n\t\t\tint az = io.nextInt();\n\t\t\t\n\t\t\tlong ans = 0;\n\t\t\t\n\t\t\tint cnt = aj % 2 + al % 2 + ai % 2;\n\t\t\tif (cnt >= 2) {\n\t\t\t\tif (aj > 0 && al > 0 && ai > 0) {\n\t\t\t\t\tai--;\n\t\t\t\t\taj--;\n\t\t\t\t\tal--;\n\t\t\t\t\tans += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans += ao;\n\t\t\tans += ai / 2 * 2;\n\t\t\tans += aj / 2 * 2;\n\t\t\tans += al / 2 * 2;\n\t\t\t\n\t\t\tio.out.println(ans);\n\t\t}\n\t}\n\t\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "label": 0}, {"id": 652, "code1": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\nimport java.util.function.*;\nimport static java.lang.System.out;\n\npublic final class Main {\n    public static void main(String[] args) throws Exception {\n        try (var input = new Reader()) {\n            int k = input.nextInt();\n            int a = input.nextInt();\n          \tint b = input.nextInt();\n          \tfor (int i = a; i <= b; ++i) {\n              \tif (i % k == 0) {\n                  out.printf(\"OK%n\");\n                  return;\n                }\n            }\n          \tout.printf(\"NG%n\");\n        }\n    }\n\n    private static final class Reader implements AutoCloseable {\n        private final int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private FileInputStream fis;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        private Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private Reader(String filename) throws IOException {\n            fis = new FileInputStream(filename);\n            din = new DataInputStream(fis);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') { break; }\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        private int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg) { c = read(); }\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) { buffer[0] = -1; }\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) { fillBuffer(); }\n            return buffer[bufferPointer++];\n        }\n\n        @Override\n        public void close() throws Exception {\n            if (fis != null) {\n                fis.close();\n            }\n\n            if (din != null) {\n                din.close();\n            }\n        }\n    }\n}\n\n", "code2": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "label": 0}, {"id": 72, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "label": 1}, {"id": 126, "code1": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "label": 1}, {"id": 540, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n        int[] a = new int[N];\n        for (int i=0; i<N; i++) {\n            a[i] = sc.nextInt();\n        }\n\n        int[] ans = solve(N, a);\n\n        for (int i=0; i<N; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n\n    private static int[] solve(int N, int[] a) {\n        int[] ans = new int[N];\n        int total = Math.abs(a[0]) + Math.abs(a[N-1]);\n\n        for (int i=0; i<N-1; i++) {\n            total += Math.abs(a[i+1] - a[i]);\n        }\n\n        for (int i=0; i<N; i++) {\n            ans[i] = total;\n\n            if (i == 0) {\n                if (0 <= a[i] && a[i] <= a[i+1]\n                        || a[i+1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            } else if (i == N-1) {\n                if (0 <= a[i] && a[i] <= a[i-1]\n                        || a[i-1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i-1]) + Math.abs(a[i-1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n            else if (a[i-1] <= a[i] && a[i] <= a[i+1]\n                    || a[i+1] <= a[i] && a[i] < a[i-1]) {\n//                System.err.println(\"ans[\" + i + \"] : skip\");\n                continue;\n            } else {\n                ans[i] = total - Math.abs(a[i] - a[i-1]) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - a[i-1]);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n        }\n\n        return ans;\n    }\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleClocks solver = new CMultipleClocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleClocks {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            int N = in.nextInt();\n            long[] T = in.nextLongArray(N);\n            long ans = T[0];\n            for (int i = 1; i < N; i++) {\n                long gcd = gcd(ans, T[i]);\n                ans = T[i] * (ans / gcd);\n            }\n            out.println(ans);\n        }\n\n        private static long gcd(long m, long n) {\n            if (m < n) return gcd(n, m);\n            if (n == 0) return m;\n            return gcd(n, m % n);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 389, "code1": "\nimport java.util.Scanner;\n\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int W = sc.nextInt();\n\t\t\tfinal int H = sc.nextInt();\n\t\t\t\n\t\t\tif(W == 0  && H == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint[][] map = new int[H][W];\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tchar[] input = sc.next().toCharArray();\n\t\t\t\t\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif('0' <= input[j] && input[j] <= '9'){\n\t\t\t\t\t\tmap[i][j] = input[j] - '0';\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmap[i][j] = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint[][] len = new int[H][W];\n\t\t\tshort[][][] dp = new short[H][W][H+W+1];\n\t\t\t\n\t\t\tint max = 0;\n\t\t\tint m_x = -1;\n\t\t\tint m_y = -1;\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif(map[i][j] < 0){\n\t\t\t\t\t\tdp[i][j][0] = -1;\n\t\t\t\t\t\tlen[i][j] = -1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i == 0 && j == 0){\n\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t}else if(j == 0){\n\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len +  (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(i == 0){\n\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinal int left_len = len[i][j-1];\n\t\t\t\t\t\tfinal int up_len = len[i-1][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(left_len == -1 && up_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else if(left_len > up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else if(left_len < up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinal int size = len[i][j-1];\n\t\t\t\t\t\t\tboolean left_f = true;\n\t\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\t\tif(dp[i-1][j][k] < dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(dp[i-1][j][k] > dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(left_f){\n\t\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(max < len[i][j]){\n\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t}else if(max == len[i][j]){\n\t\t\t\t\t\tfinal int size = len[i][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\tif(dp[m_y][m_x][k] < dp[i][j][k]){\n\t\t\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}else if(dp[m_y][m_x][k] > dp[i][j][k]){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t/*\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tSystem.out.printf(\"%2d \", len[i][j]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\t*/\n\t\t\tfor(int i = 0; i < max; i++){\n\t\t\t\tSystem.out.print(dp[m_y][m_x][i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n\n}", "code2": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 492, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        PrintWriter out = new PrintWriter(System.out);\n        InputStreamScanner in = new InputStreamScanner(System.in);\n        new Main().solve(in, out);\n        out.flush();\n    }\n\n    private void solve(InputStreamScanner in, PrintWriter out) {\n        String s = in.next();\n\n        long t = 0;\n        for (int i = 0; i < 1 << (s.length() - 1); i++) {\n            int p = 0;\n            for (int j = 0; j < s.length() - 1; j++) {\n                if ((1 & i >> j) == 1) {\n                    t += Long.parseLong(s.substring(p, j + 1));\n                    p = j + 1;\n                }\n            }\n            t += Long.parseLong(s.substring(p));\n        }\n\n        out.println(t);\n    }\n\n    static class InputStreamScanner {\n\n        private InputStream in;\n\n        private byte[] buf = new byte[1024];\n        private int len = 0;\n        private int off = 0;\n\n        InputStreamScanner(InputStream in)\t{\n            this.in = in;\n        }\n\n        String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); !isSpace(b);){\n                sb.appendCodePoint(b);\n                b = read();\n            }\n            return sb.toString();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        char nextChar() {\n            return (char)skip();\n        }\n\n        int skip() {\n            for (int b; (b = read()) != -1;) {\n                if (!isSpace(b)) {\n                    return b;\n                }\n            }\n            return -1;\n        }\n\n        private boolean isSpace(int c) {\n            return c < 33 || c > 126;\n        }\n\n        private int read() {\n            if (len == -1) {\n                throw new InputMismatchException(\"End of Input\");\n            }\n            if (off >= len){\n                off = 0;\n                try {\n                    len = in.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException(e.getMessage());\n                }\n                if (len <= 0) {\n                    return -1;\n                }\n            }\n            return buf[off++];\n        }\n    }\n}", "label": 0}, {"id": 730, "code1": "\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tC();\n\t}\n\t\n\tpublic static void A() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s1 = sc.next();\n\t\tString s2 = sc.next();\n\t\tfor(int i=0;i<3;i++) {\n\t\t\tif(s1.charAt(i)!=s2.charAt(2-i)) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t}\n\t\n\t// 1\u304b\u3089\u9806\u306b\uff12\u4e57\u3092\u8a08\u7b97\u3057\u3066\u3001N\u3092\u8d85\u3048\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u3002 O(root(N))\n\t//\uff12\u5206\u63a2\u7d22\u3059\u308b\u306a\u3089\u3001O(logN)\n\t// \u4e8c\u5206\u63a2\u7d22\u3067\u3001N\u306e\uff12\u4e57\u3092\u8d85\u3048\u306a\u3044\u6700\u5c0f\u306e\u5e73\u65b9\u6570\u3092\u767a\u898b\n\tpublic static long binsearchN2(long left, long right, int N) {\n\t\tif(left >= right) return (long) Math.pow(right, 2);\n\t\tlong mid = (left+right)/2;\n\t\tif(Math.pow(mid, 2) > N ) return binsearchN2(left, mid-1, N);\n\t\telse {\n\t\t\t//\u7121\u9650\u30eb\u30fc\u30d7\u3092\u9632\u3050\u3000\u518d\u8d77\u3059\u308b\u6642\u306f\u5fc5\u305a\u3001\u63a2\u7d22\u7bc4\u56f2\u304c\uff11\u4ee5\u4e0a\u5c0f\u3055\u304f\u306a\u308b\n\t\t\tif(Math.pow(mid+1, 2) > N) return (long) Math.pow(mid, 2) ;\n\t\t\telse return binsearchN2(mid+1,right, N);\n\t\t}\n\t}\n\t\n\tpublic static void B() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tSystem.out.println(binsearchN2(0,N,N));\n\t}\n\n\t// B\u3092\u4e2d\u5fc3\u306b\u3057\u3066\u4e8c\u5206\u63a2\u7d22\u3057\u3066A\u3068C\u306e\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u308b\n\t//\u3000A\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u3068\u3001O(N^2)\n\t\n\t// B\u3092\u8d85\u3048\u306a\u3044\u8981\u7d20\u6570\u3092\u8fd4\u3059\n\tpublic static void C() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tdouble[] A=new double[N],  C = new double[N];\n\t\tint[] B=new int[N];\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tA[i] = sc.nextDouble();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tB[i] = sc.nextInt();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tC[i] = sc.nextDouble();\n\t\t}\n\t\tArrays.sort(A);\n\t\tArrays.sort(B);\n\t\tArrays.sort(C);\n\t\tlong sum = 0;\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tdouble b = B[i];\n\t\t\tsum += numlessB(A,b)*(long)numlargerB(C,b);\n\t\t}\n\t\tSystem.out.println(sum);\n\t\t\n\t}\n\t//B\u3088\u308a\u3082\u5c0f\u3055\u3044\u8981\u7d20\u306e\u6570\u3000==B\u306f\u542b\u307e\u306a\u3044 B\u3092\u5c11\u3057\u305a\u3089\u3059\n\tpublic static int numlessB(double[] A, double B){\n\t\tint idx = Arrays.binarySearch(A, B-0.1);\n\t\treturn -idx-1;\n\t}\n\tpublic static int numlargerB(double[] A, double B) {\n\t\tint idx = Arrays.binarySearch(A, B+0.1);\n\t\treturn A.length-(-idx-1);\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int [] h = new int [N];\n        for(int i=0; i<N; i++){\n            h[i] = sc.nextInt();\n        }\n        Arrays.sort(h);\n        long min = 0;\n        long max = 1000000000;\n        long mid = 0;\n        while(max-min>1){\n            mid = max-(max-min)/2;\n            if(judge(mid,h,N,B,A-B)){\n                max = mid;\n            }else{\n                min = mid;\n            }\n        }\n        if(!judge(mid,h,N,B,A-B))mid++;\n        System.out.println(mid);\n    }\n    static boolean judge(long mid, int[]h, int N, int B, double C){\n        long Z=0;\n        for(int i=N-1; i>=0; i--){\n            long tmp = h[i]-mid*B;\n            if(tmp>0){\n                Z+=((long)(Math.ceil(tmp/C)));\n            }else{\n                break;\n            }\n        }\n        if(Z>mid)return false;\n        return true;\n    }\n}\n", "label": 0}, {"id": 21, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "code2": "\n\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong H = scan.nextLong();\n\t\tlong W = scan.nextLong();\n\n\t\tif (H == 1 || W == 1) {\n\t\t\tSystem.out.println(1);\n\t\t} else if ((H * W) % 2 == 0) {\n\t\t\tSystem.out.println(H * W / 2);\n\t\t} else {\n\t\t\tSystem.out.println((H * W / 2) + 1);\n\t\t}\n\t}\n\n}\n", "label": 1}, {"id": 531, "code1": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n        int[] a = new int[N];\n        for (int i=0; i<N; i++) {\n            a[i] = sc.nextInt();\n        }\n\n        int[] ans = solve(N, a);\n\n        for (int i=0; i<N; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n\n    private static int[] solve(int N, int[] a) {\n        int[] ans = new int[N];\n        int total = Math.abs(a[0]) + Math.abs(a[N-1]);\n\n        for (int i=0; i<N-1; i++) {\n            total += Math.abs(a[i+1] - a[i]);\n        }\n\n        for (int i=0; i<N; i++) {\n            ans[i] = total;\n\n            if (i == 0) {\n                if (0 <= a[i] && a[i] <= a[i+1]\n                        || a[i+1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            } else if (i == N-1) {\n                if (0 <= a[i] && a[i] <= a[i-1]\n                        || a[i-1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i-1]) + Math.abs(a[i-1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n            else if (a[i-1] <= a[i] && a[i] <= a[i+1]\n                    || a[i+1] <= a[i] && a[i] < a[i-1]) {\n//                System.err.println(\"ans[\" + i + \"] : skip\");\n                continue;\n            } else {\n                ans[i] = total - Math.abs(a[i] - a[i-1]) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - a[i-1]);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n        }\n\n        return ans;\n    }\n}", "label": 0}, {"id": 585, "code1": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        long[] b = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextLong();\n        }\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextLong();\n        }\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += b[i] - a[i];\n        }\n\n        long cnt = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] < b[i]) {\n                cnt += (b[i] - a[i] + 1) / 2;\n            }\n        }\n        if (cnt <= sum) {\n            System.out.println(\"Yes\");\n            return;\n        }\n        System.out.println(\"No\");\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int A = scanner.nextInt();\n        int B = scanner.nextInt();\n        int C = scanner.nextInt();\n\n        if ((A == B && A != C) || (A == C && A != B) || (B == C &&  A != B)) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}\n", "label": 0}, {"id": 762, "code1": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        double num = 0.006;\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        sc.nextLine();\n        int T = sc.nextInt();\n        int A = sc.nextInt();\n        sc.nextLine();\n        int num2 = Integer.MAX_VALUE;\n        int tmp;\n        int ans = 0;\n        for(int i = 0; i < N; i++){\n            tmp = sc.nextInt();\n            tmp = T*1000 - tmp*6;\n            tmp = Math.abs(A*1000 - tmp);\n            if(tmp < num2){\n                num2 = tmp;\n                ans = i+1;\n            }\n        }\n        System.out.println(ans);\n    }\n}", "code2": "\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String args[]){\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try{\n            String line;\n            while((line=br.readLine())!=null){  if(line.equals(\"\"))break;\n                String[] splited = line.split(\",\");\n                double xa=Double.parseDouble(splited[0]),ya=Double.parseDouble(splited[1]);\n                double xb=Double.parseDouble(splited[2]),yb=Double.parseDouble(splited[3]);\n                double xc=Double.parseDouble(splited[4]),yc=Double.parseDouble(splited[5]);\n                double xd=Double.parseDouble(splited[6]),yd=Double.parseDouble(splited[7]);\n                gra=(yc-ya)/(xc-xa);y0=ya;x0=xa;\n                boolean check1;\n                check1=linemaker(xb,yb)*linemaker(xd,yd)<0;\n      if(!check1){System.out.println(\"NO\");continue;}\n      gra=(yd-yb)/(xd-xb);y0=yb;x0=xb;\n                boolean check2=linemaker(xa,ya)*linemaker(xc,yc)<0;\n                if(check2)System.out.println(\"YES\");else System.out.println(\"NO\");\n                \n            }         \n        }catch(Exception e){e.printStackTrace();}        \n    }\n    static double gra=0,y0=0,x0=0;\n    static double linemaker(double x1, double y1){\n        return y1-y0-(gra*(x1-x0));\n    }\n}", "label": 0}, {"id": 627, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nclass Main {\n\tpublic static void main(String args[]) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tSolver solver = new Solver();\n\t\tsolver.init();\n\t\tsolver.readHead(in.readLine());\n\t\tfor (; solver.hasNext();) {\n\t\t\tsolver.readBody(in.readLine());\n\t\t}\n\t\tsolver.solve();\n\t}\n}\n\nclass Solver {\n\tint N;\n\tint cnt;\n\n\tpublic void init() {\n\t\tN = 0;\n\t\tcnt = 0;\n\t}\n\n\tpublic void readHead(String str) {\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tN = Integer.parseInt(strArr[0]);\n\t\t// System.out.println(N);\n\t\tM = Integer.parseInt(strArr[1]);\n\t\tAC = new int[N + 1];\n\t\tWA = new int[N + 1];\n\t}\n\n\tint M;\n\n\tpublic boolean hasNext() {\n\t\t// return cnt < N;\n\t\treturn cnt < M;\n\t}\n\n\tint[] AC;\n\tint[] WA;\n\n\tpublic void readBody(String str) {\n\t\t// System.out.println(str);\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tint p = Integer.parseInt(strArr[0]);\n\t\tif (AC[p] == 0) {\n\t\t\tif (\"AC\".equals(strArr[1]))\n\t\t\t\tAC[p] = 1;\n\t\t\telse {\n\t\t\t\tWA[p]++;\n\t\t\t}\n\t\t}\n\t\tcnt++;\n\t}\n\n\tpublic void solve() {\n\t\tint a = 0;\n\t\tint w = 0;\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tif (AC[i] > 0) {\n\t\t\t\ta++;\n\t\t\t\tw += WA[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a + \" \" + w);\n\t}\n}\n", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "label": 0}, {"id": 330, "code1": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = findK(n);\n        if(k==-1){\n            System.out.println(\"No\");\n            System.exit(0);\n        }\n        int[][] res = new int[k][k-1];\n        for(int i=0;i<k-1;i++) res[0][i] = i+1;\n        int[] index = new int[k];\n        for(int i=0;i<k;i++) index[i]=i;\n        for(int row=1;row<k;row++){\n            int idx = 0;\n            for(int j=0;j<row;j++) res[row][idx++] = res[j][index[j]++];\n            if(row==k-1) continue;\n            res[row][idx++]=res[row-1][k-2]+1;\n            while(idx<k-1){\n                res[row][idx] = res[row][idx-1]+1;\n                idx++;\n            }\n        }\n        System.out.println(\"Yes\");\n        System.out.println(k);\n        for(int i=0;i<k;i++){\n            System.out.print(Integer.toString(k-1)+\" \");\n            for(int j=0;j<k-1;j++){\n                System.out.print(Integer.toString(res[i][j])+\" \");\n            }\n            System.out.println(\"\");\n        }\n    }\n    static int findK(int n){\n        int k=1;\n        while(k*(k-1)<=2*n){\n            if(k*(k-1)==2*n) return k;\n            k++;\n        }\n        return -1;\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "label": 0}, {"id": 34, "code1": "import java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayDeque;\nimport java.util.Deque;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Main{\n          public static void main(String[] args) {\n                  Scanner scan = new Scanner(System.in);\n                  int count = 0;\n                  int N = scan.nextInt();\n                  int a[] = new int[N];\n                  for (int i = 0; i < N; i++) {\n                          a[i] = scan.nextInt();\n                  }\n                  for(int j = 1; j < N; j++){\n                          if (a[j-1] == a[j]) {\n                                  a[j] = 10001;\n                                  count++;\n                          }\n                  }\n                  System.out.println(count);\n                  }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "label": 1}, {"id": 93, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] pri = new int[25000];\n\t\tpri[0] = 2;\n\t\tpri[1] = 3;\n\t\tpri[2] = 5;\n\t\tpri[3] = 7;\n\t\tpri[4] = 11;\n\t\tpri[5] = 13;\n\t\tpri[6] = 17;\n\t\tpri[7] = 19;\n\t\tpri[8] = 23;\n\t\tpri[9] = 29;\n\t\tint fl = 0;\n\t\tint a=0;\n\t\tint b=0;\n\t\tint c=0;\n\t\twhile(pri[a]<=250000){\n\t\t\tfl++;\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\ta=0;\n\t\t\t\tb=0;\n\t\t\t\tc=0;\t\t\t\t\n\t\t\t\tif(i==0){\n\t\t\t\t\tc=1;\n\t\t\t\t}else if(i>0){\n\t\t\t\t\tc=pri[2+i];\n\t\t\t\t}\n\t\t\t\twhile(pri[a]!=0){\n\t\t\t\t\tif((30*fl + c)%pri[a]==0){\n\t\t\t\t\t\tb=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\tif(b==0){\n\t\t\t\t\tpri[a]=(30*fl + c);\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t}\n\t\t\n\t\tboolean exit = true;\n\t\twhile(exit==true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)exit=false;\n\t\t\tif(exit==true){\n\t\t\t\tint sum=-1;\n\t\t\t\tint i=0;\n\t\t\t\twhile(true){\n\t\t\t\t\tif(pri[i]>n)sum++;\n\t\t\t\t\tif(pri[i]>2*n)break;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(sum);\n\t\t\t}\n\t\t}\n\t}\n\t\n}", "code2": "import java.util.*;\npublic class Main {\n\tint n;\n\tint[] num;\n\tScanner stdin =new Scanner(System.in);\n\t\n\tvoid Solve(){\n\t\tnum=new int[21000000];\n\t\twhile(true){\n\t\t\tn=stdin.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tSystem.out.println(findPrime(n+1,2*n));\n\t\t}\n\t\t\n\t}\n\tint findPrime(int a,int b){\n\t\tint count=0;\n\t\tfor(int i=a;i<=b;i++){\n\t\t\tif(judgePrime(i)) count++;\n\t\t}\n\t\t\n\t\treturn count;\n\t}\n\t\n\tboolean judgePrime(int p){\n\t\tif(num[p]==1) return true;\n\t\tif(num[p]==-1) return false;\n\t\t\n\t\tif(p<4){\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tif(p%2==0){\n\t\t\t\tnum[p]=-1;\n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=3;i<p;i++){\n\t\t\t\tif(p%i==0){\n\t\t\t\t\tnum[p]=-1;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t\n\tpublic static void main(String args[]){\n\t\tMain m=new Main();\n\t\tm.Solve();\n\t}\n\t\n}", "label": 1}, {"id": 50, "code1": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "code2": "import java.io.*;\nimport java.util.StringTokenizer;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString buf;\n\n\n\t\ttry {\n\t\t\twhile (!(buf = br.readLine()).equals(\"0\")) {\n\t\t\t\tint n = Integer.parseInt(buf);\n\t\t\t\tint p_m = 0;\n\t\t\t\tint sum = 0;\n\t\t\t\tfor (int i=0;i<n;i++) {\n\t\t\t\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\t\t\t\tint p = Integer.parseInt(st.nextToken());\n\t\t\t\t\tint dd = Integer.parseInt(st.nextToken())+Integer.parseInt(st.nextToken());\n\t\t\t\t\tif (sum<dd) {\n\t\t\t\t\t\tp_m = p;\n\t\t\t\t\t\tsum = dd;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(p_m+\" \"+sum);\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}", "label": 1}, {"id": 266, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        long A = scanner.nextLong();\n        long B = scanner.nextLong();\n        long[] X = new long[N];\n        for (int i = 0; i < N; i++) {\n            X[i] = scanner.nextInt();\n        }\n        long ans = 0;\n        for (int i = 0; i < N - 1; i++) {\n            if (A * (X[i + 1] - X[i]) < B) {\n                ans += A * (X[i + 1] - X[i]);\n            } else {\n                ans += B;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tlong n = sc.nextInt();\n\t\tlong a = sc.nextInt();\n\t\tlong b = sc.nextInt();\n\t\tlong cities[] = new long[(int)n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tcities[i] = sc.nextInt();\n\t\t}\n\t\tlong poyasimi = 0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tlong sub = cities[i+1]-cities[i];\n\t\t\tpoyasimi += Math.min(a*sub, b);\n\t\t}\n\n\t\tSystem.out.println(poyasimi);\n\t}\n\n}", "label": 1}, {"id": 751, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "code2": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "label": 0}, {"id": 284, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    String[] s = sc.next().split(\"\");\n    int l =  s.length;\n    int count =0;\n    for(int i=0; i<l; i++){\n      if(s[i].equals(\"U\")||s[i].equals(\"D\")){\n        count +=1;\n        continue;\n      }\n\n\n      if(i%2==0){\n        if(s[i].equals(\"R\")){\n          count += 1;\n        }\n      }else{\n        if(s[i].equals(\"L\")){\n          count += 1;\n        }\n      }\n    }\n    if(count == l){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n\n\n\n\n  }\n}", "code2": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tlong h = stdIn.nextLong();\n\t\tlong w = stdIn.nextLong();\n\t\t\n\t\tlong cnt = 0;\n\t\tif(h==1 || w == 1) {\n\t\t\tSystem.out.println(1);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(h % 2 == 0 && w % 2 == 0) { //h\u5076\u6570\u3001w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else if(h % 2 == 0 && w % 2 != 0) { //h\u5076\u6570\u3001w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}else if( h % 2 != 0 && w % 2 == 0) { // h\u5947\u6570,w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else {                                //h\u5947\u6570,w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(cnt);\n\n\t}\n\n}\n", "label": 0}, {"id": 164, "code1": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        // ABC155A - Poor\n\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        String ans = \"No\";\n        if ((a == b && a == c) ||\n            (a != b && a != c && b != c)) {\n\n        } else {\n            ans = \"Yes\";\n        }\n\n        System.out.println(ans);\n    }\n}", "label": 1}, {"id": 511, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleGift solver = new CMultipleGift();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleGift {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            long X = in.nextLong();\n            long Y = in.nextLong();\n            int ans = 1;\n            long A = X;\n            while (A <= Y) {\n                A *= 2;\n                if (A > Y) break;\n                ans++;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\tboolean eof;\n\t\n\tlong go(long a, long b, long c) {\n\t\tif (a < 0 || b < 0 || c < 0) {\n\t\t\treturn Long.MIN_VALUE;\n\t\t}\n\t\t\n\t\treturn a + b + c - (a & 1) - (b & 1) - (c & 1);\n\t}\n\n\tvoid solve() throws IOException {\n\t\tlong i = nextLong();\n\t\tlong o = nextLong();\n\t\tlong t = nextLong();\n\t\tlong j = nextLong();\n\t\tlong l = nextLong();\n\t\tlong s = nextLong();\n\t\tlong z = nextLong();\n\t\t\n\t\tlong ans = o + Math.max(go(i, j, l), go(i - 1, j - 1, l - 1) + 3);\n\t\t\n\t\tout.println(ans);\n\t}\n\n\tMain() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main();\n\t}\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (Exception e) {\n\t\t\t\teof = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\teof = true;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}", "label": 0}, {"id": 556, "code1": "\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main \n{\n\tstatic HashMap<String, String> groupdef;\n\tstatic String firstgroup;\n\tstatic TreeSet<String> members;\n\tstatic TreeSet<String> checked;\n\t\n\tstatic void get(String g)\n\t{\n\t\tString con = groupdef.get(g);\n//\t\tSystem.out.println(\"Getting \" + g + \"...\");\n\t\tif(checked.contains(g))return;\n\t\t\n\t\tint start = 0;\n\t\tint mem = 0;\n\t\tfor(int i = 0; i < con.length(); i++)\n\t\t{\n\t\t\tif(con.charAt(i) == ',' || con.charAt(i) == '.')\n\t\t\t{\n\t\t\t\tString word = con.substring(start, i);\n\t\t\t\tstart = i+1;\n\t\t\t\t\n\t\t\t\tif(groupdef.containsKey(word))\n\t\t\t\t{\n\t\t\t\t\tget(word);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmembers.add(word);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchecked.add(g);\n//\t\tcache.put(g, mem);\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0)break;\n\t\t\tgroupdef = new HashMap<String, String>();\n//\t\t\tcache = new HashMap<String, Integer>();\n\t\t\tmembers = new TreeSet<String>();\n\t\t\tchecked = new TreeSet<String>();\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tString s = sc.next();\n\t\t\t\tint lim = s.indexOf(':');\n\t\t\t\tString groupname = s.substring(0, lim);\n\t\t\t\tString groupcon = s.substring(lim+1);\n\t\t\t\tif(i == 0)firstgroup = groupname;\n\t\t\t\tgroupdef.put(groupname, groupcon);\n\t\t\t}\n\t\t\t\n\t\t\tget(firstgroup);\n\t\t\tSystem.out.println(members.size());\n//\t\t\tSystem.out.println(members);\n\t\t}\n\t\t\n\n\t}\n\n}\n\n", "code2": "import java.util.*;\nclass Main\n{\n    static long mod = 1000000007;\n    public static void main (String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        for(int i = 0; i < n; i++){\n            a[i] = sc.nextLong();\n        }\n        long[] b = new long[n+1];\n        b[0] = 0;\n        for(int i = 1; i <= n; i++){\n            b[i] = (b[i-1] + pow(i, mod - 2)) % mod;\n        }\n        long ans = 0;\n        for(int i = 0; i < n; i++){\n            ans += a[i] * (b[i+1] + b[n - i] - 1);\n            ans %= mod;\n        }\n        for(int i = 1; i <= n; i++){\n            ans *= i;\n            ans %= mod;\n        }\n        System.out.println(ans);\n    }\n    static long pow(long a, long p){\n        if(p == 0) return 1;\n        else if(p % 2 == 0){\n            long d = pow(a, p/2);\n            return d * d % mod;\n        }\n        else return pow(a, p-1) * a % mod;\n    }\n}", "label": 0}, {"id": 156, "code1": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n      BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\n\n      String line_1 = buf.readLine();\n      int n = Integer.parseInt(line_1);\n      int[] scores = new int[n];\n      String[] line_2 = buf.readLine().split(\" \");\n      for(int i=0; i<n; i++){\n        scores[i] = Integer.parseInt(line_2[i]);\n      }\n      Arrays.sort(scores);\n\n      StringBuilder t = new StringBuilder();\n             t.append(scores[0]);\n             for(int j = 1;j < n;j++) {\n                 t.append(\" \" + scores[j]);\n             }\n             System.out.println(t);\n    }\n  }", "label": 1}, {"id": 373, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] pri = new int[25000];\n\t\tpri[0] = 2;\n\t\tpri[1] = 3;\n\t\tpri[2] = 5;\n\t\tpri[3] = 7;\n\t\tpri[4] = 11;\n\t\tpri[5] = 13;\n\t\tpri[6] = 17;\n\t\tpri[7] = 19;\n\t\tpri[8] = 23;\n\t\tpri[9] = 29;\n\t\tint fl = 0;\n\t\tint a=0;\n\t\tint b=0;\n\t\tint c=0;\n\t\twhile(pri[a]<=250000){\n\t\t\tfl++;\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\ta=0;\n\t\t\t\tb=0;\n\t\t\t\tc=0;\t\t\t\t\n\t\t\t\tif(i==0){\n\t\t\t\t\tc=1;\n\t\t\t\t}else if(i>0){\n\t\t\t\t\tc=pri[2+i];\n\t\t\t\t}\n\t\t\t\twhile(pri[a]!=0){\n\t\t\t\t\tif((30*fl + c)%pri[a]==0){\n\t\t\t\t\t\tb=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\tif(b==0){\n\t\t\t\t\tpri[a]=(30*fl + c);\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t}\n\t\t\n\t\tboolean exit = true;\n\t\twhile(exit==true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)exit=false;\n\t\t\tif(exit==true){\n\t\t\t\tint sum=-1;\n\t\t\t\tint i=0;\n\t\t\t\twhile(true){\n\t\t\t\t\tif(pri[i]>n)sum++;\n\t\t\t\t\tif(pri[i]>2*n)break;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(sum);\n\t\t\t}\n\t\t}\n\t}\n\t\n}", "code2": "import java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString str=sc.next();\n\t\t\tStack<Integer> st=new Stack<Integer>();\n\t\t\tfor(int i=0;i<str.length();i++){\n\t\t\t\tif(st.isEmpty() || st.peek()==1 || str.charAt(i)=='S') st.add(str.charAt(i)=='S' ? 0 : 1);\n\t\t\t\telse st.pop();\n\t\t\t}\n\t\t\tSystem.out.println(st.size());\n\t\t}\n\t}\n}", "label": 0}, {"id": 147, "code1": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "label": 1}, {"id": 486, "code1": "\npublic class Main {\n\n  static int mod = 1000003;\n  static int[][] fif = enumFIF(mod * 3, mod);\n\n  private static void solve() {\n    int q = ni();\n\n    for (int i = 0; i < q; i++) {\n      int x = ni();\n      int d = ni();\n      int n = ni();\n      out.println(f(x, d, n));\n    }\n  }\n\n  private static long f(int x, int d, int n) {\n    if (x == 0) {\n      return 0;\n    } else if (d == 0) {\n      return pow(x, n, mod);\n    }\n\n    int y = (int) (x * invl(d, mod) % mod);\n    if (n >= mod || y % mod > (y + n - 1) % mod) {\n      return 0;\n    }\n\n    long z = fif[0][y + n - 1] * invl(fif[0][y - 1], mod) % mod;\n    z *= pow(d, n, mod);\n    z %= mod;\n\n    return z;\n  }\n\n  public static long pow(long a, long n, long mod) {\n    // a %= mod;\n    long ret = 1;\n    int x = 63 - Long.numberOfLeadingZeros(n);\n    for (; x >= 0; x--) {\n      ret = ret * ret % mod;\n      if (n << 63 - x < 0)\n        ret = ret * a % mod;\n    }\n    return ret;\n  }\n\n\n  public static int[][] enumFIF(int n, int mod) {\n    int[] f = new int[n + 1];\n    int[] invf = new int[n + 1];\n    f[0] = 1;\n    for (int i = 1; i <= n; i++) {\n      f[i] = (int) ((long) f[i - 1] * i % mod);\n    }\n    long a = f[n];\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    invf[n] = (int) (p < 0 ? p + mod : p);\n    for (int i = n - 1; i >= 0; i--) {\n      invf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n    }\n    return new int[][] {f, invf};\n  }\n\n  public static long invl(long a, long mod) {\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    return p < 0 ? p + mod : p;\n  }\n\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "label": 0}, {"id": 265, "code1": "import java.io.*;\nimport java.util.*;\nclass Main\n{\n    static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\tstatic FastScanner sc=new FastScanner(br);\n    static PrintWriter out=new PrintWriter(System.out);\n\tstatic Random rnd=new Random();\n\tstatic List<Long> list=new ArrayList<Long>();\n\t\n    public static void main(String args[]) throws Exception\n    {\n\t\tint n=sc.nextInt();long a1=sc.nextLong(),b1=sc.nextLong();long[] a=new long[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ta[i]=sc.nextLong();\n\t\t}\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tlist.add((a[i]-a[i-1])*a1);\n\t\t}\n\t\tlong ans=0;\n\t\tfor(int i=0;i<list.size();i++)\n\t\t{\n\t\t\tans+=Math.min(list.get(i),b1);\n\t\t}\n\t\tout.println(ans);out.close();\n    }\n}\nclass FastScanner\n{\n    BufferedReader in;\n    StringTokenizer st;\n\n    public FastScanner(BufferedReader in) {\n        this.in = in;\n    }\n\t\n    public String nextToken() throws Exception {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n\t\n\tpublic String next() throws Exception {\n\t\treturn nextToken().toString();\n\t}\n\t\n    public int nextInt() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public long nextLong() throws Exception {\n        return Long.parseLong(nextToken());\n    }\n\n    public double nextDouble() throws Exception {\n        return Double.parseDouble(nextToken());\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tlong n = sc.nextInt();\n\t\tlong a = sc.nextInt();\n\t\tlong b = sc.nextInt();\n\t\tlong cities[] = new long[(int)n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tcities[i] = sc.nextInt();\n\t\t}\n\t\tlong poyasimi = 0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tlong sub = cities[i+1]-cities[i];\n\t\t\tpoyasimi += Math.min(a*sub, b);\n\t\t}\n\n\t\tSystem.out.println(poyasimi);\n\t}\n\n}", "label": 1}, {"id": 259, "code1": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t    Scanner sc = new Scanner(System.in);   \n\t    \n\t    float A = sc.nextFloat();\n\t    float B = sc.nextFloat();\n\t    \n\t    System.out.println(Math.round((A + B) / 2));\n\t}    \n}\t", "code2": "import java.util.*;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc=new Scanner(System.in);\n    System.out.println((sc.nextInt()+sc.nextInt()+1)/2);\n  }\n}", "label": 1}, {"id": 764, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br =\n\t\t\t\tnew BufferedReader(new InputStreamReader(System.in));\n\t\tfor (String str; (str=br.readLine()) != null; ) {\n\t\t\tString[] data = str.split(\",\");\n\n\t\t\tdouble xa = Double.parseDouble(data[0]);\n\t\t\tdouble ya = Double.parseDouble(data[1]);\n\n\t\t\tdouble xb = Double.parseDouble(data[2]);\n\t\t\tdouble yb = Double.parseDouble(data[3]);\n\n\t\t\tdouble xc = Double.parseDouble(data[4]);\n\t\t\tdouble yc = Double.parseDouble(data[5]);\n\n\t\t\tdouble xd = Double.parseDouble(data[6]);\n\t\t\tdouble yd = Double.parseDouble(data[7]);\n\t\t\t/*\n\t\t\t * vector ab : (xb-xa, yb-ya)\n\t\t\t * vector ac\n\t\t\t * vector ad\n\t\t\t * vector bc : (xc-xb, yc-yb)\n\t\t\t * vector ba\n\t\t\t * vector bd\n\t\t\t * vector cd : (xd-xc, yd-yc)\n\t\t\t * vector ca\n\t\t\t * vector cb\n\t\t\t */\n\t\t\tVector2d a = new Vector2d(xa, ya);\n\t\t\tVector2d b = new Vector2d(xb, yb);\n\t\t\tVector2d c = new Vector2d(xc, yc);\n\t\t\tVector2d d = new Vector2d(xd, yd);\n\t\t\tif ( isSameSide(a, b, c, d)\n\t\t\t\t\t&& isSameSide(b, c, d, a)\n\t\t\t\t\t&& isSameSide(c, d, a, b) ) {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static class Vector2d {\n\t\tprivate double x;\n\t\tprivate double y;\n\n\t\tpublic Vector2d(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t// vecotr this - v\n\t\tpublic Vector2d minus(Vector2d v) {\n\t\t\treturn new Vector2d(this.x - v.x, this.y - v.y);\n\t\t}\n\t\t// outerProduct this x b\n\t\tpublic double op(Vector2d b) {\n\t\t\treturn this.x * b.y  -  this.y * b.x;\n\t\t}\n\t}\n\t/*\n\t * outerProduct\n\t * a = (a.x, a.y)\n\t * b = (b.x, b.y)\n\t */\n//\tpublic static double op(Vector2d a, Vector2d b) {\n//\t\treturn a.x * b.y  -  a.y * b.x;\n//\t}\n\n\t// line ab, point c, point d\n\tpublic static boolean isSameSide(\n\t\t\tVector2d a, Vector2d b, Vector2d c, Vector2d d) {\n\t\tVector2d ab = b.minus(a);\n\t\tVector2d ac = c.minus(a);\n\t\tVector2d ad = d.minus(a);\n//\t\tif ( op(ab, ac) > 0 && op(ab, ad) > 0 ) {\n\t\tif ( ab.op(ac) > 0 && ab.op(ad) > 0 ) {\n\t\t\treturn true;\n//\t\t} else if ( op(ab, ac) < 0 && op(ab, ad) < 0 ) {\n\t\t} else if ( ab.op(ac) < 0 && ab.op(ad) < 0 ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n}", "label": 0}, {"id": 30, "code1": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.text.DecimalFormat;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        DecimalFormat df = new DecimalFormat(\"0.00000\");\n        while (true)\n        {\n        \tint n = Integer.parseInt(br.readLine());\n        \tif (n == 0)\n        \t\tbreak;\n        \tString[] tensu = br.readLine().split(\" \");\n        \t\n        \tdouble sum = 0;\n        \tdouble asum = 0;\n        \tdouble average = 0;\n        \tdouble hensa = 0;\n        \tfor (int i = 0; i < n; i++)\n        \t{\n        \t\tsum += Double.parseDouble(tensu[i]);\n        \t}\n        \taverage = sum / n;\n        \tfor (int i = 0; i < n; i++)\n        \t{\n        \t\tasum += Math.pow(Double.parseDouble(tensu[i]) - average, 2);\n        \t}\n        \t\n        \thensa = Math.sqrt(asum / n);\n        \tSystem.out.println(df.format(hensa));\n        }\n    \t\n\t}\n}", "label": 1}, {"id": 372, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String args[]) {\n\tScanner sc = new Scanner(System.in);\n\n\twhile (true) {\n\t    int n = sc.nextInt();\n\t    int ans = 0;\n\t    if (n == 0) {\n\t\tbreak;\n\t    }\n\t    \n\t    ans = solve(n);\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static int solve(int n) {\n\t//int max = 123456 * 2;\n\t//int prime[] = new prime[123456 * 2 + 1];\n\tboolean is_prime[] = new boolean[123456 * 2 + 1];\n\tint count = 0;\n\n\t//int p = 0;\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t    is_prime[i] = true;\n\t}\n\n\tis_prime[0] = is_prime[1] = false;\n\tfor (int i = 2; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\t// prime[p++] = i;\n\t\tfor (int j = 2 * i; j <= 2 * n; j += i) {\n\t\t    is_prime[j] = false;\n\t\t}\n\t    }\n\t}\n\tfor (int i = n + 1; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\tcount++;\n\t    }\n\t}\n\t\n\treturn count;\n    }\n}", "code2": "import java.util.*;\npublic class Main{\npublic static void main(String[] args){\nScanner sc = new Scanner(System.in);\n  int Q = sc.nextInt();\n  for(int i=0;i<Q;i++){\n    long f = sc.nextLong();\n    long s = sc.nextLong();\n    long a = Math.max(f, s);\n    long b = Math.min(f, s);\n    long K = a*b;\n    long L = (long) Math.sqrt(K);\n    long M = (K-1)/L;\n    long N = Math.max(-1,M-b-1);\n    System.out.println(L+N+b-1);\n  }\n}}\n", "label": 0}, {"id": 688, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint n;\n\tlong mo = 1_000_000_000 + 7;\n\tlong[] fac = new long[3000000];\n\tlong[] ifac = new long[3000000];\n\tlong[] inv = new long[3000000];\n\t{\n\t\tfac[0] = 1;\n\t\tfor (int i = 1; i < fac.length; ++i) {\n\t\t\tfac[i] = i * fac[i - 1] % mo;\n\t\t}\n\t\tinv[1] = 1;\n\t\tfor (int i = 2; i < inv.length; ++i) {\n\t\t\tinv[i] = mo - inv[(int) (mo % i)] * (mo / i) % mo;\n\t\t}\n\t\tifac[0] = 1;\n\t\tfor (int i = 1; i < ifac.length; ++i) {\n\t\t\tifac[i] = ifac[i - 1] * inv[i] % mo;\n\t\t}\n\t}\n\n\tlong comb(int n, int k) {\n\t\treturn fac[n] * ifac[n - k] % mo * ifac[k] % mo;\n\t}\n\n\tlong g(int k) {\n\t\tif (2 * k < n)\n\t\t\treturn 0;\n\t\tint a = 2 * k - n;\n\t\tint b = n - k;\n\t\treturn comb(a - 1 + b, b - 1) * fac[k] % mo * fac[n - 1 - k] % mo;\n\t}\n\n\tlong f(int k) {\n\t\treturn (g(k) - g(k - 1) + mo) % mo;\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner();\n\t\tn = (int) sc.nextLong();\n\t\tlong ans = 0;\n\t\tfor (int i = (n + 1) / 2; i <= n - 1; ++i) {\n\t\t\tans = (ans + f(i) * i % mo) % mo;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n\tlong pow(long a, long n) {\n\t\tlong ret = 1;\n\t\tfor (; n > 0; n >>= 1, a = a * a % mo) {\n\t\t\tif (n % 2 == 1) {\n\t\t\t\tret = ret * a % mo;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tlong inv(long a) {\n\t\treturn pow(a, mo - 2);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tclass Scanner {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[ptr++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isPrintableChar(int c) {\n\t\t\treturn 33 <= c && c <= 126;\n\t\t}\n\n\t\tprivate void skipUnprintable() {\n\t\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\t\tptr++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskipUnprintable();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n\n}\n", "label": 0}, {"id": 703, "code1": "import java.lang.reflect.Array;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static boolean check(int a,int b,int mid){\n        if(a <= mid && b <= mid || a > mid && b > mid)return true;\n        return false;\n    }\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int array[] = new int[2 * n + 1];\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        for (int i = 1; i < 2 * n; i++)\n            array[i] = Integer.parseInt(st.nextToken());\n        array[0] = array[2 * n] = -1;\n        int infinity = (int) 1E9 + 5;\n        int low = 1;\n        int high = 2 * n;\n        TreeSet<Integer> zero;\n        TreeSet<Integer> ones;\n        while (low < high) {\n            int mid = (low + high) / 2;\n            int temp = -1;\n            zero = new TreeSet<>();\n            ones = new TreeSet<>();\n            ones.add(infinity);\n            ones.add(-infinity);\n            zero.add(infinity);\n            zero.add(-infinity);\n            for (int i = 1; i < 2 * n; i++) {\n                if (check(array[i],array[i - 1],mid) && i != 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n                if (check(array[i],array[i + 1],mid) && i != 2*n - 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n            }\n                int beforezero = zero.floor(n);\n                int afterzero = zero.ceiling(n);\n                int beforeone = ones.floor(n);\n                int afterone = ones.ceiling(n);\n                int beforemax = Math.max(beforeone, beforezero);\n                int aftermin = Math.min(afterone, afterzero);\n                int min = Math.min(aftermin - n, n - beforemax);\n                //System.out.println(\"1 \" + aftermin + \" \" + beforemax + \" \" + min + \" \" + beforezero + \" \" + afterzero + \" \" + beforeone + \" \" + afterone);\n                if (min == aftermin - n) {\n                    if (afterone < afterzero) temp = 1;\n                    else temp = 0;\n                }\n                if (min == n - beforemax) {\n                    if (beforeone < beforezero) temp = 0;\n                    else temp = 1;\n            }\n            if(min > n - 2){\n                if((n & 1) == 0)temp = (array[n] > mid) ? 0 : 1;\n                else temp = (array[n] > mid) ? 1 : 0;\n            }\n            //System.out.println(mid + \" \" + low + \" \" + high + \" \" + zero + \" \" + ones + \" \" + temp);\n            if (temp == 1) low = mid + 1;\n            else high = mid;\n        }\n        System.out.println(low);\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String args[]){\n        Scanner stdIn = new Scanner(System.in);\n        int n = stdIn.nextInt();\n        int c[] = new int[26];\n        int s[][] = new int[n][26];\n        \n        for(int i = 0; i < 26; i++){\n            c[i] = stdIn.nextInt();\n        }\n        \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < 26; j++){\n                s[i][j] = stdIn.nextInt();\n            }\n        }\n        \n        /* \n        for(int i = 0; i < n; i++){\n            int max = 0;\n            int index = 0;\n            for(int j = 0; j < 26; j++){\n                if(s[i][j] > max){\n                    max = s[i][j];\n                    index = j;\n                }\n            }\n            System.out.println(index + 1);\n        }\n        */\n        \n        for(int i = 1; i < n + 1; i++){\n            System.out.println(i % 26 + 1);\n        }\n        \n        //System.out.println(\"XXXXXXXX\");\n    }\n}\n", "label": 0}, {"id": 482, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "label": 0}, {"id": 547, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong m = Long.parseLong(sc.next());\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tm = lcm(m, Long.parseLong(sc.next()));\n\t\tSystem.out.println(m);\n\t}\n\tpublic static long lcm(long m, long n) {\n\t\tBigInteger M = new BigInteger(String.valueOf(m));\n\t\tBigInteger N = new BigInteger(String.valueOf(n));\n\t\tBigInteger G = new BigInteger(String.valueOf(gcd(m, n)));\n\t\treturn M.multiply(N).divide(G).longValue();\n\t}\n\tpublic static long gcd(long m, long n) {\n\t\tif (m < n) {\n\t\t\tlong tem = m;\n\t\t\tm = n;\n\t\t\tn = tem;\n\t\t}\n\t\tlong r = -1;\n\t\twhile (r != 0) {\n\t\t\tr = m % n;\n\t\t\tm = n;\n\t\t\tn = r;\n\t\t}\n\t\treturn m;\n\t}\n}", "code2": "\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main \n{\n\tstatic HashMap<String, String> groupdef;\n\tstatic String firstgroup;\n\tstatic TreeSet<String> members;\n\tstatic TreeSet<String> checked;\n\t\n\tstatic void get(String g)\n\t{\n\t\tString con = groupdef.get(g);\n//\t\tSystem.out.println(\"Getting \" + g + \"...\");\n\t\tif(checked.contains(g))return;\n\t\t\n\t\tint start = 0;\n\t\tint mem = 0;\n\t\tfor(int i = 0; i < con.length(); i++)\n\t\t{\n\t\t\tif(con.charAt(i) == ',' || con.charAt(i) == '.')\n\t\t\t{\n\t\t\t\tString word = con.substring(start, i);\n\t\t\t\tstart = i+1;\n\t\t\t\t\n\t\t\t\tif(groupdef.containsKey(word))\n\t\t\t\t{\n\t\t\t\t\tget(word);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmembers.add(word);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchecked.add(g);\n//\t\tcache.put(g, mem);\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0)break;\n\t\t\tgroupdef = new HashMap<String, String>();\n//\t\t\tcache = new HashMap<String, Integer>();\n\t\t\tmembers = new TreeSet<String>();\n\t\t\tchecked = new TreeSet<String>();\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tString s = sc.next();\n\t\t\t\tint lim = s.indexOf(':');\n\t\t\t\tString groupname = s.substring(0, lim);\n\t\t\t\tString groupcon = s.substring(lim+1);\n\t\t\t\tif(i == 0)firstgroup = groupname;\n\t\t\t\tgroupdef.put(groupname, groupcon);\n\t\t\t}\n\t\t\t\n\t\t\tget(firstgroup);\n\t\t\tSystem.out.println(members.size());\n//\t\t\tSystem.out.println(members);\n\t\t}\n\t\t\n\n\t}\n\n}\n\n", "label": 0}, {"id": 137, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n    int ab = a + b;\n    int bc = b + c;\n    int ac = a+c;\n\n    int result = Math.min(ab, Math.min(bc , ac));\n    System.out.println(result);\n  }\n}\n", "label": 1}, {"id": 719, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class Main{\n    public static void main (String[] args) throws java.lang.Exception {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                long cur = i * m + j * n - 2 * (i * j);\n                if (cur == k) {\n                    w.println(\"Yes\");\n                    w.close();\n                    return;\n                }\n            }\n        }\n        w.println(\"No\");\n        w.close();\n    }\n\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n\n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String nextString() {\n            return next();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\n  public static void main(String[] args) throws IOException\n  {\n    BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1);\n    String[] sl = r.readLine().split(\"[\\\\s]+\");\n    int n = Integer.parseInt(sl[0]);\n    int c = Integer.parseInt(sl[1]);\n    int d[][] = new int[30][30];\n    int count[][] = new int[3][30];\n\n    for(int i = 0; i < c; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < c; j++)\n      {\n        d[i][j] = Integer.parseInt(sl[j]);\n      }\n    }\n\n    for(int i = 0; i < n; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < n; j++)\n      {\n        count[(i + j) % 3][Integer.parseInt(sl[j]) - 1]++;\n      }\n    }\n    \n    int sel[] = new int[3];\n    int min = Integer.MAX_VALUE;\n    \n    for(sel[0] = 0; sel[0] < c; sel[0]++)\n    {\n      for(sel[1] = 0; sel[1] < c; sel[1]++)\n      {\n        if(sel[0] == sel[1])\n        {\n          continue;\n        }\n        for(sel[2] = 0; sel[2] < c; sel[2]++)\n        {\n          if(sel[1] == sel[2] || sel[0] == sel[2])\n          {\n            continue;\n          }\n          \n          int stress = 0;\n          for(int i = 0; i < 3; i++)\n          {\n            for(int j = 0; j < c; j++)\n            {\n              stress += count[i][j] * d[j][sel[i]];\n            }\n          }\n          min = Math.min(min, stress);\n        }\n      }\n    }\n    \n    System.out.println(min);\n\n  }\n\n\n}", "label": 0}, {"id": 121, "code1": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n\tScanner scan = new Scanner(System.in);\n\n\twhile (scan.hasNext()) {\n\t    int count = 0; // \u7d44\u307f\u5408\u308f\u305b\u306e\u6570\n\t    int n = scan.nextInt();\n\t    int x = scan.nextInt();\n\n\t    if (n==0 && x==0)\n\t\tbreak;\n\t    \n\t    for (int i=1; i<=n; i++) {\n\t\tfor (int j=i+1; j<=n; j++) {\n\t\t    for (int k=j+1; k<=n; k++) {\n\t\t\tif (i+j+k == x) {\n\t\t\t    count++;\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\n\t    System.out.println(count);\n\t}\n\t\n    }\n}", "label": 1}, {"id": 329, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint unko=sc.nextInt();\n\t\tboolean ike=false;\n\t\tint N=0;\n\t\tfor(int i=0; i<=500; i++) {\n\t\t\tif(unko==i*(i+1)/2) {\n\t\t\t\tike=true;\n\t\t\t\tN=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(unko<i*(i+1)/2) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ike) {\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\tSystem.out.println(N+1);\n\t\t\tint[][] ary=new int[N+1][N];\n\t\t\tint[] kaz=new int[N+2];\n\t\t\tfor(int i=0; i<=N; i++) {\n\t\t\t\tfor(int j=0; j<N; j++) {\n\t\t\t\t\tary[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<=N+1; i++) {\n\t\t\t\tkaz[i]=0;\n\t\t\t}\n\t\t\tint counter=1;\n\t\t\tfor(int i=1; i<=N+1; i++) {\n\t\t\t\tfor(int j=1; j<i; j++) {\n\t\t\t\t\tary[i-1][kaz[i-1]]=counter;\n\t\t\t\t\tkaz[i-1]++;\n\t\t\t\t\tary[j-1][kaz[j-1]]=counter;\n\t\t\t\t\tkaz[j-1]++;\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tString buri=\"\";\n\t\t\tfor(int i=0; i<N+1; i++) {\n\t\t\t\tburi=Arrays.toString(ary[i]);\n\t\t\t\tburi=buri.replaceAll(\",\",\"\");\n\t\t\t\tburi=buri.replace(\"[\",\" \");\n\t\t\t\tburi=buri.replace(\"]\",\"\");\n\t\t\t\tSystem.out.println(N+buri);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "label": 0}, {"id": 671, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.List;\n\npublic class Main {\n\n\tprivate static final String NO = \"No\";\n\tprivate static final String YES = \"Yes\";\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\tprivate List<Integer>[] g;\n\n\tprivate static final long MOD = 998244353;\n\tprivate static final int INF = Integer.MAX_VALUE;\n\n\tvoid solve() {\n\t\tint T = 1;\n\t\tfor (int i = 0; i < T; i++)\n\t\t\tsolve(i);\n\t}\n\n\tvoid solve(int T) {\n\t\tint n = ni();\n\t\twhile (!isPrime(n))\n\t\t\tn++;\n\t\tout.println(n);\n\t}\n\n\tprivate boolean isPrime(int n) {\n\t\tfor (int i = 2; i <= Math.sqrt(n); i++)\n\t\t\tif (n % i == 0)\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t// a^b\n\tlong power(long a, long b) {\n\t\tlong x = 1, y = a;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 != 0) {\n\t\t\t\tx = (x * y) % MOD;\n\t\t\t}\n\t\t\ty = (y * y) % MOD;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn x % MOD;\n\t}\n\n\tprivate long gcd(long a, long b) {\n\t\twhile (a != 0) {\n\t\t\tlong tmp = b % a;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\t\treturn b;\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\tprivate boolean vis[];\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate List<Integer> na2(int n) {\n\t\tList<Integer> a = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta.add(ni());\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl();\n\t\treturn a;\n\t}\n\n\tprivate long[][] nl(int n, int m) {\n\t\tlong[][] a = new long[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl(m);\n\t\treturn a;\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "label": 0}, {"id": 319, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport static java.lang.System.out;\n\npublic class Main {\n    static MyReader in = new MyReader();\n\n    public static void main(String[] args) {\n        int N = in.i();\n        int k = ((int)Math.sqrt(1 + 8 * N) + 1) / 2;\n        out.println(k * (k - 1) / 2 == N ? solve(k) : \"No\");\n    }\n\n    static String solve(int k) {\n        StringBuilder sb = new StringBuilder(\"Yes\\n\");\n        sb.append(k).append('\\n');\n\n        for (int i = 1; i < k; i++) {\n            sb.append(k - 1).append(' ');\n\n            int t = 1 + i * (i - 1) / 2;\n            for (int j = 1; j < i; j++) {\n                sb.append(t++).append(' ');\n            }\n\n            for (int j = i; j < k; j++) {\n                sb.append(t).append(' ');\n                t += j;\n            }\n            sb.append('\\n');\n        }\n\n        sb.append(k - 1).append(' ');\n        int t = 1;\n        for (int i = 2; i <= k; i++) {\n            sb.append(t).append(' ');\n            t += i;\n        }\n\n        return sb.toString();\n    }\n}\n\nclass MyReader extends BufferedReader {\n    char[] cbuf = new char[1024];\n    int head = 0;\n    int tail = 0;\n\n    MyReader() {\n        super(new InputStreamReader(System.in));\n    }\n\n    char next() {\n        if (head == tail) {\n            try {\n                tail = super.read(cbuf, 0, cbuf.length);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            head = 0;\n        }\n        return cbuf[head++];\n    }\n\n    void back() {\n        head--;\n    }\n\n    boolean minus() {\n        boolean minus;\n        while (true) {\n            char c = next();\n            if (!isDelimiter(c)) {\n                if (!(minus = c == '-')) back();\n                return minus;\n            }\n        }\n    }\n\n    void skip() {\n        while (isDelimiter(next()));\n        back();\n    }\n\n    char[] s(int N) {\n        char[] cbuf = new char[N];\n        read(cbuf, 0, N);\n        return cbuf;\n    }\n\n    public int read(char[] cbuf, int off, int len) {\n        skip();\n        int i;\n        for (i = 0; i < cbuf.length; i++) {\n            char c = next();\n            if (isDelimiter(c)) {\n                break;\n            }\n            cbuf[i] = c;\n        }\n        return i;\n    }\n\n    boolean isDelimiter(char c) {\n        return c == ' ' || c == '\\n' || c == '\\r';\n    }\n\n    int i() {\n        boolean minus = minus();\n        int n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n\n    int[] ii(final int N) {\n        int[] a = new int[N];\n        for (int j = 0; j < a.length; j++) a[j] = i();\n        return a;\n    }\n\n    long l() {\n        boolean minus = minus();\n        long n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n}\n", "label": 0}, {"id": 446, "code1": "import java.io.File;\nimport java.io.IOException;\nimport java.util.*;\n \npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\t//File file = new File(\"input.txt\");\n\t\t//Scanner in = new Scanner(file);\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tString SS = in.next();\n\t\tString T = in.next();\n\t\t\n\t\tint index = SS.length() - T.length();\n\t\t\n\t\twhile(index >= 0){\n\t\t\tString s = SS.substring(index, index + T.length());\n\t\t\t\n\t\t\tboolean tf = true;\n\t\t\tfor(int i = 0; i < T.length(); i++){\n\t\t\t\tif(s.charAt(i) != '?' && s.charAt(i) != T.charAt(i)){\n\t\t\t\t\ttf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(tf){\n\t\t\t\tSS = new StringBuilder(SS).replace(index, index + s.length(), T).toString();\n\t\t\t\tSS = SS.replace('?', 'a');\n\t\t\t\tSystem.out.println(SS);\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"UNRESTORABLE\");\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "label": 0}, {"id": 501, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        PrintWriter out = new PrintWriter(System.out);\n        InputStreamScanner in = new InputStreamScanner(System.in);\n        new Main().solve(in, out);\n        out.flush();\n    }\n\n    private void solve(InputStreamScanner in, PrintWriter out) {\n        String s = in.next();\n\n        long t = 0;\n        for (int i = 0; i < 1 << (s.length() - 1); i++) {\n            int p = 0;\n            for (int j = 0; j < s.length() - 1; j++) {\n                if ((1 & i >> j) == 1) {\n                    t += Long.parseLong(s.substring(p, j + 1));\n                    p = j + 1;\n                }\n            }\n            t += Long.parseLong(s.substring(p));\n        }\n\n        out.println(t);\n    }\n\n    static class InputStreamScanner {\n\n        private InputStream in;\n\n        private byte[] buf = new byte[1024];\n        private int len = 0;\n        private int off = 0;\n\n        InputStreamScanner(InputStream in)\t{\n            this.in = in;\n        }\n\n        String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); !isSpace(b);){\n                sb.appendCodePoint(b);\n                b = read();\n            }\n            return sb.toString();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        char nextChar() {\n            return (char)skip();\n        }\n\n        int skip() {\n            for (int b; (b = read()) != -1;) {\n                if (!isSpace(b)) {\n                    return b;\n                }\n            }\n            return -1;\n        }\n\n        private boolean isSpace(int c) {\n            return c < 33 || c > 126;\n        }\n\n        private int read() {\n            if (len == -1) {\n                throw new InputMismatchException(\"End of Input\");\n            }\n            if (off >= len){\n                off = 0;\n                try {\n                    len = in.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException(e.getMessage());\n                }\n                if (len <= 0) {\n                    return -1;\n                }\n            }\n            return buf[off++];\n        }\n    }\n}", "code2": "import java.util.*;\nimport java.io.*;\n\npublic class Main implements Runnable {\n    public static void main(String[] args) {\n        Thread.setDefaultUncaughtExceptionHandler((t,e)->System.exit(1));\n        // keep stack\n        new Thread(null, new Main(), \"\", 16 * 1024 * 1024).start();\n    }\n    public void run() {\n        FastScanner sc = new FastScanner();\n        PrintWriter out = new PrintWriter(System.out);\n        long X = sc.nextLong();\n        long Y = sc.nextLong();\n\n        long count = 1;\n        while(true) {\n            long A = X * 2;\n            if (Y < A) {\n                break;\n            }\n            X = A;\n            count++;\n        }\n        out.printf(\"%d\\n\", count);\n        out.flush();\n    }\n}\n\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        } else {\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private int readByte() {\n        if (hasNextByte()) {\n            return buffer[ptr++];\n        }\n        else {\n            return -1;\n        }\n    }\n\n    private static boolean isPrintableChar(int c) {\n        return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n        while (hasNextByte() && !isPrintableChar(buffer[ptr])) {\n            ptr++;\n        }\n    }\n\n    public boolean hasNext() {\n        skipUnprintable();\n        return hasNextByte();\n    }\n\n    public String next() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while (isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n\n    public int nextInt() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        int n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while (true) {\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            } else if (b == -1 || !isPrintableChar(b)) {\n                return minus ? -n : n;\n            } else {\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n\n    public long nextLong() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while (true) {\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            } else if (b == -1 || !isPrintableChar(b)) {\n                return minus ? -n : n;\n            } else {\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n}", "label": 0}, {"id": 747, "code1": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.awt.Point;\n\npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n    int n;\n    void solve()\n    {\n        n = ni();\n        int[] d  = new int[n+1];\n        d[0] = 0;\n        for(int i = 0; i < n; i++){\n            d[i+1] = ni();\n        }\n        n++;\n        boolean[] seen = new boolean[25];\n        int min = 0;\n        int ans = 0;\n        for(int i = 0; i <= 24; i++){\n            int[][] e = new int[n][2];\n            e[0][0] = i;\n            e[0][1] = i;\n            for(int j = 0; j < n-1; j++){\n                e[j+1][0] = (d[j+1]+i)%24;\n                e[j+1][1] = (-d[j+1]+i+24)%24;\n            }\n            int left = 1;\n            int right = 24;\n            while(left+1<right){\n                int res = (left+right)/2;\n                if(f(e,res,0,seen)) left = res;\n                else{\n                    right = res;\n                }\n            }\n            if(left>min){\n                // if(left==5){\n                //     out.println(i);\n                // }\n                if(left == 1){\n                    if(f(e,left,0,seen)){\n                        min = left;\n                    }\n                }\n                else min = left;\n            }\n        }\n\n        ans = min;\n        out.println(ans);\n    }\n\n    boolean f(int[][] d, int sub, int k, boolean[] seen){\n        if(k==n){\n            return true;\n        }\n        boolean res = false;\n        for(int i = 0; i < 2; i++){\n            boolean[] seenc  = new boolean[25];\n            for(int j = 0; j <= 24; j++) seenc[j] = seen[j];\n            seenc[d[k][i]] = true;\n            if(d[k][i]==0) seenc[24] = true;\n            if(d[k][i]==24) seenc[0] = true;\n            for(int j = 0; j <= 24; j++){\n                if(d[k][i]-sub < j && j < d[k][i]+sub) seenc[j] = true;\n                if(d[k][i]-sub < 0 && j > d[k][i]-sub+24) seenc[j] = true;\n                if(d[k][i]+sub > 24 && j < d[k][i]+sub-24) seenc[j] = true;\n            }\n            // for(int g = 0; g <= 24; g++){\n            //     if(seenc[g]) out.print(g);\n            // }\n            // out.println();\n            // out.println(d[k][i]);\n            // if(!seen[d[k][i]])out.println(\"ok\");\n            // else out.println(\"ng\");\n            if(!seen[d[k][i]]){\n                if(d[k][i]==0){\n                    if(!seen[24])res |= f(d, sub, k+1, seenc);\n                } \n                else if(d[k][i]==24){\n                    if(!seen[0])res |= f(d, sub, k+1, seenc);\n                } \n                else res |= f(d, sub, k+1, seenc);\n            }\n        }  \n        return res;\n    }   \n    \n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        \n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n\n    static class ArrayUtils {\n        public static void fill(double[][] array, double value) {\n            for (double[] a : array) Arrays.fill(a, value);\n        }\n \n        public static void fill(double[][][] array, double value) {\n            for (double[][] l : array) fill(l, value);\n        } \n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "label": 0}, {"id": 397, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "code2": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tpublic void calc() {\n\t\tsb = new StringBuilder();\n\n\n\t\tIO sc = new IO();\n\n\t\tint n = sc.nextInt();\n\t\tint[] t = sc.nextIntArray(n);\n\t\tint[] a = sc.nextIntArray(n);\n\n\n\t\tlong ans = 1;\n\t\t//BigInteger bi = new BigInteger(\"1\");\n\t\tint[] min = new int[n];\n\t\tint[] max = new int[n];\n\t\tArrays.fill(min, 1);\n\t\tArrays.fill(max, INF);\n\t\tint b = -1, nb = -1;\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(\"t\" + i);\n\t\t\tint ni = n-1-i;\n\t\t\tif (b != t[i]) {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t\tmin[i] = Math.max(min[i],t[i]);\n\t\t\t\tb = t[i];\n\t\t\t}else {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t}\n\t\t\tif (nb != a[ni]) {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t\tmin[ni] = Math.max(min[ni],a[ni]);\n\t\t\t\tnb = a[ni];\n\t\t\t}else {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t}\n\n\t\t}\n\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(min[i] + \":\" + max[i]);\n\t\t\tif (max[i] - min[i] < 0) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tans *= max[i] - min[i] +1;\n\t\t\tans %= C;\n\t\t\t//bi = bi.multiply(new BigInteger((max[i] - min[i] +1)+\"\" ));\n\n\t\t}\n\n\n\t\tSystem.out.println(ans);\n\t}\n\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}\n\n", "label": 0}, {"id": 0, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        int n = str.length();\n        int digitSum = 0;\n        for (int i = 0; i < n; i++)\n            digitSum += (str.charAt(i) - '0');\n        if(digitSum % 9 == 0) {\n            System.out.println(\"Yes\");\n        }\n        else {\n            System.out.println(\"No\");\n        }\n    }\n}\n\n", "code2": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/10 10:58 \u4e0b\u5348\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.next();\n        long sum = 0;\n        int length = s.length();\n        for(int i = 0;i<length;i++){\n            sum += (s.charAt(i)-'0');\n        }\n        System.out.println(sum % 9==0?\"Yes\":\"No\");\n    }\n}\n", "label": 1}, {"id": 12, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "label": 1}, {"id": 124, "code1": "import java.util.*;\npublic class Main {\n        static Scanner sc = new Scanner(System.in);\n        static void myout(Object t){System.out.println(t);}//standard output\n        static void myerr(Object t){System.err.println(t);}//standard error\n        static String getStr(){return sc.next();}\n        static int getInt(){return Integer.parseInt(getStr());}\n        static long getLong(){return Long.parseLong(getStr());}\n        static boolean isNext(){return sc.hasNext();}\n        static String[] mySplit(String str){return str.split(\"\");}\n        public static void main(String[] args){\n          int N = getInt();\n          int M = getInt();\n          if(N >= M){\n            myout(0);\n            return;\n          }\n          long output = 0;\n          ArrayList<Integer> list = new ArrayList<Integer>(M);\n          for(int i = 0; i < M; i++){\n            list.add(getInt());\n          }\n          Collections.sort(list);\n          //myout(list);\n          PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n          for(int i = 1; i < M; i++){\n            pq.add(Math.abs(list.get(i)-list.get(i-1)));\n          }\n          for(int i = 0; i < N-1; i++){\n            pq.poll();\n          }\n          while(pq.size() != 0){\n            output += pq.poll();\n          }\n          myout(output);\n        }\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u304b\u3089\n\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u307e\u3067\n}\n", "code2": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    int M = sc.nextInt();\n    int[] X = new int[M];\n    for(int i = 0;i < M;i++) X[i] = sc.nextInt();\n    Arrays.sort(X);\n    int[] A = new int[M-1];\n    for(int i = 0;i < M-1;i++) A[i] = X[i+1] - X[i];\n    Arrays.sort(A);\n    int ans = 0;\n    for(int i = 0;i < M - N;i++) ans = ans + A[i];\n    System.out.println(ans);\n  }\n}", "label": 1}, {"id": 699, "code1": "    import java.io.*;\n    import java.util.*;\n\n    public class Main {\n        public static void main(String[] args) throws IOException {\n            FastReader scan = new FastReader();\n            //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"taming.out\")));\n            PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n            Task solver = new Task();\n            //int t = scan.nextInt();\n            int t = 1;\n            for(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n            out.close();\n        }\n        static class Task {\n            boolean[][] matrix;\n            boolean[][] vis;\n            public void solve(int testNumber, FastReader sc, PrintWriter pw){\n                int n = sc.nextInt();\n                int m = sc.nextInt();\n                matrix = new boolean[n][m];\n                vis = new boolean[n][m];\n                long sum = 0;\n                for(int i=0;i<n;i++){\n                    String str = sc.nextLine();\n                    for(int j=0;j<m;j++){\n                        matrix[i][j]=(str.charAt(j)=='#');\n                    }\n                }\n                for(int i=0;i<n;i++){\n                    for(int j=0;j<m;j++){\n                        if(!vis[i][j]){\n                            int[] x = dfs(i,j,matrix[i][j]);\n                            sum+=((long)(x[0]))*x[1];\n                        }\n                    }\n                }\n                pw.println(sum);\n            }\n            public int[] dfs (int x, int y, boolean c){\n                int[] dx = {-1,1,0,0};\n                int[] dy = {0,0,-1,1};\n                if(x<0||y<0||x>=matrix.length||y>=matrix[0].length||vis[x][y]||matrix[x][y]!=c){\n                    return new int[]{0,0};\n                }\n                int a = 0;\n                int b = 0;\n                vis[x][y]=true;\n                if(c){\n                    a++;\n                }\n                else{\n                    b++;\n                }\n                for(int i=0;i<4;i++){\n                    int[] tt = dfs(x+dx[i],y+dy[i],!c);\n                    a+=tt[0];\n                    b+=tt[1];\n                }\n                return new int[]{a,b};\n            }\n        }\n        static class tup implements Comparable<tup> {\n            int a, b;\n            tup() {\n            }\n            ;\n\n\n\n            tup(int a, int b) {\n                this.a=a;\n                this.b=b;\n            }\n\n            @Override\n            public int compareTo(tup o2) {\n                return 0;\n            }\n        }\n        static void shuffle(long[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                long temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a,int l, int rb) {\n            Random get = new Random();\n            for (int i = l; i < rb; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static class FastReader {\n            BufferedReader br;\n            StringTokenizer st;\n\n            public FastReader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            public FastReader(String s) throws FileNotFoundException {\n                br = new BufferedReader(new FileReader(new File(s)));\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n        }\n\n    }", "code2": "import java.lang.reflect.Array;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static boolean check(int a,int b,int mid){\n        if(a <= mid && b <= mid || a > mid && b > mid)return true;\n        return false;\n    }\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int array[] = new int[2 * n + 1];\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        for (int i = 1; i < 2 * n; i++)\n            array[i] = Integer.parseInt(st.nextToken());\n        array[0] = array[2 * n] = -1;\n        int infinity = (int) 1E9 + 5;\n        int low = 1;\n        int high = 2 * n;\n        TreeSet<Integer> zero;\n        TreeSet<Integer> ones;\n        while (low < high) {\n            int mid = (low + high) / 2;\n            int temp = -1;\n            zero = new TreeSet<>();\n            ones = new TreeSet<>();\n            ones.add(infinity);\n            ones.add(-infinity);\n            zero.add(infinity);\n            zero.add(-infinity);\n            for (int i = 1; i < 2 * n; i++) {\n                if (check(array[i],array[i - 1],mid) && i != 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n                if (check(array[i],array[i + 1],mid) && i != 2*n - 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n            }\n                int beforezero = zero.floor(n);\n                int afterzero = zero.ceiling(n);\n                int beforeone = ones.floor(n);\n                int afterone = ones.ceiling(n);\n                int beforemax = Math.max(beforeone, beforezero);\n                int aftermin = Math.min(afterone, afterzero);\n                int min = Math.min(aftermin - n, n - beforemax);\n                //System.out.println(\"1 \" + aftermin + \" \" + beforemax + \" \" + min + \" \" + beforezero + \" \" + afterzero + \" \" + beforeone + \" \" + afterone);\n                if (min == aftermin - n) {\n                    if (afterone < afterzero) temp = 1;\n                    else temp = 0;\n                }\n                if (min == n - beforemax) {\n                    if (beforeone < beforezero) temp = 0;\n                    else temp = 1;\n            }\n            if(min > n - 2){\n                if((n & 1) == 0)temp = (array[n] > mid) ? 0 : 1;\n                else temp = (array[n] > mid) ? 1 : 0;\n            }\n            //System.out.println(mid + \" \" + low + \" \" + high + \" \" + zero + \" \" + ones + \" \" + temp);\n            if (temp == 1) low = mid + 1;\n            else high = mid;\n        }\n        System.out.println(low);\n    }\n}", "label": 0}, {"id": 499, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    private static int[] arr;\n\n    public static void main(String[] args) {\n\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        arr = Arrays.stream(input.split(\"\")).mapToInt(Integer::parseInt).toArray();\n\n        long sum = calc(0, arr.length - 1);\n        System.out.println(sum);\n    }\n\n    private static long calc(int position, int end) {\n        if (position > end) return 0;\n\n        long tmp = 0;\n        for (int i = position; i < end; i++) {\n            tmp += toInt(position, i) * Math.pow(2, (end - i - 1)) + calc(i + 1, end);\n        }\n        tmp += toInt(position, end);\n        return tmp;\n    }\n\n    private static long toInt(int start, int end) {\n        if (start == end) {\n//            System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + arr[start]);\n            return arr[start];\n        }\n\n        long tmp = 0;\n        for (int i = start; i <= end; i++) {\n            tmp += arr[i] * Math.pow(10, (end - i));\n        }\n//        System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + tmp);\n        return tmp;\n    }\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleGift solver = new CMultipleGift();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleGift {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            long X = in.nextLong();\n            long Y = in.nextLong();\n            int ans = 1;\n            long A = X;\n            while (A <= Y) {\n                A *= 2;\n                if (A > Y) break;\n                ans++;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 604, "code1": "import java.util.Scanner;\n\npublic class Main {\n    static int selectSort(int[] data) {\n        int ret = 0, n = data.length;\n        for (int i = 0; i < n; ++i) {\n            int minJ = i;\n            for (int j = i; j < n; ++j) {\n                if (data[j] < data[minJ]) minJ = j;\n            }\n            if(minJ != i) {\n                ++ret;\n                int tmp = data[minJ];\n                data[minJ] = data[i];\n                data[i] = tmp;\n            }\n        }\n        return ret;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        int[] data = new int[n];\n\n        for (int i = 0; i < n; ++i) {\n            data[i] = scanner.nextInt();\n        }\n\n        int cnt = selectSort(data);\n        for (int i = 0; i < n; ++i) {\n            System.out.print(data[i]);\n            if (i != n - 1) System.out.print(\" \");\n        }\n        System.out.println();\n        System.out.println(cnt);\n    }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        final static long INF = (long) 4.1e18;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            long L = 2L * in.nextInt();\n            long T = in.nextInt() * 2L;\n            TaskC.Chameleon[] chameleon = new TaskC.Chameleon[n];\n            int[] cnt = new int[3];\n            for (int i = 0; i < n; ++i) {\n                chameleon[i] = new TaskC.Chameleon();\n                chameleon[i].start = in.nextInt() * 2L;\n                chameleon[i].color = 0;\n                chameleon[i].dir = in.nextInt() == 1 ? 1 : -1;\n                chameleon[i].indexInInput = i;\n                ++cnt[chameleon[i].dir + 1];\n            }\n\n            // Determine new positions\n            for (TaskC.Chameleon c : chameleon) {\n                c.newPos = ((c.start + T * c.dir) % L + L) % L;\n            }\n\n            TaskC.Chameleon[] res;\n\n            if (cnt[0] == 0 || cnt[2] == 0) {\n                // No meetings at all.\n                for (TaskC.Chameleon c : chameleon) {\n                    c.newColor = c.color;\n                }\n                res = chameleon.clone();\n            } else {\n                // Determine new colors\n                {\n                    TaskC.Chameleon[] perm = chameleon.clone();\n                    Arrays.sort(perm, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n\n                    int indNextReverse = 0;\n                    for (int ind = 0; ind < n; ++ind) {\n                        TaskC.Chameleon c = perm[ind];\n                        if (c.dir > 0)\n                            c.newColor = c.color;\n                        else {\n                            while (perm[indNextReverse].dir < 0)\n                                indNextReverse = (indNextReverse + 1) % n;\n                            TaskC.Chameleon d = perm[indNextReverse];\n                            long delta = c.start - d.start;\n                            if (delta < 0)\n                                delta += L;\n                            if (delta <= 2 * T) {\n                                // There was at least one change of color!\n                                c.newColor = d.color;\n                            } else {\n                                c.newColor = c.color;\n                            }\n                        }\n                        if (indNextReverse == ind)\n                            indNextReverse = (indNextReverse + 1) % n;\n                    }\n                }\n\n                TaskC.Chameleon first;\n                TaskC.Chameleon firstMapsTo;\n                // Detemine which chameleon did the first one become\n                {\n                    List<TaskC.Chameleon> positive = new ArrayList<TaskC.Chameleon>();\n                    List<TaskC.Chameleon> negative = new ArrayList<TaskC.Chameleon>();\n                    for (TaskC.Chameleon c : chameleon) {\n                        if (c.dir == 1)\n                            positive.add(c);\n                        else\n                            negative.add(c);\n                    }\n                    Collections.sort(positive, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    Collections.sort(negative, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    first = positive.get(0);\n                    TaskC.Chameleon closestNegative = negative.get(0);\n                    long deltaBest = closestNegative.start - first.start;\n                    if (deltaBest < 0)\n                        deltaBest += L;\n                    for (TaskC.Chameleon c : negative) {\n                        long deltaCur = c.start - first.start;\n                        if (deltaCur < 0)\n                            deltaCur += L;\n                        if (deltaCur < deltaBest) {\n                            closestNegative = c;\n                            deltaBest = deltaCur;\n                        }\n                    }\n                    long timeLeft = T;\n                    if (timeLeft < deltaBest / 2) {\n                        // The first chameleon stayed himself\n                        firstMapsTo = first;\n                    } else {\n                        timeLeft -= deltaBest / 2;\n                        List<Long> positiveDeltas = new ArrayList<Long>();\n                        positiveDeltas.add(0L);\n                        long sum = 0;\n                        for (int i = 0; i < positive.size(); ++i) {\n                            long delta = positive.get((positive.size() - i) % positive.size()).start - positive.get((positive.size() - i - 1) % positive.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            positiveDeltas.add(sum);\n                        }\n                        int shift = negative.indexOf(closestNegative);\n                        List<Long> negativeDeltas = new ArrayList<Long>();\n                        negativeDeltas.add(0L);\n                        sum = 0;\n                        for (int i = 0; i < negative.size(); ++i) {\n                            long delta = negative.get((shift + i + 1) % negative.size()).start - negative.get((shift + i) % negative.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            negativeDeltas.add(sum);\n                        }\n                        long l = 0;\n                        long r = INF;\n                        while (r - l > 1) {\n                            long m = (l + r) / 2;\n                            long cntPositive = (m + 1) / 2;\n                            long cntNegative = m / 2;\n                            long positiveTimeSpent = mulWithInf(cntPositive / positive.size(), L) + positiveDeltas.get((int) (cntPositive % positive.size()));\n                            long negativeTimeSpent = mulWithInf(cntNegative / negative.size(), L) + negativeDeltas.get((int) (cntNegative % negative.size()));\n                            if (positiveTimeSpent + negativeTimeSpent <= timeLeft * 2)\n                                l = m;\n                            else\n                                r = m;\n                        }\n                        if (l % 2 == 0) {\n                            firstMapsTo = negative.get((int) ((shift + l / 2) % negative.size()));\n                        } else {\n                            firstMapsTo = positive.get(((int) ((positive.size() - (l + 1) / 2) % positive.size()) + positive.size()) % positive.size());\n                        }\n                    }\n                }\n\n                // Now, create the final mapping!\n                {\n                    TaskC.Chameleon[] firstSortedByPos = chameleon.clone();\n                    Arrays.sort(firstSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    TaskC.Chameleon[] finalSortedByPos = chameleon.clone();\n                    Arrays.sort(finalSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    int delta = Arrays.asList(finalSortedByPos).indexOf(firstMapsTo) - Arrays.asList(firstSortedByPos).indexOf(first);\n                    res = new TaskC.Chameleon[chameleon.length];\n                    for (int i = 0; i < chameleon.length; ++i) {\n                        res[firstSortedByPos[i].indexInInput] = finalSortedByPos[((i + delta) % chameleon.length + chameleon.length) % chameleon.length];\n                    }\n                }\n            }\n\n            for (TaskC.Chameleon c : res) {\n                out.println(c.newPos / 2);\n            }\n        }\n\n        private long mulWithInf(long a, long b) {\n            if (a == 0)\n                return 0;\n            else if (INF / a <= b)\n                return INF;\n            else\n                return a * b;\n        }\n\n        static class Chameleon {\n            long start;\n            long newPos;\n            int newColor;\n            int color;\n            int dir;\n            int indexInInput;\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 110, "code1": "import java.io.File;\nimport java.io.IOException;\nimport java.util.*;\n \npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\t//File file = new File(\"input.txt\");\n\t\t//Scanner in = new Scanner(file);\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tString SS = in.next();\n\t\tString T = in.next();\n\t\t\n\t\tint index = SS.length() - T.length();\n\t\t\n\t\twhile(index >= 0){\n\t\t\tString s = SS.substring(index, index + T.length());\n\t\t\t\n\t\t\tboolean tf = true;\n\t\t\tfor(int i = 0; i < T.length(); i++){\n\t\t\t\tif(s.charAt(i) != '?' && s.charAt(i) != T.charAt(i)){\n\t\t\t\t\ttf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(tf){\n\t\t\t\tSS = new StringBuilder(SS).replace(index, index + s.length(), T).toString();\n\t\t\t\tSS = SS.replace('?', 'a');\n\t\t\t\tSystem.out.println(SS);\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"UNRESTORABLE\");\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s = sc.next().replaceAll(\"\\\\?\", \".\");\n\t\tString t = sc.next();\n\t\tint ns = s.length();\n\t\tint nt = t.length();\n\t\tfor(int i = ns - nt ; i >= 0 ; i--) {\n\t\t\tString regex = s.substring(i, i + nt);\n\t\t\tif(t.matches(regex)) {\n\t\t\t\tSystem.out.println(s.replaceFirst(s.substring(0, i) + regex, s.substring(0, i) + t).replaceAll(\"\\\\.\", \"a\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"UNRESTORABLE\");\n\t}\n}", "label": 1}, {"id": 298, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "label": 0}, {"id": 247, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "code2": "import java.util.*;\n\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method astub\n\t    \tScanner sc = new Scanner(System.in);\n\t    while(true){\n\t    \tint stime = 0; \n\t    \tint t = sc.nextInt();\n\t    \tif(t==0) break;\n\t    \tint n = sc.nextInt();\n\t    \tfor (int i=0;i<n;i++){\n\t    \t\tint time_s = sc.nextInt();\n\t    \t\tint time_f = sc.nextInt();\n\t    \t\tstime += time_f - time_s;\n\t    \t}\n\t    if(stime >= t) System.out.println(\"OK\"); \n\t    else System.out.println(t-stime);\n\t    }\n\t}\n}", "label": 1}, {"id": 562, "code1": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)1e9+7;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint n = io.nextInt();\n\t\t\tint K = io.nextInt();\n\t\t\tint L = io.nextInt();\n\n\t\t\tUnionFind uf1 = new UnionFind(n);\n\t\t\tUnionFind uf2 = new UnionFind(n);\n\t\t\tUnionFind uf3 = new UnionFind(n);\n\t\t\t\n\t\t\tfor (int i = 0; i < K; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf1.union(a, b);\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < L; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf2.union(a, b);\n\t\t\t}\n\n\t\t\tTreeSet<Integer>[] s1 = new TreeSet[n];\n\t\t\tTreeSet<Integer>[] s2 = new TreeSet[n];\n\t\t\tfor (int i = 0; i < n; i++) if (uf1.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf1.next[j]) { s.add(j); }\n\t\t\t\ts1[i] = s;\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) if (uf2.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf2.next[j]) { s.add(j); }\n\t\t\t\ts2[i] = s;\n\t\t\t}\n\t\t\t\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint r1 = uf1.root(i);\n\t\t\t\tint r2 = uf2.root(i);\n\n\t\t\t\tif (!s1[r1].contains(i)) continue;\n\n\t\t\t\tTreeSet<Integer> a = s1[r1].size() < s2[r2].size() ? s1[r1] : s2[r2];\n\t\t\t\tTreeSet<Integer> b = s1[r1].size() < s2[r2].size() ? s2[r2] : s1[r1];\n\t\t\t\tList<Integer> same = new ArrayList<>();\n\t\t\t\tfor (int t : a) {\n\t\t\t\t\tif (b.contains(t)) same.add(t);\n\t\t\t\t}\n\t\t\t\tfor (int t : same) {\n\t\t\t\t\ts1[r1].remove(t);\n\t\t\t\t\ts2[r2].remove(t);\n\t\t\t\t\tans[t] = same.size();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tprintArrayLn(ans);\n\t\t}\n\t}\n\t\n\tstatic\n\tclass UnionFind {\n\t\tprivate int[] data;\n\t\tprivate int[] next;\n\t\tprivate int[] last;\n\t\t\n\t\tpublic UnionFind(int size) {\n\t\t\tdata = new int[size];\n\t\t\tnext = new int[size];\n\t\t\tlast = new int[size];\n\t\t\tclear();\n\t\t}\n\t\t\n\t\tpublic void clear() {\n\t\t\tArrays.fill(data, -1);\n\t\t\tArrays.fill(next, -1);\n\t\t\tfor(int i = 0; i < last.length; i++) {\n\t\t\t\tlast[i] = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic int root(int x) { return data[x] < 0 ? x : (data[x] = root(data[x])); }\n\t\t\n\t\tpublic void union(int x, int y) {\n\t\t\tif((x = root(x)) != (y = root(y))) {\n\t\t\t\tif(data[y] < data[x]) { final int t = x; x = y; y = t; }\n\t\t\t\tdata[x] += data[y];\n\t\t\t\tdata[y] = x;\n\t\t\t\tnext[last[x]] = y;\n\t\t\t\tlast[x] = last[y];\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic boolean same(int x, int y) { return root(x) == root(y); }\n\t\tpublic int size(int x) { return -data[root(x)]; }\n\t}\n\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "code2": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tif((m|d) == 0) break;\n\t\t\tint day = d;\n\t\t\tswitch(m){\n\t\t\tcase 12:\n\t\t\t\tday += 335;\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tday += 305;\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tday += 274;\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tday += 244;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tday += 213;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tday += 182;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday += 152;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday += 121;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday += 91;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday += 60;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday += 31;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t}\n\t\t\tswitch(day%7){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"Thursday\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"Friday\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"Saturday\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"Sunday\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"Monday\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.println(\"Tuesday\");\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(\"Wednesday\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "label": 0}, {"id": 114, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "label": 1}, {"id": 672, "code1": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 425, "code1": "import java.util.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\tint cnt(int s,int g,int cnt,int xy[][],int n){\n\t\tint result = 0;\n\t\tint c[] = new int [n+1];\n\t\tint d[] = new int [n+1];\n\t\tc[s] = 1;\n\t\tif(s == g && cnt > 0)result = 1;\n\t\tfor(int i = 1;i < cnt;i++){\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tfor(int k = 1;k < n+1;k++){\n\t\t\t\t\tif(xy[j][k] == 1 && c[j] == i){\n\t\t\t\t\t\td[k] = i + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tc[j] = d[j];\n\t\t\t}\n\t\t\tif(c[g] > 0){\n\t\t\t\tresult = c[g];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i == 101){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tvoid doIt() { \n\t\tint n = sc.nextInt();\n\t\tint xy[][] = new int [n+1][n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tint r1 = sc.nextInt();\n\t\t\tint k1 = sc.nextInt();\n\t\t\tfor(int j = 0;j < k1;j++){\n\t\t\t\tint t = sc.nextInt();\n\t\t\t\txy[r1][t] = 1;\n\t\t\t}\n    \t }\n\t\tint p = sc.nextInt();\n\t\tfor(int i = 0;i < p;i++){\n\t\t\tint s = sc.nextInt();\n\t\t\tint d = sc.nextInt();\n\t\t\tint TTL = sc.nextInt();\n\t\t\tint ans = cnt(s,d,TTL,xy,n);\n\t\t\tif(ans == 0){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t//\u4e2d\u8eab\n\t\tfor(int i = 1;i <= n;i++){\n\t\t\tfor(int j = 1;j <= n;j++){\n\t\t\t\tSystem.out.print(xy[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t*/\n     }\n    public static void main(String[] args) {\n    \t// TODO Auto-generated method stub\n    \tnew Main().doIt();\n    }\n}", "code2": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n    static int searchP(long p,int[] ws){\n        int count = 1;\n        int sum = 0; \n        for(int i = 0; i < ws.length; i++){\n            if(sum + ws[i] <= p) {\n            sum += ws[i];\n            } else {\n                count++;\n                if(ws[i] <= p){\n                sum = ws[i];\n                } else{\n                    count += 99999;\n                }\n            }\n        }\n        return count;\n    }\n    static long solve(long p, int[] ws, long k){\n        long right = p;\n        long left = 0;\n        long mid;\n        while(right - left > 1) {\n            mid = (left + right) / 2;\n            int v = searchP(mid,ws);\n            if(k >= v) {\n                right = mid;\n            } else {\n               left = mid;\n                \n            }\n        }\n    return right;\n    }\n    public static void main(String...args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        \n        String[] info = br.readLine().split(\" \");\n        int n = Integer.parseInt(info[0]);\n        int k = Integer.parseInt(info[1]);\n        int[] ws = new int[n];\n        for(int i = 0; i < n; i++) {\n            ws[i] = Integer.parseInt(br.readLine());\n        }\n        long p = 100000 * 10000;\n        System.out.println(solve(p,ws,k));\n        \n    }\n}\n\n\n\n", "label": 0}, {"id": 381, "code1": "import java.util.*;\npublic class Main{\npublic static void main(String[] args){\nScanner sc = new Scanner(System.in);\n  int Q = sc.nextInt();\n  for(int i=0;i<Q;i++){\n    long f = sc.nextLong();\n    long s = sc.nextLong();\n    long a = Math.max(f, s);\n    long b = Math.min(f, s);\n    long K = a*b;\n    long L = (long) Math.sqrt(K);\n    long M = (K-1)/L;\n    long N = Math.max(-1,M-b-1);\n    System.out.println(L+N+b-1);\n  }\n}}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] field;\n\tstatic String[][] dp;\n\tstatic int h,w;\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tw = cin.nextInt();\n\t\t\th = cin.nextInt();\n\t\t\tif(w+h==0)break;\n\t\t\tfield=new int[h][w];\n\t\t\tdp=new String[h][w];\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tString s = cin.next();\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tdp[i][j]=\"\";\n\t\t\t\t\tif(Character.isDigit(s.charAt(j))){\n\t\t\t\t\t\tfield[i][j]=s.charAt(j)-'0';\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tfield[i][j]=-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<w;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[0][i]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[0][i]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[0][i-1].equals(\"0\")&&!dp[0][i-1].equals(\"\")){\n\t\t\t\t\t\t\tdp[0][i]=dp[0][i-1]+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[i][0]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[i][0]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[i-1][0].equals(\"0\")&&!dp[i-1][0].equals(\"\")){\n\t\t\t\t\t\t\tdp[i][0]=dp[i-1][0]+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tString ans=\"0\";\n\t\t\tfor(int i = 1;i<h;i++){\n\t\t\t\tfor(int j = 1;j<w;j++){\n\t\t\t\t\tif(field[i][j]==-1)continue;\n\t\t\t\t\tString s1=dp[i-1][j]+field[i][j];\n\t\t\t\t\tString s2=dp[i][j-1]+field[i][j];\n\t\t\t\t\tString s3=field[i][j]+\"\";\n\t\t\t\t\tif(big(s1,s2)>=0){\n\t\t\t\t\t\tif(big(s1,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(big(s2,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twhile(dp[i][j].charAt(0)=='0'&&dp[i][j].length()>1){\n\t\t\t\t\t\tdp[i][j]=dp[i][j].substring(1,dp[i][j].length());\n\t\t\t\t\t}\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//output();\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\tstatic int big(String s1,String s2){\n\t\tif(s1.length()==s2.length()){\n\t\t\treturn s1.compareTo(s2);\n\t\t}\n\t\treturn s1.length()-s2.length();\n\t}\n\tstatic void output(){\n\t\tfor(int i = 0;i<h;i++){\n\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\tSystem.out.print(dp[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println();\n\t}\n}", "label": 0}, {"id": 534, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tInteger[] num = new Integer[n];\n\t\tStringBuilder s = new StringBuilder(\"\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tnum[i] = scan.nextInt();\n\t\t}\n\t\tArrays.sort(num);\n\t\t\n\t\ts.append(num[0]);\n\t\tfor(int i=1;i<num.length;i++){\n\t\t\ts.append(\" \"+num[i]);\n\t\t}\n\t\t\n\t\tSystem.out.println(s);\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n        int[] a = new int[N];\n        for (int i=0; i<N; i++) {\n            a[i] = sc.nextInt();\n        }\n\n        int[] ans = solve(N, a);\n\n        for (int i=0; i<N; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n\n    private static int[] solve(int N, int[] a) {\n        int[] ans = new int[N];\n        int total = Math.abs(a[0]) + Math.abs(a[N-1]);\n\n        for (int i=0; i<N-1; i++) {\n            total += Math.abs(a[i+1] - a[i]);\n        }\n\n        for (int i=0; i<N; i++) {\n            ans[i] = total;\n\n            if (i == 0) {\n                if (0 <= a[i] && a[i] <= a[i+1]\n                        || a[i+1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            } else if (i == N-1) {\n                if (0 <= a[i] && a[i] <= a[i-1]\n                        || a[i-1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i-1]) + Math.abs(a[i-1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n            else if (a[i-1] <= a[i] && a[i] <= a[i+1]\n                    || a[i+1] <= a[i] && a[i] < a[i-1]) {\n//                System.err.println(\"ans[\" + i + \"] : skip\");\n                continue;\n            } else {\n                ans[i] = total - Math.abs(a[i] - a[i-1]) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - a[i-1]);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n        }\n\n        return ans;\n    }\n}", "label": 0}, {"id": 261, "code1": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t    Scanner sc = new Scanner(System.in);   \n\t    \n\t    float A = sc.nextFloat();\n\t    float B = sc.nextFloat();\n\t    \n\t    System.out.println(Math.round((A + B) / 2));\n\t}    \n}\t", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tdouble a = scan.nextInt();\n\t\tdouble b = scan.nextInt();\n\n\t\tSystem.out.println((int)Math.ceil((a + b) / 2));\n\t}\n}", "label": 1}, {"id": 222, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t  public static void main(String[] args) {\n\t    Scanner sc = new Scanner(System.in);\n\t    String n = sc.next();\n\t    int count = 0;\n\t    for(int i = 0; i < n.length(); i++) {\n\t    \tif(\"2\".equals(n.substring(i, i+1))) {\n\t    \t\tcount++;\n\t    \t}\n\t    }\n\t    System.out.println(count);\n\t}\n}\n", "label": 1}, {"id": 395, "code1": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String[] args) {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    long[] a = new long[n];\n\n    for (int i = 0; i < n; i++) {\n      a[i] = sc.nextInt();\n    }\n\n    Arrays.sort(a); // \u6607\u9806\n    long sum = a[n - 1];\n\n    if (n == 2) {\n      System.out.println(sum);\n    } else {\n      if (n % 2 == 1) {\n        int num = n / 2;\n        sum += a[n - num - 1];\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      } else {\n        int num = n / 2;\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      }\n    }\n\n  }\n}", "label": 0}, {"id": 777, "code1": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n// import java.awt.Point;\n \npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n \n    static int mod = 1_000_000_007;\n    // int mod = 998244353;\n    long inf = Long.MAX_VALUE/2;\n\n    void solve(){\n        char[] c = ns().toCharArray();\n        int n = c.length;\n        int mindist = n;\n        for(int i = 0; i < n-1; i++){\n            if(c[i]==c[i+1]) continue;\n            int dist = Math.max(i+1, n-1-i);\n            mindist = Math.min(mindist, dist);\n        }\n        out.println(mindist);\n    }\n\n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n \n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        System.out.println((a+b+1)/2);\n    }   \n}\n", "label": 0}, {"id": 619, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tRunner[] a = new Runner[18];\n\t\tint cnt=0;\n\t\tfor(int  j = 0;j<3;j++){\n\t\t\tRunner[] b = new Runner[8];\n\t\t\tfor(int i = 0;i<8;i++){\n\t\t\t\tint num = cin.nextInt();\n\t\t\t\tdouble time= cin.nextDouble();\n\t\t\t\tb[i]=new Runner(num,time);\n\t\t\t}\n\t\t\tArrays.sort(b);\n\t\t\tfor(int i = 0;i<6;i++){\n\t\t\t\ta[cnt++]=b[i+2];\n\t\t\t}\n\t\t\tSystem.out.println(b[0].num + \" \" + b[0].timestr);\n\t\t\tSystem.out.println(b[1].num + \" \" + b[1].timestr);\n\t\t}\n\t\tArrays.sort(a);\n\t\tSystem.out.println(a[0].num + \" \" + a[0].timestr);\n\t\tSystem.out.println(a[1].num + \" \" + a[1].timestr);\n\t}\n}\nclass Runner implements Comparable{\n\tint num;\n\tdouble time;\n\tString timestr;\n\tRunner(int a,double b){\n\t\tnum=a;\n\t\ttime=b;\n\t\ttimestr=String.valueOf(time);\n\t\tif(timestr.length()==4){\n\t\t\ttimestr = timestr+\"0\";\n\t\t}\n\t\t\n\t}\n\tpublic int compareTo(Object o) {\n\t\tRunner r = (Runner)o;\n\t\tif(this.time-r.time > 0)\n\t\t\treturn 1;\n\t\telse if(this.time-r.time == 0)\n\t\t\treturn 0;\n\t\telse{\n\t\t\treturn -1;\n\t\t}\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n     \npublic class Main{\n\tpublic static void main(String[] args) throws Exception {\n\tIO io = new IO();\n\tPrintWriter out = new PrintWriter(System.out);\n\tSolver sr = new Solver();\n\tsr.solve(io,out);\n\tout.flush();\n\tout.close();\n    \t}\n\n\tstatic class Solver\n\t{\n      class Pair{\n        int x, y;\n        Pair(int a, int b)\n        {\n          x=a;\n          y=b;\n        }\n      }\n\t    void solve(IO io, PrintWriter out)\n\t    {\n           int i, j;\n          int n = io.nextInt();\n          int m = io.nextInt();\n          \n          ArrayList<Pair> ar = new ArrayList<>();\n          for(i=0 ; i<=n ; i++)\n            \tar.add(new Pair(0,0));\n          for(i=0 ; i<m ; i++)\n          {\n            int tmp=io.nextInt();\n            String str = io.next();\n            if(ar.get(tmp).x==0)\n            {\n              if(str.equals(\"WA\"))\n                ar.get(tmp).y++;\n              else\n                ar.get(tmp).x++;\n            }\n          }\n          int pen=0, correct=0;\n          for(Pair p : ar)\n          {\n            if(p.x!=0)\n            {\n              correct++;\n              pen+=p.y;\n            }\n          }\n            out.print(correct+\" \"+pen);\n\t    }\n    \t\n\t}\n\t//Special thanks to Petr (on codeforces) who inspired me to implement IO class!\n\tstatic class IO\n\t{\n    \tBufferedReader reader;\n        StringTokenizer tokenizer;\n    \tpublic IO() {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                tokenizer = null;\n            }\n     \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public String nextLine() {\n            String s=\"\";\n            try {\n                    s=reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            return s;\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    \tdouble nextDouble()\n    \t{\n    \t\treturn Double.parseDouble(next());\n    \t}\n\t}\n}", "label": 0}, {"id": 4, "code1": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/10 10:58 \u4e0b\u5348\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.next();\n        long sum = 0;\n        int length = s.length();\n        for(int i = 0;i<length;i++){\n            sum += (s.charAt(i)-'0');\n        }\n        System.out.println(sum % 9==0?\"Yes\":\"No\");\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        final String N = sc.next();\n        \n        int total = N.codePoints().map(c -> c - '0').sum();\n        System.out.println(total % 9 == 0 ? \"Yes\" : \"No\");\n    }\n}\n", "label": 1}, {"id": 518, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\tboolean eof;\n\t\n\tlong go(long a, long b, long c) {\n\t\tif (a < 0 || b < 0 || c < 0) {\n\t\t\treturn Long.MIN_VALUE;\n\t\t}\n\t\t\n\t\treturn a + b + c - (a & 1) - (b & 1) - (c & 1);\n\t}\n\n\tvoid solve() throws IOException {\n\t\tlong i = nextLong();\n\t\tlong o = nextLong();\n\t\tlong t = nextLong();\n\t\tlong j = nextLong();\n\t\tlong l = nextLong();\n\t\tlong s = nextLong();\n\t\tlong z = nextLong();\n\t\t\n\t\tlong ans = o + Math.max(go(i, j, l), go(i - 1, j - 1, l - 1) + 3);\n\t\t\n\t\tout.println(ans);\n\t}\n\n\tMain() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main();\n\t}\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (Exception e) {\n\t\t\t\teof = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\teof = true;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}", "code2": "// -*- coding: utf-8 -*-\n//import java.awt.*;\nimport java.io.*;\nimport java.math.*;\nimport java.text.*;\nimport java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream;\n    if (args.length > 0 && args[0].equals(\"devTesting\")) {\n      try {\n        inputStream = new FileInputStream(args[1]);\n      } catch(FileNotFoundException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      inputStream = System.in;\n    }\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskC solver = new TaskC();\n    int testCase = 1;\n    solver.solve(1, in, out);\n    out.close();\n  }\n  \n  static class TaskC {\n    long h, w;\n    \n    void solve(int testNumber, InputReader in, PrintWriter out) {\n      h = in.nextInt();\n      w = in.nextInt();\n      char[][] superpost = new char[(int) h][];\n      for (int i = 0; i < h; ++i)\n        superpost[i] = in.next().toCharArray();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 0 && j < w - 1 || j == 0 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 1 && j > 0 || j == w - 1 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n          out.println();\n      }\n    }\n    \n  }\n      \n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream));\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n    \n    public String nextLine() {\n      try {\n        return reader.readLine();\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n    \n    public double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    public boolean hasInput() {\n      try {\n        if (tokenizer != null && tokenizer.hasMoreTokens()) {\n          return true;\n        }\n        reader.mark(1);\n        int ch = reader.read();\n        if (ch != -1) {\n          reader.reset();\n          return true;\n        }\n        return false;\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    \n  }\n}\n", "label": 0}, {"id": 69, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "label": 1}, {"id": 100, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\tScanner scn = new Scanner(System.in);\n\t\tint A = scn.nextInt(), B = scn.nextInt();\n\t\tSystem.out.println(B>=A?A:A-1);\n\t}\n\n}\n", "label": 1}, {"id": 432, "code1": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint[] wn = in.nextIntArray(n);\n\n\t\t\tint left = 0;\n\t\t\tint right = INF;\n\t\t\tint mid = 0;\n\t\t\twhile (right > left + 1) {\n\t\t\t\tmid = (left + right) / 2;\n\t\t\t\tint count = 1;\n\t\t\t\tint ca = mid;\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tca = mid;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcount = INF;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// k\u53f0\u4ee5\u4e0b\u3067\u7a4d\u3081\u308b\u5834\u5408\n\t\t\t\tif (count <= k){\n\t\t\t\t\tright = mid;\n\n\t\t\t\t// \uff4b\u53f0\u4ee5\u4e0a\u5fc5\u8981\u306a\u5834\u5408\n\t\t\t\t} else if (count > k) {\n\t\t\t\t\tleft = mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(right);\n\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tpublic void solve() {\n\t\tint N = nextInt();\n\t\tint[] a = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\ta[i] = nextInt() - 1;\n\t\t}\n\t\tboolean[] used = new boolean[N];\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tint x = a[i];\n\t\t\tint y = a[x];\n\t\t\tif(used[x])continue;\n\t\t\tif(used[y])continue;\n\t\t\tif(x == a[y] && y == a[x]){\n\t\t\t\tans++;\n\t\t\t\tused[x] = true;\n\t\t\t\tused[y] = true;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "label": 0}, {"id": 167, "code1": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "code2": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "label": 1}, {"id": 171, "code1": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "label": 1}, {"id": 60, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "label": 1}, {"id": 621, "code1": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nclass Main {\n\tpublic static void main(String args[]) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tSolver solver = new Solver();\n\t\tsolver.init();\n\t\tsolver.readHead(in.readLine());\n\t\tfor (; solver.hasNext();) {\n\t\t\tsolver.readBody(in.readLine());\n\t\t}\n\t\tsolver.solve();\n\t}\n}\n\nclass Solver {\n\tint N;\n\tint cnt;\n\n\tpublic void init() {\n\t\tN = 0;\n\t\tcnt = 0;\n\t}\n\n\tpublic void readHead(String str) {\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tN = Integer.parseInt(strArr[0]);\n\t\t// System.out.println(N);\n\t\tM = Integer.parseInt(strArr[1]);\n\t\tAC = new int[N + 1];\n\t\tWA = new int[N + 1];\n\t}\n\n\tint M;\n\n\tpublic boolean hasNext() {\n\t\t// return cnt < N;\n\t\treturn cnt < M;\n\t}\n\n\tint[] AC;\n\tint[] WA;\n\n\tpublic void readBody(String str) {\n\t\t// System.out.println(str);\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tint p = Integer.parseInt(strArr[0]);\n\t\tif (AC[p] == 0) {\n\t\t\tif (\"AC\".equals(strArr[1]))\n\t\t\t\tAC[p] = 1;\n\t\t\telse {\n\t\t\t\tWA[p]++;\n\t\t\t}\n\t\t}\n\t\tcnt++;\n\t}\n\n\tpublic void solve() {\n\t\tint a = 0;\n\t\tint w = 0;\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tif (AC[i] > 0) {\n\t\t\t\ta++;\n\t\t\t\tw += WA[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a + \" \" + w);\n\t}\n}\n", "label": 0}, {"id": 628, "code1": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n     \npublic class Main{\n\tpublic static void main(String[] args) throws Exception {\n\tIO io = new IO();\n\tPrintWriter out = new PrintWriter(System.out);\n\tSolver sr = new Solver();\n\tsr.solve(io,out);\n\tout.flush();\n\tout.close();\n    \t}\n\n\tstatic class Solver\n\t{\n      class Pair{\n        int x, y;\n        Pair(int a, int b)\n        {\n          x=a;\n          y=b;\n        }\n      }\n\t    void solve(IO io, PrintWriter out)\n\t    {\n           int i, j;\n          int n = io.nextInt();\n          int m = io.nextInt();\n          \n          ArrayList<Pair> ar = new ArrayList<>();\n          for(i=0 ; i<=n ; i++)\n            \tar.add(new Pair(0,0));\n          for(i=0 ; i<m ; i++)\n          {\n            int tmp=io.nextInt();\n            String str = io.next();\n            if(ar.get(tmp).x==0)\n            {\n              if(str.equals(\"WA\"))\n                ar.get(tmp).y++;\n              else\n                ar.get(tmp).x++;\n            }\n          }\n          int pen=0, correct=0;\n          for(Pair p : ar)\n          {\n            if(p.x!=0)\n            {\n              correct++;\n              pen+=p.y;\n            }\n          }\n            out.print(correct+\" \"+pen);\n\t    }\n    \t\n\t}\n\t//Special thanks to Petr (on codeforces) who inspired me to implement IO class!\n\tstatic class IO\n\t{\n    \tBufferedReader reader;\n        StringTokenizer tokenizer;\n    \tpublic IO() {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                tokenizer = null;\n            }\n     \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public String nextLine() {\n            String s=\"\";\n            try {\n                    s=reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            return s;\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    \tdouble nextDouble()\n    \t{\n    \t\treturn Double.parseDouble(next());\n    \t}\n\t}\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "label": 0}, {"id": 458, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CStreamline solver = new CStreamline();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CStreamline {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int[] x = in.nextIntArray(m);\n            Arrays.sort(x);\n            int ans = x[m - 1] - x[0];\n            PriorityQueue<Integer> q = new PriorityQueue<>();\n            for (int i = 0; i < m - 1; i++) {\n                q.add(-(x[i + 1] - x[i]));\n            }\n            for (int i = 0; i < n - 1 && !q.isEmpty(); i++) {\n                ans += q.poll();\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 521, "code1": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)924844033;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint ai = io.nextInt();\n\t\t\tint ao = io.nextInt();\n\t\t\tint at = io.nextInt();\n\t\t\tint aj = io.nextInt();\n\t\t\tint al = io.nextInt();\n\t\t\tint as = io.nextInt();\n\t\t\tint az = io.nextInt();\n\t\t\t\n\t\t\tlong ans = 0;\n\t\t\t\n\t\t\tint cnt = aj % 2 + al % 2 + ai % 2;\n\t\t\tif (cnt >= 2) {\n\t\t\t\tif (aj > 0 && al > 0 && ai > 0) {\n\t\t\t\t\tai--;\n\t\t\t\t\taj--;\n\t\t\t\t\tal--;\n\t\t\t\t\tans += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans += ao;\n\t\t\tans += ai / 2 * 2;\n\t\t\tans += aj / 2 * 2;\n\t\t\tans += al / 2 * 2;\n\t\t\t\n\t\t\tio.out.println(ans);\n\t\t}\n\t}\n\t\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "label": 0}, {"id": 225, "code1": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n    \tint N = sc.nextInt();\n    \tint cnt = 0;\n    \tfor(int i=3; i>=0; i--) {\n    \t\tint answer = (int) (N/(Math.pow(10, i)));\n    \t\tN %= Math.pow(10, i);\n    \t\tif(answer == 2) {\n    \t\t\tcnt++;\n    \t\t}\n    \t}\n\t    System.out.println(cnt);\n    }\n}", "label": 1}, {"id": 120, "code1": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\t\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true){\n\t\t\tint n = sc.nextInt();\n\t\t\tint x = sc.nextInt();\n\t\t\tif (n == 0 && x == 0) break;\n\t\t\tint ways = 0;\n\t\t\tfor (int i = 1; i <= n; i++){\n\t\t\t\tfor (int j = i + 1; j <= n; j++){\n\t\t\t\t\tfor (int k = j + 1; k <= n; k++){\n\t\t\t\t\t\t//System.out.printf(\"%d+%d+%d=%d\\n\", i, j, k, (i+j)+k);\n\t\t\t\t\t\tif ((i + j) + k == x) ways++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ways);\n\t\t}\n\t}\n}", "label": 1}, {"id": 14, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String steps = sc.next();\n        sc.close();\n\n        boolean judge = true;\n        for (int i = 0; i < steps.length(); i++) {\n            char step = steps.charAt(i);\n            if (i % 2 == 0) {\n                if (step == 'L') {\n                    judge = false;\n                    break;\n                }\n            } else {\n                if (step == 'R') {\n                    judge = false;\n                    break;\n                }\n            }\n        }\n\n        if (judge) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}", "label": 1}, {"id": 102, "code1": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\tScanner scn = new Scanner(System.in);\n\t\tint A = scn.nextInt(), B = scn.nextInt();\n\t\tSystem.out.println(B>=A?A:A-1);\n\t}\n\n}\n", "label": 1}, {"id": 584, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\n\t\tint n = sc.nextInt();\n\n\t\tint a[] = new int[n];\n\t\tint b[] = new int[n];\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tb[i] = sc.nextInt();\n\t\t}\n\n\t\tlong ba = 0;\n\t\tlong ab = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (b[i] > a[i]) {\n\t\t\t\tba += (b[i] - a[i]) / 2;\n\t\t\t} else {\n\t\t\t\tab += (a[i] - b[i]);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tSystem.out.println(ab <= ba ? \"Yes\" : \"No\");\n\t}\n}\n", "code2": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int a[][] = new int[n][n];\n\n        for (int i = 0; i < m; i++) {\n            int t1 = in.nextInt() - 1;\n            int t2 = in.nextInt() - 1;\n            a[t1][t2] = 1;\n            a[t2][t1] = 1;\n        }\n        List<Integer> order = new ArrayList<>();\n        order.add(0);\n        List<Integer> remain = new ArrayList<>();\n        for (int i = 1; i < n; i++) {\n            remain.add(i);\n        }\n        System.out.println(f(order, remain, a));\n    }\n\n    static int f(List<Integer> order, List<Integer> remain, int edges[][]) {\n        if (remain.size() == 0) {\n            int cur = order.get(0);\n            int next;\n            for (int p = 1; p < order.size(); p++) {\n                next = order.get(p);\n                if (edges[cur][next] == 1 || edges[next][cur] == 1) {\n                    cur = next; \n                } else {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n\n        int total = 0;\n        for (int p = 0; p < remain.size(); p++) {\n            order.add(remain.get(p));\n            remain.remove(p);\n            total += f(order, remain, edges);\n            remain.add(p, order.get(order.size() - 1));\n            order.remove(order.size() - 1);\n        }\n        return total;\n    }\n}", "label": 0}, {"id": 618, "code1": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\nclass Person implements Comparable<Person> {\n\n    final int no;\n    final double time;\n\n    Person( final int no, final double time ) {\n\tthis.no = no;\n\tthis.time = time;\n    }\n    \n    public int compareTo( final Person p ) {\n\treturn Double.compare( time, p.time );\n    }\n\n    public String toString() {\n\treturn String.format( \"%d %.2f\", no, time );\n    }\n}\n\nclass Main {\n\n    public static void main( final String[] args ) {\n\n\tfinal Scanner stdin = new Scanner( System.in );\n\tfinal ArrayList<Person> last = new ArrayList<Person>();\n\tfinal ArrayList<Person> rest = new ArrayList<Person>();\n\t\n\tfor ( int i = 0; i < 3; i++ ) {\n\t    final ArrayList<Person> semifinal = new ArrayList<Person>();\n\t    for ( int j = 0; j < 8; j++ ) {\n\t\tsemifinal.add( new Person( stdin.nextInt(), stdin.nextDouble() ) );\n\t    }\n\t    Collections.sort( semifinal );\n\t    last.add( semifinal.remove( 0 ) );\n\t    last.add( semifinal.remove( 0 ) );\n\t    rest.addAll( semifinal );\n\t}\n\tCollections.sort( rest );\n\tlast.add( rest.remove( 0 ) );\n\tlast.add( rest.remove( 0 ) );\n\tfor ( Person p : last ) {\n\t    System.out.println( p );\n\t}\n    }    \n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nclass Main {\n\tpublic static void main(String args[]) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tSolver solver = new Solver();\n\t\tsolver.init();\n\t\tsolver.readHead(in.readLine());\n\t\tfor (; solver.hasNext();) {\n\t\t\tsolver.readBody(in.readLine());\n\t\t}\n\t\tsolver.solve();\n\t}\n}\n\nclass Solver {\n\tint N;\n\tint cnt;\n\n\tpublic void init() {\n\t\tN = 0;\n\t\tcnt = 0;\n\t}\n\n\tpublic void readHead(String str) {\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tN = Integer.parseInt(strArr[0]);\n\t\t// System.out.println(N);\n\t\tM = Integer.parseInt(strArr[1]);\n\t\tAC = new int[N + 1];\n\t\tWA = new int[N + 1];\n\t}\n\n\tint M;\n\n\tpublic boolean hasNext() {\n\t\t// return cnt < N;\n\t\treturn cnt < M;\n\t}\n\n\tint[] AC;\n\tint[] WA;\n\n\tpublic void readBody(String str) {\n\t\t// System.out.println(str);\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tint p = Integer.parseInt(strArr[0]);\n\t\tif (AC[p] == 0) {\n\t\t\tif (\"AC\".equals(strArr[1]))\n\t\t\t\tAC[p] = 1;\n\t\t\telse {\n\t\t\t\tWA[p]++;\n\t\t\t}\n\t\t}\n\t\tcnt++;\n\t}\n\n\tpublic void solve() {\n\t\tint a = 0;\n\t\tint w = 0;\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tif (AC[i] > 0) {\n\t\t\t\ta++;\n\t\t\t\tw += WA[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a + \" \" + w);\n\t}\n}\n", "label": 0}, {"id": 552, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tString[][] a = new String[n][];\n\t\t\tint p;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ts = sc.next().replaceAll(\":\", \" \").replaceAll(\",\", \" \");\n\t\t\t\ta[i] = s.split(\" \");\n\t\t\t\tp = a[i].length-1;\n\t\t\t\ta[i][p] = a[i][p].substring(0,a[i][p].length()-1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tArrayList<String> list = new ArrayList<String>();\n\t\t\tfor(int i=1;i<a[0].length;i++) list.add(a[0][i]);\n\t\t\t\n\t\t\tboolean flag;\n\t\t\twhile(true){\n\t\t\t\tflag = false;\n\t\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\t\tif(list.contains(a[i][0])==true){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\tlist.remove(list.indexOf(a[i][0]));\n\t\t\t\t\t\tfor(int j=1;j<a[i].length;j++){\n\t\t\t\t\t\t\tif(list.contains(a[i][j])==false) list.add(a[i][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==false) break;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(list.size());\n\t\t}\t\n\t}\t\n}", "code2": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint l = in.nextInt();\n\t\t\tUnionFind u1 = new UnionFind(n);\n\t\t\tUnionFind u2 = new UnionFind(n);\n\t\t\tfor (int i = 0; i < k; i++) {\n\t\t\t\tint p = in.nextInt()-1;\n\t\t\t\tint q = in.nextInt()-1;\n\t\t\t\tu1.link(p, q);\n\t\t\t}\n\t\t\tfor (int i = 0; i < l; i++) {\n\t\t\t\tint r = in.nextInt()-1;\n\t\t\t\tint s = in.nextInt()-1;\n\t\t\t\tu2.link(r, s);\n\t\t\t}\n\t\t\tMap<Long, Integer> roots = new HashMap<Long, Integer>();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlong code = (long)u1.root(i)<< 32 | u2.root(i);\n\t\t\t\troots.merge(code, 1, Integer::sum);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (i > 0)out.print(\" \");\n\t\t\t\tlong code = (long)u1.root(i) << 32 | u2.root(i);\n\t\t\t\tout.print(roots.get(code));\n\t\t\t}\n\n\t\t}\n\n\t\tpublic class UnionFind {\n\t\t\tint[] data;\n\n\t\t\tpublic UnionFind(int n) {\n\t\t\t\tdata = new int[n];\n\t\t\t\tArrays.fill(data, -1);\n\t\t\t}\n\n\t\t\tboolean link(int x, int y) {\n\t\t\t\tx = root(x);\n\t\t\t\ty = root(y);\n\t\t\t\tif (x != y) {\n\t\t\t\t\tif (data[y] < data[x]) {\n\t\t\t\t\t\tdata[y] += data[x];\n\t\t\t\t\t\tdata[x] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[x] += data[y];\n\t\t\t\t\t\tdata[y] = x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn x != y;\n\t\t\t}\n\n\t\t\tint root(int x) {\n\t\t\t\treturn data[x] < 0 ? x : (data[x] = root(data[x]));\n\t\t\t}\n\t\t}\n\t}\n\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 58, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "code2": "import java.io.*;\nimport java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n\tBufferedReader sc=new BufferedReader(new InputStreamReader(System.in));\n\tString st, sx[] = {\"A\", \"B\", \"AB\", \"O\"};\n\tint a=0, b=0, ab=0, o=0;\n\ttry{\n\t    while((st=sc.readLine())!=null){\n\t\tString[] bld = st.split(\",\");\n\t\tif(bld[1].equals(sx[0]))\n\t\t    a++;\n\t\telse if(bld[1].equals(sx[1]))\n\t\t    b++;\n\t\telse if(bld[1].equals(sx[2]))\n\t\t    ab++;\n\t\telse\n\t\t    o++;\n\t    }\n\t    System.out.println(a);\n\t    System.out.println(b);\n\t    System.out.println(ab);\n\t    System.out.println(o);\n\t}catch(Exception e){\n\t    System.out.println(\"Error\");\n\t}\n    }\n}", "label": 1}, {"id": 68, "code1": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "code2": "import java.util.*;\npublic class Main {\n    static final long MODVAL = 998244353L;\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long N = sc.nextLong();\n        long K = sc.nextLong();\n        if(N > K) {\n            long modulo = N / K;\n            N -= modulo * K;\n        }\n        if(N==K) {\n            System.out.println(\"0\");\n            return;\n        }\n        System.out.println(String.format(\"%d\", Math.min(Math.abs(N-K), Math.abs(N))));\n    }\n}\n", "label": 1}, {"id": 668, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.List;\n\npublic class Main {\n\n\tprivate static final String NO = \"No\";\n\tprivate static final String YES = \"Yes\";\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\tprivate List<Integer>[] g;\n\n\tprivate static final long MOD = 998244353;\n\tprivate static final int INF = Integer.MAX_VALUE;\n\n\tvoid solve() {\n\t\tint T = 1;\n\t\tfor (int i = 0; i < T; i++)\n\t\t\tsolve(i);\n\t}\n\n\tvoid solve(int T) {\n\t\tint n = ni();\n\t\twhile (!isPrime(n))\n\t\t\tn++;\n\t\tout.println(n);\n\t}\n\n\tprivate boolean isPrime(int n) {\n\t\tfor (int i = 2; i <= Math.sqrt(n); i++)\n\t\t\tif (n % i == 0)\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t// a^b\n\tlong power(long a, long b) {\n\t\tlong x = 1, y = a;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 != 0) {\n\t\t\t\tx = (x * y) % MOD;\n\t\t\t}\n\t\t\ty = (y * y) % MOD;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn x % MOD;\n\t}\n\n\tprivate long gcd(long a, long b) {\n\t\twhile (a != 0) {\n\t\t\tlong tmp = b % a;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\t\treturn b;\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\tprivate boolean vis[];\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate List<Integer> na2(int n) {\n\t\tList<Integer> a = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta.add(ni());\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl();\n\t\treturn a;\n\t}\n\n\tprivate long[][] nl(int n, int m) {\n\t\tlong[][] a = new long[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl(m);\n\t\treturn a;\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid solve() {\n\t\tint r = in.nextInt(), c = in.nextInt();\n\t\tint[] cnt = new int[26];\n\t\tfor (int i = 0; i < r; i++) {\n\t\t\tfor (char ch : in.nextToken().toCharArray()){ \n\t\t\t\tcnt[ch - 'a']++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint cnt4 = (r / 2) * (c / 2);\n\t\tint cnt2 = (r / 2) * (c % 2) + (c / 2) * (r % 2);\n\t\tint cnt1 = (r % 2) * (c % 2);\n\t\t\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 4 && cnt4 > 0) {\n\t\t\t\tcnt[i] -= 4;\n\t\t\t\tcnt4--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 2 && cnt2 > 0) {\n\t\t\t\tcnt[i] -= 2;\n\t\t\t\tcnt2--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 1 && cnt1 > 0) {\n\t\t\t\tcnt[i] -= 1;\n\t\t\t\tcnt1--;\n\t\t\t}\n\t\t}\n\t\tout.println((cnt1 == 0 && cnt2 == 0 && cnt4 == 0) ? \"Yes\" : \"No\");\n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "label": 0}, {"id": 209, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) throws Exception{\n\t\tScanner scan=new Scanner(System.in);\n\t\tString A=scan.next();\n\t\tString B=scan.next();\n\t\tString C=scan.next();\n\t\tint ac=0,bc=0,cc=0,c=0;\n\t\tfor(;;) {\n\t\t\tif(c==0) {\n\t\t\t\tac++;\n\t\t\t\tif(ac==A.length()+1) {\n\t\t\t\t\tSystem.out.println(\"A\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(A.charAt(ac-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}if(c==1) {\n\t\t\t\tbc++;\n\t\t\t\tif(bc==B.length()+1) {\n\t\t\t\t\tSystem.out.println(\"B\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(B.charAt(bc-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}if(c==2) {\n\t\t\t\tcc++;\n\t\t\t\tif(cc==C.length()+1) {\n\t\t\t\t\tSystem.out.println(\"C\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(C.charAt(cc-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 112, "code1": "\nimport java.util.*;\n\npublic class Main {\n    public static void main(final String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        // final int a = sc.nextInt();\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\n        // final String s1 = sc.next();\n        final int a = sc.nextInt();\n        final int b = sc.nextInt();\n        final int c = sc.nextInt();\n        final int k = sc.nextInt();\n        sc.close();\n        int result = 0;\n        if (a >= k) {\n            result = k;\n        } else if (b >= k - a) {\n            result = a;\n        } else if (c >= k - b - a) {\n            result = 2 * a + b - k;\n        }\n\n        System.out.println(result);\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(final String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int k = Integer.parseInt(sc.next());\n\n        if (k <= a + b) {\n            if (k >= a) {\n                System.out.println(a);\n            } else {\n                System.out.println(k);\n            }\n        } else {\n            System.out.println(a - (k - a - b));\n        }\n\n        sc.close();\n    }\n}", "label": 1}, {"id": 344, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 439, "code1": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        new Solver().run();\n    }\n}\n\nclass Solver {\n\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] a = new int[N];\n\n        for (int i = 0; i < N; i++) {\n            a[i] = sc.nextInt();\n            a[i]--;\n        }\n\n        int cnt = 0;\n        for (int i = 0; i < N; i++) {\n            if (i == a[a[i]]) cnt++;\n        }\n\n        System.out.println(cnt / 2);\n\n        return;\n    }\n\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint A = sc.nextInt();\n\t\tint B = sc.nextInt();\n\t\tint C = sc.nextInt();\n\t\tint K = sc.nextInt();\n\t\tint res = 0;\n\t\tres+=Math.min(A, K);\n\t\tK -= res;\n\t\tif(K==0) {\n\t\t\tSystem.out.println(res);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tK-=B;\n\t\tif(K>0) {\n\t\t\tres-=Math.min(K, C);\n\t\t}\n\t\tSystem.out.println(res);\n\n\t}\n}", "label": 0}, {"id": 635, "code1": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author GYSHGX868\n */\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    OutputWriter out = new OutputWriter(outputStream);\n    TaskA solver = new TaskA();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskA {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n      char a = in.nextChar();\n      char b = in.nextChar();\n      if (a == 'H') {\n        out.printLine(b);\n      } else {\n        out.printLine(b == 'H' ? 'D' : 'H');\n      }\n    }\n\n  }\n\n  static class InputReader {\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private InputReader.SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n      this.stream = stream;\n    }\n\n    public int read() {\n      if (numChars == -1) {\n        throw new InputMismatchException();\n      }\n      if (curChar >= numChars) {\n        curChar = 0;\n        try {\n          numChars = stream.read(buf);\n        } catch (IOException e) {\n          throw new InputMismatchException();\n        }\n        if (numChars <= 0) {\n          return -1;\n        }\n      }\n      return buf[curChar++];\n    }\n\n    public boolean isSpaceChar(int c) {\n      if (filter != null) {\n        return filter.isSpaceChar(c);\n      }\n      return isWhitespace(c);\n    }\n\n    public static boolean isWhitespace(int c) {\n      return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public char nextChar() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      return (char) c;\n    }\n\n    public interface SpaceCharFilter {\n      boolean isSpaceChar(int ch);\n\n    }\n\n  }\n\n  static class OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n      writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n      this.writer = new PrintWriter(writer);\n    }\n\n    public void printLine(char i) {\n      writer.println(i);\n    }\n\n    public void close() {\n      writer.close();\n    }\n\n  }\n}\n\n", "label": 0}, {"id": 708, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String args[]){\n        Scanner stdIn = new Scanner(System.in);\n        int n = stdIn.nextInt();\n        int c[] = new int[26];\n        int s[][] = new int[n][26];\n        \n        for(int i = 0; i < 26; i++){\n            c[i] = stdIn.nextInt();\n        }\n        \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < 26; j++){\n                s[i][j] = stdIn.nextInt();\n            }\n        }\n        \n        /* \n        for(int i = 0; i < n; i++){\n            int max = 0;\n            int index = 0;\n            for(int j = 0; j < 26; j++){\n                if(s[i][j] > max){\n                    max = s[i][j];\n                    index = j;\n                }\n            }\n            System.out.println(index + 1);\n        }\n        */\n        \n        for(int i = 1; i < n + 1; i++){\n            System.out.println(i % 26 + 1);\n        }\n        \n        //System.out.println(\"XXXXXXXX\");\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "label": 0}, {"id": 593, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    private static class FastScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        int array[] = new int[3], num = 0;\n        int count = 0;\n\n        while (count < 3) {\n            num = sc.nextInt();\n            if (0 < num && num < 10) {\n                array[count] = num;\n                count++;\n            }\n        }\n\n\n        for (int i = 0; i < 3; i++) {\n            for (int j = i + 1; j < 3; j++) {\n                if (array[i] == array[j]) {\n                    count = count - 1;\n                }\n            }\n        }\n        if (count == 2) {\n            System.out.print(\"Yes\");\n        } else {\n            System.out.print(\"No\");\n        }\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n;\n    char[] cs;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        cs = sc.next().toCharArray();\n        solve();\n    }\n\n    void solve() {\n        int[] sumEastL = new int[n];\n        if (cs[0] == 'E') {\n            sumEastL[0] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            sumEastL[i] = sumEastL[i - 1] + (cs[i] == 'E' ? 1 : 0);\n        }\n        int min = 10000000;\n        for (int i = 0; i < n; i++) {\n            int num = sumEastL[n - 1] - sumEastL[i] + (i > 0 ? i - sumEastL[i - 1] : 0);\n            if (min > num) {\n                min = num;\n            }\n        }\n        System.out.println(min);\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "label": 0}, {"id": 160, "code1": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tif((m|d) == 0) break;\n\t\t\tint day = d;\n\t\t\tswitch(m){\n\t\t\tcase 12:\n\t\t\t\tday += 335;\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tday += 305;\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tday += 274;\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tday += 244;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tday += 213;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tday += 182;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday += 152;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday += 121;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday += 91;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday += 60;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday += 31;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t}\n\t\t\tswitch(day%7){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"Thursday\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"Friday\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"Saturday\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"Sunday\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"Monday\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.println(\"Tuesday\");\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(\"Wednesday\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.util.*;\npublic class Main{\n\tpublic static void main(String args[]){\n\t\tScanner sc =  new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint month[] = {31,29,31,30,31,30,31,31,30,31,30,31};\n\t\t\tint in1 = sc.nextInt()-1;\n\t\t\tint day = 0;\n\t\t\tString youbi[] = {\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\"};\n\t\t\tfor(int i = 0; i<in1; i++){\n\t\t\t\tday += month[i];\n\t\t\t}\n\t\t\tint in2 = sc.nextInt();\n\t\t\tif(in2 == 0){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tday += --in2;\n\t\t\tday %= 7;\n\t\t\tSystem.out.println(youbi[day]);\n\t\t}\t\n\t}\n}", "label": 1}, {"id": 159, "code1": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tif((m|d) == 0) break;\n\t\t\tint day = d;\n\t\t\tswitch(m){\n\t\t\tcase 12:\n\t\t\t\tday += 335;\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tday += 305;\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tday += 274;\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tday += 244;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tday += 213;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tday += 182;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday += 152;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday += 121;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday += 91;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday += 60;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday += 31;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t}\n\t\t\tswitch(day%7){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"Thursday\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"Friday\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"Saturday\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"Sunday\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"Monday\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.println(\"Tuesday\");\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(\"Wednesday\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.util.*;class Main{public static void main(String[]a){Locale.setDefault(Locale.US);int m;for(Scanner s=new Scanner(System.in);(m=s.nextInt())>0;System.out.println(new java.text.SimpleDateFormat(\"EEEE\").format(new GregorianCalendar(2004,m-1,s.nextInt()).getTime())));}}", "label": 1}, {"id": 367, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n \n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n \n            int N = in.nextInt();\n            for (int i = 0; i < N; i++) {\n                long A = in.nextLong();\n                long B = in.nextLong();\n \n                long a = Math.min(A, B);\n                long b = Math.max(A, B);\n \n                long ans = 2L * (a - 1) + przedzial(a, b);\n \n                out.println(ans);\n            }\n        }\n \n        private long przedzial(long a, long b) {\n            if (a == b || a + 1 == b) {\n                return 0;\n            }\n \n            return 1L + szukaj(a + 1, b - 2, a * b);\n        }\n \n        private long szukaj(long a, long b, long LIMIT) {\n            if (a > b) return 0;\n            if (a == b) {\n                return a * b < LIMIT ? 1 : 0;\n            }\n            long lo = a, hi = b;\n            while (lo + 1 < hi) {\n                long m = lo + (hi - lo) / 2;\n                if (m * m >= LIMIT) {\n                    hi = m;\n                } else {\n                    lo = m;\n                }\n            }\n            long ans1 = 1 + 2L * (lo - 1 - a + 1);\n            long ans2 = 0;\n            if (lo * (lo + 1) < LIMIT) {\n                ans2 = 2L * (lo - a + 1);\n            }\n            return Math.max(ans1, ans2);\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n}", "label": 0}, {"id": 301, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "label": 0}, {"id": 338, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 307, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "label": 0}, {"id": 238, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString S = sc.next();\n\t\tfor (int i = S.length() - 1; i > 0; i--) {\n\t\t\tString f = S.substring(0, i / 2);\n\t\t\tString s = S.substring(i / 2, i);\n\t\t\tif (f.equals(s)) {\n\t\t\t\tSystem.out.println(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n}", "label": 1}, {"id": 413, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    void solve() throws IOException {\n    \tint N = ni();\n\n    \tint[] T = new int[N];\n    \tint[] A = new int[N];\n\n    \tfor (int i=0; i<N; i++) {\n\t\t\tT[i] = ni();\n\t\t\tA[i] = ni();\n\t\t}\n\n    \tlong t = T[0];\n    \tlong a = A[0];\n\n    \tfor (int i=1; i<N; i++) {\n    \t\tlong x = (t%T[i]==0)? t/T[i] : (t/T[i] + 1);\n    \t\tlong y = (a%A[i]==0)? a/A[i] : (a/A[i] + 1);\n    \t\tt = T[i] * Math.max(x, y);\n    \t\ta = A[i] * Math.max(x, y);\n    \t}\n\n    \tout.println(t + a);\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class Main {\n    public static void main(String[] args) {\n        Main main = new Main();\n        main.solve();\n    }\n\n    public void solve() {\n        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        int N = scan.nextInt();\n        List<Integer> candidate = new ArrayList<>();\n        for (int i = 1; i <= N; i++) {\n            candidate.add(i);\n        }\n        scan.nextLine();\n        String p = scan.nextLine();\n        String q = scan.nextLine();\n        List<List<Integer>> list = make(candidate);\n        List<String> strings = new ArrayList();\n        for (List<Integer> x : list) {\n            strings.add(x.stream().map(i -> i.toString()).collect(Collectors.joining(\" \")));\n        }\n        int len = strings.size();\n        int l = 0;\n        int r = 0;\n        for (int i = 0; i < len; i++) {\n            if (p.equals(strings.get(i))) {\n                l = i;\n            }\n            if (q.equals(strings.get(i))) {\n                r = i;\n            }\n        }\n        System.out.println(Math.abs(l - r));\n    }\n\n    public static List<List<Integer>> make(List<Integer> candidate) {\n        if (candidate.size() == 0) {\n            List<List<Integer>> empty = new ArrayList<>();\n            empty.add(new ArrayList<>());\n            return empty;\n        }\n\n        return candidate.stream().flatMap(i -> {\n            List<Integer> rest = new ArrayList<>(candidate);\n            rest.remove(i);\n            return make(rest).stream().map(list -> {\n                list.add(0, i);\n                return list;\n            });\n        }).collect(Collectors.toList());\n    }\n}\n", "label": 0}, {"id": 505, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tprivate void solve() {\n\t\tScanner io = new Scanner(System.in);\n\t\tint N = io.nextInt();\n\t\tint M = io.nextInt();\n\t\tboolean[] medium = new boolean[N];\n\t\tboolean[] ableToN = new boolean[N];\n\t\tfor(int i=0;i<M;i++){\n\t\t\tint a = io.nextInt()-1;\n\t\t\tint b = io.nextInt()-1;\n\t\t\tif(a==0) medium[b] = true;\n\t\t\tif(b==0) medium[a] = true;\n\t\t\tif(a==N-1) ableToN[b] = true;\n\t\t\tif(b==N-1) ableToN[a] = true;\n\t\t}\n\t\tfor(int i=0;i<N;i++){\n\t\t\tif(medium[i] && ableToN[i]){\n\t\t\t\tSystem.out.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}", "code2": "import java.util.Scanner;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\tprivate static final int INF = (int)1e9;\n\n\tstatic class Pair {\n\t\tint first;\n\t\tint second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn first + second;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object other) {\n\t\t\tif (other instanceof Pair) {\n\t\t\t\tPair p = (Pair)other;\n\n\t\t\t\treturn p.first == first && p.second == second;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner in = new Scanner(System.in)) {\n\t\t\tint n = in.nextInt();\n\t\t\tList<Integer>[] g = new ArrayList[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tg[i] = new ArrayList<>();\n\n\t\t\tint m = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tMap<Pair, Integer> dist = new HashMap<>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint f = in.nextInt();\n\t\t\t\tint t = in.nextInt();\n\t\t\t\tint w = in.nextInt();\n\n\t\t\t\tg[f].add(t);\n\t\t\t\tdist.put(new Pair(f, t), w);\n\t\t\t}\n\n\t\t\tdijkstra(g, n, dist, r);\n\t\t} catch (Exception ex) {\n\t\t\tthrow new RuntimeException(ex);\n\t\t}\n\t}\n\n\tpublic static void dijkstra(List<Integer> g[], int n, Map<Pair, Integer> dist, int s) {\n\t\tint[] d = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\td[i] = INF;\n\n\t\td[s] = 0;\n\t\tPriorityQueue<Pair> pq = new PriorityQueue<>((x, y) -> x.second-y.second);\n\t\tpq.add(new Pair(s, 0));\n\n\t\twhile (!pq.isEmpty()) {\n\t\t\tPair p = pq.remove();\n\n\t\t\tfor (int v : g[p.first]) {\n\t\t\t\tint dd = d[p.first] + dist.get(new Pair(p.first, v));\n\t\t\t\tif (dd < d[v]) {\n\t\t\t\t\td[v] = dd;\n\t\t\t\t\tpq.add(new Pair(v, d[v]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (d[i] == INF)\n\t\t\t\tSystem.out.println(\"INF\");\n\t\t\telse\n\t\t\t\tSystem.out.println(d[i]);\n\t\t}\n\t}\n}", "label": 0}, {"id": 134, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner std = new Scanner(System.in);\n        int a = std.nextInt();\n        int b = std.nextInt();\n        int c = std.nextInt();\n        int diff = a - b;\n        int rest = c - diff;\n        if (rest < 0) {\n            rest = 0;\n        }\n\n        System.out.println(rest);\n    }\n}\n", "label": 1}, {"id": 624, "code1": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "label": 0}, {"id": 322, "code1": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport static java.lang.System.out;\n\npublic class Main {\n    static MyReader in = new MyReader();\n\n    public static void main(String[] args) {\n        int N = in.i();\n        int k = ((int)Math.sqrt(1 + 8 * N) + 1) / 2;\n        out.println(k * (k - 1) / 2 == N ? solve(k) : \"No\");\n    }\n\n    static String solve(int k) {\n        StringBuilder sb = new StringBuilder(\"Yes\\n\");\n        sb.append(k).append('\\n');\n\n        for (int i = 1; i < k; i++) {\n            sb.append(k - 1).append(' ');\n\n            int t = 1 + i * (i - 1) / 2;\n            for (int j = 1; j < i; j++) {\n                sb.append(t++).append(' ');\n            }\n\n            for (int j = i; j < k; j++) {\n                sb.append(t).append(' ');\n                t += j;\n            }\n            sb.append('\\n');\n        }\n\n        sb.append(k - 1).append(' ');\n        int t = 1;\n        for (int i = 2; i <= k; i++) {\n            sb.append(t).append(' ');\n            t += i;\n        }\n\n        return sb.toString();\n    }\n}\n\nclass MyReader extends BufferedReader {\n    char[] cbuf = new char[1024];\n    int head = 0;\n    int tail = 0;\n\n    MyReader() {\n        super(new InputStreamReader(System.in));\n    }\n\n    char next() {\n        if (head == tail) {\n            try {\n                tail = super.read(cbuf, 0, cbuf.length);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            head = 0;\n        }\n        return cbuf[head++];\n    }\n\n    void back() {\n        head--;\n    }\n\n    boolean minus() {\n        boolean minus;\n        while (true) {\n            char c = next();\n            if (!isDelimiter(c)) {\n                if (!(minus = c == '-')) back();\n                return minus;\n            }\n        }\n    }\n\n    void skip() {\n        while (isDelimiter(next()));\n        back();\n    }\n\n    char[] s(int N) {\n        char[] cbuf = new char[N];\n        read(cbuf, 0, N);\n        return cbuf;\n    }\n\n    public int read(char[] cbuf, int off, int len) {\n        skip();\n        int i;\n        for (i = 0; i < cbuf.length; i++) {\n            char c = next();\n            if (isDelimiter(c)) {\n                break;\n            }\n            cbuf[i] = c;\n        }\n        return i;\n    }\n\n    boolean isDelimiter(char c) {\n        return c == ' ' || c == '\\n' || c == '\\r';\n    }\n\n    int i() {\n        boolean minus = minus();\n        int n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n\n    int[] ii(final int N) {\n        int[] a = new int[N];\n        for (int j = 0; j < a.length; j++) a[j] = i();\n        return a;\n    }\n\n    long l() {\n        boolean minus = minus();\n        long n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n}\n", "label": 0}, {"id": 726, "code1": "\npublic class Main {\n\n\n  private static void solve() {\n    int N = ni();\n    int C = ni();\n    int[][] D = ntable(C, C);\n    int[][] c = ntable(N, N);\n\n    int[][] dp = new int[C][3];\n    for (int i = 0; i < C; i++) {\n      for (int x = 0; x < N; x++) {\n        for (int y = 0; y < N; y++) {\n          dp[i][(x + y) % 3] += D[c[x][y] - 1][i];\n        }\n      }\n    }\n\n    int min = Integer.MAX_VALUE;\n    for (int i = 0; i < C; i++) {\n      for (int j = 0; j < C; j++) {\n        if (i == j)\n          continue;\n        for (int k = 0; k < C; k++) {\n          if (i == k || j == k)\n            continue;\n\n          int now = dp[i][0] + dp[j][1] + dp[k][2];\n          min = Math.min(now, min);\n        }\n      }\n    }\n    System.out.println(min);\n  }\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong[] a = new long[n];\n\t\tlong[] b = new long[n];\n\t\tlong[] c = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = Long.parseLong(sc.next());\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tb[i] = Long.parseLong(sc.next());\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tc[i] = Long.parseLong(sc.next());\n\t\tArrays.sort(a);\n\t\tArrays.sort(b);\n\t\tArrays.sort(c);\n\t\tlong[] u = new long[n];\n\t\tint index = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (index < n && a[index] < b[i])\n\t\t\t\tindex++;\n\t\t\tif (i == 0)\n\t\t\t\tu[i] = index;\n\t\t\telse\n\t\t\t\tu[i] = u[i - 1] + index;\n\t\t}\n\t\tint[] l = new int[n];\n\t\tindex = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (index < n && b[index] < c[i])\n\t\t\t\tindex++;\n\t\t\tl[i] = index;\n\t\t}\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (l[i] != 0)\n\t\t\t\tans += u[l[i] - 1];\n\t\tSystem.out.println(ans);\n\n\t}\n}", "label": 0}, {"id": 394, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "code2": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\n\nimport static java.util.Comparator.reverseOrder;\n\npublic class Main {\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n\n        List<Long> inputList = new ArrayList<Long>();\n        for(int i = 0; i < n ;i++) {\n            inputList.add(sc.nextLong());\n        }\n\n        /*\n        List<Integer> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        for(int a: sortedList) {\n            System.out.println(a);\n        }\n        */\n        List<Long> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        long result = sortedList.get(0);\n        int index = 1;\n        int count = 0;\n        for (int i = 0; i < n - 2 ; i++) {\n            result += sortedList.get(index);\n            count = count + 1;\n            if (count == 2) {\n                count = 0;\n                index = index + 1;\n            }\n        }\n        System.out.println(result);\n    }\n}", "label": 0}, {"id": 743, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "label": 0}, {"id": 41, "code1": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tint i=0;\n\t\tint sum=0;\n\n\t\ttry (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n            String line;\n            while ((line = br.readLine()) != null ) {\n            \tsum+=Integer.parseInt(line);\n            \ti++;\n            \tif(i==4){\n            \t\tbreak;\n            \t}\n            }\n            System.out.println(sum/60);\n            System.out.println(sum%60);\n\t\t}\n\t}\n}", "label": 1}, {"id": 544, "code1": "import java.util.Scanner;\n\npublic class Main {\n  private static Scanner sc;\n\n  public static void main(String[] args) {\n    sc = new Scanner(System.in);\n    new Main().solve();\n  }\n\n  private void solve() {\n    int N = sc.nextInt();\n    int[] a = new int[N + 2];\n    for (int i = 0; i < N; i++) {\n      a[i + 1] = sc.nextInt();\n    }\n    int sum = 0;\n    for (int i = 0; i <= N; i++) {\n      sum += Math.abs(a[i] - a[i + 1]);\n    }\n\n    for (int i = 0; i < N; i++) {\n      System.out.println(sum - Math.abs(a[i] - a[i + 1]) - Math.abs(a[i + 2] - a[i + 1]) + Math.abs(a[i] - a[i + 2]));\n    }\n  }\n}\n", "code2": "\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main \n{\n\tstatic HashMap<String, String> groupdef;\n\tstatic String firstgroup;\n\tstatic TreeSet<String> members;\n\tstatic TreeSet<String> checked;\n\t\n\tstatic void get(String g)\n\t{\n\t\tString con = groupdef.get(g);\n//\t\tSystem.out.println(\"Getting \" + g + \"...\");\n\t\tif(checked.contains(g))return;\n\t\t\n\t\tint start = 0;\n\t\tint mem = 0;\n\t\tfor(int i = 0; i < con.length(); i++)\n\t\t{\n\t\t\tif(con.charAt(i) == ',' || con.charAt(i) == '.')\n\t\t\t{\n\t\t\t\tString word = con.substring(start, i);\n\t\t\t\tstart = i+1;\n\t\t\t\t\n\t\t\t\tif(groupdef.containsKey(word))\n\t\t\t\t{\n\t\t\t\t\tget(word);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmembers.add(word);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchecked.add(g);\n//\t\tcache.put(g, mem);\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0)break;\n\t\t\tgroupdef = new HashMap<String, String>();\n//\t\t\tcache = new HashMap<String, Integer>();\n\t\t\tmembers = new TreeSet<String>();\n\t\t\tchecked = new TreeSet<String>();\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tString s = sc.next();\n\t\t\t\tint lim = s.indexOf(':');\n\t\t\t\tString groupname = s.substring(0, lim);\n\t\t\t\tString groupcon = s.substring(lim+1);\n\t\t\t\tif(i == 0)firstgroup = groupname;\n\t\t\t\tgroupdef.put(groupname, groupcon);\n\t\t\t}\n\t\t\t\n\t\t\tget(firstgroup);\n\t\t\tSystem.out.println(members.size());\n//\t\t\tSystem.out.println(members);\n\t\t}\n\t\t\n\n\t}\n\n}\n\n", "label": 0}, {"id": 8, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "code2": "import java.math.BigInteger;\nimport java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n        Scanner sc= new Scanner(System.in);\n        BigInteger n = sc.nextBigInteger();\n        String s = String.valueOf(n);\n        int sum =0;\n        for(char c:s.toCharArray())\n            sum += Integer.parseInt(String.valueOf(c));\n        if(sum%9==0)\n         \tSystem.out.println(\"Yes\");\n         else\n         \tSystem.out.println(\"No\");\n  \t}\n}\n\n", "label": 1}, {"id": 572, "code1": "/*\n *           AUTHOR: Maria Theresa M. Padayhag\n *             DATE: 20160326\n *  PRE-REQUIREMENT: JDK 1.8\n */\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.time.*;\nimport java.time.format.TextStyle;\nimport java.util.Locale;\n\nclass DayIndentifier\n{\n\tLocalDate date = null;\n\t\n\tpublic \tDayIndentifier( String inMonth, String inDay )\n\t{\n\t\t// NumberFormatException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tint month = Integer.parseInt( inMonth );\n\t\tint day   = Integer.parseInt( inDay );\n\t\t\n\t\t// DateTimeException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tdate = LocalDate.of( 2004, month, day );\n\t}\n\t\n\tpublic String getDayOfWeek()\n\t{\n\t\t// NullPointerException might be thrown here\n\t\t// but it will handled by the caller.\n\t\treturn date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.ENGLISH);\n\t}\n}\n\npublic class Main\n{\n\tpublic static boolean toExit( String[] dataset )\n\t{\n\t\tfor(String data: dataset)\n\t\t{\n\t\t\tif(data.equals(\"0\"))\n\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tpublic static void main( String args[] ) throws IOException\n\t{\n\t\tBufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );\n\t\tString input;\n\t\tString dataset[];\n\t\tDayIndentifier di;\n\t\t\n\t\tREAD: \n\t\twhile( ( input = br.readLine() ) != null ) {\n\t\t\ttry {\n\t\t\t\tdataset = input.split(\" \");\n\t\t\t\n\t\t\t\tif( toExit( dataset ) ) {\n\t\t\t\t\tbreak READ;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( dataset.length != 2 ) {\n\t\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\t\tcontinue READ;\n\t\t\t\t} \t\t\n\t\t\t\t\n\t\t\t\tdi = new DayIndentifier(dataset[0], dataset[1]);\n\t\t\t\tSystem.out.println( di.getDayOfWeek() );\n\t\t\t} catch( Exception e ) {\n\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\tcontinue READ;\n\t\t\t}\t\t\n\t\t}\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tint INF=1000000007;\n\t\tScanner sc=new Scanner(System.in);\n\t\tint V=sc.nextInt();\n\t\tArrayList<ArrayList<Integer>> v=new ArrayList<ArrayList<Integer>>();\n\t\tfor(int i=0; i<=V; i++) {\n\t\t\tv.add(new ArrayList<Integer>());\n\t\t}\n\t\tfor(int i=0; i<V-1; i++) {\n\t\t\tint a=sc.nextInt();\n\t\t\tint b=sc.nextInt();\n\t\t\t(v.get(a)).add(b);\n\t\t\t(v.get(b)).add(a);\n\t\t}\n\t\tint[] Fe=new int[V+1];\n\t\tint[] Su=new int[V+1];\n\t\tboolean[] Fe_V=new boolean[V+1];\n\t\tboolean[] Su_V=new boolean[V+1];\n\t\tArrays.fill(Fe, INF);\n\t\tArrays.fill(Su, INF);\n\t\tFe[1]=0;\n\t\tSu[V]=0;\n\t\tStack<Integer> Q=new Stack<Integer>();\n\t\tQ.add(1);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Fe_V[v.get(tmp).get(i)] && Fe[tmp]+1<Fe[v.get(tmp).get(i)]) {\n\t\t\t\t\tFe_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tFe[v.get(tmp).get(i)]=Fe[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tQ.add(V);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Su_V[v.get(tmp).get(i)] && Su[tmp]+1<Su[v.get(tmp).get(i)]) {\n\t\t\t\t\tSu_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tSu[v.get(tmp).get(i)]=Su[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint Su_w=0;\n\t\tint Fe_w=0;\n\t\tfor(int i=1; i<=V; i++) {\n\t\t\tif(Fe[i]<=Su[i]) {\n\t\t\t\tFe_w++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSu_w++;\n\t\t\t}\n\t\t}\n\t\tif(Su_w>=Fe_w) {\n\t\t\tSystem.out.println(\"Snuke\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"Fennec\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t}\n}", "label": 0}, {"id": 457, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint N = scan.nextInt();\n\t\tint M = scan.nextInt();\n\n\t\tint[] X = new int[M];\n\t\tfor(int i=0; i<M; i++) {\n\t\t\tX[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\t\t\n\t\tif(M <= N) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(X);\n\t\t\n\t\tint distance[] = new int[M-1];\n\t\tfor(int i=0; i<M-1; i++) {\n\t\t\tdistance[i] = X[i+1] - X[i];\n\t\t}\n\t\t\n\t\tArrays.sort(distance);\n\t\t\n\t\tint sum = 0;\n\t\tfor(int i=0; i<(M-N); i++) {\n\t\t\tsum+=distance[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\n\n\t}\n\n}", "label": 0}, {"id": 78, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "label": 1}, {"id": 296, "code1": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.System.in;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long[] x = new long[n];\n        for(int i=0;i<n;i++) x[i]=sc.nextLong();\n        long ans= 0;\n        for(int i=0;i<n-1;i++){\n            ans += Math.min(A*(x[i+1]-x[i]),B);\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(ans);\n        out.flush();\n    }\n}\n", "code2": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "label": 0}, {"id": 608, "code1": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint l = sc.nextInt();\n\t\tint t = sc.nextInt();\n\t\tint[] x = new int[n];\n\t\tint[] w = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tx[i] = sc.nextInt();\n\t\t\tw[i] = sc.nextInt();\n\t\t}\n\n\t\tint cnt = 0;\n\t\tfor(int i=1; i<n; i++){\n\t\t\tif(w[0]==1 && w[i]==2){\n\t\t\t\tif(t*2>=x[i]-x[0]){\n\t\t\t\t\tcnt += (1+(t*2-x[i]+x[0])/l);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(w[0]==2 && w[i]==1){\n\t\t\t\tif(t*2>=l-x[i]+x[0]){\n\t\t\t\t\tcnt -= (1+(t*2-l+x[i]-x[0])/l);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(w[0]==1){\n\t\t\tcnt %= n;\n\t\t}\n\t\telse{\n\t\t\tcnt = ((cnt%n)+n)%n;\n\t\t}\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(w[i]==1){\n\t\t\t\tx[i] = (x[i]+t)%l;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tx[i] = ((x[i]-t)%l+l)%l;\n\t\t\t}\n\t\t}\n\t\tint dist0 = x[0];\n\t\tArrays.sort(x);\n\t\tint index0 = 0;\n\t\tif(w[0]==1){\n\t\t\tfor(int i=n-1; i>=0; i--){\n\t\t\t\tif(x[i]==dist0){\n\t\t\t\t\tindex0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tif(x[i]==dist0){\n\t\t\t\t\tindex0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i<n; i++){\n\t\t\tSystem.out.println(x[(index0-cnt+n+i)%n]);\n\t\t}\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void doIt(){\n\t\tScanner in = new Scanner(System.in);\n\t\tdata pp[][] = new data[3][8];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=0;s<8;s++){\n\t\t\t\tint ban=in.nextInt();\n\t\t\t\tdouble time=in.nextDouble();\n\t\t\t\tpp[i][s]=new data(ban,time);\n\t\t\t}\n\t\t\tArrays.sort(pp[i]);\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][0].code,pp[i][0].time);\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][1].code,pp[i][1].time);\n\t\t}\n\t\tdata ans[]=new data[18];\n\t\tint cnt=0;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=2;s<8;s++){\n\t\t\t\tans[cnt]=pp[i][s];\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(ans);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[0].code,ans[0].time);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[1].code,ans[1].time);\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain.doIt();\n\t}\n\tstatic class data implements Comparable<data>{\n\t\tint code;\n\t\tdouble time;\n\t\tdata(int code,double time){\n\t\t\tthis.code=code;\n\t\t\tthis.time=time;\n\t\t}\n\t\tpublic int compareTo(data o) {\n\t\t\treturn Double.compare(this.time,o.time);//\u3053\u308c\u3067\u6bd4\u3079\u3089\u308c\u308b\u3002\n\t\t}\n\t}\n}", "label": 0}, {"id": 491, "code1": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "code2": "import java.util.*;\nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    String S[] = sc.next().split(\"\");\n    \n    int n = (int)Math.pow(2, S.length - 1);\n    \n    long total = 0;\n    for (int i = 0; i < n; i++) {\n      String s = S[0];\n      \n      for (int j = 0; j < S.length - 1; j++) {\n        if ((1&i>>j) == 1) {\n          total += Long.parseLong(s);\n          s = S[j + 1];\n        } else {\n          s += S[j + 1];\n        }\n      }\n      total += Long.parseLong(s);\n    }\n    System.out.println(total);\n  }\n}", "label": 0}, {"id": 589, "code1": "\n\nimport java.util.*;\nimport java.io.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\tScanner sc=new Scanner(System.in);\n\t     int n=sc.nextInt();\n\t     int m=sc.nextInt();\n\t     ArrayList<ArrayList<Integer>> a=new ArrayList<>();\nfor(int i=0;i<n;i++) {\n\ta.add(new ArrayList<Integer>());\n}\nfor(int j=0;j<m;j++) {\n\tint x=sc.nextInt()-1;\n\tint y=sc.nextInt()-1;\n\ta.get(x).add(y);\n\ta.get(y).add(x);\n}\nboolean vis[]=new boolean[n];\nans=0;\n\tSystem.out.println(dfs(a,0,vis,1,n));\n\t}\nstatic int ans=0;\t\n\tstatic int dfs(ArrayList<ArrayList<Integer>> a,int src,boolean vis[],int count,int n) {\n\t\tvis[src]=true;\n\t\tfor(int i:a.get(src)) {\n\t\t\tif(vis[i]==false) {\n\t\t\t\t\n\t\t\t\tdfs(a,i,vis,count+1,n);\n\t\t\t}\n\t\t}\n\t\tif(count==n) {\n\t\tans++;\n\t\tvis[src]=false;\n\t\t\t}else {\n\t\t\t\tvis[src]=false;\n\t\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\tstatic int[] arr(int n,Scanner sc) {\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\treturn a;\n}\n\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    private static class FastScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        int array[] = new int[3], num = 0;\n        int count = 0;\n\n        while (count < 3) {\n            num = sc.nextInt();\n            if (0 < num && num < 10) {\n                array[count] = num;\n                count++;\n            }\n        }\n\n\n        for (int i = 0; i < 3; i++) {\n            for (int j = i + 1; j < 3; j++) {\n                if (array[i] == array[j]) {\n                    count = count - 1;\n                }\n            }\n        }\n        if (count == 2) {\n            System.out.print(\"Yes\");\n        } else {\n            System.out.print(\"No\");\n        }\n    }\n}\n", "label": 0}, {"id": 678, "code1": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int h = scanner.nextInt();\n        int w = scanner.nextInt();\n        String[] letters = new String[h];\n\n        int[] occurrences = new int[26];\n        int numOfFours = 0;\n        int numOfTwos = 0;\n        int numOfOnes = 0;\n\n        for (int i = 0; i < letters.length; i++) {\n            letters[i] = scanner.next();\n            for (int j = 0; j < letters[i].length(); j++) {\n                occurrences[letters[i].charAt(j) - 'a']++;\n            }\n        }\n        boolean isPossible = true;\n\n        if (h % 2 == 0 && w % 2 == 0){\n            for (int occurrence : occurrences) {\n                if (occurrence % 4 != 0) {\n                    isPossible = false;\n                    break;\n                } else numOfFours += (occurrence / 4);\n            }\n\n            if (numOfFours != (h/2)*(w/2)) isPossible = false;\n        }\n        else if (h % 2 == 0 && w % 2 == 1){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (h/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2)) isPossible = false;\n        }\n        else if (h % 2 == 1 && w % 2 == 0){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (w/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (w/2)) isPossible = false;\n        }\n        else {\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfTwos < ((h/2) + (w/2)) && occurrences[i] >= 2){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] == 1) {\n                    numOfOnes++;\n                    occurrences[i] -= 1;\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2) + (w/2) || numOfOnes != 1) isPossible = false;\n        }\n\n        System.out.println(isPossible?\"Yes\":\"No\");\n    }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 214, "code1": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "label": 1}, {"id": 215, "code1": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n \n    class Main {\n      public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n \n    int N = sc.nextInt();\n    int S[] = new int[N];\n    int s = 0;\n \n    for(int i = 0; i < N; i++) {\n    S[i] = sc.nextInt();\n    s += S[i];\n    }\n    \n    if(s % 10 != 0) {\n        System.out.println(s);\n        return;\n    }else {\n        Arrays.sort(S);\n        for(int i = 0; i < N; i++)\n              if(S[i] % 10 != 0) {\n                      System.out.println(s -= S[i]);\n                      return;\n              }\n         }\n        System.out.println(0);\n        return ;\n  }\n}", "label": 1}, {"id": 718, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int k = in.nextInt();\n            String ans = \"No\";\n            for (int i = 0; i <= n; i++) {\n                for (int j = 0; j <= m; j++) {\n                    int v = (n - i) * j + i * (m - j);\n                    if (v == k) {\n                        ans = \"Yes\";\n                    }\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(), C = sc.nextInt();\n\t\tint D[][] = new int[C][C];\n\t\tint c[][] = new int[N][N];\n\t\t\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tD[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\t\n\t\t//\u30ef\u30fc\u30b7\u30e3\u30eb\u30d5\u30ed\u30a4\u30c9\n//\t\tfor(int k=0;k<C;k++) {\n//\t\t\tfor(int i=0;i<C;i++) {\n//\t\t\t\tfor(int j=0;j<C;j++) {\n//\t\t\t\t\tD[i][j]=Math.min(D[i][j], D[i][k]+D[k][j]);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n\t\t\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\tc[i][j] = sc.nextInt()-1;//0index\n\t\t\t}\n\t\t}\n\t\tsc.close(); \n\t\t\n\t\tint costSum0[] = new int[C]; //%3==0\n\t\tint costSum1[] = new int[C];\n\t\tint costSum2[] = new int[C];\n\t\t\n\t\tfor(int color=0;color<C;color++) {\n\t\t\tfor(int i=0;i<N;i++) {\n\t\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\t\tint nowColor = c[i][j];\n\t\t\t\t\tif((i+j)%3==0) costSum0[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==1) costSum1[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==2) costSum2[color] += D[nowColor][color];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = Integer.MAX_VALUE/2;\n\t\t//\u4f59\u308a\uff11\u306e\u3068\u3053\u308d\u5168\u901a\u308a\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tfor(int k=0;k<C;k++) {\n\t\t\t\t\tif(i==j||j==k||k==i)continue;\n\t\t\t\t\tint sum = costSum0[i]+costSum1[j]+costSum2[k];\n\t\t\t\t\tans = Math.min(ans,sum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}", "label": 0}, {"id": 89, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\t\n\t\tint a=sc.nextInt();\t\n\t\tint b=sc.nextInt();\t\n\t\tint c=sc.nextInt();\t\n\t\t\n\t\tint total=a+b+c;\n\t\tint min=Math.min(Math.min(a,b),Math.min(b,c));\n\t\tint max=Math.max(Math.max(a,b),Math.max(b,c));\n\t\tint ans=total-min-max;\n\t\t\n\t\tint count=0;\n\t\tcount=max-ans;\n\t\tmin+=count;\n\t\tcount+=(max-min)/2;\n\t\tif((max-min)%2==1){\n\t\t\tcount+=2;\n\t\t}\n\t\tSystem.out.println(count);\n\t\tsc.close();\n\t}\n}", "label": 1}, {"id": 463, "code1": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n       int ar[]=new int[] {0,0,0,0};\n       for(int i=0;i<3;i++)\n       {\n           int a=sc.nextInt();\n           int b=sc.nextInt();\n           ar[a-1]+=1;\n           ar[b-1]+=1;\n       }\n       \n       for(int i = 0; i < 4; i++) {\n\t\t\tif(ar[i] < 1 || ar[i] > 2) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"YES\");\n       \n//       for(int i:ar)\n//       {\n//           if(i>2)\n//           {\n//               System.out.println(\"NO\");\n//               System.exit(0);\n//           }\n//       }\n//       System.out.println(\"YES\");\n    }\n}", "code2": "import java.util.*;\npublic class Main {\n\tstatic int yono;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\tint N = Integer.parseInt(sc.next());\n\t\tyono = N - 1;\n\t\tint M = sc.nextInt();\n\t\ttree = new int[N];\n\t\tArrays.fill(tree, -1);\n\t\tfor (int i = 0; i < M; i++)union(Integer.parseInt(sc.next()) - 1, Integer.parseInt(sc.next()) - 1);\n\t\tSystem.out.println(yono);\n\t}\n\t\n\tstatic int[] tree;\n\tstatic void union(int x, int y) {\n\t\tx = root(x);\n\t\ty = root(y);\n\t\tif(x != y) {\n\t\t\tyono--;\n\t\t\tif(tree[x] < tree[y]) {\n\t\t\t\tx ^= y; y ^= x; x^= y;\n\t\t\t}\n\t\t\ttree[x] += tree[y];\n\t\t\ttree[y] = x;\n\t\t}\n\t}\n\tstatic boolean find(int x, int y) {\n\t\treturn root(x) == root(y);\n\t}\n\tstatic int root(int x) {\n\t\treturn tree[x] < 0 ? x : (tree[x] = root(tree[x]));\n\t}\n}", "label": 0}, {"id": 478, "code1": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static long MOD = (long)Math.pow(10, 6) + 3;\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long[] kai = new long[(int)MOD];\n//    long[] inkai = new long[(int)MOD];\n//    long[] in = new long[(int)MOD];\n    kai[0] = 1;\n    kai[1] = 1;\n//    inkai[0] = 1;\n//    inkai[1] = 1;\n//    in[1] = 1;\n    for(long i = 2; i < MOD; i++) {\n      kai[(int)i] = (i * kai[(int)i - 1]) % MOD;\n//      inkai[(int)i] = func(kai[(int)i], MOD - 2);\n//      in[(int)i] = func(i, MOD - 2);\n    }\n    int q = sc.nextInt();\n    for(int i = 0; i < q; i++) {\n      long x = sc.nextLong();\n      long d = sc.nextLong();\n      long n = sc.nextLong();\n      long ans = 0;\n      if(d == 0) {\n        if(x == 0) {\n          ans = 0;\n        } else {\n          ans = func(x, n % (MOD - 1));\n        }\n      } else {\n        long inv = func(d, MOD - 2);\n        x = (x * inv) % MOD;\n        if(x == 0) {\n          ans = 0;\n        } else {\n          if((int)(x + n - 1) >= MOD) {\n            ans = 0;\n          } else {\n            long t = func(d, n % (MOD - 1));\n            long invkai = func(kai[(int)x - 1], MOD - 2);\n            ans = (((kai[(int)(x + n - 1)] * invkai) % MOD) * t) % MOD;\n          }\n        }\n      }\n      System.out.println(ans);\n    }\n  }\n  public static long func(long a, long x) {\n    if(x == 0) return 1;\n    if(x >= 1) {\n      if(x % 2 == 0) {\n        long t = func(a, x / 2);\n        return (t * t) % MOD;\n      } else {\n        long t = func(a, x - 1);\n        return (a * t) % MOD;\n      }\n    }\n    return 0;\n  } \n}", "label": 0}, {"id": 22, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "code2": "import java.util.Scanner;\n \npublic class Main {\n \n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tlong N = input.nextLong();\n\t\tlong M = input.nextLong();\n      \tif (M==1||N==1) System.out.println(1);\n\t\telse if (N%2==1&&M%2==1) System.out.println(M*N/2+1);\n\t\telse System.out.println(M*N/2);\n\t}\n}", "label": 1}, {"id": 646, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "code2": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\nimport java.util.function.*;\nimport static java.lang.System.out;\n\npublic final class Main {\n    public static void main(String[] args) throws Exception {\n        try (var input = new Reader()) {\n            int k = input.nextInt();\n            int a = input.nextInt();\n          \tint b = input.nextInt();\n          \tfor (int i = a; i <= b; ++i) {\n              \tif (i % k == 0) {\n                  out.printf(\"OK%n\");\n                  return;\n                }\n            }\n          \tout.printf(\"NG%n\");\n        }\n    }\n\n    private static final class Reader implements AutoCloseable {\n        private final int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private FileInputStream fis;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        private Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private Reader(String filename) throws IOException {\n            fis = new FileInputStream(filename);\n            din = new DataInputStream(fis);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') { break; }\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        private int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg) { c = read(); }\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) { buffer[0] = -1; }\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) { fillBuffer(); }\n            return buffer[bufferPointer++];\n        }\n\n        @Override\n        public void close() throws Exception {\n            if (fis != null) {\n                fis.close();\n            }\n\n            if (din != null) {\n                din.close();\n            }\n        }\n    }\n}\n\n", "label": 0}, {"id": 614, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void doIt(){\n\t\tScanner in = new Scanner(System.in);\n\t\tdata pp[][] = new data[3][8];\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=0;s<8;s++){\n\t\t\t\tint ban=in.nextInt();\n\t\t\t\tdouble time=in.nextDouble();\n\t\t\t\tpp[i][s]=new data(ban,time);\n\t\t\t}\n\t\t\tArrays.sort(pp[i]);\n\t\t}\n\t\tfor(int i=0;i<3;i++){\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][0].code,pp[i][0].time);\n\t\t\tSystem.out.printf(\"%d %.2f\\n\",pp[i][1].code,pp[i][1].time);\n\t\t}\n\t\tdata ans[]=new data[18];\n\t\tint cnt=0;\n\t\tfor(int i=0;i<3;i++){\n\t\t\tfor(int s=2;s<8;s++){\n\t\t\t\tans[cnt]=pp[i][s];\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(ans);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[0].code,ans[0].time);\n\t\tSystem.out.printf(\"%d %.2f\\n\",ans[1].code,ans[1].time);\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain.doIt();\n\t}\n\tstatic class data implements Comparable<data>{\n\t\tint code;\n\t\tdouble time;\n\t\tdata(int code,double time){\n\t\t\tthis.code=code;\n\t\t\tthis.time=time;\n\t\t}\n\t\tpublic int compareTo(data o) {\n\t\t\treturn Double.compare(this.time,o.time);//\u3053\u308c\u3067\u6bd4\u3079\u3089\u308c\u308b\u3002\n\t\t}\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            list.add(scanner.nextInt());\n        }\n        list.sort((val1, val2) -> val1 - val2);\n        int b = list.get(0);\n        for (int i = 1; i < list.size(); i++) {\n            int a = list.get(i);\n            int r = a % b;\n            while (r != 0) {\n                a = b;\n                b = r;\n                r = a % b;\n            }\n        }\n        System.out.println(b);\n    }\n}", "label": 0}, {"id": 704, "code1": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.*;\nimport java.text.DecimalFormat;\nimport java.util.*;\n\n\n\n\npublic class Main {\n    private static int n,N;\n    private static int [] A;\n    private static int [] B;\n\n    private static int getLeft(){\n        int s = N/2 + 1;\n        while (s > 1 && B[s] != B[s-1]) s--;\n        return s;\n    }\n    private static int getRight(){\n        int e = N/2+1;\n        while (e < N && B[e] != B[e+1]) e++;\n        return e;\n    }\n\n    private static boolean valid(int x) {\n        for (int i = 1;i <= N;i++)\n            B[i] = (A[i] >= x) ? 1 : 0;\n        int s = getLeft(),e = getRight(),mid = N/2 + 1;\n        if (s == mid || e == mid) return B[mid] == 1;\n\n//        System.err.println(s + \" \" + e);\n        int prv = 0;\n        int l = B[s],r = B[e];\n\n        while (s <= e) {\n            int h = Math.max(s,e);\n            h = Math.min(h,N+1-h) - 1;\n            int rem = h - prv;\n            prv = h;\n            if (rem == 0) break;\n            int len = e-s-1;\n            if (2*rem <= len) {\n                s += rem;\n                e -= rem;\n            }\n            else {\n                if (l == r) return l == 1;\n                if (mid-s < e-mid) return l == 1;\n                else return r==1;\n            }\n        }\n//        System.err.println(\": \" + s + \" \" + e);\n        if (l == r) return l == 1;\n        int pos = mid - s;\n        if (l == 0) return pos%2 == 0;\n        return pos%2 == 1;\n    }\n    public static void main(String[] args) throws Exception {\n        IO io = new IO(null,null);\n        n = io.getNextInt();\n        N = 2*n-1;\n        A = new int[N+1];\n        B = new int[N+1];\n        for (int i = 1;i <= N;i++)\n            A[i] = io.getNextInt();\n\n        int s = 1,e = N;\n        while (s < e) {\n            int m = s + (e-s+1)/2;\n            if (valid(m)) s = m;\n            else e = m - 1;\n        }\n        io.println(s);\n\n        io.close();\n    }\n    private static void bf(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        TreeSet<ArrayList<Integer>> vis = new TreeSet<>(new Comparator<ArrayList<Integer>>() {\n            @Override\n            public int compare(ArrayList<Integer> o1, ArrayList<Integer> o2) {\n                for (int i = 0;i < n;i++)\n                    if (!o1.get(i).equals(o2.get(i)))\n                        return o1.get(i) - o2.get(i);\n                return 0;\n            }\n        });\n\n        while (!vis.contains(A)) {\n            System.err.println(A);\n            vis.add((ArrayList<Integer>)A.clone());\n            int prv = A.get(0);\n            for (int i = 1;i+1 < n;i++){\n                int cur = A.get(i);\n                if (prv != cur) A.set(i,A.get(i+1));\n                prv = cur;\n            }\n        }\n    }\n\n    private static void bftri(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        while (!A.isEmpty()) {\n            System.err.println(A);\n\n            ArrayList<Integer> B = new ArrayList<>();\n            int prv = A.get(0);\n            for (int i = 1;i+1 < A.size();i++){\n                int cur = A.get(i);\n                if (prv != cur) B.add(A.get(i+1));\n                else B.add(cur);\n                prv = cur;\n            }\n            A = B;\n        }\n    }\n}\n\nclass pair{\n    int s,e,v;\n    public pair(int s,int e,int v) {\n        this.s = s;\n        this.e = e;\n        this.v = v;\n    }\n    public int getLen(){\n        return e-s+1;\n    }\n    @Override\n    public String toString(){\n        return \"(\" + s + \":\" + e + \", \" + v + \")\";\n    }\n}\n\n\nclass IO{\n    private BufferedReader br;\n    private StringTokenizer st;\n    private PrintWriter writer;\n    private String inputFile,outputFile;\n\n    public boolean hasMore() throws IOException{\n        if(st != null && st.hasMoreTokens()) return true;\n        if(br != null && br.ready()) return true;\n        return false;\n    }\n    public String getNext() throws FileNotFoundException, IOException{\n        while(st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public String getNextLine() throws FileNotFoundException, IOException{\n        return br.readLine().trim();\n    }\n\n    public int getNextInt() throws FileNotFoundException, IOException{\n        return Integer.parseInt(getNext());\n    }\n    public long getNextLong() throws FileNotFoundException, IOException{\n        return Long.parseLong(getNext());\n    }\n\n    public void print(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\" ,x);\n    }\n    public void println(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\\n\" ,x);\n    }\n    public void print(Object o) throws  IOException{\n        writer.print(o.toString());\n    }\n\n    public void println(Object o) throws  IOException{\n        writer.println(o.toString());\n    }\n    public IO(String x,String y) throws FileNotFoundException, IOException{\n        inputFile = x;\n        outputFile = y;\n        if(x != null) br = new BufferedReader(new FileReader(inputFile));\n        else br = new BufferedReader(new InputStreamReader(System.in));\n        if(y != null) writer = new PrintWriter(new BufferedWriter(new FileWriter(outputFile)));\n        else writer = new PrintWriter(new OutputStreamWriter(System.out));\n    }\n\n    protected void close() throws IOException{\n        br.close();\n        writer.close();\n    }\n    public void outputArr(Object [] A) throws IOException{\n        int L = A.length;\n        for (int i = 0;i < L;i++) {\n            if(i > 0) writer.print(\" \");\n            writer.print(A[i]);\n        }\n        writer.print(\"\\n\");\n    }\n}\n", "code2": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    //input\n    int d = sc.nextInt();\n    /*\n    int[] c = new int[26]; //array of decrease\n    for(int i = 0; i < c.length; i++){\n      c[i] = sc.nextInt();\n    }\n    */\n\n    int[] c = new int[26];\n    for(int i = 0; i < 26; i++){\n      c[i] = sc.nextInt();\n    }\n\n    int[][] s = new int[d][26]; //two dimensional array of increase\n    for(int row = 0; row < s.length; row++){ //day\n      for(int col = 0; col < s[row].length; col++){ //contest number\n        s[row][col] = sc.nextInt();\n      }\n    }\n    int[] t = new int[d]; //array of contest numbers of the day\n    for(int i = 0; i < t.length; i++){\n      t[i] = 13;\n    }\n\n    //output\n    //based on increase\n    /*\n    int largestNum = s[0][0];\n    int largestNumRow = 0;\n    int largestNumCol = 0;\n    for(int row = 0; row < s.length; row++){\n      for(int col = 0; col < s[row].length; col++){\n        if( s[row][col] > largestNum ){\n          largestNum = s[row][col];\n          largestNumRow = row;\n          largestNumCol = col;\n        }\n      }\n    }\n\n    int largestNuM = c.get(0);\n    int largestNumPos = 0;\n    for(int j = 0; j < c.size(); j++){\n      if( c.get(j) > largestNuM ){\n        largestNuM = c.get(j);\n        largestNumPos = j;\n      }\n    }\n\n    for(int i = 0; i < d; i++){\n      if( largestNum > largestNuM ){\n        System.out.println(largestNumCol+1);\n      }else{\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n    /*\n\n    for(int m = 0; m < d; m++){\n      if( m%2 == 0 ){\n        System.out.println(largestNumCol+1);\n      }else{\n        int largestNuM = c.get(0);\n        int largestNumPos = 0;\n        for(int j = 0; j < c.size(); j++){\n          if( c.get(j) > largestNuM ){\n            largestNuM = c.get(j);\n            largestNumPos = j;\n          }\n        }\n        c.remove(largestNumPos);\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n\n    for(int i = 0; i < d; i++){\n      System.out.println((int)(Math.random()*26+1));\n      //System.out.println(largestNumCol+1);\n    }\n\n    /*\n    int value = 0;\n    for(int i = 0; i < t.length; i++){\n      int contestNum = t[i]-1;\n      int day = i+1;\n      value += s[day-1][contestNum]; //increase\n      for(int j = 0; j < c.length; j++){\n        if( !(j == contestNum) ){\n          int daySinceLast = day;\n          for(int m = 0; m < i; m++){\n            if( j == t[m]-1 ){\n              daySinceLast = day-m-1;\n            }\n          }\n          value -= c[j]*(daySinceLast); //decrease (amount of decrease * days since last one)\n        }\n      }\n      System.out.println(value);\n    }\n    */\n\n\n  }\n}\n", "label": 0}, {"id": 461, "code1": "import java.io.BufferedReader;\n\nimport static java.util.Comparator.*;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.lang.reflect.Array;\nimport java.math.BigDecimal;\nimport java.util.AbstractMap;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\npublic class Main {\n\t\n//\tpublic static Set<String> mem = new HashSet<String>();\n//\tpublic static boolean[] mem_1 = new boolean[100];\n//\tpublic static boolean[] mem_2 = new boolean[100];\n//\tpublic static Set<Integer> mem = new TreeSet<Integer>();\n//\tpublic static Map<String, Integer> mem_1= new HashMap<String, Integer>();\n//\tpublic static Map<String, Integer> mem_2 = new HashMap<String, Integer>();\n\t\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        \n        Solver solver = new Solver();\n        solver.solve(1, in, out);\n        \n        out.close();\n    }\n    \n    // ======================================================================\n    static class Solver {\n    \t\n\t\tList<Pair<Integer, Integer>> lP = new ArrayList<Pair<Integer, Integer>>();\n\t\tList<Pair<Integer, Integer>> lAns = new ArrayList<Pair<Integer, Integer>>();\n\n    \tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n    \t\tlong ans = 0L;\n    \t\tint[] cnt = new int[4];\n    \t\tfor(int i=0; i < 6; i++) {\n        \t\tint a = in.nextInt();\n        \t\tcnt[a-1] += 1;\n        // \t\tout.println(\"[\" + a + \"]\");\n    \t\t}\n    \t\tboolean f = true;\n    \t\tfor(int i=0; i < 4; i++) {\n        // \t\tout.println(\"[\" + cnt[i] + \"]\");\n    \t\t\tif(cnt[i] >= 3)\t\tf = false;\n    \t\t}\n    \t\tif(f)   \t\tout.println(\"YES\");\n    \t\telse            out.println(\"NO\");\n        }\n    }\n    // ======================================================================\n    static class Pair<K, V> extends AbstractMap.SimpleEntry<K, V> {\n        /** serialVersionUID. */\n        private static final long serialVersionUID = 6411527075103472113L;\n\n        public Pair(final K key, final V value) {\n            super(key, value);\n        }\n        public String getString() {\n            return \"[\" + getKey() + \"] [\" + getValue() + \"]\";\n        }\n     }    \n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n \n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n \n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n \n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n \n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n \n        public String nextString() {\n        \tString ret = new String(nextDChar()).trim();\n            return ret;\n        }\n \n        public char[] nextDChar() {\n            int len = 0;\n            len = reads(len, isSpace);\n            char[] ret = new char[len + 1];\n            for (int i=0; i < len; i++)\t\tret[i] = str[i];\n            ret[len] = 0x00;\n            return ret;\n        }\n \n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n \n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n \n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n    }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CStreamline solver = new CStreamline();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CStreamline {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int[] x = in.nextIntArray(m);\n            Arrays.sort(x);\n            int ans = x[m - 1] - x[0];\n            PriorityQueue<Integer> q = new PriorityQueue<>();\n            for (int i = 0; i < m - 1; i++) {\n                q.add(-(x[i + 1] - x[i]));\n            }\n            for (int i = 0; i < n - 1 && !q.isEmpty(); i++) {\n                ans += q.poll();\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 356, "code1": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner scanner=new FastScanner();\n\t\tint n=scanner.nextInt(),k=scanner.nextInt();\n\t\tint a[]=scanner.readArray(n);\n\t\t\n\t\tboolean dp[]=new boolean[k+1];\n//\t\tArrays.fill(dp, true);\n//\t\tdp[0]=false;\n\t\t\n\t\tfor(int stones=0;stones<=k;stones++) {\n\t\t\tfor(int j:a)\n\t\t\t\tif(j<=stones&&!dp[stones-j]) dp[stones]=true;\n\t\t}\n\t\tif(dp[k]) System.out.println(\"First\");\n\t\telse System.out.println(\"Second\");\n\t\n\t\t\n\t\t\n\n\t}\n\tstatic class FastScanner{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\t\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDoubel() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tint [] readArray(int n) {\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t}\n\n}\n\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "label": 0}, {"id": 502, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tprivate void solve() {\n\t\tScanner io = new Scanner(System.in);\n\t\tint N = io.nextInt();\n\t\tint M = io.nextInt();\n\t\tboolean[] medium = new boolean[N];\n\t\tboolean[] ableToN = new boolean[N];\n\t\tfor(int i=0;i<M;i++){\n\t\t\tint a = io.nextInt()-1;\n\t\t\tint b = io.nextInt()-1;\n\t\t\tif(a==0) medium[b] = true;\n\t\t\tif(b==0) medium[a] = true;\n\t\t\tif(a==N-1) ableToN[b] = true;\n\t\t\tif(b==N-1) ableToN[a] = true;\n\t\t}\n\t\tfor(int i=0;i<N;i++){\n\t\t\tif(medium[i] && ableToN[i]){\n\t\t\t\tSystem.out.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleGift solver = new CMultipleGift();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleGift {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            long X = in.nextLong();\n            long Y = in.nextLong();\n            int ans = 1;\n            long A = X;\n            while (A <= Y) {\n                A *= 2;\n                if (A > Y) break;\n                ans++;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 599, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tchar[] s = ns(n);\n\t\tint[] pres = new int[n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tpres[i+1] = pres[i] + (s[i] == 'W' ? 1 : 0);\n\t\t}\n\t\tint[] sufs = new int[n+1];\n\t\tfor(int i = n-1;i >= 0;i--){\n\t\t\tsufs[i] = sufs[i+1] + (s[i] == 'E' ? 1 : 0);\n\t\t}\n\t\tint min = 999999999;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tmin = Math.min(min, pres[i] + sufs[i+1]);\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    static int selectSort(int[] data) {\n        int ret = 0, n = data.length;\n        for (int i = 0; i < n; ++i) {\n            int minJ = i;\n            for (int j = i; j < n; ++j) {\n                if (data[j] < data[minJ]) minJ = j;\n            }\n            if(minJ != i) {\n                ++ret;\n                int tmp = data[minJ];\n                data[minJ] = data[i];\n                data[i] = tmp;\n            }\n        }\n        return ret;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        int[] data = new int[n];\n\n        for (int i = 0; i < n; ++i) {\n            data[i] = scanner.nextInt();\n        }\n\n        int cnt = selectSort(data);\n        for (int i = 0; i < n; ++i) {\n            System.out.print(data[i]);\n            if (i != n - 1) System.out.print(\" \");\n        }\n        System.out.println();\n        System.out.println(cnt);\n    }\n}\n", "label": 0}, {"id": 326, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint unko=sc.nextInt();\n\t\tboolean ike=false;\n\t\tint N=0;\n\t\tfor(int i=0; i<=500; i++) {\n\t\t\tif(unko==i*(i+1)/2) {\n\t\t\t\tike=true;\n\t\t\t\tN=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(unko<i*(i+1)/2) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ike) {\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\tSystem.out.println(N+1);\n\t\t\tint[][] ary=new int[N+1][N];\n\t\t\tint[] kaz=new int[N+2];\n\t\t\tfor(int i=0; i<=N; i++) {\n\t\t\t\tfor(int j=0; j<N; j++) {\n\t\t\t\t\tary[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<=N+1; i++) {\n\t\t\t\tkaz[i]=0;\n\t\t\t}\n\t\t\tint counter=1;\n\t\t\tfor(int i=1; i<=N+1; i++) {\n\t\t\t\tfor(int j=1; j<i; j++) {\n\t\t\t\t\tary[i-1][kaz[i-1]]=counter;\n\t\t\t\t\tkaz[i-1]++;\n\t\t\t\t\tary[j-1][kaz[j-1]]=counter;\n\t\t\t\t\tkaz[j-1]++;\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tString buri=\"\";\n\t\t\tfor(int i=0; i<N+1; i++) {\n\t\t\t\tburi=Arrays.toString(ary[i]);\n\t\t\t\tburi=buri.replaceAll(\",\",\"\");\n\t\t\t\tburi=buri.replace(\"[\",\" \");\n\t\t\t\tburi=buri.replace(\"]\",\"\");\n\t\t\t\tSystem.out.println(N+buri);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "label": 0}, {"id": 412, "code1": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n\tpublic Main(){\n\t\tnew A().doIt();\n\t}\n\tclass A{\n\t\tlong euclid(long a, long b){\n\t\t    long temp;\n\n\t\t    if(a < b) { \n\t\t    \ttemp = a;\n\t\t    \ta = b;\n\t\t    \tb = temp;\n\t\t    }\n\t\t    if(a % b == 0) return b;\n\t\t    return euclid( b, a % b );\n\t\t}\n\t\tvoid doIt(){\n\t\t\tint n = sc.nextInt();\n\t\t\tlong A = 1;\n\t\t\tlong B = 1;\n\t\t\tfor(int i = 0;i < n;i++){\n\t\t\t\tlong aa = sc.nextLong();\n\t\t\t\tlong bb = sc.nextLong();\n\t\t\t\tif(A % aa != 0)A = A + aa - (A % aa);\n\t\t\t\tif(B % bb != 0)B = B + bb - (B % bb);\n\t\t\t\tlong max = Math.max(A/aa,B/bb);\n\t\t\t\tA = max * aa;\n\t\t\t\tB = max * bb;\n//\t\t\t\tSystem.out.println(A+\" \"+B);\n\t\t\t}\n\t\t\tSystem.out.println(A+B);\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[] fact = new int[9];\n\n\n\tpublic static void main(String[] args) {\n\t\tfact[1] = 1;\n\t\tfor(int i = 2; i <= 8; i++)\n\t\t\tfact[i] = fact[i-1] * i;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] p = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tp[i] = sc.nextInt();\n\n\t\tint[] q = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tq[i] = sc.nextInt();\n\n\t\tint ans = Math.abs(getPosi(p) - getPosi(q));\n\t\tSystem.out.println(ans);\n        return;\n    }\n\n\tstatic private int getPosi(int[] x) {\n\n\t\t\tint l = x.length;\n\t\t\tint p = 1;\n\n\t\t\tfor(int i = 0; i < l; i++) {\n\t\t\t\tp += fact[l-i-1] * (x[i]-1);\n\t\t\t\tfor(int j = i+1; j < l; j++) {\n\t\t\t\t\tif(x[j] > x[i])\n\t\t\t\t\t\tx[j]--;\n\t\t\t\t}\n\t\t\t}\n\t\treturn p;\n\n\t}\n\n}\n\n", "label": 0}, {"id": 352, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tvoid solve() {\n\t\tint n = scn.nextInt(), mod = (int) 1e9 + 7;\n\t\tchar[] cmp = scn.next().toCharArray();\n\t\t\n\t\tint[][] dp = new int[n + 1][n + 1];\n\t\tdp[1][1] = 1;\n\t\t\n\t\tfor(int len = 2; len <= n; len++) {\n\t\t\tint[] pref = new int[n + 1];\n\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\tpref[i] = (pref[i - 1] + dp[len - 1][i]) % mod;\n\t\t\t}\n\t\t\tfor(int curr = 1; curr <= len; curr++) {\n\t\t\t\tint L, R;\n\t\t\t\tif(cmp[len - 2] == '<') {\n\t\t\t\t\tL = 1;\n\t\t\t\t\tR = curr - 1;\n\t\t\t\t} else {\n\t\t\t\t\tL = curr;\n\t\t\t\t\tR = n;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(L <= R) {\n\t\t\t\t\tdp[len][curr] += (pref[R] - pref[L - 1]);\n\t\t\t\t\tif(dp[len][curr] >= mod) {\n\t\t\t\t\t\tdp[len][curr] -= mod;\n\t\t\t\t\t} else if(dp[len][curr] < 0) {\n\t\t\t\t\t\tdp[len][curr] += mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int curr = 1; curr <= n; curr++) {\n\t\t\tans += dp[n][curr];\n\t\t\tif(ans >= mod) {\n\t\t\t\tans -= mod;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = true;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new Main(), \"Main\", 1 << 26).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tpublic FastReader() {\n\t\t\tis = System.in;\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] IndIntArray(int n) {\n\t\t\tint[][] a = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = new int[] { nextInt(), i };\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tint c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] shuffle(long[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tlong c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tlong[] uniq(long[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tlong[] rv = new long[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] reverse(long[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] compress(int[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tint[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] compress(long[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tlong[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}", "label": 0}, {"id": 590, "code1": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int a[][] = new int[n][n];\n\n        for (int i = 0; i < m; i++) {\n            int t1 = in.nextInt() - 1;\n            int t2 = in.nextInt() - 1;\n            a[t1][t2] = 1;\n            a[t2][t1] = 1;\n        }\n        List<Integer> order = new ArrayList<>();\n        order.add(0);\n        List<Integer> remain = new ArrayList<>();\n        for (int i = 1; i < n; i++) {\n            remain.add(i);\n        }\n        System.out.println(f(order, remain, a));\n    }\n\n    static int f(List<Integer> order, List<Integer> remain, int edges[][]) {\n        if (remain.size() == 0) {\n            int cur = order.get(0);\n            int next;\n            for (int p = 1; p < order.size(); p++) {\n                next = order.get(p);\n                if (edges[cur][next] == 1 || edges[next][cur] == 1) {\n                    cur = next; \n                } else {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n\n        int total = 0;\n        for (int p = 0; p < remain.size(); p++) {\n            order.add(remain.get(p));\n            remain.remove(p);\n            total += f(order, remain, edges);\n            remain.add(p, order.get(order.size() - 1));\n            order.remove(order.size() - 1);\n        }\n        return total;\n    }\n}", "code2": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "label": 0}, {"id": 752, "code1": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "label": 0}, {"id": 9, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    String[] s = sc.next().split(\"\");\n    int l =  s.length;\n    int count =0;\n    for(int i=0; i<l; i++){\n      if(s[i].equals(\"U\")||s[i].equals(\"D\")){\n        count +=1;\n        continue;\n      }\n\n\n      if(i%2==0){\n        if(s[i].equals(\"R\")){\n          count += 1;\n        }\n      }else{\n        if(s[i].equals(\"L\")){\n          count += 1;\n        }\n      }\n    }\n    if(count == l){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n\n\n\n\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 42, "code1": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint sum = 0;\n\t\t\n\t\tfor(int i = 0; i < 4; i++) {\n\t\t\tsum+=sc.nextInt();\n\t\t}\n\t\t\n\t\tint x = 0, y = 0;\n\t\t\n\t\twhile(sum > 0) {\n\t\t\tif(sum >= 60) {\n\t\t\t\tsum-=60;\n\t\t\t\tx++;\n\t\t\t} else {\n\t\t\t\tsum--;\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "label": 1}, {"id": 735, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int [] h = new int [N];\n        for(int i=0; i<N; i++){\n            h[i] = sc.nextInt();\n        }\n        Arrays.sort(h);\n        long min = 0;\n        long max = 1000000000;\n        long mid = 0;\n        while(max-min>1){\n            mid = max-(max-min)/2;\n            if(judge(mid,h,N,B,A-B)){\n                max = mid;\n            }else{\n                min = mid;\n            }\n        }\n        if(!judge(mid,h,N,B,A-B))mid++;\n        System.out.println(mid);\n    }\n    static boolean judge(long mid, int[]h, int N, int B, double C){\n        long Z=0;\n        for(int i=N-1; i>=0; i--){\n            long tmp = h[i]-mid*B;\n            if(tmp>0){\n                Z+=((long)(Math.ceil(tmp/C)));\n            }else{\n                break;\n            }\n        }\n        if(Z>mid)return false;\n        return true;\n    }\n}\n", "code2": "import java.util.Scanner;\n\nclass Main {\n    private static boolean[] calcPrimeTable(int n) {\n        boolean[] table = new boolean[n + 1];\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (!table[i]) {\n                for (int j = i + i; j <= n; j += i) {\n                    table[j] = true;\n                }\n            }\n        }\n        return table;\n    }\n\n    private static void solve() {\n        boolean[] table = calcPrimeTable(1000000);\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            int n = scanner.nextInt();\n            int counter = 0;\n            if (n == 0) {\n                break;\n            }\n            for (int i = 2; i <= n / 2; i++) {\n                if (!table[i] && !table[n - i]) {\n                    counter++;\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}", "label": 0}, {"id": 563, "code1": "import java.io.*;\nimport java.util.*;\n\n/**\n *\n * @author baito\n */\nclass UnionFindTree\n{\n    int[] par;\n    int[] rank;\n    int[] sizes;\n\n    UnionFindTree(int n)\n    {\n        par = new int[n];\n        rank = new int[n];\n        sizes = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            par[i] = i;\n            rank[i] = 0;\n            sizes[i] = 1;\n        }\n    }\n\n    int find(int x)\n    {\n        if (par[x] == x) return x;\n        else return par[x] = find(par[x]);\n    }\n\n    void unite(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n\n        if (x == y) return;\n        if (rank[x] < rank[y])\n        {\n            par[x] = y;\n            sizes[y] += sizes[x];\n        }\n        else\n        {\n            par[y] = x;\n            sizes[x] += sizes[y];\n            if (rank[x] == rank[y]) rank[x]++;\n        }\n    }\n\n    boolean same(int x, int y)\n    {\n        return find(x) == find(y);\n    }\n\n    int size(int x)\n    {\n        return sizes[par[x]];\n    }\n}\npublic class Main\n{\n    static StringBuilder sb = new StringBuilder();\n    static FastScanner sc = new FastScanner(System.in);\n    static int INF = 10000;\n    static long MOD =1000000007;\n    static long[] f;//factorial\n    static int[] y4 = {0,1,0,-1};\n    static int[] x4 = {1,0,-1,0};\n    static int[] y8 = {0,1,0,-1,-1,1,1,-1};\n    static int[] x8 = {1,0,-1,0,1,-1,1,-1};\n\n    static int N,K,L;\n\n    public static void main(String[] args)\n    {\n\n        N = sc.nextInt();\n        K = sc.nextInt();\n        L = sc.nextInt();\n        UnionFindTree u1 = new UnionFindTree(N);\n        UnionFindTree u2 = new UnionFindTree(N);\n        //long\u3092\u5fd8\u308c\u308b\u306a\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3059\u308b\u305e\n        for (int i = 0; i < K; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u1.unite(p,q);\n        }\n        for (int i = 0; i < L; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u2.unite(p,q);\n        }\n        Map<Long,Integer> sizes = new HashMap<>();\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            int value = sizes.containsKey(hash) ? sizes.get(hash):0;\n            sizes.put(hash,value+1);\n\n\n        }\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            System.out.println(sizes.get(hash));\n        }\n\n\n\n    }\n    //\u2193nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3002\u3000***factorial(N)\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b***\n    static long comb(int n, int r)\n    {\n        long result = f[n];\n        result = result * modInv(f[n - r]) % MOD;\n        result = result * modInv(f[r]) % MOD;\n        return result;\n    }\n\n    static long modInv(long n)\n    {\n        return modPow(n, MOD - 2);\n    }\n\n    static void factorial(int n)\n    {\n        f = new long[n + 1];\n        f[0] = f[1] = 1;\n        for (int i = 2; i <= n; i++)\n        {\n            f[i] = (f[i - 1] * i) % MOD;\n        }\n    }\n\n    static long modPow(long x, long n)\n    {\n        long res = 1L;\n        while (n > 0)\n        {\n            if ((n & 1) == 1)\n            {\n                res = res * x % MOD;\n            }\n            x = x * x % MOD;\n            n >>= 1;\n        }\n        return res;\n    }\n\n    //\u2191nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n\n    static int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n    static long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\n    static <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n    static void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n    public static void reverse(int[] x)\n    {\n        int l = 0;\n        int r = x.length - 1;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    public static void reverse(int[] x,int s, int e)\n    {\n        int l = s;\n        int r = e;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    static int length(int a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int length(long a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int countC2(char[][] a, char c){\n        int co = 0;\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                if(a[i][j] == c)\n                    co++;\n        return co;\n    }\n    static void fill(int[][] a, int v){\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                a[i][j] = v;\n    }\n    static class FastScanner {\n\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        /*public String nextChar(){\n            return (char)next()[0];\n        }*/\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public int [][] nextIntArray2(int h, int w){\n            int[][] a = new int[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < w ; wi++){\n                    a[hi][wi] = nextInt();\n                }\n            }\n            return a;\n        }\n        public Integer[] nextIntegerArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public char[] nextCharArray(int n){\n            char[] a = next().toCharArray();\n\n            return a;\n        }\n        public char[][] nextCharArray2(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = next().toCharArray();\n            }\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\n        public char[][] nextCharArray2s(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = nextLine().replace(\" \",\"\").toCharArray();\n            }\n            return a;\n        }\n        public char[][] nextWrapCharArray2(int h , int w, char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + next() + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u308b\u6642\u7528\n        public char[][] nextWrapCharArray2s(int h , int w ,char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + nextLine().replace(\" \",\"\") + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n        public long [][] nextLongArray2(int h, int w){\n            long[][] a = new long[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < h ; wi++){\n                    a[h][w] = nextLong();\n                }\n            }\n            return a;\n        }\n    }\n}\n", "code2": "/*\n *           AUTHOR: Maria Theresa M. Padayhag\n *             DATE: 20160326\n *  PRE-REQUIREMENT: JDK 1.8\n */\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.time.*;\nimport java.time.format.TextStyle;\nimport java.util.Locale;\n\nclass DayIndentifier\n{\n\tLocalDate date = null;\n\t\n\tpublic \tDayIndentifier( String inMonth, String inDay )\n\t{\n\t\t// NumberFormatException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tint month = Integer.parseInt( inMonth );\n\t\tint day   = Integer.parseInt( inDay );\n\t\t\n\t\t// DateTimeException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tdate = LocalDate.of( 2004, month, day );\n\t}\n\t\n\tpublic String getDayOfWeek()\n\t{\n\t\t// NullPointerException might be thrown here\n\t\t// but it will handled by the caller.\n\t\treturn date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.ENGLISH);\n\t}\n}\n\npublic class Main\n{\n\tpublic static boolean toExit( String[] dataset )\n\t{\n\t\tfor(String data: dataset)\n\t\t{\n\t\t\tif(data.equals(\"0\"))\n\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tpublic static void main( String args[] ) throws IOException\n\t{\n\t\tBufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );\n\t\tString input;\n\t\tString dataset[];\n\t\tDayIndentifier di;\n\t\t\n\t\tREAD: \n\t\twhile( ( input = br.readLine() ) != null ) {\n\t\t\ttry {\n\t\t\t\tdataset = input.split(\" \");\n\t\t\t\n\t\t\t\tif( toExit( dataset ) ) {\n\t\t\t\t\tbreak READ;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( dataset.length != 2 ) {\n\t\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\t\tcontinue READ;\n\t\t\t\t} \t\t\n\t\t\t\t\n\t\t\t\tdi = new DayIndentifier(dataset[0], dataset[1]);\n\t\t\t\tSystem.out.println( di.getDayOfWeek() );\n\t\t\t} catch( Exception e ) {\n\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\tcontinue READ;\n\t\t\t}\t\t\n\t\t}\n\t}\n}", "label": 0}, {"id": 251, "code1": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        double num = 0.006;\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        sc.nextLine();\n        int T = sc.nextInt();\n        int A = sc.nextInt();\n        sc.nextLine();\n        int num2 = Integer.MAX_VALUE;\n        int tmp;\n        int ans = 0;\n        for(int i = 0; i < N; i++){\n            tmp = sc.nextInt();\n            tmp = T*1000 - tmp*6;\n            tmp = Math.abs(A*1000 - tmp);\n            if(tmp < num2){\n                num2 = tmp;\n                ans = i+1;\n            }\n        }\n        System.out.println(ans);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint N = in.nextInt();\n\t\tint T = in.nextInt();\n\t\tint A = in.nextInt();\n\t\tint h[] =new int[N];\n\t\tdouble t[] =new double[N];\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\th[i]= in.nextInt();\n\t\t\tt[i]=Math.abs((T-h[i]*0.006)-A);\n\t\t}\n\t\tint minn=10000;\n\t\tdouble min=10000000;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif(min>t[i]) {\n\t\t\t\tmin=t[i];\n\t\t\t\tminn=i;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(minn+1);\n\t}\n}\n", "label": 1}, {"id": 639, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "code2": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 151, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long x = sc.nextLong();\n    long ax = 0;\n    if (a > 0) {\n      ax = ((a - 1) / x) + 1;\n    }\n    long bx = (b / x) + 1;\n    System.out.println(bx - ax);\n  }\n}", "label": 1}, {"id": 469, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint N = scan.nextInt();\n\t\tint M = scan.nextInt();\n\n\t\tint[] X = new int[M];\n\t\tfor(int i=0; i<M; i++) {\n\t\t\tX[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\t\t\n\t\tif(M <= N) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(X);\n\t\t\n\t\tint distance[] = new int[M-1];\n\t\tfor(int i=0; i<M-1; i++) {\n\t\t\tdistance[i] = X[i+1] - X[i];\n\t\t}\n\t\t\n\t\tArrays.sort(distance);\n\t\t\n\t\tint sum = 0;\n\t\tfor(int i=0; i<(M-N); i++) {\n\t\t\tsum+=distance[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\n\n\t}\n\n}", "code2": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "label": 0}, {"id": 146, "code1": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "label": 1}, {"id": 613, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        final static long INF = (long) 4.1e18;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            long L = 2L * in.nextInt();\n            long T = in.nextInt() * 2L;\n            TaskC.Chameleon[] chameleon = new TaskC.Chameleon[n];\n            int[] cnt = new int[3];\n            for (int i = 0; i < n; ++i) {\n                chameleon[i] = new TaskC.Chameleon();\n                chameleon[i].start = in.nextInt() * 2L;\n                chameleon[i].color = 0;\n                chameleon[i].dir = in.nextInt() == 1 ? 1 : -1;\n                chameleon[i].indexInInput = i;\n                ++cnt[chameleon[i].dir + 1];\n            }\n\n            // Determine new positions\n            for (TaskC.Chameleon c : chameleon) {\n                c.newPos = ((c.start + T * c.dir) % L + L) % L;\n            }\n\n            TaskC.Chameleon[] res;\n\n            if (cnt[0] == 0 || cnt[2] == 0) {\n                // No meetings at all.\n                for (TaskC.Chameleon c : chameleon) {\n                    c.newColor = c.color;\n                }\n                res = chameleon.clone();\n            } else {\n                // Determine new colors\n                {\n                    TaskC.Chameleon[] perm = chameleon.clone();\n                    Arrays.sort(perm, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n\n                    int indNextReverse = 0;\n                    for (int ind = 0; ind < n; ++ind) {\n                        TaskC.Chameleon c = perm[ind];\n                        if (c.dir > 0)\n                            c.newColor = c.color;\n                        else {\n                            while (perm[indNextReverse].dir < 0)\n                                indNextReverse = (indNextReverse + 1) % n;\n                            TaskC.Chameleon d = perm[indNextReverse];\n                            long delta = c.start - d.start;\n                            if (delta < 0)\n                                delta += L;\n                            if (delta <= 2 * T) {\n                                // There was at least one change of color!\n                                c.newColor = d.color;\n                            } else {\n                                c.newColor = c.color;\n                            }\n                        }\n                        if (indNextReverse == ind)\n                            indNextReverse = (indNextReverse + 1) % n;\n                    }\n                }\n\n                TaskC.Chameleon first;\n                TaskC.Chameleon firstMapsTo;\n                // Detemine which chameleon did the first one become\n                {\n                    List<TaskC.Chameleon> positive = new ArrayList<TaskC.Chameleon>();\n                    List<TaskC.Chameleon> negative = new ArrayList<TaskC.Chameleon>();\n                    for (TaskC.Chameleon c : chameleon) {\n                        if (c.dir == 1)\n                            positive.add(c);\n                        else\n                            negative.add(c);\n                    }\n                    Collections.sort(positive, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    Collections.sort(negative, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    first = positive.get(0);\n                    TaskC.Chameleon closestNegative = negative.get(0);\n                    long deltaBest = closestNegative.start - first.start;\n                    if (deltaBest < 0)\n                        deltaBest += L;\n                    for (TaskC.Chameleon c : negative) {\n                        long deltaCur = c.start - first.start;\n                        if (deltaCur < 0)\n                            deltaCur += L;\n                        if (deltaCur < deltaBest) {\n                            closestNegative = c;\n                            deltaBest = deltaCur;\n                        }\n                    }\n                    long timeLeft = T;\n                    if (timeLeft < deltaBest / 2) {\n                        // The first chameleon stayed himself\n                        firstMapsTo = first;\n                    } else {\n                        timeLeft -= deltaBest / 2;\n                        List<Long> positiveDeltas = new ArrayList<Long>();\n                        positiveDeltas.add(0L);\n                        long sum = 0;\n                        for (int i = 0; i < positive.size(); ++i) {\n                            long delta = positive.get((positive.size() - i) % positive.size()).start - positive.get((positive.size() - i - 1) % positive.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            positiveDeltas.add(sum);\n                        }\n                        int shift = negative.indexOf(closestNegative);\n                        List<Long> negativeDeltas = new ArrayList<Long>();\n                        negativeDeltas.add(0L);\n                        sum = 0;\n                        for (int i = 0; i < negative.size(); ++i) {\n                            long delta = negative.get((shift + i + 1) % negative.size()).start - negative.get((shift + i) % negative.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            negativeDeltas.add(sum);\n                        }\n                        long l = 0;\n                        long r = INF;\n                        while (r - l > 1) {\n                            long m = (l + r) / 2;\n                            long cntPositive = (m + 1) / 2;\n                            long cntNegative = m / 2;\n                            long positiveTimeSpent = mulWithInf(cntPositive / positive.size(), L) + positiveDeltas.get((int) (cntPositive % positive.size()));\n                            long negativeTimeSpent = mulWithInf(cntNegative / negative.size(), L) + negativeDeltas.get((int) (cntNegative % negative.size()));\n                            if (positiveTimeSpent + negativeTimeSpent <= timeLeft * 2)\n                                l = m;\n                            else\n                                r = m;\n                        }\n                        if (l % 2 == 0) {\n                            firstMapsTo = negative.get((int) ((shift + l / 2) % negative.size()));\n                        } else {\n                            firstMapsTo = positive.get(((int) ((positive.size() - (l + 1) / 2) % positive.size()) + positive.size()) % positive.size());\n                        }\n                    }\n                }\n\n                // Now, create the final mapping!\n                {\n                    TaskC.Chameleon[] firstSortedByPos = chameleon.clone();\n                    Arrays.sort(firstSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    TaskC.Chameleon[] finalSortedByPos = chameleon.clone();\n                    Arrays.sort(finalSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    int delta = Arrays.asList(finalSortedByPos).indexOf(firstMapsTo) - Arrays.asList(firstSortedByPos).indexOf(first);\n                    res = new TaskC.Chameleon[chameleon.length];\n                    for (int i = 0; i < chameleon.length; ++i) {\n                        res[firstSortedByPos[i].indexInInput] = finalSortedByPos[((i + delta) % chameleon.length + chameleon.length) % chameleon.length];\n                    }\n                }\n            }\n\n            for (TaskC.Chameleon c : res) {\n                out.println(c.newPos / 2);\n            }\n        }\n\n        private long mulWithInf(long a, long b) {\n            if (a == 0)\n                return 0;\n            else if (INF / a <= b)\n                return INF;\n            else\n                return a * b;\n        }\n\n        static class Chameleon {\n            long start;\n            long newPos;\n            int newColor;\n            int color;\n            int dir;\n            int indexInInput;\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "label": 0}, {"id": 172, "code1": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "code2": "import java.util.*;\nimport java.math.*;\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner s=new Scanner(System.in);\n\t\tint a=s.nextInt();\n\t\tBigInteger bi=new BigInteger(\"1\");\n\t\tfor(int i=0;i<a;i++)bi=bi.multiply(new BigInteger(\"\"+(i+2)));\n\t\tbi=bi.add(new BigInteger(\"2\"));\n\t\tSystem.out.println(bi.toString());\n\t\tfor(int i=0;i<a;i++)System.out.println(2+i);\n\t}\n}", "label": 1}, {"id": 441, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tpublic void solve() {\n\t\tint N = nextInt();\n\t\tint[] a = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\ta[i] = nextInt() - 1;\n\t\t}\n\t\tboolean[] used = new boolean[N];\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tint x = a[i];\n\t\t\tint y = a[x];\n\t\t\tif(used[x])continue;\n\t\t\tif(used[y])continue;\n\t\t\tif(x == a[y] && y == a[x]){\n\t\t\t\tans++;\n\t\t\t\tused[x] = true;\n\t\t\t\tused[y] = true;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "code2": "import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Random;\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\n\n            _Scanner sc = new _Scanner(in);\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int c = sc.nextInt();\n            int k = sc.nextInt();\n\n            if (a + b >= k) {\n                out.println(Math.min(k, a));\n            } else {\n                out.println(a - (k - a - b));\n            }\n        }\n    }\n\n    private static void reverse(int[] vs) {\n        for (int i = 0; i < vs.length / 2; i++) {\n            swap(vs, i, vs.length - 1 - i);\n        }\n    }\n\n    static class _Scanner {\n        InputStream is;\n        _Scanner(InputStream is) {\n            this.is = is;\n        }\n        byte[] bb = new byte[1 << 15];\n        int k, l;\n        byte getc() {\n            try {\n                if (k >= l) {\n                    k = 0;\n                    l = is.read(bb);\n                    if (l < 0) return -1;\n                }\n                return bb[k++];\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        byte skip() {\n            byte b;\n            while ((b = getc()) <= 32)\n                ;\n            return b;\n        }\n\n        int nextInt() {\n            int n = 0;\n            int sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        long nextLong() {\n            long n = 0;\n            long sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        public String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); b > 32; b = getc()) {\n                sb.append(((char) b));\n            }\n            return sb.toString();\n        }\n    }\n\n    private static void shuffle(int[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void shuffle(Object[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void swap(int[] ar, int i, int j) {\n        int t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n    private static void swap(Object[] ar, int i, int j) {\n        Object t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n\n}\n", "label": 0}, {"id": 1, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        int n = str.length();\n        int digitSum = 0;\n        for (int i = 0; i < n; i++)\n            digitSum += (str.charAt(i) - '0');\n        if(digitSum % 9 == 0) {\n            System.out.println(\"Yes\");\n        }\n        else {\n            System.out.println(\"No\");\n        }\n    }\n}\n\n", "code2": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "label": 1}, {"id": 233, "code1": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "label": 1}, {"id": 208, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "code2": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "label": 1}, {"id": 696, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScan in = new MyScan(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyScan in, PrintWriter out) {\n            int i = in.nextInt();\n\n            long[] md = new long[i];\n\n            int rm = i - 2;\n            int lx = i - 2;\n            while (rm >= 0) {\n                md[lx + 1] = Util.c(rm, lx);\n                rm -= 2;\n                lx--;\n            }\n            long res = 0;\n            long prev = 0;\n            for (int m = 1; m < i; m++) {\n                long cur = Util.fact(m) * Util.fact(i - m - 1) % Util._m;\n                cur = cur * (md[m]) % Util._m;\n\n\n                res += (cur - prev + Util._m) * m % Util._m;\n                prev = cur;\n\n            }\n\n\n            out.println(res % Util._m);\n\n        }\n\n    }\n\n    static class MyScan {\n        private final InputStream in;\n        private byte[] inbuf = new byte[1024];\n        public int lenbuf = 0;\n        public int ptrbuf = 0;\n\n        public MyScan(InputStream in) {\n            this.in = in;\n        }\n\n        private int readByte() {\n            if (lenbuf == -1) throw new InputMismatchException();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = in.read(inbuf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (lenbuf <= 0) return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = num * 10 + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n    }\n\n    static class Util {\n        public static final long M07 = 1000_000_007;\n        public static long _m = M07;\n        private static long[] fact;\n        private static long[] inv;\n        private static long[] ifact;\n\n        public static void l() {\n            fact = new long[1000001];\n            inv = new long[1000001];\n            ifact = new long[1000001];\n            for (int s = 0; s < 2; s++) {\n                fact[s] = 1;\n                ifact[s] = 1;\n                inv[s] = 1;\n            }\n            inv[0] = 0;\n            for (int i = 2; i < inv.length; i++) {\n                inv[i] = (_m - (_m / i) * inv[(int) (_m % i)] % _m) % _m;\n            }\n            for (int i = 2; i < fact.length; i++) {\n                fact[i] = i * fact[i - 1] % _m;\n                ifact[i] = inv[i] * ifact[i - 1] % _m;\n            }\n        }\n\n        public static long c(int a, int b) {\n            if (fact == null) l();\n            return ifact[a] * ifact[b - a] % _m * fact[b] % _m;\n        }\n\n        public static long fact(int a) {\n            if (fact == null) l();\n            return fact[a];\n        }\n\n    }\n}\n\n", "code2": "import java.lang.reflect.Array;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static boolean check(int a,int b,int mid){\n        if(a <= mid && b <= mid || a > mid && b > mid)return true;\n        return false;\n    }\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int array[] = new int[2 * n + 1];\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        for (int i = 1; i < 2 * n; i++)\n            array[i] = Integer.parseInt(st.nextToken());\n        array[0] = array[2 * n] = -1;\n        int infinity = (int) 1E9 + 5;\n        int low = 1;\n        int high = 2 * n;\n        TreeSet<Integer> zero;\n        TreeSet<Integer> ones;\n        while (low < high) {\n            int mid = (low + high) / 2;\n            int temp = -1;\n            zero = new TreeSet<>();\n            ones = new TreeSet<>();\n            ones.add(infinity);\n            ones.add(-infinity);\n            zero.add(infinity);\n            zero.add(-infinity);\n            for (int i = 1; i < 2 * n; i++) {\n                if (check(array[i],array[i - 1],mid) && i != 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n                if (check(array[i],array[i + 1],mid) && i != 2*n - 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n            }\n                int beforezero = zero.floor(n);\n                int afterzero = zero.ceiling(n);\n                int beforeone = ones.floor(n);\n                int afterone = ones.ceiling(n);\n                int beforemax = Math.max(beforeone, beforezero);\n                int aftermin = Math.min(afterone, afterzero);\n                int min = Math.min(aftermin - n, n - beforemax);\n                //System.out.println(\"1 \" + aftermin + \" \" + beforemax + \" \" + min + \" \" + beforezero + \" \" + afterzero + \" \" + beforeone + \" \" + afterone);\n                if (min == aftermin - n) {\n                    if (afterone < afterzero) temp = 1;\n                    else temp = 0;\n                }\n                if (min == n - beforemax) {\n                    if (beforeone < beforezero) temp = 0;\n                    else temp = 1;\n            }\n            if(min > n - 2){\n                if((n & 1) == 0)temp = (array[n] > mid) ? 0 : 1;\n                else temp = (array[n] > mid) ? 1 : 0;\n            }\n            //System.out.println(mid + \" \" + low + \" \" + high + \" \" + zero + \" \" + ones + \" \" + temp);\n            if (temp == 1) low = mid + 1;\n            else high = mid;\n        }\n        System.out.println(low);\n    }\n}", "label": 0}, {"id": 84, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tif ((a <= c && b >= c) || (a >= c && b <= c)) {\n\t\t\tSystem.out.printf(\"Yes\");\n\t\t} else {\n\t\t\tSystem.out.printf(\"No\");\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 758, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "label": 0}, {"id": 7, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in)) {\n\t\t\tString n = sc.next();\n\t\t\tint len = n.length();\n\t\t\tint amari = 0;\n\t\t\tfor (int i = 0; i < len; i++) {\n\t\t\t\tint keta = Integer.parseInt(n.substring(i, i + 1));\n\t\t\t\tamari = (amari + keta) % 9;\n\t\t\t}\n\t\t\tif (amari % 9 == 0) {\n\t\t\t\tSystem.out.println(\"Yes\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 637, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "label": 0}, {"id": 44, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint sum = 0;\n\t\t\n\t\tfor(int i = 0; i < 4; i++) {\n\t\t\tsum+=sc.nextInt();\n\t\t}\n\t\t\n\t\tint x = 0, y = 0;\n\t\t\n\t\twhile(sum > 0) {\n\t\t\tif(sum >= 60) {\n\t\t\t\tsum-=60;\n\t\t\t\tx++;\n\t\t\t} else {\n\t\t\t\tsum--;\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "label": 1}, {"id": 343, "code1": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "label": 0}, {"id": 351, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int count = Integer.valueOf(reader.readLine());\n        String s = reader.readLine();\n\n        long[][] dp = new long[count][count];\n        dp[0][0] = 1;\n        long modulo = 1_000_000_007;\n\n        for (int i = 1; i < count; ++i) {\n            if (s.charAt(i - 1) == '<') {\n                dp[i][0] = 0;\n                for (int j = 1; j <= i; ++j) {\n                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1];\n                    dp[i][j] %= modulo;\n                }\n            } else {\n                dp[i][i] = 0;\n                for (int j = i - 1; j >= 0; --j) {\n                    dp[i][j] = dp[i][j + 1] + dp[i - 1][j];\n                    dp[i][j] %= modulo;\n                }\n            }\n        }\n\n        long res = 0;\n        for (int i = 0; i < count; ++i) {\n            res += dp[count - 1][i];\n            res %= modulo;\n        }\n        System.out.println(res);\n    }\n}\n", "label": 0}, {"id": 416, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    void solve() throws IOException {\n    \tint N = ni();\n\n    \tint[] T = new int[N];\n    \tint[] A = new int[N];\n\n    \tfor (int i=0; i<N; i++) {\n\t\t\tT[i] = ni();\n\t\t\tA[i] = ni();\n\t\t}\n\n    \tlong t = T[0];\n    \tlong a = A[0];\n\n    \tfor (int i=1; i<N; i++) {\n    \t\tlong x = (t%T[i]==0)? t/T[i] : (t/T[i] + 1);\n    \t\tlong y = (a%A[i]==0)? a/A[i] : (a/A[i] + 1);\n    \t\tt = T[i] * Math.max(x, y);\n    \t\ta = A[i] * Math.max(x, y);\n    \t}\n\n    \tout.println(t + a);\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\tint cnt(int s,int g,int cnt,int xy[][],int n){\n\t\tint result = 0;\n\t\tint c[] = new int [n+1];\n\t\tint d[] = new int [n+1];\n\t\tc[s] = 1;\n\t\tif(s == g && cnt > 0)result = 1;\n\t\tfor(int i = 1;i < cnt;i++){\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tfor(int k = 1;k < n+1;k++){\n\t\t\t\t\tif(xy[j][k] == 1 && c[j] == i){\n\t\t\t\t\t\td[k] = i + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tc[j] = d[j];\n\t\t\t}\n\t\t\tif(c[g] > 0){\n\t\t\t\tresult = c[g];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i == 101){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tvoid doIt() { \n\t\tint n = sc.nextInt();\n\t\tint xy[][] = new int [n+1][n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tint r1 = sc.nextInt();\n\t\t\tint k1 = sc.nextInt();\n\t\t\tfor(int j = 0;j < k1;j++){\n\t\t\t\tint t = sc.nextInt();\n\t\t\t\txy[r1][t] = 1;\n\t\t\t}\n    \t }\n\t\tint p = sc.nextInt();\n\t\tfor(int i = 0;i < p;i++){\n\t\t\tint s = sc.nextInt();\n\t\t\tint d = sc.nextInt();\n\t\t\tint TTL = sc.nextInt();\n\t\t\tint ans = cnt(s,d,TTL,xy,n);\n\t\t\tif(ans == 0){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t//\u4e2d\u8eab\n\t\tfor(int i = 1;i <= n;i++){\n\t\t\tfor(int j = 1;j <= n;j++){\n\t\t\t\tSystem.out.print(xy[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t*/\n     }\n    public static void main(String[] args) {\n    \t// TODO Auto-generated method stub\n    \tnew Main().doIt();\n    }\n}", "label": 0}, {"id": 427, "code1": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\t\n\tint n;\n\tint[][] es;\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tn = sc.nextInt();\n\t\tes = new int[n][n];\n\t\tfor (int[] a: es) fill(a, INF);\n\t\tfor (int i=0;i<n;i++) es[i][i] = 0;\n\t\tfor (int i=0;i<n;i++) {\n\t\t\tint r = sc.nextInt()-1, k = sc.nextInt();\n\t\t\tfor (int j=0;j<k;j++) {\n\t\t\t\tint t = sc.nextInt()-1;\n\t\t\t\tes[r][t] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int k=0;k<n;k++) for (int i=0;i<n;i++) for (int j=0;j<n;j++) {\n\t\t\tes[i][j] = min(es[i][j], es[i][k] + es[k][j]);\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i=0;i<p;i++) {\n\t\t\tint s = sc.nextInt()-1, d = sc.nextInt()-1, v = sc.nextInt();\n\t\t\tSystem.out.println((es[s][d] + 1 <= v ? es[s][d] + 1 : \"NA\"));\n\t\t}\n\t}\n\t\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        new Solver().run();\n    }\n}\n\nclass Solver {\n\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] a = new int[N];\n\n        for (int i = 0; i < N; i++) {\n            a[i] = sc.nextInt();\n            a[i]--;\n        }\n\n        int cnt = 0;\n        for (int i = 0; i < N; i++) {\n            if (i == a[a[i]]) cnt++;\n        }\n\n        System.out.println(cnt / 2);\n\n        return;\n    }\n\n}", "label": 0}, {"id": 178, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "label": 1}, {"id": 665, "code1": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt(), m = in.nextInt();\n\t\tout.println((1L << m) * (1900 * m + 100 * (n - m))); \n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "code2": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid solve() {\n\t\tint r = in.nextInt(), c = in.nextInt();\n\t\tint[] cnt = new int[26];\n\t\tfor (int i = 0; i < r; i++) {\n\t\t\tfor (char ch : in.nextToken().toCharArray()){ \n\t\t\t\tcnt[ch - 'a']++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint cnt4 = (r / 2) * (c / 2);\n\t\tint cnt2 = (r / 2) * (c % 2) + (c / 2) * (r % 2);\n\t\tint cnt1 = (r % 2) * (c % 2);\n\t\t\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 4 && cnt4 > 0) {\n\t\t\t\tcnt[i] -= 4;\n\t\t\t\tcnt4--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 2 && cnt2 > 0) {\n\t\t\t\tcnt[i] -= 2;\n\t\t\t\tcnt2--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 1 && cnt1 > 0) {\n\t\t\t\tcnt[i] -= 1;\n\t\t\t\tcnt1--;\n\t\t\t}\n\t\t}\n\t\tout.println((cnt1 == 0 && cnt2 == 0 && cnt4 == 0) ? \"Yes\" : \"No\");\n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "label": 0}, {"id": 648, "code1": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "code2": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 606, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] a = new int[n];\n\t\tint i;\n\t\t\n\t\tfor (i = 0; i < n; i++)\n\t\t\ta[i] = stdIn.nextInt();\n\t\t\n\t\tint count = SelectionSort(a, n);\n\t\t\n\t\tSystem.out.print(a[0]);\n\t\tfor (i = 1; i < n; i++)\n\t\t\tSystem.out.print(\" \" + a[i]);\n\t\tSystem.out.println();\n\t\tSystem.out.println(count);\n\t}\n\t\n\tpublic static int SelectionSort(int[] a, int n) {\n\t\tint i, j, minat, t, count = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tminat = i;\n\t\t\tfor (j = i + 1; j < n; j++)\n\t\t\t\tif (a[j] < a[minat])\n\t\t\t\t\tminat = j;\n\t\t\tif (i != minat) {\n\t\t\t\tt = a[i];\n\t\t\t\ta[i] = a[minat];\n\t\t\t\ta[minat] = t;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\nclass Person implements Comparable<Person> {\n\n    final int no;\n    final double time;\n\n    Person( final int no, final double time ) {\n\tthis.no = no;\n\tthis.time = time;\n    }\n    \n    public int compareTo( final Person p ) {\n\treturn Double.compare( time, p.time );\n    }\n\n    public String toString() {\n\treturn String.format( \"%d %.2f\", no, time );\n    }\n}\n\nclass Main {\n\n    public static void main( final String[] args ) {\n\n\tfinal Scanner stdin = new Scanner( System.in );\n\tfinal ArrayList<Person> last = new ArrayList<Person>();\n\tfinal ArrayList<Person> rest = new ArrayList<Person>();\n\t\n\tfor ( int i = 0; i < 3; i++ ) {\n\t    final ArrayList<Person> semifinal = new ArrayList<Person>();\n\t    for ( int j = 0; j < 8; j++ ) {\n\t\tsemifinal.add( new Person( stdin.nextInt(), stdin.nextDouble() ) );\n\t    }\n\t    Collections.sort( semifinal );\n\t    last.add( semifinal.remove( 0 ) );\n\t    last.add( semifinal.remove( 0 ) );\n\t    rest.addAll( semifinal );\n\t}\n\tCollections.sort( rest );\n\tlast.add( rest.remove( 0 ) );\n\tlast.add( rest.remove( 0 ) );\n\tfor ( Person p : last ) {\n\t    System.out.println( p );\n\t}\n    }    \n}", "label": 0}, {"id": 108, "code1": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        new Solver().run();\n    }\n}\n\nclass Solver {\n\n    public void run() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int[] a = new int[N];\n\n        for (int i = 0; i < N; i++) {\n            a[i] = sc.nextInt();\n            a[i]--;\n        }\n\n        int cnt = 0;\n        for (int i = 0; i < N; i++) {\n            if (i == a[a[i]]) cnt++;\n        }\n\n        System.out.println(cnt / 2);\n\n        return;\n    }\n\n}", "code2": "import java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic Scanner sc;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//InputStream in = new FileInputStream(\"src/input.txt\");\n\t\tInputStream in = System.in;\n\t\t//PrintStream out = new PrintStream(\"src/output.txt\");\n\n\t\t//System.setOut(out);\n\n\t\tsc = new Scanner(in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] a = new int[N];\n\t\tint answer = 0;\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tif(a[a[i]-1] == i+1){\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(answer/2);\n\n\t\t//out.close();\n\t}\n}", "label": 1}, {"id": 364, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] pri = new int[25000];\n\t\tpri[0] = 2;\n\t\tpri[1] = 3;\n\t\tpri[2] = 5;\n\t\tpri[3] = 7;\n\t\tpri[4] = 11;\n\t\tpri[5] = 13;\n\t\tpri[6] = 17;\n\t\tpri[7] = 19;\n\t\tpri[8] = 23;\n\t\tpri[9] = 29;\n\t\tint fl = 0;\n\t\tint a=0;\n\t\tint b=0;\n\t\tint c=0;\n\t\twhile(pri[a]<=250000){\n\t\t\tfl++;\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\ta=0;\n\t\t\t\tb=0;\n\t\t\t\tc=0;\t\t\t\t\n\t\t\t\tif(i==0){\n\t\t\t\t\tc=1;\n\t\t\t\t}else if(i>0){\n\t\t\t\t\tc=pri[2+i];\n\t\t\t\t}\n\t\t\t\twhile(pri[a]!=0){\n\t\t\t\t\tif((30*fl + c)%pri[a]==0){\n\t\t\t\t\t\tb=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\tif(b==0){\n\t\t\t\t\tpri[a]=(30*fl + c);\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t}\n\t\t\n\t\tboolean exit = true;\n\t\twhile(exit==true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)exit=false;\n\t\t\tif(exit==true){\n\t\t\t\tint sum=-1;\n\t\t\t\tint i=0;\n\t\t\t\twhile(true){\n\t\t\t\t\tif(pri[i]>n)sum++;\n\t\t\t\t\tif(pri[i]>2*n)break;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(sum);\n\t\t\t}\n\t\t}\n\t}\n\t\n}", "label": 0}, {"id": 183, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n      \tint A = sc.nextInt();\n      \tint B = sc.nextInt();\n     \tint AB = sc.nextInt();\n\t\tint X = sc.nextInt();\n      \tint Y = sc.nextInt();\n      \t\n        Long sum = (long) 0;\n      \tif(2*AB>=(A+B)){\n          \tsum = (long) (A*X+B*Y);\n      \t\tSystem.out.println(sum);\n          \treturn;\n        }\n      \n      \tint min = X;\n      \tint max = Y;\n      \tint addpizza = B; \n      \t\n      \tif(Y<X){\n        \tmin = Y;\n          \tmax = X;\n          \taddpizza = A; \n        }\n      \n        Long sum2 = (long) (2*AB*max);\n      \tsum = (long) (addpizza*(max-min)+2*(AB*min));\n      \tif(sum<sum2){\n      \t\tSystem.out.println(sum);\n        }else{\n          System.out.println(sum2);\n        }\n        return;\n\t}\n}\n", "label": 1}, {"id": 700, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint h = Integer.parseInt(sa[0]);\n\t\tint w = Integer.parseInt(sa[1]);\n\t\tchar[][] s = new char[h][w];\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\ts[i] = br.readLine().toCharArray();\n\t\t}\n\t\tbr.close();\n\n\t\tint[] dx = {0, 0, -1, 1};\n\t\tint[] dy = {-1, 1, 0, 0};\n\t\tboolean[][] visit = new boolean[h][w];\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\tfor (int j = 0; j < w; j++) {\n\t\t\t\tif (visit[i][j]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong kuro = 0;\n\t\t\t\tlong siro = 0;\n\t\t\t\tQueue<Integer> que = new ArrayDeque<Integer>();\n\t\t\t\tque.add(i * 1000 + j);\n\t\t\t\tvisit[i][j] = true;\n\t\t\t\twhile (!que.isEmpty()) {\n\t\t\t\t\tint cur = que.poll();\n\t\t\t\t\tint x = cur / 1000;\n\t\t\t\t\tint y = cur % 1000;\n\t\t\t\t\tif (s[x][y] == '#') {\n\t\t\t\t\t\tkuro++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsiro++;\n\t\t\t\t\t}\n\t\t\t\t\tfor (int a = 0; a < 4; a++) {\n\t\t\t\t\t\tint xx = x + dx[a];\n\t\t\t\t\t\tint yy = y + dy[a];\n\t\t\t\t\t\tif (0 <= xx && xx < h && 0 <= yy && yy < w\n\t\t\t\t\t\t\t\t&& !visit[xx][yy] && s[x][y] != s[xx][yy]) {\n\t\t\t\t\t\t\tque.add(xx * 1000 + yy);\n\t\t\t\t\t\t\tvisit[xx][yy] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans += kuro * siro;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.*;\nimport java.text.DecimalFormat;\nimport java.util.*;\n\n\n\n\npublic class Main {\n    private static int n,N;\n    private static int [] A;\n    private static int [] B;\n\n    private static int getLeft(){\n        int s = N/2 + 1;\n        while (s > 1 && B[s] != B[s-1]) s--;\n        return s;\n    }\n    private static int getRight(){\n        int e = N/2+1;\n        while (e < N && B[e] != B[e+1]) e++;\n        return e;\n    }\n\n    private static boolean valid(int x) {\n        for (int i = 1;i <= N;i++)\n            B[i] = (A[i] >= x) ? 1 : 0;\n        int s = getLeft(),e = getRight(),mid = N/2 + 1;\n        if (s == mid || e == mid) return B[mid] == 1;\n\n//        System.err.println(s + \" \" + e);\n        int prv = 0;\n        int l = B[s],r = B[e];\n\n        while (s <= e) {\n            int h = Math.max(s,e);\n            h = Math.min(h,N+1-h) - 1;\n            int rem = h - prv;\n            prv = h;\n            if (rem == 0) break;\n            int len = e-s-1;\n            if (2*rem <= len) {\n                s += rem;\n                e -= rem;\n            }\n            else {\n                if (l == r) return l == 1;\n                if (mid-s < e-mid) return l == 1;\n                else return r==1;\n            }\n        }\n//        System.err.println(\": \" + s + \" \" + e);\n        if (l == r) return l == 1;\n        int pos = mid - s;\n        if (l == 0) return pos%2 == 0;\n        return pos%2 == 1;\n    }\n    public static void main(String[] args) throws Exception {\n        IO io = new IO(null,null);\n        n = io.getNextInt();\n        N = 2*n-1;\n        A = new int[N+1];\n        B = new int[N+1];\n        for (int i = 1;i <= N;i++)\n            A[i] = io.getNextInt();\n\n        int s = 1,e = N;\n        while (s < e) {\n            int m = s + (e-s+1)/2;\n            if (valid(m)) s = m;\n            else e = m - 1;\n        }\n        io.println(s);\n\n        io.close();\n    }\n    private static void bf(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        TreeSet<ArrayList<Integer>> vis = new TreeSet<>(new Comparator<ArrayList<Integer>>() {\n            @Override\n            public int compare(ArrayList<Integer> o1, ArrayList<Integer> o2) {\n                for (int i = 0;i < n;i++)\n                    if (!o1.get(i).equals(o2.get(i)))\n                        return o1.get(i) - o2.get(i);\n                return 0;\n            }\n        });\n\n        while (!vis.contains(A)) {\n            System.err.println(A);\n            vis.add((ArrayList<Integer>)A.clone());\n            int prv = A.get(0);\n            for (int i = 1;i+1 < n;i++){\n                int cur = A.get(i);\n                if (prv != cur) A.set(i,A.get(i+1));\n                prv = cur;\n            }\n        }\n    }\n\n    private static void bftri(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        while (!A.isEmpty()) {\n            System.err.println(A);\n\n            ArrayList<Integer> B = new ArrayList<>();\n            int prv = A.get(0);\n            for (int i = 1;i+1 < A.size();i++){\n                int cur = A.get(i);\n                if (prv != cur) B.add(A.get(i+1));\n                else B.add(cur);\n                prv = cur;\n            }\n            A = B;\n        }\n    }\n}\n\nclass pair{\n    int s,e,v;\n    public pair(int s,int e,int v) {\n        this.s = s;\n        this.e = e;\n        this.v = v;\n    }\n    public int getLen(){\n        return e-s+1;\n    }\n    @Override\n    public String toString(){\n        return \"(\" + s + \":\" + e + \", \" + v + \")\";\n    }\n}\n\n\nclass IO{\n    private BufferedReader br;\n    private StringTokenizer st;\n    private PrintWriter writer;\n    private String inputFile,outputFile;\n\n    public boolean hasMore() throws IOException{\n        if(st != null && st.hasMoreTokens()) return true;\n        if(br != null && br.ready()) return true;\n        return false;\n    }\n    public String getNext() throws FileNotFoundException, IOException{\n        while(st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public String getNextLine() throws FileNotFoundException, IOException{\n        return br.readLine().trim();\n    }\n\n    public int getNextInt() throws FileNotFoundException, IOException{\n        return Integer.parseInt(getNext());\n    }\n    public long getNextLong() throws FileNotFoundException, IOException{\n        return Long.parseLong(getNext());\n    }\n\n    public void print(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\" ,x);\n    }\n    public void println(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\\n\" ,x);\n    }\n    public void print(Object o) throws  IOException{\n        writer.print(o.toString());\n    }\n\n    public void println(Object o) throws  IOException{\n        writer.println(o.toString());\n    }\n    public IO(String x,String y) throws FileNotFoundException, IOException{\n        inputFile = x;\n        outputFile = y;\n        if(x != null) br = new BufferedReader(new FileReader(inputFile));\n        else br = new BufferedReader(new InputStreamReader(System.in));\n        if(y != null) writer = new PrintWriter(new BufferedWriter(new FileWriter(outputFile)));\n        else writer = new PrintWriter(new OutputStreamWriter(System.out));\n    }\n\n    protected void close() throws IOException{\n        br.close();\n        writer.close();\n    }\n    public void outputArr(Object [] A) throws IOException{\n        int L = A.length;\n        for (int i = 0;i < L;i++) {\n            if(i > 0) writer.print(\" \");\n            writer.print(A[i]);\n        }\n        writer.print(\"\\n\");\n    }\n}\n", "label": 0}, {"id": 177, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\n\n//Numbers\npublic class Main{\n\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tBigInteger b = BigInteger.ONE;\n\t\tfor(int i=2;i<=n+1;i++)b = b.multiply(BigInteger.valueOf(i));\n\t\tSystem.out.println(b.add(BigInteger.valueOf(2)));\n\t\tfor(int i=2;i<=n+1;i++)System.out.println(i);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "label": 1}, {"id": 331, "code1": "import java.io.*;\nimport java.util.*;\nimport static java.lang.System.out;\n\npublic class Main {\n    static MyReader in = new MyReader();\n\n    public static void main(String[] args) {\n        int N = in.i();\n        int k = ((int)Math.sqrt(1 + 8 * N) + 1) / 2;\n        out.println(k * (k - 1) / 2 == N ? solve(k) : \"No\");\n    }\n\n    static String solve(int k) {\n        StringBuilder sb = new StringBuilder(\"Yes\\n\");\n        sb.append(k).append('\\n');\n\n        for (int i = 1; i < k; i++) {\n            sb.append(k - 1).append(' ');\n\n            int t = 1 + i * (i - 1) / 2;\n            for (int j = 1; j < i; j++) {\n                sb.append(t++).append(' ');\n            }\n\n            for (int j = i; j < k; j++) {\n                sb.append(t).append(' ');\n                t += j;\n            }\n            sb.append('\\n');\n        }\n\n        sb.append(k - 1).append(' ');\n        int t = 1;\n        for (int i = 2; i <= k; i++) {\n            sb.append(t).append(' ');\n            t += i;\n        }\n\n        return sb.toString();\n    }\n}\n\nclass MyReader extends BufferedReader {\n    char[] cbuf = new char[1024];\n    int head = 0;\n    int tail = 0;\n\n    MyReader() {\n        super(new InputStreamReader(System.in));\n    }\n\n    char next() {\n        if (head == tail) {\n            try {\n                tail = super.read(cbuf, 0, cbuf.length);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            head = 0;\n        }\n        return cbuf[head++];\n    }\n\n    void back() {\n        head--;\n    }\n\n    boolean minus() {\n        boolean minus;\n        while (true) {\n            char c = next();\n            if (!isDelimiter(c)) {\n                if (!(minus = c == '-')) back();\n                return minus;\n            }\n        }\n    }\n\n    void skip() {\n        while (isDelimiter(next()));\n        back();\n    }\n\n    char[] s(int N) {\n        char[] cbuf = new char[N];\n        read(cbuf, 0, N);\n        return cbuf;\n    }\n\n    public int read(char[] cbuf, int off, int len) {\n        skip();\n        int i;\n        for (i = 0; i < cbuf.length; i++) {\n            char c = next();\n            if (isDelimiter(c)) {\n                break;\n            }\n            cbuf[i] = c;\n        }\n        return i;\n    }\n\n    boolean isDelimiter(char c) {\n        return c == ' ' || c == '\\n' || c == '\\r';\n    }\n\n    int i() {\n        boolean minus = minus();\n        int n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n\n    int[] ii(final int N) {\n        int[] a = new int[N];\n        for (int j = 0; j < a.length; j++) a[j] = i();\n        return a;\n    }\n\n    long l() {\n        boolean minus = minus();\n        long n = 0;\n        while (true) {\n            int k = next() - '0';\n            if (k < 0 || 9 < k) break;\n            n = 10 * n + k;\n        }\n        return minus ? -n : n;\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "label": 0}, {"id": 447, "code1": "import java.util.*;\n \nclass Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n \n        String S = sc.next();\n        String T = sc.next();\n        int ls = S.length();\n        int lt = T.length();\n        String a = \"?\";\n\n        if(ls<lt){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        int x = -1;\n        for(int i=0; i<=ls-lt; i++){\n            if(S.charAt(i)==T.charAt(0) || S.charAt(i)==a.charAt(0)){\n                for(int j=0; j<lt; j++){\n                    if(S.charAt(i+j)!=T.charAt(j) && S.charAt(i+j)!=a.charAt(0)){\n                        break;\n                    }\n                    if(j==lt-1){\n                        x = i;\n                    }\n                }\n            }\n        }\n        if(x==-1){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        else if(ls==lt){\n            S = T;\n            System.out.println(S);\n            return;\n        }\n        else if(x==0){\n            S = T + S.substring(lt);\n        }\n        else if(x!=0){\n            if(x+lt-1==ls){\n                S = S.substring(0, x) + T;\n            }\n            else{\n                S = S.substring(0, x) + T + S.substring(x + lt);\n            }\n        }\n        String st = \"\";\n        for(int i=0; i<ls; i++){\n            if(S.charAt(i)==a.charAt(0)){\n                st += \"a\";\n            }\n            else{\n                st += String.valueOf((char)S.charAt(i));\n            }\n        }\n        System.out.println(st);\n    }\n}", "code2": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "label": 0}, {"id": 471, "code1": "import java.util.*;\npublic class Main {\n        static Scanner sc = new Scanner(System.in);\n        static void myout(Object t){System.out.println(t);}//standard output\n        static void myerr(Object t){System.err.println(t);}//standard error\n        static String getStr(){return sc.next();}\n        static int getInt(){return Integer.parseInt(getStr());}\n        static long getLong(){return Long.parseLong(getStr());}\n        static boolean isNext(){return sc.hasNext();}\n        static String[] mySplit(String str){return str.split(\"\");}\n        public static void main(String[] args){\n          int N = getInt();\n          int M = getInt();\n          if(N >= M){\n            myout(0);\n            return;\n          }\n          long output = 0;\n          ArrayList<Integer> list = new ArrayList<Integer>(M);\n          for(int i = 0; i < M; i++){\n            list.add(getInt());\n          }\n          Collections.sort(list);\n          //myout(list);\n          PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n          for(int i = 1; i < M; i++){\n            pq.add(Math.abs(list.get(i)-list.get(i-1)));\n          }\n          for(int i = 0; i < N-1; i++){\n            pq.poll();\n          }\n          while(pq.size() != 0){\n            output += pq.poll();\n          }\n          myout(output);\n        }\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u304b\u3089\n\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u307e\u3067\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "label": 0}, {"id": 139, "code1": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n    int ab = a + b;\n    int bc = b + c;\n    int ac = a+c;\n\n    int result = Math.min(ab, Math.min(bc , ac));\n    System.out.println(result);\n  }\n}\n", "label": 1}, {"id": 512, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nclass FastScanner {\n\tprivate final InputStream in = System.in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n\t\treturn (int) nl;\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner scan=new FastScanner();\n\tstatic Scanner scanner=new Scanner(System.in);\n\tstatic long mod=1000000007;\n\tstatic double eps=0.0000000001;\n\tstatic int big=Integer.MAX_VALUE;\n\tstatic long gcd (long a, long b) {return b>0?gcd(b,a%b):a;}\n\tstatic long lcm (long a, long b) {return a*b/gcd(a,b);}\n\tstatic int max(int a,int b) {return a>b?a:b;}\n\tstatic int min(int a,int b) {return a<b?a:b;}\n\tstatic long factorial(int i) {return i==1?1:i*factorial(i-1);}\n\tstatic int lower_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<=key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic int upper_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic boolean isPrime (long n) {\n\t\tif (n==2) return true;\n\t\tif (n<2 || n%2==0) return false;\n\t\tdouble d = Math.sqrt(n);\n\t\tfor (int i=3; i<=d; i+=2)if(n%i==0){return false;}\n\t\treturn true;\n\t}\n\tstatic int upper_division(int a,int b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lupper_division(long a,long b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lmax(long a,long b) {return Math.max(a, b);}\n\tstatic long lmin(long a,long b) {return Math.min(a, b);}\n\tstatic int[] setArray(int a) {\n\t\tint b[]=new int[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextInt();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic long[] lsetArray(int a) {\n\t\tlong b[]=new long[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextLong();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic String reverce(String str) {\n\t\tString strr=\"\";\n\t\tfor(int i=str.length()-1;i>=0;i--) {\n\t\t\tstrr+=str.charAt(i);\n\t\t}\n\t\treturn strr;\n\t}\n\tpublic static void printArray(char[] ch) {\n\t\tfor(int i=0;i<ch.length-1;i++) {\n\t\t\tSystem.out.print(ch[i]+\" \");\n\t\t}\n\t\tSystem.out.println(ch[ch.length-1]);\n\t}\n\tpublic static int[][] doublesort(int[][]a) {\n\t\tArrays.sort(a,(x,y)->Integer.compare(x[0],y[0]));\n\t\treturn a;\n\t}\n\tstatic long modpow(long x,long n,long mo) {\n\t\tlong sum=1;\n\t\twhile(n>0) {\n\t\t\tif((n&1)==1) {\n\t\t\t\tsum=sum*x%mo;\n\t\t\t}\n\t\t\tx=x*x%mo;\n\t\t\tn>>=1;\n\t\t}\n\t\treturn sum;\n\t}\n\tpublic static char[] revch(char ch[]) {\n\t\tchar ret[]=new char[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static int[] revint(int ch[]) {\n\t\tint ret[]=new int[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static void warshall_floyd(int v[][],int n) {\n\t\tfor(int k=0;k<n;k++)\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t\tv[i][j]=min(v[i][j],v[i][k]+v[k][j]);\n\t}\n\tpublic static void main(String[] args) {\n\t\tlong a=scan.nextLong();\n\t\tlong b=scan.nextLong();\n\t\tint cnt=0;\n\t\tlong now=a;\n\t\twhile(now<=b) {\n\t\t\tcnt++;\n\t\t\tnow*=2;\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n}", "code2": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)924844033;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint ai = io.nextInt();\n\t\t\tint ao = io.nextInt();\n\t\t\tint at = io.nextInt();\n\t\t\tint aj = io.nextInt();\n\t\t\tint al = io.nextInt();\n\t\t\tint as = io.nextInt();\n\t\t\tint az = io.nextInt();\n\t\t\t\n\t\t\tlong ans = 0;\n\t\t\t\n\t\t\tint cnt = aj % 2 + al % 2 + ai % 2;\n\t\t\tif (cnt >= 2) {\n\t\t\t\tif (aj > 0 && al > 0 && ai > 0) {\n\t\t\t\t\tai--;\n\t\t\t\t\taj--;\n\t\t\t\t\tal--;\n\t\t\t\t\tans += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans += ao;\n\t\t\tans += ai / 2 * 2;\n\t\t\tans += aj / 2 * 2;\n\t\t\tans += al / 2 * 2;\n\t\t\t\n\t\t\tio.out.println(ans);\n\t\t}\n\t}\n\t\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "label": 0}, {"id": 45, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "code2": "import java.util.Scanner;\n//import java.io.*;\n//import java.util.Arrays;\npublic class Main {\n\tpublic static void main(String[] args) throws java.io.IOException {\n\t\tScanner scan = new Scanner(System.in);\n\t\t//InputStreamReader is = new InputStreamReader(System.in);\n\t\t//BufferedReader br = new BufferedReader(is);\n\t\t//String text = scan.next();\n\t\tint sum = 0;\n\t\tfor(int i = 0 ; i < 4 ; i++){\n\t\t\tsum += scan.nextInt();\n\t\t}\n\t\tSystem.out.println(sum/60);\n\t\tSystem.out.println(sum%60);\n\t}\n}", "label": 1}, {"id": 11, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    String[] s = sc.next().split(\"\");\n    int l =  s.length;\n    int count =0;\n    for(int i=0; i<l; i++){\n      if(s[i].equals(\"U\")||s[i].equals(\"D\")){\n        count +=1;\n        continue;\n      }\n\n\n      if(i%2==0){\n        if(s[i].equals(\"R\")){\n          count += 1;\n        }\n      }else{\n        if(s[i].equals(\"L\")){\n          count += 1;\n        }\n      }\n    }\n    if(count == l){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n\n\n\n\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main{\n    public static Scanner scan  = new Scanner(System.in);\n    public static void main(String[]args){\n        String s;\n        boolean flag;\n\n        flag=false;\n        s=next();\n\n        for(int i=0;i<s.length();i++){\n            if(i%2==0){\n                if(s.charAt(i)=='R'||s.charAt(i)=='U'||s.charAt(i)=='D'){\n                    flag=true;\n                }\n                else{\n                    flag=false;\n                    break;\n                }\n            }\n            else{\n                if(s.charAt(i)=='L'||s.charAt(i)=='U'||s.charAt(i)=='D'){\n                    flag=true;\n                }\n                else{\n                    flag=false;\n                    break;\n                }\n            }\n        }\n        yesNo(flag);\n    }\n\n\n\n    public static int nextInt(){\n        return Integer.parseInt(scan.next());\n    }\n    public static long nextLong(){\n        return Long.parseLong(scan.next());\n    }\n    public static String next(){\n        return scan.next();\n    }\n    public static double nextDouble(){\n        return Double.parseDouble(scan.next());\n    }\n    public static float nextFloat(){\n        return Float.parseFloat(scan.next());\n    }\n\n    //Yes or No\n    public static void yesNo(boolean flag){\n        if(flag) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n    }\n    public static void print(Object a){\n        System.out.println(a);\n    }\n}", "label": 1}, {"id": 630, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nclass Main {\n\tpublic static void main(String args[]) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tSolver solver = new Solver();\n\t\tsolver.init();\n\t\tsolver.readHead(in.readLine());\n\t\tfor (; solver.hasNext();) {\n\t\t\tsolver.readBody(in.readLine());\n\t\t}\n\t\tsolver.solve();\n\t}\n}\n\nclass Solver {\n\tint N;\n\tint cnt;\n\n\tpublic void init() {\n\t\tN = 0;\n\t\tcnt = 0;\n\t}\n\n\tpublic void readHead(String str) {\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tN = Integer.parseInt(strArr[0]);\n\t\t// System.out.println(N);\n\t\tM = Integer.parseInt(strArr[1]);\n\t\tAC = new int[N + 1];\n\t\tWA = new int[N + 1];\n\t}\n\n\tint M;\n\n\tpublic boolean hasNext() {\n\t\t// return cnt < N;\n\t\treturn cnt < M;\n\t}\n\n\tint[] AC;\n\tint[] WA;\n\n\tpublic void readBody(String str) {\n\t\t// System.out.println(str);\n\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\tint p = Integer.parseInt(strArr[0]);\n\t\tif (AC[p] == 0) {\n\t\t\tif (\"AC\".equals(strArr[1]))\n\t\t\t\tAC[p] = 1;\n\t\t\telse {\n\t\t\t\tWA[p]++;\n\t\t\t}\n\t\t}\n\t\tcnt++;\n\t}\n\n\tpublic void solve() {\n\t\tint a = 0;\n\t\tint w = 0;\n\t\tfor (int i = 1; i <= N; i++) {\n\t\t\tif (AC[i] > 0) {\n\t\t\t\ta++;\n\t\t\t\tw += WA[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a + \" \" + w);\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "label": 0}, {"id": 468, "code1": "import java.util.*;\npublic class Main {\n        static Scanner sc = new Scanner(System.in);\n        static void myout(Object t){System.out.println(t);}//standard output\n        static void myerr(Object t){System.err.println(t);}//standard error\n        static String getStr(){return sc.next();}\n        static int getInt(){return Integer.parseInt(getStr());}\n        static long getLong(){return Long.parseLong(getStr());}\n        static boolean isNext(){return sc.hasNext();}\n        static String[] mySplit(String str){return str.split(\"\");}\n        public static void main(String[] args){\n          int N = getInt();\n          int M = getInt();\n          if(N >= M){\n            myout(0);\n            return;\n          }\n          long output = 0;\n          ArrayList<Integer> list = new ArrayList<Integer>(M);\n          for(int i = 0; i < M; i++){\n            list.add(getInt());\n          }\n          Collections.sort(list);\n          //myout(list);\n          PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n          for(int i = 1; i < M; i++){\n            pq.add(Math.abs(list.get(i)-list.get(i-1)));\n          }\n          for(int i = 0; i < N-1; i++){\n            pq.poll();\n          }\n          while(pq.size() != 0){\n            output += pq.poll();\n          }\n          myout(output);\n        }\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u304b\u3089\n\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u307e\u3067\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScanner in = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C solver = new C();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C {\n        int N;\n        int M;\n\n        public void solve(int testNumber, MyScanner in, PrintWriter out) {\n            N = in.Int();\n            M = in.Int();\n            DSU dsu = new DSU(N);\n            for (int i = 0; i < M; i++) {\n                int A = in.Int() - 1;\n                int B = in.Int() - 1;\n                dsu.merge(A, B);\n            }\n            out.println(dsu.groups().size() - 1);\n        }\n\n    }\n\n    static class DSU {\n        private int n;\n        private int[] parentOrSize;\n\n        public DSU(int n) {\n            this.n = n;\n            this.parentOrSize = new int[n];\n            Arrays.fill(parentOrSize, -1);\n        }\n\n        int merge(int a, int b) {\n            if (!(0 <= a && a < n))\n                throw new IndexOutOfBoundsException(\"a=\" + a);\n            if (!(0 <= b && b < n))\n                throw new IndexOutOfBoundsException(\"b=\" + b);\n\n            int x = leader(a);\n            int y = leader(b);\n            if (x == y) return x;\n            if (-parentOrSize[x] < -parentOrSize[y]) {\n                int tmp = x;\n                x = y;\n                y = tmp;\n            }\n            parentOrSize[x] += parentOrSize[y];\n            parentOrSize[y] = x;\n            return x;\n        }\n\n        int leader(int a) {\n            if (parentOrSize[a] < 0) {\n                return a;\n            } else {\n                parentOrSize[a] = leader(parentOrSize[a]);\n                return parentOrSize[a];\n            }\n        }\n\n        ArrayList<ArrayList<Integer>> groups() {\n            int[] leaderBuf = new int[n];\n            int[] groupSize = new int[n];\n            for (int i = 0; i < n; i++) {\n                leaderBuf[i] = leader(i);\n                groupSize[leaderBuf[i]]++;\n            }\n            ArrayList<ArrayList<Integer>> result = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                result.add(new ArrayList<>(groupSize[i]));\n            }\n            for (int i = 0; i < n; i++) {\n                result.get(leaderBuf[i]).add(i);\n            }\n            result.removeIf(ArrayList::isEmpty);\n            return result;\n        }\n\n    }\n\n    static class MyScanner {\n        private BufferedReader in;\n        private StringTokenizer st;\n\n        public MyScanner(InputStream stream) {\n            in = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    String rl = in.readLine();\n                    if (rl == null) {\n                        return null;\n                    }\n                    st = new StringTokenizer(rl);\n                } catch (IOException e) {\n                    return null;\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int Int() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 433, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n    static class FS {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            return hasNextByte() ? buffer[ptr++] : -1;\n        }\n\n        private boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        private void skipUnprintable() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n        }\n\n        public boolean hasNext() {\n            skipUnprintable();\n            return hasNextByte();\n        }\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while (isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n    }\n\n    static int[] np;\n    static int n;\n\n    public static void main(String[] args) throws Exception {\n        FS fs = new FS();\n//        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n//        String s = bf.readLine();\n//        int n = Integer.parseInt(s.substring(0, s.indexOf(' ')));//n packages\n//        int k = Integer.parseInt(s.substring(s.indexOf(' '), s.length()));//k trucks\n        n = fs.nextInt();\n        int k = fs.nextInt();\n\n\n        np = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n\n            np[i] = fs.nextInt();\n            max = max < np[i] ? np[i] : max;\n        }\n        int p = 0;\n        int resids = 0;\n\n        int maxInt = 10000 *100000;\n        int minInt = max-1;\n        int mid = (maxInt + minInt) / 2;\n        while (maxInt - minInt > 1) {\n            int v = checkN(mid);\n            if (v > k) minInt = mid;\n            else maxInt = mid;\n\n            mid = (maxInt + minInt) / 2;\n        }\n        System.out.println(maxInt);\n    }\n\n    private static int checkN(int p) {\n        int resids = p;\n        int ink = 1;//\u5f53\u524d\u5df2\u7528\u5361\u8f66\n        for (int i = 0; i < n; i++) {\n            int j = np[i];\n            if (resids >= j) {\n                resids -= j;\n            } else {\n                ink++;\n                resids = p;\n                i--;\n            }\n        }\n        return ink;\n    }\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n\n        char[] s = sc.next().toCharArray();\n        char[] t = sc.next().toCharArray();\n\n        boolean isAns = false;\n        for (int i = s.length-1; i >= t.length-1; i--) {\n            char[] tmp = s.clone();\n            isAns = true;\n            for (int j = 0; j < t.length; j++) {\n                if (s[i-j] == t[t.length-1-j] || s[i-j] == '?') {\n                    tmp[i-j] = t[t.length-1-j];\n                } else {\n                    isAns = false;\n                    break;\n                }\n            }\n\n            if (isAns) {\n                s = tmp;\n                break;\n            }\n        }\n\n        if (isAns) {\n            for (char c : s)\n                System.out.print(c == '?' ? 'a' : c);\n        } else {\n            System.out.println(\"UNRESTORABLE\");\n        }\n    }\n\n    static class MyScanner {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1 << 15);\n        StringTokenizer tokenizer;\n\n        String next() {\n            try {\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                }\n            } catch (IOException ignored) {\n            }\n            return tokenizer.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}", "label": 0}, {"id": 166, "code1": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            list.add(scanner.nextInt());\n        }\n        list.sort((val1, val2) -> val1 - val2);\n        int b = list.get(0);\n        for (int i = 1; i < list.size(); i++) {\n            int a = list.get(i);\n            int r = a % b;\n            while (r != 0) {\n                a = b;\n                b = r;\n                r = a % b;\n            }\n        }\n        System.out.println(b);\n    }\n}", "code2": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "label": 1}, {"id": 216, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n \n    class Main {\n      public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n \n    int N = sc.nextInt();\n    int S[] = new int[N];\n    int s = 0;\n \n    for(int i = 0; i < N; i++) {\n    S[i] = sc.nextInt();\n    s += S[i];\n    }\n    \n    if(s % 10 != 0) {\n        System.out.println(s);\n        return;\n    }else {\n        Arrays.sort(S);\n        for(int i = 0; i < N; i++)\n              if(S[i] % 10 != 0) {\n                      System.out.println(s -= S[i]);\n                      return;\n              }\n         }\n        System.out.println(0);\n        return ;\n  }\n}", "label": 1}, {"id": 235, "code1": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        String S = sc.next();\n\n        System.out.println(solve(S));\n\n        sc.close();\n    }\n\n    static int solve(String S) {\n        for (int length = (S.length() - 1) / 2 * 2;; length -= 2) {\n            if (isEven(S.substring(0, length))) {\n                return length;\n            }\n        }\n    }\n\n    static boolean isEven(String s) {\n        return s.endsWith(s.substring(0, s.length() / 2));\n    }\n}", "label": 1}, {"id": 658, "code1": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "code2": "// package arc.arc085;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n        long time = m * 1900 + (n - m) * 100;\n\n        out.println(time * (1<<m));\n        out.flush();\n    }\n\n    public static void debug(Object... o) {\n        System.err.println(Arrays.deepToString(o));\n    }\n\n    public static class InputReader {\n        private static final int BUFFER_LENGTH = 1 << 12;\n        private InputStream stream;\n        private byte[] buf = new byte[BUFFER_LENGTH];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int next() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public char nextChar() {\n            return (char) skipWhileSpace();\n        }\n\n        public String nextToken() {\n            int c = skipWhileSpace();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.append((char) c);\n                c = next();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            int c = skipWhileSpace();\n            long sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = next();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = next();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            return Double.valueOf(nextToken());\n        }\n\n        int skipWhileSpace() {\n            int c = next();\n            while (isSpaceChar(c)) {\n                c = next();\n            }\n            return c;\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n}", "label": 0}, {"id": 466, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint N = scan.nextInt();\n\t\tint M = scan.nextInt();\n\n\t\tint[] X = new int[M];\n\t\tfor(int i=0; i<M; i++) {\n\t\t\tX[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\t\t\n\t\tif(M <= N) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(X);\n\t\t\n\t\tint distance[] = new int[M-1];\n\t\tfor(int i=0; i<M-1; i++) {\n\t\t\tdistance[i] = X[i+1] - X[i];\n\t\t}\n\t\t\n\t\tArrays.sort(distance);\n\t\t\n\t\tint sum = 0;\n\t\tfor(int i=0; i<(M-N); i++) {\n\t\t\tsum+=distance[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\n\n\t}\n\n}", "code2": "import java.util.*;\npublic class Main {\n\tstatic int yono;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\tint N = Integer.parseInt(sc.next());\n\t\tyono = N - 1;\n\t\tint M = sc.nextInt();\n\t\ttree = new int[N];\n\t\tArrays.fill(tree, -1);\n\t\tfor (int i = 0; i < M; i++)union(Integer.parseInt(sc.next()) - 1, Integer.parseInt(sc.next()) - 1);\n\t\tSystem.out.println(yono);\n\t}\n\t\n\tstatic int[] tree;\n\tstatic void union(int x, int y) {\n\t\tx = root(x);\n\t\ty = root(y);\n\t\tif(x != y) {\n\t\t\tyono--;\n\t\t\tif(tree[x] < tree[y]) {\n\t\t\t\tx ^= y; y ^= x; x^= y;\n\t\t\t}\n\t\t\ttree[x] += tree[y];\n\t\t\ttree[y] = x;\n\t\t}\n\t}\n\tstatic boolean find(int x, int y) {\n\t\treturn root(x) == root(y);\n\t}\n\tstatic int root(int x) {\n\t\treturn tree[x] < 0 ? x : (tree[x] = root(tree[x]));\n\t}\n}", "label": 0}, {"id": 728, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\n  public static void main(String[] args) throws IOException\n  {\n    BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1);\n    String[] sl = r.readLine().split(\"[\\\\s]+\");\n    int n = Integer.parseInt(sl[0]);\n    int c = Integer.parseInt(sl[1]);\n    int d[][] = new int[30][30];\n    int count[][] = new int[3][30];\n\n    for(int i = 0; i < c; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < c; j++)\n      {\n        d[i][j] = Integer.parseInt(sl[j]);\n      }\n    }\n\n    for(int i = 0; i < n; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < n; j++)\n      {\n        count[(i + j) % 3][Integer.parseInt(sl[j]) - 1]++;\n      }\n    }\n    \n    int sel[] = new int[3];\n    int min = Integer.MAX_VALUE;\n    \n    for(sel[0] = 0; sel[0] < c; sel[0]++)\n    {\n      for(sel[1] = 0; sel[1] < c; sel[1]++)\n      {\n        if(sel[0] == sel[1])\n        {\n          continue;\n        }\n        for(sel[2] = 0; sel[2] < c; sel[2]++)\n        {\n          if(sel[1] == sel[2] || sel[0] == sel[2])\n          {\n            continue;\n          }\n          \n          int stress = 0;\n          for(int i = 0; i < 3; i++)\n          {\n            for(int j = 0; j < c; j++)\n            {\n              stress += count[i][j] * d[j][sel[i]];\n            }\n          }\n          min = Math.min(min, stress);\n        }\n      }\n    }\n    \n    System.out.println(min);\n\n  }\n\n\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int [] h = new int [N];\n        for(int i=0; i<N; i++){\n            h[i] = sc.nextInt();\n        }\n        Arrays.sort(h);\n        long min = 0;\n        long max = 1000000000;\n        long mid = 0;\n        while(max-min>1){\n            mid = max-(max-min)/2;\n            if(judge(mid,h,N,B,A-B)){\n                max = mid;\n            }else{\n                min = mid;\n            }\n        }\n        if(!judge(mid,h,N,B,A-B))mid++;\n        System.out.println(mid);\n    }\n    static boolean judge(long mid, int[]h, int N, int B, double C){\n        long Z=0;\n        for(int i=N-1; i>=0; i--){\n            long tmp = h[i]-mid*B;\n            if(tmp>0){\n                Z+=((long)(Math.ceil(tmp/C)));\n            }else{\n                break;\n            }\n        }\n        if(Z>mid)return false;\n        return true;\n    }\n}\n", "label": 0}, {"id": 191, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "label": 1}, {"id": 716, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\n  public static void main(String[] args) throws IOException\n  {\n    BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1);\n    String[] sl = r.readLine().split(\"[\\\\s]+\");\n    int n = Integer.parseInt(sl[0]);\n    int c = Integer.parseInt(sl[1]);\n    int d[][] = new int[30][30];\n    int count[][] = new int[3][30];\n\n    for(int i = 0; i < c; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < c; j++)\n      {\n        d[i][j] = Integer.parseInt(sl[j]);\n      }\n    }\n\n    for(int i = 0; i < n; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < n; j++)\n      {\n        count[(i + j) % 3][Integer.parseInt(sl[j]) - 1]++;\n      }\n    }\n    \n    int sel[] = new int[3];\n    int min = Integer.MAX_VALUE;\n    \n    for(sel[0] = 0; sel[0] < c; sel[0]++)\n    {\n      for(sel[1] = 0; sel[1] < c; sel[1]++)\n      {\n        if(sel[0] == sel[1])\n        {\n          continue;\n        }\n        for(sel[2] = 0; sel[2] < c; sel[2]++)\n        {\n          if(sel[1] == sel[2] || sel[0] == sel[2])\n          {\n            continue;\n          }\n          \n          int stress = 0;\n          for(int i = 0; i < 3; i++)\n          {\n            for(int j = 0; j < c; j++)\n            {\n              stress += count[i][j] * d[j][sel[i]];\n            }\n          }\n          min = Math.min(min, stress);\n        }\n      }\n    }\n    \n    System.out.println(min);\n\n  }\n\n\n}", "label": 0}, {"id": 260, "code1": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t    Scanner sc = new Scanner(System.in);   \n\t    \n\t    float A = sc.nextFloat();\n\t    float B = sc.nextFloat();\n\t    \n\t    System.out.println(Math.round((A + B) / 2));\n\t}    \n}\t", "code2": "import java.util.*;\n \npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner scan = new Scanner(System.in);\n      \tint a = scan.nextInt();\n      \tint b = scan.nextInt();\n      \tint x = a + b;\n      \tint ans = 0;\n      \tif(x % 2 == 0){\n        \tans = x / 2;\n        }\n      \telse{\n        \tans = x / 2 + 1;\n        }\n      \t\n      \tSystem.out.print(ans);\n    }\n}", "label": 1}, {"id": 83, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "code2": "import java.util.Scanner;\n\nclass Main {\n  public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    int a,b,c;\n    a = scanner.nextInt();\n    b = scanner.nextInt();\n    c = scanner.nextInt();\n \n    if ((a < c) && (b > c)||(a > c) && (b < c)) {   //(1)\n      System.out.println(\"Yes\");\n      \n    }\n    else\n      System.out.println(\"No\");\n  }\n}\n", "label": 1}, {"id": 550, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong m = Long.parseLong(sc.next());\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tm = lcm(m, Long.parseLong(sc.next()));\n\t\tSystem.out.println(m);\n\t}\n\tpublic static long lcm(long m, long n) {\n\t\tBigInteger M = new BigInteger(String.valueOf(m));\n\t\tBigInteger N = new BigInteger(String.valueOf(n));\n\t\tBigInteger G = new BigInteger(String.valueOf(gcd(m, n)));\n\t\treturn M.multiply(N).divide(G).longValue();\n\t}\n\tpublic static long gcd(long m, long n) {\n\t\tif (m < n) {\n\t\t\tlong tem = m;\n\t\t\tm = n;\n\t\t\tn = tem;\n\t\t}\n\t\tlong r = -1;\n\t\twhile (r != 0) {\n\t\t\tr = m % n;\n\t\t\tm = n;\n\t\t\tn = r;\n\t\t}\n\t\treturn m;\n\t}\n}", "code2": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)1e9+7;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint n = io.nextInt();\n\t\t\tint K = io.nextInt();\n\t\t\tint L = io.nextInt();\n\n\t\t\tUnionFind uf1 = new UnionFind(n);\n\t\t\tUnionFind uf2 = new UnionFind(n);\n\t\t\tUnionFind uf3 = new UnionFind(n);\n\t\t\t\n\t\t\tfor (int i = 0; i < K; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf1.union(a, b);\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < L; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf2.union(a, b);\n\t\t\t}\n\n\t\t\tTreeSet<Integer>[] s1 = new TreeSet[n];\n\t\t\tTreeSet<Integer>[] s2 = new TreeSet[n];\n\t\t\tfor (int i = 0; i < n; i++) if (uf1.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf1.next[j]) { s.add(j); }\n\t\t\t\ts1[i] = s;\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) if (uf2.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf2.next[j]) { s.add(j); }\n\t\t\t\ts2[i] = s;\n\t\t\t}\n\t\t\t\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint r1 = uf1.root(i);\n\t\t\t\tint r2 = uf2.root(i);\n\n\t\t\t\tif (!s1[r1].contains(i)) continue;\n\n\t\t\t\tTreeSet<Integer> a = s1[r1].size() < s2[r2].size() ? s1[r1] : s2[r2];\n\t\t\t\tTreeSet<Integer> b = s1[r1].size() < s2[r2].size() ? s2[r2] : s1[r1];\n\t\t\t\tList<Integer> same = new ArrayList<>();\n\t\t\t\tfor (int t : a) {\n\t\t\t\t\tif (b.contains(t)) same.add(t);\n\t\t\t\t}\n\t\t\t\tfor (int t : same) {\n\t\t\t\t\ts1[r1].remove(t);\n\t\t\t\t\ts2[r2].remove(t);\n\t\t\t\t\tans[t] = same.size();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tprintArrayLn(ans);\n\t\t}\n\t}\n\t\n\tstatic\n\tclass UnionFind {\n\t\tprivate int[] data;\n\t\tprivate int[] next;\n\t\tprivate int[] last;\n\t\t\n\t\tpublic UnionFind(int size) {\n\t\t\tdata = new int[size];\n\t\t\tnext = new int[size];\n\t\t\tlast = new int[size];\n\t\t\tclear();\n\t\t}\n\t\t\n\t\tpublic void clear() {\n\t\t\tArrays.fill(data, -1);\n\t\t\tArrays.fill(next, -1);\n\t\t\tfor(int i = 0; i < last.length; i++) {\n\t\t\t\tlast[i] = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic int root(int x) { return data[x] < 0 ? x : (data[x] = root(data[x])); }\n\t\t\n\t\tpublic void union(int x, int y) {\n\t\t\tif((x = root(x)) != (y = root(y))) {\n\t\t\t\tif(data[y] < data[x]) { final int t = x; x = y; y = t; }\n\t\t\t\tdata[x] += data[y];\n\t\t\t\tdata[y] = x;\n\t\t\t\tnext[last[x]] = y;\n\t\t\t\tlast[x] = last[y];\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic boolean same(int x, int y) { return root(x) == root(y); }\n\t\tpublic int size(int x) { return -data[root(x)]; }\n\t}\n\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "label": 0}, {"id": 230, "code1": "import java.util.Scanner;\n\nclass Main {\n    private static boolean[] calcPrimeTable(int n) {\n        boolean[] table = new boolean[n + 1];\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (!table[i]) {\n                for (int j = i + i; j <= n; j += i) {\n                    table[j] = true;\n                }\n            }\n        }\n        return table;\n    }\n\n    private static void solve() {\n        boolean[] table = calcPrimeTable(1000000);\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            int n = scanner.nextInt();\n            int counter = 0;\n            if (n == 0) {\n                break;\n            }\n            for (int i = 2; i <= n / 2; i++) {\n                if (!table[i] && !table[n - i]) {\n                    counter++;\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 358, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int count = Integer.valueOf(reader.readLine());\n        String s = reader.readLine();\n\n        long[][] dp = new long[count][count];\n        dp[0][0] = 1;\n        long modulo = 1_000_000_007;\n\n        for (int i = 1; i < count; ++i) {\n            if (s.charAt(i - 1) == '<') {\n                dp[i][0] = 0;\n                for (int j = 1; j <= i; ++j) {\n                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1];\n                    dp[i][j] %= modulo;\n                }\n            } else {\n                dp[i][i] = 0;\n                for (int j = i - 1; j >= 0; --j) {\n                    dp[i][j] = dp[i][j + 1] + dp[i - 1][j];\n                    dp[i][j] %= modulo;\n                }\n            }\n        }\n\n        long res = 0;\n        for (int i = 0; i < count; ++i) {\n            res += dp[count - 1][i];\n            res %= modulo;\n        }\n        System.out.println(res);\n    }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "label": 0}, {"id": 258, "code1": "import java.util.*;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        System.out.println((a+b+1)/2);\n    }   \n}\n", "code2": "import java.util.*;\n \npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner scan = new Scanner(System.in);\n      \tint a = scan.nextInt();\n      \tint b = scan.nextInt();\n      \tint x = a + b;\n      \tint ans = 0;\n      \tif(x % 2 == 0){\n        \tans = x / 2;\n        }\n      \telse{\n        \tans = x / 2 + 1;\n        }\n      \t\n      \tSystem.out.print(ans);\n    }\n}", "label": 1}, {"id": 526, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\n/*\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            pass System Test!\n*/\n\npublic class Main {\n  private static class Task {\n    void solve(FastScanner in, PrintWriter out) {\n      int H = in.nextInt();\n      int W = in.nextInt();\n      char[][] map = new char[H][];\n      for (int i = 0; i < H; i++) {\n        map[i] = in.next().toCharArray();\n      }\n\n      boolean[][] red = new boolean[H][W];\n      boolean[][] blue = new boolean[H][W];\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (j == 0) red[i][j] = true;\n          else if (j == W - 1) blue[i][j] = true;\n          else if (i % 2 == 0) red[i][j] = true;\n          else blue[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          if (map[i][j] == '.') continue;\n          blue[i][j] = true;\n          red[i][j] = true;\n        }\n      }\n\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(red[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < H; i++) {\n        for (int j = 0; j < W; j++) {\n          out.print(blue[i][j] ? \"#\" : \".\");\n        }\n        out.println();\n      }\n    }\n  }\n\n  /**\n   * \u3053\u3053\u304b\u3089\u4e0b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n   */\n  public static void main(String[] args) {\n    OutputStream outputStream = System.out;\n    FastScanner in = new FastScanner();\n    PrintWriter out = new PrintWriter(outputStream);\n    Task solver = new Task();\n    solver.solve(in, out);\n    out.close();\n  }\n  private static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int bufferLength = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < bufferLength) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          bufferLength = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (bufferLength <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    double[] nextDoubleArray(int n) {\n      double[] array = new double[n];\n      for (int i = 0; i < n; i++) {\n        array[i] = nextDouble();\n      }\n      return array;\n    }\n\n    double[][] nextDoubleMap(int n, int m) {\n      double[][] map = new double[n][];\n      for (int i = 0; i < n; i++) {\n        map[i] = nextDoubleArray(m);\n      }\n      return map;\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int n) {\n      int[] array = new int[n];\n      for (int i = 0; i < n; i++) array[i] = nextInt();\n      return array;\n    }\n\n    public long[] nextLongArray(int n) {\n      long[] array = new long[n];\n      for (int i = 0; i < n; i++) array[i] = nextLong();\n      return array;\n    }\n\n    public String[] nextStringArray(int n) {\n      String[] array = new String[n];\n      for (int i = 0; i < n; i++) array[i] = next();\n      return array;\n    }\n\n    public char[][] nextCharMap(int n) {\n      char[][] array = new char[n][];\n      for (int i = 0; i < n; i++) array[i] = next().toCharArray();\n      return array;\n    }\n  }\n}\n", "code2": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "label": 0}, {"id": 299, "code1": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.System.in;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long[] x = new long[n];\n        for(int i=0;i<n;i++) x[i]=sc.nextLong();\n        long ans= 0;\n        for(int i=0;i<n-1;i++){\n            ans += Math.min(A*(x[i+1]-x[i]),B);\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(ans);\n        out.flush();\n    }\n}\n", "code2": "import java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayDeque;\nimport java.util.Deque;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Main{\n          public static void main(String[] args) {\n                  Scanner scan = new Scanner(System.in);\n                  int count = 0;\n                  int N = scan.nextInt();\n                  int a[] = new int[N];\n                  for (int i = 0; i < N; i++) {\n                          a[i] = scan.nextInt();\n                  }\n                  for(int j = 1; j < N; j++){\n                          if (a[j-1] == a[j]) {\n                                  a[j] = 10001;\n                                  count++;\n                          }\n                  }\n                  System.out.println(count);\n                  }\n}\n", "label": 0}, {"id": 141, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n    int ab = a + b;\n    int bc = b + c;\n    int ac = a+c;\n\n    int result = Math.min(ab, Math.min(bc , ac));\n    System.out.println(result);\n  }\n}\n", "label": 1}, {"id": 321, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\n\n\npublic class Main {\n\n\tprivate BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1);\n\n\tprivate String inputData = null;\n\n\tpublic String[] data = null;\n\n\tpublic int num = 0;\n\n\tpublic int count = 0;\n\n\tpublic HashMap<Integer, Integer> humanData = new HashMap<Integer, Integer>();\n\n\tpublic ArrayList<Integer> topId = new ArrayList<Integer>();\n\n\tpublic ArrayList<Integer> topLength = new ArrayList<Integer>();\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().start();\n\t\tSystem.exit(0);\n\t}\n\n\tpublic void start() {\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\tif (this.data.length == 1) {\n\t\t\t\tif (this.data[0].equals(\"0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.num = Integer.parseInt(this.data[0]);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.humanData.clear();\n\n\t\t\tfor (int i = 0; i < this.num; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\t\tthis.humanData.put(Integer.parseInt(data[0]),\n\t\t\t\t\t\tInteger.parseInt(data[1]) + Integer.parseInt(data[2]));\n\n\t\t\t}\n\n\t\t\tIterator<Integer> itId = this.humanData.keySet().iterator();\n\t\t\tint numCount = 0;\n\t\t\twhile (itId.hasNext()) {\n\t\t\t\tint id = itId.next();\n\t\t\t\tif (numCount == 0) {\n\t\t\t\t\tthis.topId.add(id);\n\t\t\t\t\tthis.topLength.add(this.humanData.get(id));\n\t\t\t\t} else {\n\t\t\t\t\tif (this.topLength.get(count) <= this.humanData.get(id)) {\n\t\t\t\t\t\tthis.topId.set(this.count, id);\n\t\t\t\t\t\tthis.topLength.set(this.count, this.humanData.get(id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumCount++;\n\t\t\t}\n\n\t\t\tthis.count++;\n\n\t\t}\n\n\t\tfor (int i = 0; i < this.topId.size(); i++) {\n\t\t\tSystem.out.println(this.topId.get(i) + \" \" + this.topLength.get(i));\n\t\t}\n\n\t}\n\n}", "code2": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = findK(n);\n        if(k==-1){\n            System.out.println(\"No\");\n            System.exit(0);\n        }\n        int[][] res = new int[k][k-1];\n        for(int i=0;i<k-1;i++) res[0][i] = i+1;\n        int[] index = new int[k];\n        for(int i=0;i<k;i++) index[i]=i;\n        for(int row=1;row<k;row++){\n            int idx = 0;\n            for(int j=0;j<row;j++) res[row][idx++] = res[j][index[j]++];\n            if(row==k-1) continue;\n            res[row][idx++]=res[row-1][k-2]+1;\n            while(idx<k-1){\n                res[row][idx] = res[row][idx-1]+1;\n                idx++;\n            }\n        }\n        System.out.println(\"Yes\");\n        System.out.println(k);\n        for(int i=0;i<k;i++){\n            System.out.print(Integer.toString(k-1)+\" \");\n            for(int j=0;j<k-1;j++){\n                System.out.print(Integer.toString(res[i][j])+\" \");\n            }\n            System.out.println(\"\");\n        }\n    }\n    static int findK(int n){\n        int k=1;\n        while(k*(k-1)<=2*n){\n            if(k*(k-1)==2*n) return k;\n            k++;\n        }\n        return -1;\n    }\n}\n", "label": 0}, {"id": 275, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n * The Number of Area\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = \"\";\n\n\t\twhile ((line = br.readLine()) != null && !line.isEmpty()) {\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tSystem.out.println((n * (n + 1) >> 1) + 1);\n\t\t}\n\t}\n}", "code2": "import java.io.*;\n\nclass Main{\npublic static void main(String[] args) throws IOException{\nBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\nString line=\"\";\nint count;\nwhile((line=br.readLine())!=null){\ncount=1;\nint n=Integer.parseInt(line);\nfor(int i=1;i<=n;i++){\ncount+=i;\n}\nSystem.out.println(count);\n}\n}\n}", "label": 1}, {"id": 391, "code1": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t\n\tint cmp (String p1, String p2) {\n\t\tif( p1.length() != p2.length() ) return p2.length() - p1.length();\n\t\treturn p2.compareTo(p1);\n\t}\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;) {\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif((w|h) == 0 ) break;\n\t\t\t\n\t\t\tString[][] dp = new String[h+1][w+1];\n\t\t\tString pass = \"\";\n\t\t\tchar[][] map = new char[h+1][w+1];\n\t\t\t\n\t\t\tfor(String[] a: dp) fill(a, \"\");\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) {\n\t\t\t\tString str = sc.next();\n\t\t\t\tfor(int j=1;j<=w;j++) {\n\t\t\t\t\tmap[i][j] = str.charAt(j-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) for(int j=1;j<=w;j++) {\n\t\t\t\tif( '0' <= map[i][j] && map[i][j] <= '9' ) {\n\t\t\t\t\tif( map[i][j] == '0' && dp[i-1][j].equals(\"\") && dp[i][j-1].equals(\"\") ) continue;\n\t\t\t\t\tdp[i][j] = ( cmp(dp[i-1][j], dp[i][j-1])<0? dp[i-1][j]: dp[i][j-1] ) + (char)map[i][j];\n\t\t\t\t}\n\t\t\t\tpass = cmp(pass, dp[i][j])<0? pass: dp[i][j];\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(pass);\n\t\t\t\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\n\nimport static java.util.Comparator.reverseOrder;\n\npublic class Main {\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n\n        List<Long> inputList = new ArrayList<Long>();\n        for(int i = 0; i < n ;i++) {\n            inputList.add(sc.nextLong());\n        }\n\n        /*\n        List<Integer> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        for(int a: sortedList) {\n            System.out.println(a);\n        }\n        */\n        List<Long> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        long result = sortedList.get(0);\n        int index = 1;\n        int count = 0;\n        for (int i = 0; i < n - 2 ; i++) {\n            result += sortedList.get(index);\n            count = count + 1;\n            if (count == 2) {\n                count = 0;\n                index = index + 1;\n            }\n        }\n        System.out.println(result);\n    }\n}", "label": 0}, {"id": 697, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint n;\n\tlong mo = 1_000_000_000 + 7;\n\tlong[] fac = new long[3000000];\n\tlong[] ifac = new long[3000000];\n\tlong[] inv = new long[3000000];\n\t{\n\t\tfac[0] = 1;\n\t\tfor (int i = 1; i < fac.length; ++i) {\n\t\t\tfac[i] = i * fac[i - 1] % mo;\n\t\t}\n\t\tinv[1] = 1;\n\t\tfor (int i = 2; i < inv.length; ++i) {\n\t\t\tinv[i] = mo - inv[(int) (mo % i)] * (mo / i) % mo;\n\t\t}\n\t\tifac[0] = 1;\n\t\tfor (int i = 1; i < ifac.length; ++i) {\n\t\t\tifac[i] = ifac[i - 1] * inv[i] % mo;\n\t\t}\n\t}\n\n\tlong comb(int n, int k) {\n\t\treturn fac[n] * ifac[n - k] % mo * ifac[k] % mo;\n\t}\n\n\tlong g(int k) {\n\t\tif (2 * k < n)\n\t\t\treturn 0;\n\t\tint a = 2 * k - n;\n\t\tint b = n - k;\n\t\treturn comb(a - 1 + b, b - 1) * fac[k] % mo * fac[n - 1 - k] % mo;\n\t}\n\n\tlong f(int k) {\n\t\treturn (g(k) - g(k - 1) + mo) % mo;\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner();\n\t\tn = (int) sc.nextLong();\n\t\tlong ans = 0;\n\t\tfor (int i = (n + 1) / 2; i <= n - 1; ++i) {\n\t\t\tans = (ans + f(i) * i % mo) % mo;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n\tlong pow(long a, long n) {\n\t\tlong ret = 1;\n\t\tfor (; n > 0; n >>= 1, a = a * a % mo) {\n\t\t\tif (n % 2 == 1) {\n\t\t\t\tret = ret * a % mo;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tlong inv(long a) {\n\t\treturn pow(a, mo - 2);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tclass Scanner {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[ptr++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isPrintableChar(int c) {\n\t\t\treturn 33 <= c && c <= 126;\n\t\t}\n\n\t\tprivate void skipUnprintable() {\n\t\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\t\tptr++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskipUnprintable();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n\n}\n", "code2": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.*;\nimport java.text.DecimalFormat;\nimport java.util.*;\n\n\n\n\npublic class Main {\n    private static int n,N;\n    private static int [] A;\n    private static int [] B;\n\n    private static int getLeft(){\n        int s = N/2 + 1;\n        while (s > 1 && B[s] != B[s-1]) s--;\n        return s;\n    }\n    private static int getRight(){\n        int e = N/2+1;\n        while (e < N && B[e] != B[e+1]) e++;\n        return e;\n    }\n\n    private static boolean valid(int x) {\n        for (int i = 1;i <= N;i++)\n            B[i] = (A[i] >= x) ? 1 : 0;\n        int s = getLeft(),e = getRight(),mid = N/2 + 1;\n        if (s == mid || e == mid) return B[mid] == 1;\n\n//        System.err.println(s + \" \" + e);\n        int prv = 0;\n        int l = B[s],r = B[e];\n\n        while (s <= e) {\n            int h = Math.max(s,e);\n            h = Math.min(h,N+1-h) - 1;\n            int rem = h - prv;\n            prv = h;\n            if (rem == 0) break;\n            int len = e-s-1;\n            if (2*rem <= len) {\n                s += rem;\n                e -= rem;\n            }\n            else {\n                if (l == r) return l == 1;\n                if (mid-s < e-mid) return l == 1;\n                else return r==1;\n            }\n        }\n//        System.err.println(\": \" + s + \" \" + e);\n        if (l == r) return l == 1;\n        int pos = mid - s;\n        if (l == 0) return pos%2 == 0;\n        return pos%2 == 1;\n    }\n    public static void main(String[] args) throws Exception {\n        IO io = new IO(null,null);\n        n = io.getNextInt();\n        N = 2*n-1;\n        A = new int[N+1];\n        B = new int[N+1];\n        for (int i = 1;i <= N;i++)\n            A[i] = io.getNextInt();\n\n        int s = 1,e = N;\n        while (s < e) {\n            int m = s + (e-s+1)/2;\n            if (valid(m)) s = m;\n            else e = m - 1;\n        }\n        io.println(s);\n\n        io.close();\n    }\n    private static void bf(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        TreeSet<ArrayList<Integer>> vis = new TreeSet<>(new Comparator<ArrayList<Integer>>() {\n            @Override\n            public int compare(ArrayList<Integer> o1, ArrayList<Integer> o2) {\n                for (int i = 0;i < n;i++)\n                    if (!o1.get(i).equals(o2.get(i)))\n                        return o1.get(i) - o2.get(i);\n                return 0;\n            }\n        });\n\n        while (!vis.contains(A)) {\n            System.err.println(A);\n            vis.add((ArrayList<Integer>)A.clone());\n            int prv = A.get(0);\n            for (int i = 1;i+1 < n;i++){\n                int cur = A.get(i);\n                if (prv != cur) A.set(i,A.get(i+1));\n                prv = cur;\n            }\n        }\n    }\n\n    private static void bftri(int n) {\n        ArrayList<Integer> A = new ArrayList<>();\n        for (int i = 0;i < n;i++)\n            A.add(i&1);\n        while (!A.isEmpty()) {\n            System.err.println(A);\n\n            ArrayList<Integer> B = new ArrayList<>();\n            int prv = A.get(0);\n            for (int i = 1;i+1 < A.size();i++){\n                int cur = A.get(i);\n                if (prv != cur) B.add(A.get(i+1));\n                else B.add(cur);\n                prv = cur;\n            }\n            A = B;\n        }\n    }\n}\n\nclass pair{\n    int s,e,v;\n    public pair(int s,int e,int v) {\n        this.s = s;\n        this.e = e;\n        this.v = v;\n    }\n    public int getLen(){\n        return e-s+1;\n    }\n    @Override\n    public String toString(){\n        return \"(\" + s + \":\" + e + \", \" + v + \")\";\n    }\n}\n\n\nclass IO{\n    private BufferedReader br;\n    private StringTokenizer st;\n    private PrintWriter writer;\n    private String inputFile,outputFile;\n\n    public boolean hasMore() throws IOException{\n        if(st != null && st.hasMoreTokens()) return true;\n        if(br != null && br.ready()) return true;\n        return false;\n    }\n    public String getNext() throws FileNotFoundException, IOException{\n        while(st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public String getNextLine() throws FileNotFoundException, IOException{\n        return br.readLine().trim();\n    }\n\n    public int getNextInt() throws FileNotFoundException, IOException{\n        return Integer.parseInt(getNext());\n    }\n    public long getNextLong() throws FileNotFoundException, IOException{\n        return Long.parseLong(getNext());\n    }\n\n    public void print(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\" ,x);\n    }\n    public void println(double x,int num_digits) throws  IOException{\n        writer.printf(\"%.\" + num_digits + \"f\\n\" ,x);\n    }\n    public void print(Object o) throws  IOException{\n        writer.print(o.toString());\n    }\n\n    public void println(Object o) throws  IOException{\n        writer.println(o.toString());\n    }\n    public IO(String x,String y) throws FileNotFoundException, IOException{\n        inputFile = x;\n        outputFile = y;\n        if(x != null) br = new BufferedReader(new FileReader(inputFile));\n        else br = new BufferedReader(new InputStreamReader(System.in));\n        if(y != null) writer = new PrintWriter(new BufferedWriter(new FileWriter(outputFile)));\n        else writer = new PrintWriter(new OutputStreamWriter(System.out));\n    }\n\n    protected void close() throws IOException{\n        br.close();\n        writer.close();\n    }\n    public void outputArr(Object [] A) throws IOException{\n        int L = A.length;\n        for (int i = 0;i < L;i++) {\n            if(i > 0) writer.print(\" \");\n            writer.print(A[i]);\n        }\n        writer.print(\"\\n\");\n    }\n}\n", "label": 0}, {"id": 727, "code1": "import java.util.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(), C = sc.nextInt();\n\t\tint D[][] = new int[C][C];\n\t\tint c[][] = new int[N][N];\n\t\t\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tD[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\t\n\t\t//\u30ef\u30fc\u30b7\u30e3\u30eb\u30d5\u30ed\u30a4\u30c9\n//\t\tfor(int k=0;k<C;k++) {\n//\t\t\tfor(int i=0;i<C;i++) {\n//\t\t\t\tfor(int j=0;j<C;j++) {\n//\t\t\t\t\tD[i][j]=Math.min(D[i][j], D[i][k]+D[k][j]);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n\t\t\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\tc[i][j] = sc.nextInt()-1;//0index\n\t\t\t}\n\t\t}\n\t\tsc.close(); \n\t\t\n\t\tint costSum0[] = new int[C]; //%3==0\n\t\tint costSum1[] = new int[C];\n\t\tint costSum2[] = new int[C];\n\t\t\n\t\tfor(int color=0;color<C;color++) {\n\t\t\tfor(int i=0;i<N;i++) {\n\t\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\t\tint nowColor = c[i][j];\n\t\t\t\t\tif((i+j)%3==0) costSum0[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==1) costSum1[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==2) costSum2[color] += D[nowColor][color];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = Integer.MAX_VALUE/2;\n\t\t//\u4f59\u308a\uff11\u306e\u3068\u3053\u308d\u5168\u901a\u308a\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tfor(int k=0;k<C;k++) {\n\t\t\t\t\tif(i==j||j==k||k==i)continue;\n\t\t\t\t\tint sum = costSum0[i]+costSum1[j]+costSum2[k];\n\t\t\t\t\tans = Math.min(ans,sum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tlong a = sc.nextLong();\n\t\tlong b = sc.nextLong();\n\t\tlong[] h = new long[n];\n\t\tfor(int i = 0; i < n; i++) h[i] = sc.nextLong();\n\t\tlong l = 0, r = Integer.MAX_VALUE;\n\t\twhile(r - l != 1) {\n\t\t\tlong mid = (r + l) / 2;\n\t\t\tlong[] x = Arrays.copyOf(h, h.length);\n\t\t\tlong cnt = 0;\n\t\t\tfor(int i = 0; i < x.length; i++) {\n\t\t\t\tif(x[i] - b * mid <= 0) continue;\n\t\t\t\tcnt += ((x[i] - b * mid) + (a - b - 1)) / (a - b);\n\t\t\t}\n\t\t\tif(mid >= cnt) r = mid;\n\t\t\telse l = mid;\n\t\t}\n\t\tSystem.out.println(r);\n\t}\n}\n", "label": 0}, {"id": 497, "code1": "import java.util.*;\nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    String S[] = sc.next().split(\"\");\n    \n    int n = (int)Math.pow(2, S.length - 1);\n    \n    long total = 0;\n    for (int i = 0; i < n; i++) {\n      String s = S[0];\n      \n      for (int j = 0; j < S.length - 1; j++) {\n        if ((1&i>>j) == 1) {\n          total += Long.parseLong(s);\n          s = S[j + 1];\n        } else {\n          s += S[j + 1];\n        }\n      }\n      total += Long.parseLong(s);\n    }\n    System.out.println(total);\n  }\n}", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass Solver extends Main{\n\tSolver(){\n\t\t\n\t}\n}//Solver_end\n\n@SuppressWarnings(\"unchecked\")\nclass Main{\n\tstatic int imax=Integer.MAX_VALUE;\n\tstatic long lmax=Long.MAX_VALUE;\n\t\n\tpublic static void main(String[] args) throws FileNotFoundException{\n\t\t\n\t\t\n\t\tScanner sc=new Scanner(System.in);\n\t\t//Scanner sc=new Scanner(fp);\n\t\t\n\t\tint[] data=readlnI(sc,\" \");\n\t\tint n=data[0];\n\t\tint m=data[1];\n\t\tint[] path=new int[200000];\n\t\t\n\t\tfor(int i=0;i<m; i++){\n\t\t\tint[] line=readlnI(sc,\" \");\n\t\t\tif(line[0]==1){\n\t\t\t\tpath[line[1]-1]+=1;\n\t\t\t}else if(line[1]==n){\n\t\t\t\tpath[line[0]-1]+=1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tboolean fnd=false;\n\t\t\n\t\tfor(int x:path){\n\t\t\tif(x==2)fnd=true;\n\t\t}\n\t\t\n\t\tputs(fnd==true ? \"POSSIBLE\" : \"IMPOSSIBLE\");\n\t\t\n\t}//main_end\n\t\n//---------------------------------------------------------------------------\n\tstatic int readI(Scanner sc){\n\t\treturn Integer.parseInt(sc.nextLine().trim());\n\t}\n\tstatic long readL(Scanner sc){\n\t\treturn Long.parseLong(sc.nextLine().trim());\n\t}\n\tstatic String readS(Scanner sc){\n\t\treturn sc.nextLine().trim();\n\t}\n\tstatic int[] readlnI(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToInt(Integer::parseInt).toArray();\n\t}\n\tstatic long[] readlnL(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToLong(Long::parseLong).toArray();\n\t}\n\tstatic String[] readlnS(Scanner sc, String dl){\n\t\treturn sc.nextLine().trim().split(dl);\n\t}\n\t@SuppressWarnings(\"unchecked\")\n\tstatic <T> void puts(T... args){\n\t\tfor(int i=0; i<args.length-1; i++){\n\t\t\tSystem.out.printf(\"%s \",args[i]);\n\t\t}\n\t\tSystem.out.println(args[args.length-1]);\n\t}\n\tstatic void puts(int[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void puts(long[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void bs(){\n\t\tSystem.out.println(\"\");\n\t}\n\tstatic int sum(int[] ary){\n\t\tint sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic long sum(long[] ary){\n\t\tlong sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic void tblSort(int[][] tbl){\n\t\tArrays.sort(tbl, new Comparator<int[]>(){\n\t\t\t@Override\n\t\t\tpublic int compare(int[] a, int[] b){\n\t\t\t\tif(a[0]==b[0]){\n\t\t\t\t\treturn b[1]-a[1];\n\t\t\t\t}else{\n\t\t\t\t\treturn b[0]-a[0];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "label": 0}, {"id": 742, "code1": "import java.util.Scanner;\n\nclass Main {\n    private static boolean[] calcPrimeTable(int n) {\n        boolean[] table = new boolean[n + 1];\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (!table[i]) {\n                for (int j = i + i; j <= n; j += i) {\n                    table[j] = true;\n                }\n            }\n        }\n        return table;\n    }\n\n    private static void solve() {\n        boolean[] table = calcPrimeTable(1000000);\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            int n = scanner.nextInt();\n            int counter = 0;\n            if (n == 0) {\n                break;\n            }\n            for (int i = 2; i <= n / 2; i++) {\n                if (!table[i] && !table[n - i]) {\n                    counter++;\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "label": 0}, {"id": 489, "code1": "\npublic class Main {\n\n  static int mod = 1000003;\n  static int[][] fif = enumFIF(mod * 3, mod);\n\n  private static void solve() {\n    int q = ni();\n\n    for (int i = 0; i < q; i++) {\n      int x = ni();\n      int d = ni();\n      int n = ni();\n      out.println(f(x, d, n));\n    }\n  }\n\n  private static long f(int x, int d, int n) {\n    if (x == 0) {\n      return 0;\n    } else if (d == 0) {\n      return pow(x, n, mod);\n    }\n\n    int y = (int) (x * invl(d, mod) % mod);\n    if (n >= mod || y % mod > (y + n - 1) % mod) {\n      return 0;\n    }\n\n    long z = fif[0][y + n - 1] * invl(fif[0][y - 1], mod) % mod;\n    z *= pow(d, n, mod);\n    z %= mod;\n\n    return z;\n  }\n\n  public static long pow(long a, long n, long mod) {\n    // a %= mod;\n    long ret = 1;\n    int x = 63 - Long.numberOfLeadingZeros(n);\n    for (; x >= 0; x--) {\n      ret = ret * ret % mod;\n      if (n << 63 - x < 0)\n        ret = ret * a % mod;\n    }\n    return ret;\n  }\n\n\n  public static int[][] enumFIF(int n, int mod) {\n    int[] f = new int[n + 1];\n    int[] invf = new int[n + 1];\n    f[0] = 1;\n    for (int i = 1; i <= n; i++) {\n      f[i] = (int) ((long) f[i - 1] * i % mod);\n    }\n    long a = f[n];\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    invf[n] = (int) (p < 0 ? p + mod : p);\n    for (int i = n - 1; i >= 0; i--) {\n      invf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n    }\n    return new int[][] {f, invf};\n  }\n\n  public static long invl(long a, long mod) {\n    long b = mod;\n    long p = 1, q = 0;\n    while (b > 0) {\n      long c = a / b;\n      long d;\n      d = a;\n      a = b;\n      b = d % b;\n      d = p;\n      p = q;\n      q = d - c * q;\n    }\n    return p < 0 ? p + mod : p;\n  }\n\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        PrintWriter out = new PrintWriter(System.out);\n        InputStreamScanner in = new InputStreamScanner(System.in);\n        new Main().solve(in, out);\n        out.flush();\n    }\n\n    private void solve(InputStreamScanner in, PrintWriter out) {\n        String s = in.next();\n\n        long t = 0;\n        for (int i = 0; i < 1 << (s.length() - 1); i++) {\n            int p = 0;\n            for (int j = 0; j < s.length() - 1; j++) {\n                if ((1 & i >> j) == 1) {\n                    t += Long.parseLong(s.substring(p, j + 1));\n                    p = j + 1;\n                }\n            }\n            t += Long.parseLong(s.substring(p));\n        }\n\n        out.println(t);\n    }\n\n    static class InputStreamScanner {\n\n        private InputStream in;\n\n        private byte[] buf = new byte[1024];\n        private int len = 0;\n        private int off = 0;\n\n        InputStreamScanner(InputStream in)\t{\n            this.in = in;\n        }\n\n        String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); !isSpace(b);){\n                sb.appendCodePoint(b);\n                b = read();\n            }\n            return sb.toString();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        char nextChar() {\n            return (char)skip();\n        }\n\n        int skip() {\n            for (int b; (b = read()) != -1;) {\n                if (!isSpace(b)) {\n                    return b;\n                }\n            }\n            return -1;\n        }\n\n        private boolean isSpace(int c) {\n            return c < 33 || c > 126;\n        }\n\n        private int read() {\n            if (len == -1) {\n                throw new InputMismatchException(\"End of Input\");\n            }\n            if (off >= len){\n                off = 0;\n                try {\n                    len = in.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException(e.getMessage());\n                }\n                if (len <= 0) {\n                    return -1;\n                }\n            }\n            return buf[off++];\n        }\n    }\n}", "label": 0}, {"id": 241, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "label": 1}, {"id": 229, "code1": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint[] v = new int[500000];\n        for(int i = 0;i < 500000;i++){\n            v[i] = 1;\n        }\n        int p = 3;\n        while(true){\n            if(p*p > 1000000){\n                break;\n            }else{\n                if(v[(p-1)/2] == 0){\n                    p += 2;\n                }else{\n                    int t = p*p;\n                    while(t < 1000000){\n                        v[(t-1)/2] = 0;\n                        t += 2*p;\n                    }\n                    p += 2;\n                }\n            }\n        }\n        v[0] = 0;\n\t\twhile(scan.hasNext()){\n\t\t\tint n = scan.nextInt();\n\t\t\tif(n == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor(int i = 1;i < n/2;i++){\n\t\t\t\tif(v[i] != 1){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(v[(n-2*i-2)/2] == 1){\n\t\t\t\t\tcount += ((n-2*i-2)/2 == i)?2:1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/2);\n        }\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 186, "code1": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String a = sc.next();\n        String b = sc.next();\n        if(a.equals(b)) System.out.println(\"H\");\n        else System.out.println(\"D\");\n    }\n}", "label": 1}, {"id": 162, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int A = scanner.nextInt();\n        int B = scanner.nextInt();\n        int C = scanner.nextInt();\n\n        if ((A == B && A != C) || (A == C && A != B) || (B == C &&  A != B)) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    Scanner sc = new Scanner(System.in);\n    int a = sc.nextInt();\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n\n    if ((a == b  && a != c) || (b == c  && a != c) || (a == c  && a != b)) {\n      System.out.println(\"Yes\");\n    } else {\n      System.out.println(\"No\");\n    }\n\n  }\n}\n", "label": 1}, {"id": 632, "code1": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tint x = sc.nextInt();\n\t\tint y = sc.nextInt();\n\t\tlong ans = 0;\n\t\tint tmp = Math.min(x, y);\n\t\tx -= tmp;\n\t\ty -= tmp;\n\t\tif(a + b < 2 * c) {\n\t\t\tans += tmp * (a + b);\n\t\t} else {\n\t\t\tans += tmp * 2 * c;\n\t\t}\n\t\tif(x % 2 == 1) {\n\t\t\tif(a < 2 * c) {\n\t\t\t\tans += a;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\tx--;\n\t\t}\n\t\tif(a < 2 * c) {\n\t\t\tans += a * x;\n\t\t} else {\n\t\t\tans += 2 * c * x;\n\t\t}\n\t\tif(y % 2 == 1) {\n\t\t\tif(b < 2 * c) {\n\t\t\t\tans += b;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\ty--;\n\t\t}\n\t\tif(b < 2 * c) {\n\t\t\tans += b * y;\n\t\t} else {\n\t\t\tans += 2 * c * y;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\n", "label": 0}, {"id": 778, "code1": "\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tchar[] s = ns().toCharArray();\n\t\tint min = s.length;\n\t\tfor(int i = 0;i < s.length-1;i++){\n\t\t\tif(s[i] != s[i+1]){\n\t\t\t\tmin = Math.min(min, Math.max(i+1, s.length-(i+1)));\n\t\t\t}\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t    Scanner sc = new Scanner(System.in);   \n\t    \n\t    float A = sc.nextFloat();\n\t    float B = sc.nextFloat();\n\t    \n\t    System.out.println(Math.round((A + B) / 2));\n\t}    \n}\t", "label": 0}, {"id": 342, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "label": 0}, {"id": 732, "code1": "\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tC();\n\t}\n\t\n\tpublic static void A() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s1 = sc.next();\n\t\tString s2 = sc.next();\n\t\tfor(int i=0;i<3;i++) {\n\t\t\tif(s1.charAt(i)!=s2.charAt(2-i)) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t}\n\t\n\t// 1\u304b\u3089\u9806\u306b\uff12\u4e57\u3092\u8a08\u7b97\u3057\u3066\u3001N\u3092\u8d85\u3048\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u3002 O(root(N))\n\t//\uff12\u5206\u63a2\u7d22\u3059\u308b\u306a\u3089\u3001O(logN)\n\t// \u4e8c\u5206\u63a2\u7d22\u3067\u3001N\u306e\uff12\u4e57\u3092\u8d85\u3048\u306a\u3044\u6700\u5c0f\u306e\u5e73\u65b9\u6570\u3092\u767a\u898b\n\tpublic static long binsearchN2(long left, long right, int N) {\n\t\tif(left >= right) return (long) Math.pow(right, 2);\n\t\tlong mid = (left+right)/2;\n\t\tif(Math.pow(mid, 2) > N ) return binsearchN2(left, mid-1, N);\n\t\telse {\n\t\t\t//\u7121\u9650\u30eb\u30fc\u30d7\u3092\u9632\u3050\u3000\u518d\u8d77\u3059\u308b\u6642\u306f\u5fc5\u305a\u3001\u63a2\u7d22\u7bc4\u56f2\u304c\uff11\u4ee5\u4e0a\u5c0f\u3055\u304f\u306a\u308b\n\t\t\tif(Math.pow(mid+1, 2) > N) return (long) Math.pow(mid, 2) ;\n\t\t\telse return binsearchN2(mid+1,right, N);\n\t\t}\n\t}\n\t\n\tpublic static void B() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tSystem.out.println(binsearchN2(0,N,N));\n\t}\n\n\t// B\u3092\u4e2d\u5fc3\u306b\u3057\u3066\u4e8c\u5206\u63a2\u7d22\u3057\u3066A\u3068C\u306e\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u308b\n\t//\u3000A\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u3068\u3001O(N^2)\n\t\n\t// B\u3092\u8d85\u3048\u306a\u3044\u8981\u7d20\u6570\u3092\u8fd4\u3059\n\tpublic static void C() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tdouble[] A=new double[N],  C = new double[N];\n\t\tint[] B=new int[N];\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tA[i] = sc.nextDouble();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tB[i] = sc.nextInt();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tC[i] = sc.nextDouble();\n\t\t}\n\t\tArrays.sort(A);\n\t\tArrays.sort(B);\n\t\tArrays.sort(C);\n\t\tlong sum = 0;\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tdouble b = B[i];\n\t\t\tsum += numlessB(A,b)*(long)numlargerB(C,b);\n\t\t}\n\t\tSystem.out.println(sum);\n\t\t\n\t}\n\t//B\u3088\u308a\u3082\u5c0f\u3055\u3044\u8981\u7d20\u306e\u6570\u3000==B\u306f\u542b\u307e\u306a\u3044 B\u3092\u5c11\u3057\u305a\u3089\u3059\n\tpublic static int numlessB(double[] A, double B){\n\t\tint idx = Arrays.binarySearch(A, B-0.1);\n\t\treturn -idx-1;\n\t}\n\tpublic static int numlargerB(double[] A, double B) {\n\t\tint idx = Arrays.binarySearch(A, B+0.1);\n\t\treturn A.length-(-idx-1);\n\t}\n}\n", "code2": "import java.util.Scanner;\n\nclass Main {\n    private static boolean[] calcPrimeTable(int n) {\n        boolean[] table = new boolean[n + 1];\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (!table[i]) {\n                for (int j = i + i; j <= n; j += i) {\n                    table[j] = true;\n                }\n            }\n        }\n        return table;\n    }\n\n    private static void solve() {\n        boolean[] table = calcPrimeTable(1000000);\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            int n = scanner.nextInt();\n            int counter = 0;\n            if (n == 0) {\n                break;\n            }\n            for (int i = 2; i <= n / 2; i++) {\n                if (!table[i] && !table[n - i]) {\n                    counter++;\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}", "label": 0}, {"id": 522, "code1": "// -*- coding: utf-8 -*-\n//import java.awt.*;\nimport java.io.*;\nimport java.math.*;\nimport java.text.*;\nimport java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream;\n    if (args.length > 0 && args[0].equals(\"devTesting\")) {\n      try {\n        inputStream = new FileInputStream(args[1]);\n      } catch(FileNotFoundException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      inputStream = System.in;\n    }\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskC solver = new TaskC();\n    int testCase = 1;\n    solver.solve(1, in, out);\n    out.close();\n  }\n  \n  static class TaskC {\n    long h, w;\n    \n    void solve(int testNumber, InputReader in, PrintWriter out) {\n      h = in.nextInt();\n      w = in.nextInt();\n      char[][] superpost = new char[(int) h][];\n      for (int i = 0; i < h; ++i)\n        superpost[i] = in.next().toCharArray();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 0 && j < w - 1 || j == 0 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 1 && j > 0 || j == w - 1 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n          out.println();\n      }\n    }\n    \n  }\n      \n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream));\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n    \n    public String nextLine() {\n      try {\n        return reader.readLine();\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n    \n    public double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    public boolean hasInput() {\n      try {\n        if (tokenizer != null && tokenizer.hasMoreTokens()) {\n          return true;\n        }\n        reader.mark(1);\n        int ch = reader.read();\n        if (ch != -1) {\n          reader.reset();\n          return true;\n        }\n        return false;\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    \n  }\n}\n", "code2": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "label": 0}, {"id": 636, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "code2": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 94, "code1": "import java.util.*;\npublic class Main {\n\tint n;\n\tint[] num;\n\tScanner stdin =new Scanner(System.in);\n\t\n\tvoid Solve(){\n\t\tnum=new int[21000000];\n\t\twhile(true){\n\t\t\tn=stdin.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tSystem.out.println(findPrime(n+1,2*n));\n\t\t}\n\t\t\n\t}\n\tint findPrime(int a,int b){\n\t\tint count=0;\n\t\tfor(int i=a;i<=b;i++){\n\t\t\tif(judgePrime(i)) count++;\n\t\t}\n\t\t\n\t\treturn count;\n\t}\n\t\n\tboolean judgePrime(int p){\n\t\tif(num[p]==1) return true;\n\t\tif(num[p]==-1) return false;\n\t\t\n\t\tif(p<4){\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tif(p%2==0){\n\t\t\t\tnum[p]=-1;\n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=3;i<p;i++){\n\t\t\t\tif(p%i==0){\n\t\t\t\t\tnum[p]=-1;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t\n\tpublic static void main(String args[]){\n\t\tMain m=new Main();\n\t\tm.Solve();\n\t}\n\t\n}", "code2": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main {\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tboolean[] prime = new boolean[250000];\n\t\t\n\t\tArrays.fill(prime,true);\n\t\tprime[0] = false;\n\t\tprime[1] = false;\n\t\t\n\t\tfor(int i=2;i<250000;i++)\n\t\t{\n\t\t\tif(prime[i])\n\t\t\t{\n\t\t\t\tint j = i*2; \n\t\t\t\twhile(j<250000)\n\t\t\t\t{\n\t\t\t\t\tprime[j] = false;\n\t\t\t\t\tj = j + i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tint n = stdIn.nextInt();\n\t\t\t\n\t\t\tif(n==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint count = 0;\n\t\t\t\n\t\t\tfor(int i=n+1;i<=n*2;i++)\n\t\t\t{\n\t\t\t\tif(prime[i])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\n}", "label": 1}, {"id": 277, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n * The Number of Area\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = \"\";\n\n\t\twhile ((line = br.readLine()) != null && !line.isEmpty()) {\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tSystem.out.println((n * (n + 1) >> 1) + 1);\n\t\t}\n\t}\n}", "code2": "/**\n * \n */\nimport java.util.*;\n/**\n * @author akira\n *\n */\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n;\n\t\twhile(scan.hasNext()){\n\t\t\tn = scan.nextInt();\n\t\t\tint ans = 1;\n\t\t\tfor(int i = 1;i <= n;i++){\n\t\t\t\tans += i;\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n\n}", "label": 1}, {"id": 82, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tif ((a <= c && b >= c) || (a >= c && b <= c)) {\n\t\t\tSystem.out.printf(\"Yes\");\n\t\t} else {\n\t\t\tSystem.out.printf(\"No\");\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 387, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n        long nl = nextLong();\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n        return (int) nl;\n    }\n    public double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner stdIn=new FastScanner();\n\tpublic static void main(String[] args) {\n\t\tString X=stdIn.next();\n\t\tint N=X.length();\n\t\tint s=0,t=0,ans=N;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tchar a=X.charAt(i);\n\t\t\tif(a=='S')\n\t\t\t\ts++;\n\t\t\telse{\n\t\t\t\tif(s!=0){\n\t\t\t\t\tans-=2;\n\t\t\t\t\ts--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 379, "code1": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n \n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n \n            int N = in.nextInt();\n            for (int i = 0; i < N; i++) {\n                long A = in.nextLong();\n                long B = in.nextLong();\n \n                long a = Math.min(A, B);\n                long b = Math.max(A, B);\n \n                long ans = 2L * (a - 1) + przedzial(a, b);\n \n                out.println(ans);\n            }\n        }\n \n        private long przedzial(long a, long b) {\n            if (a == b || a + 1 == b) {\n                return 0;\n            }\n \n            return 1L + szukaj(a + 1, b - 2, a * b);\n        }\n \n        private long szukaj(long a, long b, long LIMIT) {\n            if (a > b) return 0;\n            if (a == b) {\n                return a * b < LIMIT ? 1 : 0;\n            }\n            long lo = a, hi = b;\n            while (lo + 1 < hi) {\n                long m = lo + (hi - lo) / 2;\n                if (m * m >= LIMIT) {\n                    hi = m;\n                } else {\n                    lo = m;\n                }\n            }\n            long ans1 = 1 + 2L * (lo - 1 - a + 1);\n            long ans2 = 0;\n            if (lo * (lo + 1) < LIMIT) {\n                ans2 = 2L * (lo - a + 1);\n            }\n            return Math.max(ans1, ans2);\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n}", "code2": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t\n\tint cmp (String p1, String p2) {\n\t\tif( p1.length() != p2.length() ) return p2.length() - p1.length();\n\t\treturn p2.compareTo(p1);\n\t}\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;) {\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif((w|h) == 0 ) break;\n\t\t\t\n\t\t\tString[][] dp = new String[h+1][w+1];\n\t\t\tString pass = \"\";\n\t\t\tchar[][] map = new char[h+1][w+1];\n\t\t\t\n\t\t\tfor(String[] a: dp) fill(a, \"\");\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) {\n\t\t\t\tString str = sc.next();\n\t\t\t\tfor(int j=1;j<=w;j++) {\n\t\t\t\t\tmap[i][j] = str.charAt(j-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) for(int j=1;j<=w;j++) {\n\t\t\t\tif( '0' <= map[i][j] && map[i][j] <= '9' ) {\n\t\t\t\t\tif( map[i][j] == '0' && dp[i-1][j].equals(\"\") && dp[i][j-1].equals(\"\") ) continue;\n\t\t\t\t\tdp[i][j] = ( cmp(dp[i-1][j], dp[i][j-1])<0? dp[i-1][j]: dp[i][j-1] ) + (char)map[i][j];\n\t\t\t\t}\n\t\t\t\tpass = cmp(pass, dp[i][j])<0? pass: dp[i][j];\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(pass);\n\t\t\t\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "label": 0}, {"id": 424, "code1": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\t\n\tint n;\n\tint[][] es;\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tn = sc.nextInt();\n\t\tes = new int[n][n];\n\t\tfor (int[] a: es) fill(a, INF);\n\t\tfor (int i=0;i<n;i++) es[i][i] = 0;\n\t\tfor (int i=0;i<n;i++) {\n\t\t\tint r = sc.nextInt()-1, k = sc.nextInt();\n\t\t\tfor (int j=0;j<k;j++) {\n\t\t\t\tint t = sc.nextInt()-1;\n\t\t\t\tes[r][t] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int k=0;k<n;k++) for (int i=0;i<n;i++) for (int j=0;j<n;j++) {\n\t\t\tes[i][j] = min(es[i][j], es[i][k] + es[k][j]);\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i=0;i<p;i++) {\n\t\t\tint s = sc.nextInt()-1, d = sc.nextInt()-1, v = sc.nextInt();\n\t\t\tSystem.out.println((es[s][d] + 1 <= v ? es[s][d] + 1 : \"NA\"));\n\t\t}\n\t}\n\t\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n    static class FS {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            return hasNextByte() ? buffer[ptr++] : -1;\n        }\n\n        private boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        private void skipUnprintable() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n        }\n\n        public boolean hasNext() {\n            skipUnprintable();\n            return hasNextByte();\n        }\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while (isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n    }\n\n    static int[] np;\n    static int n;\n\n    public static void main(String[] args) throws Exception {\n        FS fs = new FS();\n//        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n//        String s = bf.readLine();\n//        int n = Integer.parseInt(s.substring(0, s.indexOf(' ')));//n packages\n//        int k = Integer.parseInt(s.substring(s.indexOf(' '), s.length()));//k trucks\n        n = fs.nextInt();\n        int k = fs.nextInt();\n\n\n        np = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n\n            np[i] = fs.nextInt();\n            max = max < np[i] ? np[i] : max;\n        }\n        int p = 0;\n        int resids = 0;\n\n        int maxInt = 10000 *100000;\n        int minInt = max-1;\n        int mid = (maxInt + minInt) / 2;\n        while (maxInt - minInt > 1) {\n            int v = checkN(mid);\n            if (v > k) minInt = mid;\n            else maxInt = mid;\n\n            mid = (maxInt + minInt) / 2;\n        }\n        System.out.println(maxInt);\n    }\n\n    private static int checkN(int p) {\n        int resids = p;\n        int ink = 1;//\u5f53\u524d\u5df2\u7528\u5361\u8f66\n        for (int i = 0; i < n; i++) {\n            int j = np[i];\n            if (resids >= j) {\n                resids -= j;\n            } else {\n                ink++;\n                resids = p;\n                i--;\n            }\n        }\n        return ink;\n    }\n}\n", "label": 0}, {"id": 682, "code1": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "label": 0}, {"id": 438, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tpublic void solve() {\n\t\tint N = nextInt();\n\t\tint[] a = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\ta[i] = nextInt() - 1;\n\t\t}\n\t\tboolean[] used = new boolean[N];\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tint x = a[i];\n\t\t\tint y = a[x];\n\t\t\tif(used[x])continue;\n\t\t\tif(used[y])continue;\n\t\t\tif(x == a[y] && y == a[x]){\n\t\t\t\tans++;\n\t\t\t\tused[x] = true;\n\t\t\t\tused[y] = true;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "code2": "import java.util.*;\n \nclass Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n \n        String S = sc.next();\n        String T = sc.next();\n        int ls = S.length();\n        int lt = T.length();\n        String a = \"?\";\n\n        if(ls<lt){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        int x = -1;\n        for(int i=0; i<=ls-lt; i++){\n            if(S.charAt(i)==T.charAt(0) || S.charAt(i)==a.charAt(0)){\n                for(int j=0; j<lt; j++){\n                    if(S.charAt(i+j)!=T.charAt(j) && S.charAt(i+j)!=a.charAt(0)){\n                        break;\n                    }\n                    if(j==lt-1){\n                        x = i;\n                    }\n                }\n            }\n        }\n        if(x==-1){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        else if(ls==lt){\n            S = T;\n            System.out.println(S);\n            return;\n        }\n        else if(x==0){\n            S = T + S.substring(lt);\n        }\n        else if(x!=0){\n            if(x+lt-1==ls){\n                S = S.substring(0, x) + T;\n            }\n            else{\n                S = S.substring(0, x) + T + S.substring(x + lt);\n            }\n        }\n        String st = \"\";\n        for(int i=0; i<ls; i++){\n            if(S.charAt(i)==a.charAt(0)){\n                st += \"a\";\n            }\n            else{\n                st += String.valueOf((char)S.charAt(i));\n            }\n        }\n        System.out.println(st);\n    }\n}", "label": 0}, {"id": 472, "code1": "import java.util.*;\npublic class Main {\n\tstatic int yono;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\tint N = Integer.parseInt(sc.next());\n\t\tyono = N - 1;\n\t\tint M = sc.nextInt();\n\t\ttree = new int[N];\n\t\tArrays.fill(tree, -1);\n\t\tfor (int i = 0; i < M; i++)union(Integer.parseInt(sc.next()) - 1, Integer.parseInt(sc.next()) - 1);\n\t\tSystem.out.println(yono);\n\t}\n\t\n\tstatic int[] tree;\n\tstatic void union(int x, int y) {\n\t\tx = root(x);\n\t\ty = root(y);\n\t\tif(x != y) {\n\t\t\tyono--;\n\t\t\tif(tree[x] < tree[y]) {\n\t\t\t\tx ^= y; y ^= x; x^= y;\n\t\t\t}\n\t\t\ttree[x] += tree[y];\n\t\t\ttree[y] = x;\n\t\t}\n\t}\n\tstatic boolean find(int x, int y) {\n\t\treturn root(x) == root(y);\n\t}\n\tstatic int root(int x) {\n\t\treturn tree[x] < 0 ? x : (tree[x] = root(tree[x]));\n\t}\n}", "code2": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "label": 0}, {"id": 366, "code1": "import java.io.IOException;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nimport java.io.PrintWriter;\n\n@SuppressWarnings(\"unchecked\")\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        final String s;\n\n        try (\n            BufferedReader reader = new BufferedReader(\n                new InputStreamReader(System.in))) {\n            s = reader.readLine();\n        }\n\n        PrintWriter out = new PrintWriter(System.out);\n\n        final String[] sl = s.split(\" \");\n        int A = Integer.parseInt(sl[0]);\n        int B = Integer.parseInt(sl[1]);\n        int C = Integer.parseInt(sl[2]);\n\n        int max = Math.max(A, Math.max(B, C));\n\n        int sum = 3 * max - A - B - C;\n\n        int ans;\n\n        if (sum % 2 == 0) ans = sum / 2;\n        else ans = (int)Math.ceil((double)sum / 2) + 1;\n\n        out.println(ans);\n\n        out.flush();\n    }\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String args[]) {\n\tScanner sc = new Scanner(System.in);\n\n\twhile (true) {\n\t    int n = sc.nextInt();\n\t    int ans = 0;\n\t    if (n == 0) {\n\t\tbreak;\n\t    }\n\t    \n\t    ans = solve(n);\n\t    System.out.println(ans);\n\t}\n    }\n\n    public static int solve(int n) {\n\t//int max = 123456 * 2;\n\t//int prime[] = new prime[123456 * 2 + 1];\n\tboolean is_prime[] = new boolean[123456 * 2 + 1];\n\tint count = 0;\n\n\t//int p = 0;\n\tfor (int i = 0; i <= 2 * n; i++) {\n\t    is_prime[i] = true;\n\t}\n\n\tis_prime[0] = is_prime[1] = false;\n\tfor (int i = 2; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\t// prime[p++] = i;\n\t\tfor (int j = 2 * i; j <= 2 * n; j += i) {\n\t\t    is_prime[j] = false;\n\t\t}\n\t    }\n\t}\n\tfor (int i = n + 1; i <= 2 * n; i++) {\n\t    if (is_prime[i]) {\n\t\tcount++;\n\t    }\n\t}\n\t\n\treturn count;\n    }\n}", "label": 0}, {"id": 768, "code1": "\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String args[]){\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try{\n            String line;\n            while((line=br.readLine())!=null){  if(line.equals(\"\"))break;\n                String[] splited = line.split(\",\");\n                double xa=Double.parseDouble(splited[0]),ya=Double.parseDouble(splited[1]);\n                double xb=Double.parseDouble(splited[2]),yb=Double.parseDouble(splited[3]);\n                double xc=Double.parseDouble(splited[4]),yc=Double.parseDouble(splited[5]);\n                double xd=Double.parseDouble(splited[6]),yd=Double.parseDouble(splited[7]);\n                gra=(yc-ya)/(xc-xa);y0=ya;x0=xa;\n                boolean check1;\n                check1=linemaker(xb,yb)*linemaker(xd,yd)<0;\n      if(!check1){System.out.println(\"NO\");continue;}\n      gra=(yd-yb)/(xd-xb);y0=yb;x0=xb;\n                boolean check2=linemaker(xa,ya)*linemaker(xc,yc)<0;\n                if(check2)System.out.println(\"YES\");else System.out.println(\"NO\");\n                \n            }         \n        }catch(Exception e){e.printStackTrace();}        \n    }\n    static double gra=0,y0=0,x0=0;\n    static double linemaker(double x1, double y1){\n        return y1-y0-(gra*(x1-x0));\n    }\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n// import java.awt.Point;\n \npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n \n    static int mod = 1_000_000_007;\n    // int mod = 998244353;\n    long inf = Long.MAX_VALUE/2;\n\n    void solve(){\n        char[] c = ns().toCharArray();\n        int n = c.length;\n        int mindist = n;\n        for(int i = 0; i < n-1; i++){\n            if(c[i]==c[i+1]) continue;\n            int dist = Math.max(i+1, n-1-i);\n            mindist = Math.min(mindist, dist);\n        }\n        out.println(mindist);\n    }\n\n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n \n}\n", "label": 0}, {"id": 123, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint N = scan.nextInt();\n\t\tint M = scan.nextInt();\n\n\t\tint[] X = new int[M];\n\t\tfor(int i=0; i<M; i++) {\n\t\t\tX[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\t\t\n\t\tif(M <= N) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(X);\n\t\t\n\t\tint distance[] = new int[M-1];\n\t\tfor(int i=0; i<M-1; i++) {\n\t\t\tdistance[i] = X[i+1] - X[i];\n\t\t}\n\t\t\n\t\tArrays.sort(distance);\n\t\t\n\t\tint sum = 0;\n\t\tfor(int i=0; i<(M-N); i++) {\n\t\t\tsum+=distance[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\n\n\t}\n\n}", "code2": "import java.util.Scanner;\nimport java.util.Arrays;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    int M = sc.nextInt();\n    int[] X = new int[M];\n    for(int i = 0;i < M;i++) X[i] = sc.nextInt();\n    Arrays.sort(X);\n    int[] A = new int[M-1];\n    for(int i = 0;i < M-1;i++) A[i] = X[i+1] - X[i];\n    Arrays.sort(A);\n    int ans = 0;\n    for(int i = 0;i < M - N;i++) ans = ans + A[i];\n    System.out.println(ans);\n  }\n}", "label": 1}, {"id": 194, "code1": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "import java.io.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 204, "code1": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "code2": "import java.util.Scanner;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt() - 1;\n    boolean bl = false;\n    do{\n      n++;\n      bl = isPrime(n);\n    }while(!bl);\n    System.out.println(n);\n  }\n  public static boolean isPrime(int n){\n    int[] prime = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313};\n    for(int i = 0; i < 65; i++){\n      if(n % prime[i] == 0 && n / prime[i] != 1){\n        return false;\n      }\n    }\n    return true;\n  }\n}", "label": 1}, {"id": 553, "code1": "\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main \n{\n\tstatic HashMap<String, String> groupdef;\n\tstatic String firstgroup;\n\tstatic TreeSet<String> members;\n\tstatic TreeSet<String> checked;\n\t\n\tstatic void get(String g)\n\t{\n\t\tString con = groupdef.get(g);\n//\t\tSystem.out.println(\"Getting \" + g + \"...\");\n\t\tif(checked.contains(g))return;\n\t\t\n\t\tint start = 0;\n\t\tint mem = 0;\n\t\tfor(int i = 0; i < con.length(); i++)\n\t\t{\n\t\t\tif(con.charAt(i) == ',' || con.charAt(i) == '.')\n\t\t\t{\n\t\t\t\tString word = con.substring(start, i);\n\t\t\t\tstart = i+1;\n\t\t\t\t\n\t\t\t\tif(groupdef.containsKey(word))\n\t\t\t\t{\n\t\t\t\t\tget(word);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmembers.add(word);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchecked.add(g);\n//\t\tcache.put(g, mem);\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0)break;\n\t\t\tgroupdef = new HashMap<String, String>();\n//\t\t\tcache = new HashMap<String, Integer>();\n\t\t\tmembers = new TreeSet<String>();\n\t\t\tchecked = new TreeSet<String>();\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tString s = sc.next();\n\t\t\t\tint lim = s.indexOf(':');\n\t\t\t\tString groupname = s.substring(0, lim);\n\t\t\t\tString groupcon = s.substring(lim+1);\n\t\t\t\tif(i == 0)firstgroup = groupname;\n\t\t\t\tgroupdef.put(groupname, groupcon);\n\t\t\t}\n\t\t\t\n\t\t\tget(firstgroup);\n\t\t\tSystem.out.println(members.size());\n//\t\t\tSystem.out.println(members);\n\t\t}\n\t\t\n\n\t}\n\n}\n\n", "code2": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.*;\n\npublic class Main {\n\tprivate static final int mod = (int)1e9+7;\n\n\tfinal Random random = new Random(0);\n\tfinal IOFast io = new IOFast();\n\n\t/// MAIN CODE\n\tpublic void run() throws IOException {\n//\t\tint TEST_CASE = Integer.parseInt(new String(io.nextLine()).trim());\n\t\tint TEST_CASE = 1;\n\t\twhile(TEST_CASE-- != 0) {\n\t\t\tint n = io.nextInt();\n\t\t\tint K = io.nextInt();\n\t\t\tint L = io.nextInt();\n\n\t\t\tUnionFind uf1 = new UnionFind(n);\n\t\t\tUnionFind uf2 = new UnionFind(n);\n\t\t\tUnionFind uf3 = new UnionFind(n);\n\t\t\t\n\t\t\tfor (int i = 0; i < K; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf1.union(a, b);\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < L; i++) {\n\t\t\t\tint a = io.nextInt() - 1;\n\t\t\t\tint b = io.nextInt() - 1;\n\t\t\t\tuf2.union(a, b);\n\t\t\t}\n\n\t\t\tTreeSet<Integer>[] s1 = new TreeSet[n];\n\t\t\tTreeSet<Integer>[] s2 = new TreeSet[n];\n\t\t\tfor (int i = 0; i < n; i++) if (uf1.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf1.next[j]) { s.add(j); }\n\t\t\t\ts1[i] = s;\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) if (uf2.root(i) == i) {\n\t\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\t\tfor (int j = i; j != -1; j = uf2.next[j]) { s.add(j); }\n\t\t\t\ts2[i] = s;\n\t\t\t}\n\t\t\t\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint r1 = uf1.root(i);\n\t\t\t\tint r2 = uf2.root(i);\n\n\t\t\t\tif (!s1[r1].contains(i)) continue;\n\n\t\t\t\tTreeSet<Integer> a = s1[r1].size() < s2[r2].size() ? s1[r1] : s2[r2];\n\t\t\t\tTreeSet<Integer> b = s1[r1].size() < s2[r2].size() ? s2[r2] : s1[r1];\n\t\t\t\tList<Integer> same = new ArrayList<>();\n\t\t\t\tfor (int t : a) {\n\t\t\t\t\tif (b.contains(t)) same.add(t);\n\t\t\t\t}\n\t\t\t\tfor (int t : same) {\n\t\t\t\t\ts1[r1].remove(t);\n\t\t\t\t\ts2[r2].remove(t);\n\t\t\t\t\tans[t] = same.size();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tprintArrayLn(ans);\n\t\t}\n\t}\n\t\n\tstatic\n\tclass UnionFind {\n\t\tprivate int[] data;\n\t\tprivate int[] next;\n\t\tprivate int[] last;\n\t\t\n\t\tpublic UnionFind(int size) {\n\t\t\tdata = new int[size];\n\t\t\tnext = new int[size];\n\t\t\tlast = new int[size];\n\t\t\tclear();\n\t\t}\n\t\t\n\t\tpublic void clear() {\n\t\t\tArrays.fill(data, -1);\n\t\t\tArrays.fill(next, -1);\n\t\t\tfor(int i = 0; i < last.length; i++) {\n\t\t\t\tlast[i] = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic int root(int x) { return data[x] < 0 ? x : (data[x] = root(data[x])); }\n\t\t\n\t\tpublic void union(int x, int y) {\n\t\t\tif((x = root(x)) != (y = root(y))) {\n\t\t\t\tif(data[y] < data[x]) { final int t = x; x = y; y = t; }\n\t\t\t\tdata[x] += data[y];\n\t\t\t\tdata[y] = x;\n\t\t\t\tnext[last[x]] = y;\n\t\t\t\tlast[x] = last[y];\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic boolean same(int x, int y) { return root(x) == root(y); }\n\t\tpublic int size(int x) { return -data[root(x)]; }\n\t}\n\n\t/// TEMPLATE\n\tstatic int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n\tstatic long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\t\n\tstatic <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n\tstatic void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n\n\tvoid printArrayLn(int[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\tvoid printArrayLn(long[] xs) { for(int i = 0; i < xs.length; i++) io.out.print(xs[i] + (i==xs.length-1?\"\\n\":\" \")); }\n\t\n\tstatic void dump(Object... o) { System.err.println(Arrays.deepToString(o)); } \n\t\n\tvoid main() throws IOException {\n\t\t//\t\tIOFast.setFileIO(\"rle-size.in\", \"rle-size.out\");\n\t\ttry { run(); }\n\t\tcatch (EndOfFileRuntimeException e) { }\n\t\tio.out.flush();\n\t}\n\tpublic static void main(String[] args) throws IOException { new Main().main(); }\n\t\n\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\tprivate static final long serialVersionUID = -8565341110209207657L; }\n\n\tstatic\n\tpublic class IOFast {\n\t\tprivate BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tprivate PrintWriter out = new PrintWriter(System.out);\n\n\t\tvoid setFileIn(String ins) throws IOException { in.close(); in = new BufferedReader(new FileReader(ins)); }\n\t\tvoid setFileOut(String outs) throws IOException { out.flush(); out.close(); out = new PrintWriter(new FileWriter(outs)); }\n\t\tvoid setFileIO(String ins, String outs) throws IOException { setFileIn(ins); setFileOut(outs); }\n\n\t\tprivate static int pos, readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500*8*2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic { for(int i = 0; i < 10; i++) { isDigit['0' + i] = true; } isDigit['-'] = true; isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true; isLineSep['\\r'] = isLineSep['\\n'] = true; }\n\t\tpublic int read() throws IOException { if(pos >= readLen) { pos = 0; readLen = in.read(buffer); if(readLen <= 0) { throw new EndOfFileRuntimeException(); } } return buffer[pos++]; }\n\t\tpublic int nextInt() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; int ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic long nextLong() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); int i = 0; long ret = 0; if(str[0] == '-') { i = 1; } for(; i < len; i++) ret = ret * 10 + str[i] - '0'; if(str[0] == '-') { ret = -ret; } return ret; }\n\t\tpublic char nextChar() throws IOException { while(true) { final int c = read(); if(!isSpace[c]) { return (char)c; } } }\n\t\tint reads(int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } if(str.length == len) { char[] rep = new char[str.length * 3 / 2]; System.arraycopy(str, 0, rep, 0, str.length); str = rep; } str[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tint reads(char[] cs, int len, boolean[] accept) throws IOException { try { while(true) { final int c = read(); if(accept[c]) { break; } cs[len++] = (char)c; } } catch(EndOfFileRuntimeException e) { ; } return len; }\n\t\tpublic char[] nextLine() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isLineSep); try { if(str[len-1] == '\\r') { len--; read(); } } catch(EndOfFileRuntimeException e) { ; } return Arrays.copyOf(str, len); }\n\t\tpublic String nextString() throws IOException { return new String(next()); }\n\t\tpublic char[] next() throws IOException { int len = 0; str[len++] = nextChar(); len = reads(len, isSpace); return Arrays.copyOf(str, len); }\n//\t\tpublic int next(char[] cs) throws IOException { int len = 0; cs[len++] = nextChar(); len = reads(cs, len, isSpace); return len; }\n\t\tpublic double nextDouble() throws IOException { return Double.parseDouble(nextString()); }\n\t\tpublic long[] nextLongArray(final int n) throws IOException { final long[] res = new long[n]; for(int i = 0; i < n; i++) { res[i] = nextLong(); } return res; }\n\t\tpublic int[] nextIntArray(final int n) throws IOException { final int[] res = new int[n]; for(int i = 0; i < n; i++) { res[i] = nextInt(); } return res; }\n\t\tpublic int[][] nextIntArray2D(final int n, final int k) throws IOException { final int[][] res = new int[n][]; for(int i = 0; i < n; i++) { res[i] = nextIntArray(k); } return res; }\n\t\tpublic int[][] nextIntArray2DWithIndex(final int n, final int k) throws IOException { final int[][] res = new int[n][k+1]; for(int i = 0; i < n; i++) { for(int j = 0; j < k; j++) { res[i][j] = nextInt(); } res[i][k] = i; } return res; }\n\t\tpublic double[] nextDoubleArray(final int n) throws IOException { final double[] res = new double[n]; for(int i = 0; i < n; i++) { res[i] = nextDouble(); } return res; }\n\t}\n}\n", "label": 0}, {"id": 220, "code1": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int count = 0;\n    for(int i = 0; i < N.length(); i++){\n      if(N.charAt(i) == '2') count++;\n    }\n    System.out.println(count);\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t  public static void main(String[] args) {\n\t    Scanner sc = new Scanner(System.in);\n\t    String n = sc.next();\n\t    int count = 0;\n\t    for(int i = 0; i < n.length(); i++) {\n\t    \tif(\"2\".equals(n.substring(i, i+1))) {\n\t    \t\tcount++;\n\t    \t}\n\t    }\n\t    System.out.println(count);\n\t}\n}\n", "label": 1}, {"id": 92, "code1": "import java.io.IOException;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nimport java.io.PrintWriter;\n\n@SuppressWarnings(\"unchecked\")\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        final String s;\n\n        try (\n            BufferedReader reader = new BufferedReader(\n                new InputStreamReader(System.in))) {\n            s = reader.readLine();\n        }\n\n        PrintWriter out = new PrintWriter(System.out);\n\n        final String[] sl = s.split(\" \");\n        int A = Integer.parseInt(sl[0]);\n        int B = Integer.parseInt(sl[1]);\n        int C = Integer.parseInt(sl[2]);\n\n        int max = Math.max(A, Math.max(B, C));\n\n        int sum = 3 * max - A - B - C;\n\n        int ans;\n\n        if (sum % 2 == 0) ans = sum / 2;\n        else ans = (int)Math.ceil((double)sum / 2) + 1;\n\n        out.println(ans);\n\n        out.flush();\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u30fb\u30b9\u30bf\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\t\n\t\tint a=sc.nextInt();\t\n\t\tint b=sc.nextInt();\t\n\t\tint c=sc.nextInt();\t\n\t\t\n\t\tint total=a+b+c;\n\t\tint min=Math.min(Math.min(a,b),Math.min(b,c));\n\t\tint max=Math.max(Math.max(a,b),Math.max(b,c));\n\t\tint ans=total-min-max;\n\t\t\n\t\tint count=0;\n\t\tcount=max-ans;\n\t\tmin+=count;\n\t\tcount+=(max-min)/2;\n\t\tif((max-min)%2==1){\n\t\t\tcount+=2;\n\t\t}\n\t\tSystem.out.println(count);\n\t\tsc.close();\n\t}\n}", "label": 1}, {"id": 354, "code1": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner scanner=new FastScanner();\n\t\tint n=scanner.nextInt(),k=scanner.nextInt();\n\t\tint a[]=scanner.readArray(n);\n\t\t\n\t\tboolean dp[]=new boolean[k+1];\n//\t\tArrays.fill(dp, true);\n//\t\tdp[0]=false;\n\t\t\n\t\tfor(int stones=0;stones<=k;stones++) {\n\t\t\tfor(int j:a)\n\t\t\t\tif(j<=stones&&!dp[stones-j]) dp[stones]=true;\n\t\t}\n\t\tif(dp[k]) System.out.println(\"First\");\n\t\telse System.out.println(\"Second\");\n\t\n\t\t\n\t\t\n\n\t}\n\tstatic class FastScanner{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\t\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDoubel() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tint [] readArray(int n) {\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t}\n\n}\n\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int count = Integer.valueOf(reader.readLine());\n        String s = reader.readLine();\n\n        long[][] dp = new long[count][count];\n        dp[0][0] = 1;\n        long modulo = 1_000_000_007;\n\n        for (int i = 1; i < count; ++i) {\n            if (s.charAt(i - 1) == '<') {\n                dp[i][0] = 0;\n                for (int j = 1; j <= i; ++j) {\n                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1];\n                    dp[i][j] %= modulo;\n                }\n            } else {\n                dp[i][i] = 0;\n                for (int j = i - 1; j >= 0; --j) {\n                    dp[i][j] = dp[i][j + 1] + dp[i - 1][j];\n                    dp[i][j] %= modulo;\n                }\n            }\n        }\n\n        long res = 0;\n        for (int i = 0; i < count; ++i) {\n            res += dp[count - 1][i];\n            res %= modulo;\n        }\n        System.out.println(res);\n    }\n}\n", "label": 0}, {"id": 625, "code1": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "label": 0}, {"id": 663, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n, m;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        m = sc.nextInt();\n        solve();\n    }\n\n    void solve() {\n        int ans = n * 100 + 1800 * m;\n        System.out.println(ans * pow(2, m));\n    }\n\n    long pow(long x, int n) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = ans * x;\n            }\n            x = x * x;\n            n >>= 1;\n        }\n        return ans;\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "code2": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "label": 0}, {"id": 610, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        final static long INF = (long) 4.1e18;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            long L = 2L * in.nextInt();\n            long T = in.nextInt() * 2L;\n            TaskC.Chameleon[] chameleon = new TaskC.Chameleon[n];\n            int[] cnt = new int[3];\n            for (int i = 0; i < n; ++i) {\n                chameleon[i] = new TaskC.Chameleon();\n                chameleon[i].start = in.nextInt() * 2L;\n                chameleon[i].color = 0;\n                chameleon[i].dir = in.nextInt() == 1 ? 1 : -1;\n                chameleon[i].indexInInput = i;\n                ++cnt[chameleon[i].dir + 1];\n            }\n\n            // Determine new positions\n            for (TaskC.Chameleon c : chameleon) {\n                c.newPos = ((c.start + T * c.dir) % L + L) % L;\n            }\n\n            TaskC.Chameleon[] res;\n\n            if (cnt[0] == 0 || cnt[2] == 0) {\n                // No meetings at all.\n                for (TaskC.Chameleon c : chameleon) {\n                    c.newColor = c.color;\n                }\n                res = chameleon.clone();\n            } else {\n                // Determine new colors\n                {\n                    TaskC.Chameleon[] perm = chameleon.clone();\n                    Arrays.sort(perm, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n\n                    int indNextReverse = 0;\n                    for (int ind = 0; ind < n; ++ind) {\n                        TaskC.Chameleon c = perm[ind];\n                        if (c.dir > 0)\n                            c.newColor = c.color;\n                        else {\n                            while (perm[indNextReverse].dir < 0)\n                                indNextReverse = (indNextReverse + 1) % n;\n                            TaskC.Chameleon d = perm[indNextReverse];\n                            long delta = c.start - d.start;\n                            if (delta < 0)\n                                delta += L;\n                            if (delta <= 2 * T) {\n                                // There was at least one change of color!\n                                c.newColor = d.color;\n                            } else {\n                                c.newColor = c.color;\n                            }\n                        }\n                        if (indNextReverse == ind)\n                            indNextReverse = (indNextReverse + 1) % n;\n                    }\n                }\n\n                TaskC.Chameleon first;\n                TaskC.Chameleon firstMapsTo;\n                // Detemine which chameleon did the first one become\n                {\n                    List<TaskC.Chameleon> positive = new ArrayList<TaskC.Chameleon>();\n                    List<TaskC.Chameleon> negative = new ArrayList<TaskC.Chameleon>();\n                    for (TaskC.Chameleon c : chameleon) {\n                        if (c.dir == 1)\n                            positive.add(c);\n                        else\n                            negative.add(c);\n                    }\n                    Collections.sort(positive, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    Collections.sort(negative, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    first = positive.get(0);\n                    TaskC.Chameleon closestNegative = negative.get(0);\n                    long deltaBest = closestNegative.start - first.start;\n                    if (deltaBest < 0)\n                        deltaBest += L;\n                    for (TaskC.Chameleon c : negative) {\n                        long deltaCur = c.start - first.start;\n                        if (deltaCur < 0)\n                            deltaCur += L;\n                        if (deltaCur < deltaBest) {\n                            closestNegative = c;\n                            deltaBest = deltaCur;\n                        }\n                    }\n                    long timeLeft = T;\n                    if (timeLeft < deltaBest / 2) {\n                        // The first chameleon stayed himself\n                        firstMapsTo = first;\n                    } else {\n                        timeLeft -= deltaBest / 2;\n                        List<Long> positiveDeltas = new ArrayList<Long>();\n                        positiveDeltas.add(0L);\n                        long sum = 0;\n                        for (int i = 0; i < positive.size(); ++i) {\n                            long delta = positive.get((positive.size() - i) % positive.size()).start - positive.get((positive.size() - i - 1) % positive.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            positiveDeltas.add(sum);\n                        }\n                        int shift = negative.indexOf(closestNegative);\n                        List<Long> negativeDeltas = new ArrayList<Long>();\n                        negativeDeltas.add(0L);\n                        sum = 0;\n                        for (int i = 0; i < negative.size(); ++i) {\n                            long delta = negative.get((shift + i + 1) % negative.size()).start - negative.get((shift + i) % negative.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            negativeDeltas.add(sum);\n                        }\n                        long l = 0;\n                        long r = INF;\n                        while (r - l > 1) {\n                            long m = (l + r) / 2;\n                            long cntPositive = (m + 1) / 2;\n                            long cntNegative = m / 2;\n                            long positiveTimeSpent = mulWithInf(cntPositive / positive.size(), L) + positiveDeltas.get((int) (cntPositive % positive.size()));\n                            long negativeTimeSpent = mulWithInf(cntNegative / negative.size(), L) + negativeDeltas.get((int) (cntNegative % negative.size()));\n                            if (positiveTimeSpent + negativeTimeSpent <= timeLeft * 2)\n                                l = m;\n                            else\n                                r = m;\n                        }\n                        if (l % 2 == 0) {\n                            firstMapsTo = negative.get((int) ((shift + l / 2) % negative.size()));\n                        } else {\n                            firstMapsTo = positive.get(((int) ((positive.size() - (l + 1) / 2) % positive.size()) + positive.size()) % positive.size());\n                        }\n                    }\n                }\n\n                // Now, create the final mapping!\n                {\n                    TaskC.Chameleon[] firstSortedByPos = chameleon.clone();\n                    Arrays.sort(firstSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    TaskC.Chameleon[] finalSortedByPos = chameleon.clone();\n                    Arrays.sort(finalSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    int delta = Arrays.asList(finalSortedByPos).indexOf(firstMapsTo) - Arrays.asList(firstSortedByPos).indexOf(first);\n                    res = new TaskC.Chameleon[chameleon.length];\n                    for (int i = 0; i < chameleon.length; ++i) {\n                        res[firstSortedByPos[i].indexInInput] = finalSortedByPos[((i + delta) % chameleon.length + chameleon.length) % chameleon.length];\n                    }\n                }\n            }\n\n            for (TaskC.Chameleon c : res) {\n                out.println(c.newPos / 2);\n            }\n        }\n\n        private long mulWithInf(long a, long b) {\n            if (a == 0)\n                return 0;\n            else if (INF / a <= b)\n                return INF;\n            else\n                return a * b;\n        }\n\n        static class Chameleon {\n            long start;\n            long newPos;\n            int newColor;\n            int color;\n            int dir;\n            int indexInInput;\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tRunner[] a = new Runner[18];\n\t\tint cnt=0;\n\t\tfor(int  j = 0;j<3;j++){\n\t\t\tRunner[] b = new Runner[8];\n\t\t\tfor(int i = 0;i<8;i++){\n\t\t\t\tint num = cin.nextInt();\n\t\t\t\tdouble time= cin.nextDouble();\n\t\t\t\tb[i]=new Runner(num,time);\n\t\t\t}\n\t\t\tArrays.sort(b);\n\t\t\tfor(int i = 0;i<6;i++){\n\t\t\t\ta[cnt++]=b[i+2];\n\t\t\t}\n\t\t\tSystem.out.println(b[0].num + \" \" + b[0].timestr);\n\t\t\tSystem.out.println(b[1].num + \" \" + b[1].timestr);\n\t\t}\n\t\tArrays.sort(a);\n\t\tSystem.out.println(a[0].num + \" \" + a[0].timestr);\n\t\tSystem.out.println(a[1].num + \" \" + a[1].timestr);\n\t}\n}\nclass Runner implements Comparable{\n\tint num;\n\tdouble time;\n\tString timestr;\n\tRunner(int a,double b){\n\t\tnum=a;\n\t\ttime=b;\n\t\ttimestr=String.valueOf(time);\n\t\tif(timestr.length()==4){\n\t\t\ttimestr = timestr+\"0\";\n\t\t}\n\t\t\n\t}\n\tpublic int compareTo(Object o) {\n\t\tRunner r = (Runner)o;\n\t\tif(this.time-r.time > 0)\n\t\t\treturn 1;\n\t\telse if(this.time-r.time == 0)\n\t\t\treturn 0;\n\t\telse{\n\t\t\treturn -1;\n\t\t}\n\t}\n}", "label": 0}, {"id": 612, "code1": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n  public static void main(String[] args) {\n    FastScanner sc = new FastScanner();\n    int N = sc.nextInt();\n    int L = sc.nextInt();\n    long T = sc.nextLong();\n    \n    long[][] ari = sc.nextLongTable(N, 2);\n    \n    long[] cl = new long[N];\n    long[] ccl = new long[N];\n\n    int p = 0, q = 0;\n    for (int i = 0; i < N; i ++) {\n      if (ari[i][1] == 1) {\n        cl[p ++] = L - ari[i][0];\n      } else {\n        ccl[q ++] = ari[i][0];\n      }\n    }\n    cl = Arrays.copyOf(cl, p);\n    ccl = Arrays.copyOf(ccl, q);\n    Arrays.sort(cl);\n\n    long[] rets = new long[N];\n    for (int i = 0; i < N ;i ++) {\n      if (ari[i][1] == 1) {\n        int count = (int)(count(ccl, ari[i][0], ari[i][0] + 2L * T, L) % N);\n        rets[(i + count) % N] = (ari[i][0] + T) % L;\n      } else {\n        int count = (int)(count(cl, L - ari[i][0], L - ari[i][0] + 2L * T, L) % N);\n        rets[(i + N - count) % N] = (ari[i][0] + L - T % L) % L;\n      }\n    }\n    \n    for (int i = 0; i < N; i ++) {\n      System.out.println(rets[i]);\n    }\n  }\n  \n  private static long count(long[] xs, long f, long t, int L) {\n    long ret = 0;\n    int n = xs.length;\n    {\n      ret += t / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(t % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret += ind;\n    }\n    {\n      ret -= f / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(f % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret -= ind;\n    }\n    return ret;\n  }\n}\n\n\n\n\nclass FastScanner {\n\tpublic static String debug = null;\n\n\tprivate final InputStream in = System.in;\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate byte[] buffer = new byte[1024];\n\tprivate boolean eos = false;\n\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tif (debug != null) {\n\t\t\t\t\tbuflen = debug.length();\n\t\t\t\t\tbuffer = debug.getBytes();\n\t\t\t\t\tdebug = \"\";\n\t\t\t\t\teos = true;\n\t\t\t\t} else {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen < 0) {\n\t\t\t\teos = true;\n\t\t\t\treturn false;\n\t\t\t} else if (buflen == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate int readByte() {\n\t\tif (hasNextByte())\n\t\t\treturn buffer[ptr++];\n\t\telse\n\t\t\treturn -1;\n\t}\n\n\tprivate static boolean isPrintableChar(int c) {\n\t\treturn 33 <= c && c <= 126;\n\t}\n\n\tprivate void skipUnprintable() {\n\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\tptr++;\n\t}\n\n\tpublic boolean isEOS() {\n\t\treturn this.eos;\n\t}\n\n\tpublic boolean hasNext() {\n\t\tskipUnprintable();\n\t\treturn hasNextByte();\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile (isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic long nextLong() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile (true) {\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\treturn minus ? -n : n;\n\t\t\t} else {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tpublic int nextInt() {\n\t\treturn (int) nextLong();\n\t}\n\n\tpublic long[] nextLongList(int n) {\n\t\treturn nextLongTable(1, n)[0];\n\t}\n\n\tpublic int[] nextIntList(int n) {\n\t\treturn nextIntTable(1, n)[0];\n\t}\n\n\tpublic long[][] nextLongTable(int n, int m) {\n\t\tlong[][] ret = new long[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextLong();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic int[][] nextIntTable(int n, int m) {\n\t\tint[][] ret = new int[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextInt();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}", "code2": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "label": 0}, {"id": 582, "code1": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        long[] b = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextLong();\n        }\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextLong();\n        }\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += b[i] - a[i];\n        }\n\n        long cnt = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] < b[i]) {\n                cnt += (b[i] - a[i] + 1) / 2;\n            }\n        }\n        if (cnt <= sum) {\n            System.out.println(\"Yes\");\n            return;\n        }\n        System.out.println(\"No\");\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int cnt = 0;\n\n    List<Integer>[] lists = new ArrayList[n];\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n\n    void run() {\n\n        for (int i=0; i<n; i++) lists[i] = new ArrayList<>();\n\n        int m = sc.nextInt();\n        for (int i=0; i<m; i++) {\n            int s = sc.nextInt() - 1;\n            int t = sc.nextInt() - 1;\n            lists[s].add(t);\n            lists[t].add(s);\n        }\n\n        dfs(\"\", n);\n\n        System.out.println(cnt);\n\n    }\n\n    void dfs(String s, int n) {\n\n        if (s.length() == n) {\n//            System.out.println(s);\n            if (s.charAt(0) == '0') {\n                boolean check = true;\n                for (int i=0; i<s.length()-1; i++) {\n                    if (!lists[s.charAt(i) - 48].contains(s.charAt(i+1) - 48)) {\n                        check = false;\n                        break;\n                    }\n                }\n                if (check) cnt++;\n            }\n\n        } else {\n            for (int i=0; i<n; i++) {\n                if (s.contains(String.valueOf(i))) continue;\n                dfs(s + i, n);\n            }\n        }\n    }\n\n\n}\n\n", "label": 0}, {"id": 136, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "label": 1}, {"id": 297, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong a = in.nextLong(), b = in.nextLong();\n\t\t\tlong[] x = in.nextLongArray(n);\n\n\t\t\tlong ans = 0;\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tans += Math.min(a * (x[i+1] - x[i]), b);\n\t\t\t}\n\t\t\tout.println(ans);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tpublic char[][] next2DChars(int h, int w) {\n\t\t\tchar[][] s = new char[h][w];\n\t\t\tfor (int i = 0; i < h; i++) {\n\t\t\t\ts[i] = nextChars();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\npublic class Main { \n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) { \n        while (true) { \n        int n = sc.nextInt(); \n            if (n == 0) { \n            break; \n            } \n            int[] scores = new int[n]; \n            for (int i = 0; i < scores.length; i++) { \n            scores[i] = sc.nextInt(); \n            } \n            double average = 0, variance = 0;\n            for(int i = 0; i < scores.length; i++){ \n                average += scores[i]; \n            } \n            average = average/n; \n            for(int i = 0; i < scores.length; i++){ \n                variance += (scores[i]-average)*(scores[i]-average); \n            }\n            variance = variance/n;\n            System.out.println(Math.sqrt(variance)); \n            } \n        } \n    }\n}\n", "label": 0}, {"id": 202, "code1": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "code2": "import java.util.*;\nclass Main{\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    long X = sc.nextLong();\n    long answer = 0;\n    \n    for(long i=X;i<100000000;i++){\n      int count = 0;\n      for(long j=2;j*j<=i;j++){\n        if(i%j==0){\n          count++;\n          break;\n        }\n      }\n      if(count==0){\n        answer = i;\n        break;\n      }\n    }\n    System.out.println(answer);\n  }\n}", "label": 1}, {"id": 746, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint[] a = na(n);\n\t\tint[] f = new int[13];\n\t\tf[0]++;\n\t\tfor(int v : a)f[v]++;\n\t\tif(f[0] >= 2 || f[12] >= 2){\n\t\t\tout.println(0);\n\t\t\treturn;\n\t\t}\n\t\tfor(int i = 1;i <= 11;i++){\n\t\t\tif(f[i] >= 3){\n\t\t\t\tout.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < 1<<11;i++){\n\t\t\tboolean[] b = new boolean[25];\n\t\t\tb[0] = b[24] = true;\n\t\t\tif(f[12] > 0)b[12] = true;\n\t\t\tfor(int j = 0;j < 11;j++){\n\t\t\t\tif(f[j+1] == 2){\n\t\t\t\t\tb[j+1] = b[24-(j+1)] = true;\n\t\t\t\t}else if(f[j+1] == 1){\n\t\t\t\t\tif(i<<~j<0){\n\t\t\t\t\t\tb[24-(j+1)] = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tb[j+1] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint min = 99;\n\t\t\tint pre = -99;\n\t\t\tfor(int j = 0;j <= 24;j++){\n\t\t\t\tif(b[j]){\n\t\t\t\t\tmin = Math.min(min, j-pre);\n\t\t\t\t\tpre = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = Math.max(ans, min);\n\t\t}\n\t\tout.println(ans);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "label": 0}, {"id": 473, "code1": "import java.util.*;\n\npublic class Main {\n    \n    public static boolean[] alr;\n    \n    public static List<List<Integer>> list = new ArrayList<>();\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        alr = new boolean[N];\n        for (int i = 0; i < N; i++) {\n            list.add(new ArrayList<>());\n        }\n        for (int i = 0; i < M; i++) {\n            int A = sc.nextInt()-1;\n            int B = sc.nextInt()-1;\n            list.get(A).add(B);\n            list.get(B).add(A);\n        }\n        long count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n                count++;\n            }\n            List<Integer> lst = list.get(i);\n            count(lst);\n        }\n        System.out.println(count-1);\n    }\n    \n    private static void count(List<Integer> lst) {\n        int friends = 0;\n        for (Integer i : lst) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n            }           \n            count(list.get(i));\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "label": 0}, {"id": 445, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n\n        char[] s = sc.next().toCharArray();\n        char[] t = sc.next().toCharArray();\n\n        boolean isAns = false;\n        for (int i = s.length-1; i >= t.length-1; i--) {\n            char[] tmp = s.clone();\n            isAns = true;\n            for (int j = 0; j < t.length; j++) {\n                if (s[i-j] == t[t.length-1-j] || s[i-j] == '?') {\n                    tmp[i-j] = t[t.length-1-j];\n                } else {\n                    isAns = false;\n                    break;\n                }\n            }\n\n            if (isAns) {\n                s = tmp;\n                break;\n            }\n        }\n\n        if (isAns) {\n            for (char c : s)\n                System.out.print(c == '?' ? 'a' : c);\n        } else {\n            System.out.println(\"UNRESTORABLE\");\n        }\n    }\n\n    static class MyScanner {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1 << 15);\n        StringTokenizer tokenizer;\n\n        String next() {\n            try {\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                }\n            } catch (IOException ignored) {\n            }\n            return tokenizer.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "label": 0}, {"id": 725, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main\n{\n\n  public static void main(String[] args) throws IOException\n  {\n    BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1);\n    String[] sl = r.readLine().split(\"[\\\\s]+\");\n    int n = Integer.parseInt(sl[0]);\n    int c = Integer.parseInt(sl[1]);\n    int d[][] = new int[30][30];\n    int count[][] = new int[3][30];\n\n    for(int i = 0; i < c; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < c; j++)\n      {\n        d[i][j] = Integer.parseInt(sl[j]);\n      }\n    }\n\n    for(int i = 0; i < n; i++)\n    {\n      sl = r.readLine().split(\"[\\\\s]+\");\n      for(int j = 0; j < n; j++)\n      {\n        count[(i + j) % 3][Integer.parseInt(sl[j]) - 1]++;\n      }\n    }\n    \n    int sel[] = new int[3];\n    int min = Integer.MAX_VALUE;\n    \n    for(sel[0] = 0; sel[0] < c; sel[0]++)\n    {\n      for(sel[1] = 0; sel[1] < c; sel[1]++)\n      {\n        if(sel[0] == sel[1])\n        {\n          continue;\n        }\n        for(sel[2] = 0; sel[2] < c; sel[2]++)\n        {\n          if(sel[1] == sel[2] || sel[0] == sel[2])\n          {\n            continue;\n          }\n          \n          int stress = 0;\n          for(int i = 0; i < 3; i++)\n          {\n            for(int j = 0; j < c; j++)\n            {\n              stress += count[i][j] * d[j][sel[i]];\n            }\n          }\n          min = Math.min(min, stress);\n        }\n      }\n    }\n    \n    System.out.println(min);\n\n  }\n\n\n}", "code2": "\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tC();\n\t}\n\t\n\tpublic static void A() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s1 = sc.next();\n\t\tString s2 = sc.next();\n\t\tfor(int i=0;i<3;i++) {\n\t\t\tif(s1.charAt(i)!=s2.charAt(2-i)) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t}\n\t\n\t// 1\u304b\u3089\u9806\u306b\uff12\u4e57\u3092\u8a08\u7b97\u3057\u3066\u3001N\u3092\u8d85\u3048\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u3002 O(root(N))\n\t//\uff12\u5206\u63a2\u7d22\u3059\u308b\u306a\u3089\u3001O(logN)\n\t// \u4e8c\u5206\u63a2\u7d22\u3067\u3001N\u306e\uff12\u4e57\u3092\u8d85\u3048\u306a\u3044\u6700\u5c0f\u306e\u5e73\u65b9\u6570\u3092\u767a\u898b\n\tpublic static long binsearchN2(long left, long right, int N) {\n\t\tif(left >= right) return (long) Math.pow(right, 2);\n\t\tlong mid = (left+right)/2;\n\t\tif(Math.pow(mid, 2) > N ) return binsearchN2(left, mid-1, N);\n\t\telse {\n\t\t\t//\u7121\u9650\u30eb\u30fc\u30d7\u3092\u9632\u3050\u3000\u518d\u8d77\u3059\u308b\u6642\u306f\u5fc5\u305a\u3001\u63a2\u7d22\u7bc4\u56f2\u304c\uff11\u4ee5\u4e0a\u5c0f\u3055\u304f\u306a\u308b\n\t\t\tif(Math.pow(mid+1, 2) > N) return (long) Math.pow(mid, 2) ;\n\t\t\telse return binsearchN2(mid+1,right, N);\n\t\t}\n\t}\n\t\n\tpublic static void B() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tSystem.out.println(binsearchN2(0,N,N));\n\t}\n\n\t// B\u3092\u4e2d\u5fc3\u306b\u3057\u3066\u4e8c\u5206\u63a2\u7d22\u3057\u3066A\u3068C\u306e\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u308b\n\t//\u3000A\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u3068\u3001O(N^2)\n\t\n\t// B\u3092\u8d85\u3048\u306a\u3044\u8981\u7d20\u6570\u3092\u8fd4\u3059\n\tpublic static void C() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tdouble[] A=new double[N],  C = new double[N];\n\t\tint[] B=new int[N];\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tA[i] = sc.nextDouble();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tB[i] = sc.nextInt();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tC[i] = sc.nextDouble();\n\t\t}\n\t\tArrays.sort(A);\n\t\tArrays.sort(B);\n\t\tArrays.sort(C);\n\t\tlong sum = 0;\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tdouble b = B[i];\n\t\t\tsum += numlessB(A,b)*(long)numlargerB(C,b);\n\t\t}\n\t\tSystem.out.println(sum);\n\t\t\n\t}\n\t//B\u3088\u308a\u3082\u5c0f\u3055\u3044\u8981\u7d20\u306e\u6570\u3000==B\u306f\u542b\u307e\u306a\u3044 B\u3092\u5c11\u3057\u305a\u3089\u3059\n\tpublic static int numlessB(double[] A, double B){\n\t\tint idx = Arrays.binarySearch(A, B-0.1);\n\t\treturn -idx-1;\n\t}\n\tpublic static int numlargerB(double[] A, double B) {\n\t\tint idx = Arrays.binarySearch(A, B+0.1);\n\t\treturn A.length-(-idx-1);\n\t}\n}\n", "label": 0}, {"id": 406, "code1": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tpublic void calc() {\n\t\tsb = new StringBuilder();\n\n\n\t\tIO sc = new IO();\n\n\t\tint n = sc.nextInt();\n\t\tint[] t = sc.nextIntArray(n);\n\t\tint[] a = sc.nextIntArray(n);\n\n\n\t\tlong ans = 1;\n\t\t//BigInteger bi = new BigInteger(\"1\");\n\t\tint[] min = new int[n];\n\t\tint[] max = new int[n];\n\t\tArrays.fill(min, 1);\n\t\tArrays.fill(max, INF);\n\t\tint b = -1, nb = -1;\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(\"t\" + i);\n\t\t\tint ni = n-1-i;\n\t\t\tif (b != t[i]) {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t\tmin[i] = Math.max(min[i],t[i]);\n\t\t\t\tb = t[i];\n\t\t\t}else {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t}\n\t\t\tif (nb != a[ni]) {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t\tmin[ni] = Math.max(min[ni],a[ni]);\n\t\t\t\tnb = a[ni];\n\t\t\t}else {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t}\n\n\t\t}\n\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(min[i] + \":\" + max[i]);\n\t\t\tif (max[i] - min[i] < 0) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tans *= max[i] - min[i] +1;\n\t\t\tans %= C;\n\t\t\t//bi = bi.multiply(new BigInteger((max[i] - min[i] +1)+\"\" ));\n\n\t\t}\n\n\n\t\tSystem.out.println(ans);\n\t}\n\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}\n\n", "code2": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n\tpublic Main(){\n\t\tnew A().doIt();\n\t}\n\tclass A{\n\t\tlong euclid(long a, long b){\n\t\t    long temp;\n\n\t\t    if(a < b) { \n\t\t    \ttemp = a;\n\t\t    \ta = b;\n\t\t    \tb = temp;\n\t\t    }\n\t\t    if(a % b == 0) return b;\n\t\t    return euclid( b, a % b );\n\t\t}\n\t\tvoid doIt(){\n\t\t\tint n = sc.nextInt();\n\t\t\tlong A = 1;\n\t\t\tlong B = 1;\n\t\t\tfor(int i = 0;i < n;i++){\n\t\t\t\tlong aa = sc.nextLong();\n\t\t\t\tlong bb = sc.nextLong();\n\t\t\t\tif(A % aa != 0)A = A + aa - (A % aa);\n\t\t\t\tif(B % bb != 0)B = B + bb - (B % bb);\n\t\t\t\tlong max = Math.max(A/aa,B/bb);\n\t\t\t\tA = max * aa;\n\t\t\t\tB = max * bb;\n//\t\t\t\tSystem.out.println(A+\" \"+B);\n\t\t\t}\n\t\t\tSystem.out.println(A+B);\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 158, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] days={\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\"};\n\t\twhile(sc.hasNextInt()){\n\t\t\tint month=sc.nextInt();\n\t\t\tint day=sc.nextInt();\n\t\t\tint a=modd(month);\n\t\t\tint b=a+day;\n\t\t\tif(month==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif((b-1)%7==0){\n\t\t\t\tSystem.out.println(days[0]);\n\t\t}else if((b-1)%7==1){\n\t\t\tSystem.out.println(days[1]);\n\t\t}else if((b-1)%7==2){\n\t\t\tSystem.out.println(days[2]);\n\t\t}else if((b-1)%7==3){\n\t\t\tSystem.out.println(days[3]);\n\t\t}else if((b-1)%7==4){\n\t\t\tSystem.out.println(days[4]);\n\t\t}else if((b-1)%7==5){\n\t\t\tSystem.out.println(days[5]);\n\t\t}else if((b-1)%7==6){\n\t\t\tSystem.out.println(days[6]);\n\t\t}\n\t}\n\n\t}\n\tpublic static int modd(int month){\n\t\tint[] months={31,29,31,30,31,30,31,31,30,31,30,31};\n\t\tint a=0;\n\t\tfor(int i=0; i<=month-2; i++){\n\t\t\ta+=months[i];\n\t\t}\n\n\t\treturn a;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}", "code2": "import java.util.*;class Main{public static void main(String[]a){Locale.setDefault(Locale.US);int m;for(Scanner s=new Scanner(System.in);(m=s.nextInt())>0;System.out.println(new java.text.SimpleDateFormat(\"EEEE\").format(new GregorianCalendar(2004,m-1,s.nextInt()).getTime())));}}", "label": 1}, {"id": 199, "code1": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "code2": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "label": 1}, {"id": 317, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint unko=sc.nextInt();\n\t\tboolean ike=false;\n\t\tint N=0;\n\t\tfor(int i=0; i<=500; i++) {\n\t\t\tif(unko==i*(i+1)/2) {\n\t\t\t\tike=true;\n\t\t\t\tN=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(unko<i*(i+1)/2) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ike) {\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\tSystem.out.println(N+1);\n\t\t\tint[][] ary=new int[N+1][N];\n\t\t\tint[] kaz=new int[N+2];\n\t\t\tfor(int i=0; i<=N; i++) {\n\t\t\t\tfor(int j=0; j<N; j++) {\n\t\t\t\t\tary[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<=N+1; i++) {\n\t\t\t\tkaz[i]=0;\n\t\t\t}\n\t\t\tint counter=1;\n\t\t\tfor(int i=1; i<=N+1; i++) {\n\t\t\t\tfor(int j=1; j<i; j++) {\n\t\t\t\t\tary[i-1][kaz[i-1]]=counter;\n\t\t\t\t\tkaz[i-1]++;\n\t\t\t\t\tary[j-1][kaz[j-1]]=counter;\n\t\t\t\t\tkaz[j-1]++;\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tString buri=\"\";\n\t\t\tfor(int i=0; i<N+1; i++) {\n\t\t\t\tburi=Arrays.toString(ary[i]);\n\t\t\t\tburi=buri.replaceAll(\",\",\"\");\n\t\t\t\tburi=buri.replace(\"[\",\" \");\n\t\t\t\tburi=buri.replace(\"]\",\"\");\n\t\t\t\tSystem.out.println(N+buri);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 19, "code1": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "code2": "\n\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong H = scan.nextLong();\n\t\tlong W = scan.nextLong();\n\n\t\tif (H == 1 || W == 1) {\n\t\t\tSystem.out.println(1);\n\t\t} else if ((H * W) % 2 == 0) {\n\t\t\tSystem.out.println(H * W / 2);\n\t\t} else {\n\t\t\tSystem.out.println((H * W / 2) + 1);\n\t\t}\n\t}\n\n}\n", "label": 1}, {"id": 574, "code1": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tif((m|d) == 0) break;\n\t\t\tint day = d;\n\t\t\tswitch(m){\n\t\t\tcase 12:\n\t\t\t\tday += 335;\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tday += 305;\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tday += 274;\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tday += 244;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tday += 213;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tday += 182;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday += 152;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday += 121;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday += 91;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday += 60;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday += 31;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t}\n\t\t\tswitch(day%7){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"Thursday\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"Friday\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"Saturday\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"Sunday\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"Monday\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.println(\"Tuesday\");\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(\"Wednesday\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int[] a = new int[N];\n        int[] b = new int[N];\n        for(int i = 0; i < N; i++)\n            a[i] = sc.nextInt();\n        for(int i = 0; i < N; i++)\n            b[i] = sc.nextInt();\n        sc.close();\n        long sum1 = 0;\n        long sum2 = 0;\n        for(int i = 0; i < N; i++){\n            if(a[i] > b[i]){\n                sum1 += (a[i]-b[i]);\n            } else {\n                sum2 += (b[i]-a[i])/2;\n            }\n        }\n        if(sum1 <= sum2)\n            System.out.println(\"Yes\");\n        else\n            System.out.println(\"No\");\n\n    }\n}", "label": 0}, {"id": 369, "code1": "import java.io.IOException;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nimport java.io.PrintWriter;\n\n@SuppressWarnings(\"unchecked\")\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        final String s;\n\n        try (\n            BufferedReader reader = new BufferedReader(\n                new InputStreamReader(System.in))) {\n            s = reader.readLine();\n        }\n\n        PrintWriter out = new PrintWriter(System.out);\n\n        final String[] sl = s.split(\" \");\n        int A = Integer.parseInt(sl[0]);\n        int B = Integer.parseInt(sl[1]);\n        int C = Integer.parseInt(sl[2]);\n\n        int max = Math.max(A, Math.max(B, C));\n\n        int sum = 3 * max - A - B - C;\n\n        int ans;\n\n        if (sum % 2 == 0) ans = sum / 2;\n        else ans = (int)Math.ceil((double)sum / 2) + 1;\n\n        out.println(ans);\n\n        out.flush();\n    }\n}\n", "code2": "import java.util.*;\npublic class Main{\npublic static void main(String[] args){\nScanner sc = new Scanner(System.in);\n  int Q = sc.nextInt();\n  for(int i=0;i<Q;i++){\n    long f = sc.nextLong();\n    long s = sc.nextLong();\n    long a = Math.max(f, s);\n    long b = Math.min(f, s);\n    long K = a*b;\n    long L = (long) Math.sqrt(K);\n    long M = (K-1)/L;\n    long N = Math.max(-1,M-b-1);\n    System.out.println(L+N+b-1);\n  }\n}}\n", "label": 0}, {"id": 53, "code1": "import java.util.Scanner;\n\nclass Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc = new Scanner(System.in).useDelimiter(\"[,\\n]\");\n\t\t\n\t\tint a = 0;\n\t\tint b = 0;\n\t\tint o = 0;\n\t\tint ab = 0;\n\t\t\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tsc.nextInt();\n\t\t\tString str = sc.next();\n\t\t\tif (str.equals(\"A\"))\n\t\t\t{\n\t\t\t\ta++;\n\t\t\t}\n\t\t\telse if (str.equals(\"B\"))\n\t\t\t{\n\t\t\t\tb++;\n\t\t\t}\n\t\t\telse if (str.equals(\"O\"))\n\t\t\t{\n\t\t\t\to++;\n\t\t\t}\n\t\t\telse if (str.equals(\"AB\"))\n\t\t\t{\n\t\t\t\tab++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(a);\n\t\tSystem.out.println(b);\n\t\tSystem.out.println(ab);\n\t\tSystem.out.println(o);\n\t}\n}", "code2": "import java.util.Scanner;\n\tpublic class Main{\n\t\tpublic static void main(String args[]){\n\t\t\tScanner sc = new Scanner(System.in);\n\t\t\tint count[] = {0,0,0,0};\n\t\t\twhile(sc.hasNext()){\n\t\t\t\tString str = sc.nextLine();\n\t\t\t\tString [] blood = str.split(\",\");\n\t\t\t\t\tif(blood[1].equals(\"A\")){\n\t\t\t\t\t\tcount[0]++;\n\t\t\t\t\t}else if(blood[1].equals(\"B\")){\n\t\t\t\t\t\tcount[1]++;\n\t\t\t\t\t}else if(blood[1].equals(\"AB\")){\n\t\t\t\t\t\tcount[2]++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcount[3]++;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0; i < 4; i++ ){\n\t\t\t\tSystem.out.println(count[i]);\n\t\t\t}\n\t\t}\n\t}\t\t", "label": 1}, {"id": 35, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry(Scanner sc = new Scanner(System.in)){\n\t\t\tint n=sc.nextInt();\n\t\t\tint[] a=new int[n];\n\t\t\tint count=0;\n\t\t\ta[0]=sc.nextInt();\n\t\t\tfor(int i=1; i<n; i++) {\n\t\t\t\ta[i]=sc.nextInt();\n\t\t\t\tif(a[i]==a[i-1]) {\n\t\t\t\t\tcount++;\n\t\t\t\t\ta[i]=1000;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "label": 1}, {"id": 594, "code1": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tchar[] s = ns(n);\n\t\tint[] pres = new int[n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tpres[i+1] = pres[i] + (s[i] == 'W' ? 1 : 0);\n\t\t}\n\t\tint[] sufs = new int[n+1];\n\t\tfor(int i = n-1;i >= 0;i--){\n\t\t\tsufs[i] = sufs[i+1] + (s[i] == 'E' ? 1 : 0);\n\t\t}\n\t\tint min = 999999999;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tmin = Math.min(min, pres[i] + sufs[i+1]);\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 579, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.stream.IntStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.util.PriorityQueue;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.AbstractCollection;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            Dijkstra d = new Dijkstra(n);\n            for (int i = 0; i < n - 1; i++) {\n                int from = in.readInt() - 1;\n                int to = in.readInt() - 1;\n                d.addUndirectedEdge(from, to, 1);\n            }\n            long[] dist1 = d.getDist(0);\n            long[] distN = d.getDist(n - 1);\n            long count1 = IntStream.range(0, n)\n                    .filter(i -> dist1[i] <= distN[i])\n                    .count();\n            out.printLine(count1 > n - count1 ? \"Fennec\" : \"Snuke\");\n        }\n\n    }\n\n    static class Dijkstra {\n        int n;\n        ArrayList<Pair>[] G;\n        private long INF = Long.MAX_VALUE / 3;\n\n        public Dijkstra(int n) {\n            this.n = n;\n            G = new ArrayList[n];\n            for (int i = 0; i < n; i++) {\n                G[i] = new ArrayList<>();\n            }\n        }\n\n        public void addUndirectedEdge(int from, int to, long cost) {\n            G[from].add(new Pair(to, cost));\n            G[to].add(new Pair(from, cost));\n        }\n\n        public long[] getDist(int s) {\n            PriorityQueue<Pair> Q = new PriorityQueue<>();\n            Q.add(new Pair(s, 0));\n            long[] dist = new long[n];\n            Arrays.fill(dist, INF);\n            boolean[] used = new boolean[n];\n            while (!Q.isEmpty()) {\n                Pair p = Q.poll();\n                if (used[p.x]) continue;\n                used[p.x] = true;\n                dist[p.x] = p.y;\n\n                for (Pair edge : G[p.x]) {\n                    Q.add(new Pair(edge.x, p.y + edge.y));\n                }\n            }\n            return dist;\n        }\n\n        class Pair implements Comparable<Pair> {\n            int x;\n            long y;\n\n            Pair(int x, long y) {\n                this.x = x;\n                this.y = y;\n            }\n\n            public int compareTo(Pair p) {\n                return Long.compare(y, p.y);\n            }\n\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int cnt = 0;\n\n    List<Integer>[] lists = new ArrayList[n];\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n\n    void run() {\n\n        for (int i=0; i<n; i++) lists[i] = new ArrayList<>();\n\n        int m = sc.nextInt();\n        for (int i=0; i<m; i++) {\n            int s = sc.nextInt() - 1;\n            int t = sc.nextInt() - 1;\n            lists[s].add(t);\n            lists[t].add(s);\n        }\n\n        dfs(\"\", n);\n\n        System.out.println(cnt);\n\n    }\n\n    void dfs(String s, int n) {\n\n        if (s.length() == n) {\n//            System.out.println(s);\n            if (s.charAt(0) == '0') {\n                boolean check = true;\n                for (int i=0; i<s.length()-1; i++) {\n                    if (!lists[s.charAt(i) - 48].contains(s.charAt(i+1) - 48)) {\n                        check = false;\n                        break;\n                    }\n                }\n                if (check) cnt++;\n            }\n\n        } else {\n            for (int i=0; i<n; i++) {\n                if (s.contains(String.valueOf(i))) continue;\n                dfs(s + i, n);\n            }\n        }\n    }\n\n\n}\n\n", "label": 0}, {"id": 79, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "label": 1}, {"id": 256, "code1": "import java.util.*;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        System.out.println((a+b+1)/2);\n    }   \n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t    Scanner sc = new Scanner(System.in);   \n\t    \n\t    float A = sc.nextFloat();\n\t    float B = sc.nextFloat();\n\t    \n\t    System.out.println(Math.round((A + B) / 2));\n\t}    \n}\t", "label": 1}, {"id": 263, "code1": "import java.util.*;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc=new Scanner(System.in);\n    System.out.println((sc.nextInt()+sc.nextInt()+1)/2);\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tdouble a = scan.nextInt();\n\t\tdouble b = scan.nextInt();\n\n\t\tSystem.out.println((int)Math.ceil((a + b) / 2));\n\t}\n}", "label": 1}, {"id": 148, "code1": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long x = sc.nextLong();\n    long ax = 0;\n    if (a > 0) {\n      ax = ((a - 1) / x) + 1;\n    }\n    long bx = (b / x) + 1;\n    System.out.println(bx - ax);\n  }\n}", "label": 1}, {"id": 670, "code1": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.PrimitiveIterator;\nimport java.util.Scanner;\nimport java.util.function.Supplier;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\nclass Main{\n\n\tprivate void solve(){\n\t\tint[] c=new int[26];\n\t\tint h=gInt(),w=gInt();\n\t\tSTRS(h).flatMapToInt(String::chars)\n\t\t\t\t.map(i->i-'a')\n\t\t\t\t.forEach(i->++c[i]);\n\t\tint one=(h%2)*(w%2);\n\n\t\tint two=(w%2==1?h/2*2:0)+(h%2==1?w/2*2:0);\n\t\tint four=h*w-one-two;\n\n\t\tSystem.err.println(one);\n\t\tSystem.err.println(two);\n\t\tSystem.err.println(four);\n\t\tSystem.err.println(Arrays.toString(c));\n\t\tfor(int i:rep(26)) {\n\t\t\twhile(four>0&&c[i]>=4) {\n\t\t\t\tfour-=4;\n\t\t\t\tc[i]-=4;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\ttwo-=c[i]/2*2;\n\t\t\tc[i]%=2;\n\t\t\tif(two<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\tone-=c[i];\n\t\t\tc[i]=0;\n\t\t\tif(one<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\n\t\t\t\tArrays.stream(c).noneMatch(i->i>0)\n\t\t\t\t?\"Yes\":\"No\");\n\t}\n\n\tpublic static void main(String[]$){\n\t\tnew Main().solve();\n\t}\n\n\tScanner s=new Scanner(System.in);\n\n\tint gInt(){\n\t\treturn Integer.parseInt(s.next());\n\t}\n\tlong gLong(){\n\t\treturn Long.parseLong(s.next());\n\t}\n\tdouble gDouble(){\n\t\treturn Double.parseDouble(s.next());\n\t}\n\n\tSupplierIterator<Integer> ints(int n){\n\t\treturn new SupplierIterator<>(n,this::gInt);\n\t}\n\tSupplierIterator<Long> longs(int n){\n\t\treturn new SupplierIterator<>(n,this::gLong);\n\t}\n\tSupplierIterator<Double> doubles(int n){\n\t\treturn new SupplierIterator<>(n,this::gDouble);\n\t}\n\tSupplierIterator<String> strs(int n){\n\t\treturn new SupplierIterator<>(n,s::next);\n\t}\n\n\tstatic class SupplierIterator<T> implements Iterable<T>,Iterator<T>{\n\t\tint\t\t\tt;\n\t\tSupplier<T>\tsupplier;\n\n\t\tSupplierIterator(int t,Supplier<T> supplier){\n\t\t\tthis.t=t;\n\t\t\tthis.supplier=supplier;\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<T> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn t>0;\n\t\t}\n\n\t\t@Override\n\t\tpublic T next(){\n\t\t\t--t;\n\t\t\treturn supplier.get();\n\t\t}\n\t}\n\n\n\tRange rep(int i){\n\t\treturn Range.rep(i);\n\t}\n\tRange rep(int f,int t,int d){\n\t\treturn Range.rep(f,t,d);\n\t}\n\tRange rep(int f,int t){\n\t\treturn rep(f,t,1);\n\t}\n\tRange rrep(int f,int t){\n\t\treturn rep(f,t,-1);\n\t}\n\n\tstatic class Range implements Iterable<Integer>,PrimitiveIterator.OfInt{\n\n\t\tint to,cur,d;\n\n\t\tRange(int from,int to,int d){\n\t\t\tthis.cur=from-d;\n\t\t\tthis.to=to;\n\t\t\tthis.d=d;\n\t\t}\n\n\t\tRange(int n){\n\t\t\tthis(0,n-1,1);\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<Integer> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn cur+d==to||(cur!=to&&(cur<to==cur+d<to));\n\t\t}\n\n\t\t@Override\n\t\tpublic int nextInt(){\n\t\t\treturn cur+=d;\n\t\t}\n\n\t\tstatic Range rep(int i){\n\t\t\treturn new Range(i);\n\t\t}\n\t\tstatic Range rep(int f,int t,int d){\n\t\t\treturn new Range(f,t,d);\n\t\t}\n\t\tstatic Range rep(int f,int t){\n\t\t\treturn rep(f,t,1);\n\t\t}\n\t\tstatic Range rrep(int f,int t){\n\t\t\treturn rep(f,t,-1);\n\t\t}\n\t}\n\n\n\tIntStream REP(int v){\n\t\treturn IntStream.range(0,v);\n\t}\n\tIntStream REP(int l,int r){\n\t\treturn IntStream.rangeClosed(l,r);\n\t}\n\n\tIntStream INTS(int n){\n\t\treturn REP(n).map(i->gInt());\n\t}\n\tStream<String> STRS(int n){\n\t\treturn REP(n).mapToObj(i->s.next());\n\t}\n}\n", "label": 0}, {"id": 684, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyScan in = new MyScan(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyScan in, PrintWriter out) {\n            int i = in.nextInt();\n\n            long[] md = new long[i];\n\n            int rm = i - 2;\n            int lx = i - 2;\n            while (rm >= 0) {\n                md[lx + 1] = Util.c(rm, lx);\n                rm -= 2;\n                lx--;\n            }\n            long res = 0;\n            long prev = 0;\n            for (int m = 1; m < i; m++) {\n                long cur = Util.fact(m) * Util.fact(i - m - 1) % Util._m;\n                cur = cur * (md[m]) % Util._m;\n\n\n                res += (cur - prev + Util._m) * m % Util._m;\n                prev = cur;\n\n            }\n\n\n            out.println(res % Util._m);\n\n        }\n\n    }\n\n    static class MyScan {\n        private final InputStream in;\n        private byte[] inbuf = new byte[1024];\n        public int lenbuf = 0;\n        public int ptrbuf = 0;\n\n        public MyScan(InputStream in) {\n            this.in = in;\n        }\n\n        private int readByte() {\n            if (lenbuf == -1) throw new InputMismatchException();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = in.read(inbuf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (lenbuf <= 0) return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = num * 10 + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n    }\n\n    static class Util {\n        public static final long M07 = 1000_000_007;\n        public static long _m = M07;\n        private static long[] fact;\n        private static long[] inv;\n        private static long[] ifact;\n\n        public static void l() {\n            fact = new long[1000001];\n            inv = new long[1000001];\n            ifact = new long[1000001];\n            for (int s = 0; s < 2; s++) {\n                fact[s] = 1;\n                ifact[s] = 1;\n                inv[s] = 1;\n            }\n            inv[0] = 0;\n            for (int i = 2; i < inv.length; i++) {\n                inv[i] = (_m - (_m / i) * inv[(int) (_m % i)] % _m) % _m;\n            }\n            for (int i = 2; i < fact.length; i++) {\n                fact[i] = i * fact[i - 1] % _m;\n                ifact[i] = inv[i] * ifact[i - 1] % _m;\n            }\n        }\n\n        public static long c(int a, int b) {\n            if (fact == null) l();\n            return ifact[a] * ifact[b - a] % _m * fact[b] % _m;\n        }\n\n        public static long fact(int a) {\n            if (fact == null) l();\n            return fact[a];\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 90, "code1": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "code2": "import java.io.IOException;\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\nimport java.io.PrintWriter;\n\n@SuppressWarnings(\"unchecked\")\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        final String s;\n\n        try (\n            BufferedReader reader = new BufferedReader(\n                new InputStreamReader(System.in))) {\n            s = reader.readLine();\n        }\n\n        PrintWriter out = new PrintWriter(System.out);\n\n        final String[] sl = s.split(\" \");\n        int A = Integer.parseInt(sl[0]);\n        int B = Integer.parseInt(sl[1]);\n        int C = Integer.parseInt(sl[2]);\n\n        int max = Math.max(A, Math.max(B, C));\n\n        int sum = 3 * max - A - B - C;\n\n        int ans;\n\n        if (sum % 2 == 0) ans = sum / 2;\n        else ans = (int)Math.ceil((double)sum / 2) + 1;\n\n        out.println(ans);\n\n        out.flush();\n    }\n}\n", "label": 1}, {"id": 417, "code1": "import java.util.*;\npublic class Main{\n    public static void main(String args[]) {\n        Scanner cin = new Scanner(System.in);\n        while(cin.hasNext()){\n        \tint n = cin.nextInt();\n        \tint[][] vote = readMatrix(cin,n,2);\n        \tSystem.out.println(getNum(vote,n));\n        }\n    }\n    public static long getNum(int[][] vote, int n){\n    \tlong[] result={vote[0][0],vote[0][1]};\n    \tlong result1;\n    \tfor(int i=1;i<n;i++){\n    \t\tresult1 = result[1];\n    \t\tif(result[0]>vote[i][0]){\n    \t\t\tif(result[0]%vote[i][0]!=0) result[0] += vote[i][0]-result[0]%vote[i][0];\n    \t\t}else{result[0]=vote[i][0];}\n    \t\tresult[1] = result[0]/vote[i][0]*vote[i][1];\n    \t\tif(result1>result[1]){\n    \t\t\tresult[1] = result1;\n    \t\t\tif(result[1]%vote[i][1]!=0) result[1] += vote[i][1]-result[1]%vote[i][1];\n    \t\t\t result[0] = result[1]/vote[i][1]*vote[i][0];\n    \t\t}\n    \t}\n    \treturn result[0]+result[1];\n    }\n    public static int[][] readMatrix(Scanner in,int n,int m){\n    \tint[][] mtx = new int[n][m];\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<m;j++){\n    \t\t\tmtx[i][j] = in.nextInt();\n    \t\t}\n    \t}\n    \treturn mtx;\n    }\n    \n}", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tint INF = 1 << 28;\n\tdouble EPS = 1e-9;\n\n\tint n;\n\tint start, goal, ttl;\n\tLinkedList<Integer>[] graph;\n\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run() {\n\t\tn = sc.nextInt();\n\t\tgraph = new LinkedList[n];\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint u = sc.nextInt() - 1;// \u0083\u008b\u0081[\u0083^\u0094\u00d4\u008d\u0086\n\t\t\tint m = sc.nextInt();\n\t\t\tgraph[u] = new LinkedList<Integer>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint v = sc.nextInt() - 1;\n\t\t\t\tgraph[u].add(v);\n\t\t\t}\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i = 0; i < p; i++) {\n\t\t\tstart = sc.nextInt() - 1;\n\t\t\tgoal = sc.nextInt() - 1;\n\t\t\tttl = sc.nextInt();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve() {\n\t\tLinkedList<Integer> que = new LinkedList<Integer>();\n\t\tboolean[] visited = new boolean[n];\n\t\tint[] d = new int[n];\n\t\tArrays.fill(d, INF);\n\t\tque.offer(start);\n\t\td[start] = 1;\n\t\tvisited[start] = true;\n\t\tfor (; !que.isEmpty();) {\n\t\t\tint u = que.poll();\n\t\t\tfor (int v : graph[u]) {\n\t\t\t\tif (!visited[v]) {\n\t\t\t\t\tque.offer(v);\n\t\t\t\t\td[v] = d[u] + 1;\n\t\t\t\t\tvisited[v] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (d[goal] <= ttl) {\n\t\t\tprintln(\"\" + d[goal]);\n\t\t} else {\n\t\t\tprintln(\"NA\");\n\t\t}\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s) {\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s) {\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 676, "code1": "import java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.PrimitiveIterator;\nimport java.util.Scanner;\nimport java.util.function.Supplier;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\nclass Main{\n\n\tprivate void solve(){\n\t\tint[] c=new int[26];\n\t\tint h=gInt(),w=gInt();\n\t\tSTRS(h).flatMapToInt(String::chars)\n\t\t\t\t.map(i->i-'a')\n\t\t\t\t.forEach(i->++c[i]);\n\t\tint one=(h%2)*(w%2);\n\n\t\tint two=(w%2==1?h/2*2:0)+(h%2==1?w/2*2:0);\n\t\tint four=h*w-one-two;\n\n\t\tSystem.err.println(one);\n\t\tSystem.err.println(two);\n\t\tSystem.err.println(four);\n\t\tSystem.err.println(Arrays.toString(c));\n\t\tfor(int i:rep(26)) {\n\t\t\twhile(four>0&&c[i]>=4) {\n\t\t\t\tfour-=4;\n\t\t\t\tc[i]-=4;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\ttwo-=c[i]/2*2;\n\t\t\tc[i]%=2;\n\t\t\tif(two<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\tone-=c[i];\n\t\t\tc[i]=0;\n\t\t\tif(one<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\n\t\t\t\tArrays.stream(c).noneMatch(i->i>0)\n\t\t\t\t?\"Yes\":\"No\");\n\t}\n\n\tpublic static void main(String[]$){\n\t\tnew Main().solve();\n\t}\n\n\tScanner s=new Scanner(System.in);\n\n\tint gInt(){\n\t\treturn Integer.parseInt(s.next());\n\t}\n\tlong gLong(){\n\t\treturn Long.parseLong(s.next());\n\t}\n\tdouble gDouble(){\n\t\treturn Double.parseDouble(s.next());\n\t}\n\n\tSupplierIterator<Integer> ints(int n){\n\t\treturn new SupplierIterator<>(n,this::gInt);\n\t}\n\tSupplierIterator<Long> longs(int n){\n\t\treturn new SupplierIterator<>(n,this::gLong);\n\t}\n\tSupplierIterator<Double> doubles(int n){\n\t\treturn new SupplierIterator<>(n,this::gDouble);\n\t}\n\tSupplierIterator<String> strs(int n){\n\t\treturn new SupplierIterator<>(n,s::next);\n\t}\n\n\tstatic class SupplierIterator<T> implements Iterable<T>,Iterator<T>{\n\t\tint\t\t\tt;\n\t\tSupplier<T>\tsupplier;\n\n\t\tSupplierIterator(int t,Supplier<T> supplier){\n\t\t\tthis.t=t;\n\t\t\tthis.supplier=supplier;\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<T> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn t>0;\n\t\t}\n\n\t\t@Override\n\t\tpublic T next(){\n\t\t\t--t;\n\t\t\treturn supplier.get();\n\t\t}\n\t}\n\n\n\tRange rep(int i){\n\t\treturn Range.rep(i);\n\t}\n\tRange rep(int f,int t,int d){\n\t\treturn Range.rep(f,t,d);\n\t}\n\tRange rep(int f,int t){\n\t\treturn rep(f,t,1);\n\t}\n\tRange rrep(int f,int t){\n\t\treturn rep(f,t,-1);\n\t}\n\n\tstatic class Range implements Iterable<Integer>,PrimitiveIterator.OfInt{\n\n\t\tint to,cur,d;\n\n\t\tRange(int from,int to,int d){\n\t\t\tthis.cur=from-d;\n\t\t\tthis.to=to;\n\t\t\tthis.d=d;\n\t\t}\n\n\t\tRange(int n){\n\t\t\tthis(0,n-1,1);\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<Integer> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn cur+d==to||(cur!=to&&(cur<to==cur+d<to));\n\t\t}\n\n\t\t@Override\n\t\tpublic int nextInt(){\n\t\t\treturn cur+=d;\n\t\t}\n\n\t\tstatic Range rep(int i){\n\t\t\treturn new Range(i);\n\t\t}\n\t\tstatic Range rep(int f,int t,int d){\n\t\t\treturn new Range(f,t,d);\n\t\t}\n\t\tstatic Range rep(int f,int t){\n\t\t\treturn rep(f,t,1);\n\t\t}\n\t\tstatic Range rrep(int f,int t){\n\t\t\treturn rep(f,t,-1);\n\t\t}\n\t}\n\n\n\tIntStream REP(int v){\n\t\treturn IntStream.range(0,v);\n\t}\n\tIntStream REP(int l,int r){\n\t\treturn IntStream.rangeClosed(l,r);\n\t}\n\n\tIntStream INTS(int n){\n\t\treturn REP(n).map(i->gInt());\n\t}\n\tStream<String> STRS(int n){\n\t\treturn REP(n).mapToObj(i->s.next());\n\t}\n}\n", "code2": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 623, "code1": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            list.add(scanner.nextInt());\n        }\n        list.sort((val1, val2) -> val1 - val2);\n        int b = list.get(0);\n        for (int i = 1; i < list.size(); i++) {\n            int a = list.get(i);\n            int r = a % b;\n            while (r != 0) {\n                a = b;\n                b = r;\n                r = a % b;\n            }\n        }\n        System.out.println(b);\n    }\n}", "code2": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "label": 0}, {"id": 2, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        int n = str.length();\n        int digitSum = 0;\n        for (int i = 0; i < n; i++)\n            digitSum += (str.charAt(i) - '0');\n        if(digitSum % 9 == 0) {\n            System.out.println(\"Yes\");\n        }\n        else {\n            System.out.println(\"No\");\n        }\n    }\n}\n\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        final String N = sc.next();\n        \n        int total = N.codePoints().map(c -> c - '0').sum();\n        System.out.println(total % 9 == 0 ? \"Yes\" : \"No\");\n    }\n}\n", "label": 1}, {"id": 629, "code1": "import java.io.*;\nimport java.util.*;\n\nclass Main{\n    public static void main(String args[])throws IOException{\n      try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){\n        //input\n        String[] input = br.readLine().split(\" \");\n        int N = Integer.parseInt(input[0]);\n        int M = Integer.parseInt(input[1]);\n\n        //for algorithm & input\n        boolean[] answer = new boolean[N+1];\n        int[] wrong = new int[N+1];\n      \n        Arrays.fill(answer, false);\n        Arrays.fill(wrong, 0);\n        int pena = 0;\n        int result = 0;\n\n        for(int i = 0; i < M; i++){\n          String[] in = br.readLine().split(\" \");\n          int num = Integer.parseInt(in[0]);\n         \n          if(answer[num] == false){\n            if(in[1].equals(\"AC\")){\n              answer[num] = true;\n              result++;\n              pena += wrong[num];\n            }else{\n              wrong[num] += 1;\n            }\n          }else{\n            continue;\n          }\n        }\n\n        System.out.println(result + \" \" + pena);\n\n      }\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\tint x = sc.nextInt();\n\t\tint y = sc.nextInt();\n\t\tlong ans = 0;\n\t\tint tmp = Math.min(x, y);\n\t\tx -= tmp;\n\t\ty -= tmp;\n\t\tif(a + b < 2 * c) {\n\t\t\tans += tmp * (a + b);\n\t\t} else {\n\t\t\tans += tmp * 2 * c;\n\t\t}\n\t\tif(x % 2 == 1) {\n\t\t\tif(a < 2 * c) {\n\t\t\t\tans += a;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\tx--;\n\t\t}\n\t\tif(a < 2 * c) {\n\t\t\tans += a * x;\n\t\t} else {\n\t\t\tans += 2 * c * x;\n\t\t}\n\t\tif(y % 2 == 1) {\n\t\t\tif(b < 2 * c) {\n\t\t\t\tans += b;\n\t\t\t} else {\n\t\t\t\tans += 2 * c;\n\t\t\t}\n\t\t\ty--;\n\t\t}\n\t\tif(b < 2 * c) {\n\t\t\tans += b * y;\n\t\t} else {\n\t\t\tans += 2 * c * y;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\n", "label": 0}, {"id": 404, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String[] args) {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    long[] a = new long[n];\n\n    for (int i = 0; i < n; i++) {\n      a[i] = sc.nextInt();\n    }\n\n    Arrays.sort(a); // \u6607\u9806\n    long sum = a[n - 1];\n\n    if (n == 2) {\n      System.out.println(sum);\n    } else {\n      if (n % 2 == 1) {\n        int num = n / 2;\n        sum += a[n - num - 1];\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      } else {\n        int num = n / 2;\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      }\n    }\n\n  }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    void solve() throws IOException {\n    \tint N = ni();\n\n    \tint[] T = new int[N];\n    \tint[] A = new int[N];\n\n    \tfor (int i=0; i<N; i++) {\n\t\t\tT[i] = ni();\n\t\t\tA[i] = ni();\n\t\t}\n\n    \tlong t = T[0];\n    \tlong a = A[0];\n\n    \tfor (int i=1; i<N; i++) {\n    \t\tlong x = (t%T[i]==0)? t/T[i] : (t/T[i] + 1);\n    \t\tlong y = (a%A[i]==0)? a/A[i] : (a/A[i] + 1);\n    \t\tt = T[i] * Math.max(x, y);\n    \t\ta = A[i] * Math.max(x, y);\n    \t}\n\n    \tout.println(t + a);\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}\n", "label": 0}, {"id": 269, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint id[]=new int[10000];\n\t\tint sc[]=new int[10000];\n\t\tint i=0;\n\t\tint j=0;\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tString str[]=in.next().split(\",\");\n\t\t\tif(str[0].equals(\"0\")&&str[1].equals(\"0\"))\n\t\t\t\tbreak;\n\t\t\tid[i++]=Integer.valueOf(str[0]);\n\t\t\tsc[j++]=Integer.valueOf(str[1]);\n\t\t}\n\t\twhile(in.hasNext())\n\t\t{\n\t\t\tint n=in.nextInt();\n\t\t\tint se=0;\n\t\t\tfor(int m=0;m<i;m++)\n\t\t\t{\n\t\t\t\tif(n==id[m])\n\t\t\t\t{\n\t\t\t\t\tse=m;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean b[] =new boolean[31];\n\t\t\tArrays.fill(b, true);\n\t\t\tint ans=1;\n\t\t\tfor(int l=0;l<i;l++)\n\t\t\t{\n\t\t\t\tif(sc[se]<sc[l]&&b[sc[l]])\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t\tb[sc[l]]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\ttry(Scanner sc = new Scanner(System.in)){\n\t\t\tint[] A = new int[101];\n\t\t\twhile(true){\n\t\t\t\tString[] SS = sc.next().split(\",\", 0);\n\t\t\t\tint team = Integer.parseInt(SS[0]);\n\t\t\t\tint score = Integer.parseInt(SS[1]);\n\t\t\t\tif(team == 0 && score == 0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tA[team] = score;\n\t\t\t}\n\t\t\twhile(sc.hasNext()){\n\t\t\t\tint num = A[sc.nextInt()];\n\t\t\t\tSet<Integer> set = new HashSet<>();\n\t\t\t\tfor(int i = 0; i < 101; i++){\n\t\t\t\t\tif(num < A[i]){\n\t\t\t\t\t\tset.add(A[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(set.size() + 1);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 382, "code1": "import java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString str=sc.next();\n\t\t\tStack<Integer> st=new Stack<Integer>();\n\t\t\tfor(int i=0;i<str.length();i++){\n\t\t\t\tif(st.isEmpty() || st.peek()==1 || str.charAt(i)=='S') st.add(str.charAt(i)=='S' ? 0 : 1);\n\t\t\t\telse st.pop();\n\t\t\t}\n\t\t\tSystem.out.println(st.size());\n\t\t}\n\t}\n}", "code2": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t\n\tint cmp (String p1, String p2) {\n\t\tif( p1.length() != p2.length() ) return p2.length() - p1.length();\n\t\treturn p2.compareTo(p1);\n\t}\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;) {\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif((w|h) == 0 ) break;\n\t\t\t\n\t\t\tString[][] dp = new String[h+1][w+1];\n\t\t\tString pass = \"\";\n\t\t\tchar[][] map = new char[h+1][w+1];\n\t\t\t\n\t\t\tfor(String[] a: dp) fill(a, \"\");\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) {\n\t\t\t\tString str = sc.next();\n\t\t\t\tfor(int j=1;j<=w;j++) {\n\t\t\t\t\tmap[i][j] = str.charAt(j-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) for(int j=1;j<=w;j++) {\n\t\t\t\tif( '0' <= map[i][j] && map[i][j] <= '9' ) {\n\t\t\t\t\tif( map[i][j] == '0' && dp[i-1][j].equals(\"\") && dp[i][j-1].equals(\"\") ) continue;\n\t\t\t\t\tdp[i][j] = ( cmp(dp[i-1][j], dp[i][j-1])<0? dp[i-1][j]: dp[i][j-1] ) + (char)map[i][j];\n\t\t\t\t}\n\t\t\t\tpass = cmp(pass, dp[i][j])<0? pass: dp[i][j];\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(pass);\n\t\t\t\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "label": 0}, {"id": 281, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        int n = str.length();\n        int digitSum = 0;\n        for (int i = 0; i < n; i++)\n            digitSum += (str.charAt(i) - '0');\n        if(digitSum % 9 == 0) {\n            System.out.println(\"Yes\");\n        }\n        else {\n            System.out.println(\"No\");\n        }\n    }\n}\n\n", "code2": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tlong h = stdIn.nextLong();\n\t\tlong w = stdIn.nextLong();\n\t\t\n\t\tlong cnt = 0;\n\t\tif(h==1 || w == 1) {\n\t\t\tSystem.out.println(1);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(h % 2 == 0 && w % 2 == 0) { //h\u5076\u6570\u3001w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else if(h % 2 == 0 && w % 2 != 0) { //h\u5076\u6570\u3001w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}else if( h % 2 != 0 && w % 2 == 0) { // h\u5947\u6570,w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else {                                //h\u5947\u6570,w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(cnt);\n\n\t}\n\n}\n", "label": 0}, {"id": 706, "code1": "import java.lang.reflect.Array;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static boolean check(int a,int b,int mid){\n        if(a <= mid && b <= mid || a > mid && b > mid)return true;\n        return false;\n    }\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int array[] = new int[2 * n + 1];\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        for (int i = 1; i < 2 * n; i++)\n            array[i] = Integer.parseInt(st.nextToken());\n        array[0] = array[2 * n] = -1;\n        int infinity = (int) 1E9 + 5;\n        int low = 1;\n        int high = 2 * n;\n        TreeSet<Integer> zero;\n        TreeSet<Integer> ones;\n        while (low < high) {\n            int mid = (low + high) / 2;\n            int temp = -1;\n            zero = new TreeSet<>();\n            ones = new TreeSet<>();\n            ones.add(infinity);\n            ones.add(-infinity);\n            zero.add(infinity);\n            zero.add(-infinity);\n            for (int i = 1; i < 2 * n; i++) {\n                if (check(array[i],array[i - 1],mid) && i != 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n                if (check(array[i],array[i + 1],mid) && i != 2*n - 1) {\n                    //System.out.println(array[i] + \" \" + mid + \" \" + i);\n                    if (array[i] > mid) ones.add(i);\n                    else zero.add(i);\n                }\n            }\n                int beforezero = zero.floor(n);\n                int afterzero = zero.ceiling(n);\n                int beforeone = ones.floor(n);\n                int afterone = ones.ceiling(n);\n                int beforemax = Math.max(beforeone, beforezero);\n                int aftermin = Math.min(afterone, afterzero);\n                int min = Math.min(aftermin - n, n - beforemax);\n                //System.out.println(\"1 \" + aftermin + \" \" + beforemax + \" \" + min + \" \" + beforezero + \" \" + afterzero + \" \" + beforeone + \" \" + afterone);\n                if (min == aftermin - n) {\n                    if (afterone < afterzero) temp = 1;\n                    else temp = 0;\n                }\n                if (min == n - beforemax) {\n                    if (beforeone < beforezero) temp = 0;\n                    else temp = 1;\n            }\n            if(min > n - 2){\n                if((n & 1) == 0)temp = (array[n] > mid) ? 0 : 1;\n                else temp = (array[n] > mid) ? 1 : 0;\n            }\n            //System.out.println(mid + \" \" + low + \" \" + high + \" \" + zero + \" \" + ones + \" \" + temp);\n            if (temp == 1) low = mid + 1;\n            else high = mid;\n        }\n        System.out.println(low);\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "label": 0}, {"id": 734, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tlong a = sc.nextLong();\n\t\tlong b = sc.nextLong();\n\t\tlong[] h = new long[n];\n\t\tfor(int i = 0; i < n; i++) h[i] = sc.nextLong();\n\t\tlong l = 0, r = Integer.MAX_VALUE;\n\t\twhile(r - l != 1) {\n\t\t\tlong mid = (r + l) / 2;\n\t\t\tlong[] x = Arrays.copyOf(h, h.length);\n\t\t\tlong cnt = 0;\n\t\t\tfor(int i = 0; i < x.length; i++) {\n\t\t\t\tif(x[i] - b * mid <= 0) continue;\n\t\t\t\tcnt += ((x[i] - b * mid) + (a - b - 1)) / (a - b);\n\t\t\t}\n\t\t\tif(mid >= cnt) r = mid;\n\t\t\telse l = mid;\n\t\t}\n\t\tSystem.out.println(r);\n\t}\n}\n", "code2": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint[] v = new int[500000];\n        for(int i = 0;i < 500000;i++){\n            v[i] = 1;\n        }\n        int p = 3;\n        while(true){\n            if(p*p > 1000000){\n                break;\n            }else{\n                if(v[(p-1)/2] == 0){\n                    p += 2;\n                }else{\n                    int t = p*p;\n                    while(t < 1000000){\n                        v[(t-1)/2] = 0;\n                        t += 2*p;\n                    }\n                    p += 2;\n                }\n            }\n        }\n        v[0] = 0;\n\t\twhile(scan.hasNext()){\n\t\t\tint n = scan.nextInt();\n\t\t\tif(n == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor(int i = 1;i < n/2;i++){\n\t\t\t\tif(v[i] != 1){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(v[(n-2*i-2)/2] == 1){\n\t\t\t\t\tcount += ((n-2*i-2)/2 == i)?2:1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/2);\n        }\n\t}\n}", "label": 0}, {"id": 181, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String args[]) {\n\n        // \u5165\u529b\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n        sc.close();\n\n        // \u4e3b\u51e6\u7406\n        int normal = a * x + b * y;\n        int half = c * Math.max(x, y) * 2;\n\n        int comb = x > y ? a * (x - y) + c * Math.min(x, y) * 2 : b * (y - x) + c * Math.min(x, y) * 2;\n        int price = Math.min(Math.min(normal, half), comb);\n\n        int result = price;\n\n        // \u51fa\u529b\n        System.out.println(result);\n    }\n}\n", "label": 1}, {"id": 508, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleGift solver = new CMultipleGift();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleGift {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            long X = in.nextLong();\n            long Y = in.nextLong();\n            int ans = 1;\n            long A = X;\n            while (A <= Y) {\n                A *= 2;\n                if (A > Y) break;\n                ans++;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "code2": "import java.util.Scanner;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\tprivate static final int INF = (int)1e9;\n\n\tstatic class Pair {\n\t\tint first;\n\t\tint second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn first + second;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object other) {\n\t\t\tif (other instanceof Pair) {\n\t\t\t\tPair p = (Pair)other;\n\n\t\t\t\treturn p.first == first && p.second == second;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner in = new Scanner(System.in)) {\n\t\t\tint n = in.nextInt();\n\t\t\tList<Integer>[] g = new ArrayList[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tg[i] = new ArrayList<>();\n\n\t\t\tint m = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tMap<Pair, Integer> dist = new HashMap<>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint f = in.nextInt();\n\t\t\t\tint t = in.nextInt();\n\t\t\t\tint w = in.nextInt();\n\n\t\t\t\tg[f].add(t);\n\t\t\t\tdist.put(new Pair(f, t), w);\n\t\t\t}\n\n\t\t\tdijkstra(g, n, dist, r);\n\t\t} catch (Exception ex) {\n\t\t\tthrow new RuntimeException(ex);\n\t\t}\n\t}\n\n\tpublic static void dijkstra(List<Integer> g[], int n, Map<Pair, Integer> dist, int s) {\n\t\tint[] d = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\td[i] = INF;\n\n\t\td[s] = 0;\n\t\tPriorityQueue<Pair> pq = new PriorityQueue<>((x, y) -> x.second-y.second);\n\t\tpq.add(new Pair(s, 0));\n\n\t\twhile (!pq.isEmpty()) {\n\t\t\tPair p = pq.remove();\n\n\t\t\tfor (int v : g[p.first]) {\n\t\t\t\tint dd = d[p.first] + dist.get(new Pair(p.first, v));\n\t\t\t\tif (dd < d[v]) {\n\t\t\t\t\td[v] = dd;\n\t\t\t\t\tpq.add(new Pair(v, d[v]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (d[i] == INF)\n\t\t\t\tSystem.out.println(\"INF\");\n\t\t\telse\n\t\t\t\tSystem.out.println(d[i]);\n\t\t}\n\t}\n}", "label": 0}, {"id": 527, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\n    void solve() throws IOException {\n        int h = ni(), w = ni();\n        String[] a = nsa(h);\n\n        char[][] ansR = new char[h][w];\n        char[][] ansB = new char[h][w];\n\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 || i < h - 1 && j % 2 == 0) {\n                    ansR[i][j] = '#';\n                    ansB[i][j] = '.';\n                } else {\n                    ansR[i][j] = '.';\n                    ansB[i][j] = '#';\n                }\n            }\n        }\n\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (a[i].charAt(j) == '#') {\n                    ansR[i][j] = '#';\n                    ansB[i][j] = '#';\n                }\n            }\n        }\n\n        for (int i = 0; i < h; i++) {\n            out.println(String.valueOf(ansR[i]));\n        }\n        out.println();\n        for (int i = 0; i < h; i++) {\n            out.println(String.valueOf(ansB[i]));\n        }\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    class INA {\n        int[][] a;\n\n        INA(int n, int m) throws IOException {\n            this(n, m, -1);\n        }\n\n        INA(int n, int m, int t) throws IOException {\n            a = new int[m][n];\n\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[j][i] = ni() + t;\n                }\n            }\n        }\n\n        int[] get(int i) {\n            return a[i - 1];\n        }\n    }\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}", "code2": "import java.io.FileNotFoundException;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tMaxHeapSort maxheap = new MaxHeapSort(new int[] {});\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tmaxheap.add(a[i]);\n\t\t}\n\t\ta = maxheap.sortedArray();\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tSystem.out.print(a[i] + (i == n - 1 ? \"\\n\" : \" \"));\n\t\t}\n\t}\n\n\tclass MaxHeapSort {\n\t\tint n;\n\t\tint[] v;\n\n\t\tpublic MaxHeapSort(int[] v_) {\n\t\t\tif (v_.length > 1_000_000)\n\t\t\t\tthrow new AssertionError();\n\t\t\tv = Arrays.copyOf(v_, 1_000_000);\n\t\t\tn = v_.length;\n\t\t\tfor (int i = n; i >= 0; --i) {\n\t\t\t\tmaxHeapify(i);\n\t\t\t}\n\t\t}\n\n\t\tvoid add(int val) {\n\t\t\tv[n] = val;\n\t\t\tint cur = n;\n\t\t\t++n;\n\t\t\twhile (cur > 0) {\n\t\t\t\tcur = (cur - 1) / 2;\n\t\t\t\tmaxHeapify(cur);\n\t\t\t}\n\t\t}\n\n\t\tint[] sortedArray() {\n\t\t\tint sz = n;\n\t\t\tint[] ret = new int[sz];\n\t\t\tfor (int i = 0; i < sz; ++i) {\n\t\t\t\tret[sz - 1 - i] = poll();\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tint poll() {\n\t\t\tint ret = v[0];\n\t\t\tv[0] = v[n - 1];\n\t\t\tv[n - 1] = ret;\n\t\t\t--n;\n\t\t\tmaxHeapify(0);\n\t\t\treturn ret;\n\t\t}\n\n\t\tvoid maxHeapify(int cur) {\n\t\t\tif (2 * cur + 1 >= n)\n\t\t\t\treturn;\n\t\t\tif (v[cur] >= v[2 * cur + 1] && (2 * cur + 2 >= n || v[cur] >= v[2 * cur + 2])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint dst = -1;\n\t\t\tif (2 * cur + 2 >= n || v[2 * cur + 1] >= v[2 * cur + 2]) {\n\t\t\t\tdst = 2 * cur + 1;\n\t\t\t} else {\n\t\t\t\tdst = 2 * cur + 2;\n\t\t\t}\n\t\t\tint tmp = v[cur];\n\t\t\tv[cur] = v[dst];\n\t\t\tv[dst] = tmp;\n\t\t\tmaxHeapify(dst);\n\t\t}\n\t}\n\n\tstatic void tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n}", "label": 0}, {"id": 615, "code1": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\nclass Person implements Comparable<Person> {\n\n    final int no;\n    final double time;\n\n    Person( final int no, final double time ) {\n\tthis.no = no;\n\tthis.time = time;\n    }\n    \n    public int compareTo( final Person p ) {\n\treturn Double.compare( time, p.time );\n    }\n\n    public String toString() {\n\treturn String.format( \"%d %.2f\", no, time );\n    }\n}\n\nclass Main {\n\n    public static void main( final String[] args ) {\n\n\tfinal Scanner stdin = new Scanner( System.in );\n\tfinal ArrayList<Person> last = new ArrayList<Person>();\n\tfinal ArrayList<Person> rest = new ArrayList<Person>();\n\t\n\tfor ( int i = 0; i < 3; i++ ) {\n\t    final ArrayList<Person> semifinal = new ArrayList<Person>();\n\t    for ( int j = 0; j < 8; j++ ) {\n\t\tsemifinal.add( new Person( stdin.nextInt(), stdin.nextDouble() ) );\n\t    }\n\t    Collections.sort( semifinal );\n\t    last.add( semifinal.remove( 0 ) );\n\t    last.add( semifinal.remove( 0 ) );\n\t    rest.addAll( semifinal );\n\t}\n\tCollections.sort( rest );\n\tlast.add( rest.remove( 0 ) );\n\tlast.add( rest.remove( 0 ) );\n\tfor ( Person p : last ) {\n\t    System.out.println( p );\n\t}\n    }    \n}", "code2": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "label": 0}, {"id": 243, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "code2": "import java.util.*;\n\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method astub\n\t    \tScanner sc = new Scanner(System.in);\n\t    while(true){\n\t    \tint stime = 0; \n\t    \tint t = sc.nextInt();\n\t    \tif(t==0) break;\n\t    \tint n = sc.nextInt();\n\t    \tfor (int i=0;i<n;i++){\n\t    \t\tint time_s = sc.nextInt();\n\t    \t\tint time_f = sc.nextInt();\n\t    \t\tstime += time_f - time_s;\n\t    \t}\n\t    if(stime >= t) System.out.println(\"OK\"); \n\t    else System.out.println(t-stime);\n\t    }\n\t}\n}", "label": 1}, {"id": 376, "code1": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n \n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n \n            int N = in.nextInt();\n            for (int i = 0; i < N; i++) {\n                long A = in.nextLong();\n                long B = in.nextLong();\n \n                long a = Math.min(A, B);\n                long b = Math.max(A, B);\n \n                long ans = 2L * (a - 1) + przedzial(a, b);\n \n                out.println(ans);\n            }\n        }\n \n        private long przedzial(long a, long b) {\n            if (a == b || a + 1 == b) {\n                return 0;\n            }\n \n            return 1L + szukaj(a + 1, b - 2, a * b);\n        }\n \n        private long szukaj(long a, long b, long LIMIT) {\n            if (a > b) return 0;\n            if (a == b) {\n                return a * b < LIMIT ? 1 : 0;\n            }\n            long lo = a, hi = b;\n            while (lo + 1 < hi) {\n                long m = lo + (hi - lo) / 2;\n                if (m * m >= LIMIT) {\n                    hi = m;\n                } else {\n                    lo = m;\n                }\n            }\n            long ans1 = 1 + 2L * (lo - 1 - a + 1);\n            long ans2 = 0;\n            if (lo * (lo + 1) < LIMIT) {\n                ans2 = 2L * (lo - a + 1);\n            }\n            return Math.max(ans1, ans2);\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n}", "code2": "import java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString str=sc.next();\n\t\t\tStack<Integer> st=new Stack<Integer>();\n\t\t\tfor(int i=0;i<str.length();i++){\n\t\t\t\tif(st.isEmpty() || st.peek()==1 || str.charAt(i)=='S') st.add(str.charAt(i)=='S' ? 0 : 1);\n\t\t\t\telse st.pop();\n\t\t\t}\n\t\t\tSystem.out.println(st.size());\n\t\t}\n\t}\n}", "label": 0}, {"id": 38, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "label": 1}, {"id": 571, "code1": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tif((m|d) == 0) break;\n\t\t\tint day = d;\n\t\t\tswitch(m){\n\t\t\tcase 12:\n\t\t\t\tday += 335;\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tday += 305;\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tday += 274;\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tday += 244;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tday += 213;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tday += 182;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday += 152;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday += 121;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday += 91;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday += 60;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday += 31;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t}\n\t\t\tswitch(day%7){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"Thursday\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"Friday\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"Saturday\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"Sunday\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"Monday\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.println(\"Tuesday\");\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(\"Wednesday\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.util.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t// \u5165\u529b\n\t\tint n = sc.nextInt();\n\t\tGraph g = new Graph(n, false);\n\t\tfor(int i = 0; i < n-1; i++){\n\t\t    int a = sc.nextInt() - 1;\n\t\t    int b = sc.nextInt() - 1;\n\t\t    g.add(a, b);\n\t\t}\n\t\t\n\t\t// \u8a08\u7b97\n\t\tString result = \"Snuke\";\n\t\tlong[] distFromB = g.dijkstra(0);\n\t\tlong[] distFromW = g.dijkstra(n-1);\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < n; i++){\n\t\t    if(distFromB[i] <= distFromW[i]) cnt++;\n\t\t}\n\t\tif(cnt > (n-cnt)) result = \"Fennec\";\n\t\t\n\t\t// \u51fa\u529b\n\t\tSystem.out.println(result);\n\t}\n\n}\n\nclass Graph {\n\tint n;\n\tboolean directed;\n\tArrayList<Edge>[] adjList;\n\tint m;\n\tlong[] dist;\n\tlong[][] distWF;\n\tint start;\n\tint[] prev;\n\tArrayList<Integer> path;\n\tlong INF = 1001001001001001001L;\n\n\tpublic Graph (int n, boolean directed) {\n\t\tthis.n = n;\n\t\tthis.m = 0;\n\t\tthis.directed = directed;\n\t\tthis.adjList = new ArrayList[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tadjList[i] = new ArrayList<Edge>();\n\t\t}\n\t}\n\t\n\tpublic void add(int from, int to) {\n\t\tadd(from, to, 1);\n\t}\n\tpublic void add(int from, int to, int w) {\n\t\tadjList[from].add(new Edge(from, to, w));\n\t\tthis.m++;\n\t\tif(!directed){\n\t\t\tadjList[to].add(new Edge(to, from, w));\n\t\t\tthis.m++;\n\t\t}\n\t}\n\t\n\tpublic long[] bfs(int start) { // O(M)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tArrayDeque<Integer> q = new ArrayDeque<Integer>();\n\t\tq.add(start);\n\t\twhile(!q.isEmpty()){\n\t\t\tint now = q.poll();\n\t\t\tfor(Edge e : adjList[now]){\n\t\t\t\tif(dist[e.to] != INF) continue;\n\t\t\t\tdist[e.to] = dist[now] + e.w;\n\t\t\t\tprev[e.to] = now;\n\t\t\t\tq.add(e.to);\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[] dijkstra(int start) { // O(MlogM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tPriorityQueue<Vertex> q = new PriorityQueue<Vertex>((x, y) -> Long.compare(x.distance, y.distance));\n\t\tq.add(new Vertex(start, 0));\n\t\twhile(!q.isEmpty()){\n\t\t\tVertex now = q.poll();\n\t\t\tif(now.distance > dist[now.id]) continue; \n\t\t\tfor(Edge e : adjList[now.id]){\n\t\t\t\tlong newDist = now.distance + e.w;\n\t\t\t\tif(dist[e.to] <= newDist) continue;\n\t\t\t\tdist[e.to] = newDist;\n\t\t\t\tprev[e.to] = now.id;\n\t\t\t\tq.add(new Vertex(e.to, newDist));\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[][] wf() { // O(N^3)\n\t\tthis.distWF = new long[n][n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tArrays.fill(distWF[i], INF);\n\t\t\tdistWF[i][i] = 0;\n\t\t}\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tdistWF[e.from][e.to] = e.w;\n\t\t\t}\n\t\t}\n\t\tfor(int k = 0; k < n; k++){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\t\tdistWF[i][j] = min(distWF[i][j], distWF[i][k] + distWF[k][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn distWF;\n\t}\n\t\n\tpublic boolean bf(int start) { // O(NM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tboolean hasNegativeLoop = false;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tfor(Edge e : adjList[j]){\n\t\t\t\t\tif(dist[e.to] <= dist[e.from] + e.w) continue;\n\t\t\t\t\tdist[e.to] = dist[e.from] + e.w;\n\t\t\t\t\tprev[e.to] = e.from;\n\t\t\t\t\tif(i == n-1) hasNegativeLoop = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hasNegativeLoop;\n\t}\n\t\n\tpublic ArrayList<Integer> pathTo(int to){\n\t\tthis.path = new ArrayList<Integer>();\n\t\treturn pathToRec(to);\n\t}\n\t\n\tprivate ArrayList<Integer> pathToRec(int to){\n\t\tif(to != start) pathToRec(prev[to]);\n\t\tpath.add(to);\n\t\treturn path;\n\t}\n\t\n\tpublic String toString(){\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tsb.append(e.toString());\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tpublic String distToString(){\n\t\tif(dist != null) return Arrays.toString(dist);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tif(distWF[i][j] == INF){\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:INF\" + \"\\n\");\n\t\t\t\t}else{\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:\" + distWF[i][j] + \"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tclass Edge {\n\t\tint from;\n\t\tint to;\n\t\tint w;\n\t\t\n\t\tEdge(int from, int to, int w){\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.w = w;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"from:\" + from + \" to:\" + to + \" w:\" + w;\n\t\t}\n\t}\n\t\n\tclass Vertex {\n\t\tint id;\n\t\tlong distance;\n\t\t\n\t\tVertex(int id, long distance){\n\t\t\tthis.id = id;\n\t\t\tthis.distance = distance;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"id:\" + id + \" distance:\" + distance;\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 520, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\tboolean eof;\n\t\n\tlong go(long a, long b, long c) {\n\t\tif (a < 0 || b < 0 || c < 0) {\n\t\t\treturn Long.MIN_VALUE;\n\t\t}\n\t\t\n\t\treturn a + b + c - (a & 1) - (b & 1) - (c & 1);\n\t}\n\n\tvoid solve() throws IOException {\n\t\tlong i = nextLong();\n\t\tlong o = nextLong();\n\t\tlong t = nextLong();\n\t\tlong j = nextLong();\n\t\tlong l = nextLong();\n\t\tlong s = nextLong();\n\t\tlong z = nextLong();\n\t\t\n\t\tlong ans = o + Math.max(go(i, j, l), go(i - 1, j - 1, l - 1) + 3);\n\t\t\n\t\tout.println(ans);\n\t}\n\n\tMain() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main();\n\t}\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (Exception e) {\n\t\t\t\teof = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\teof = true;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}", "code2": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "label": 0}, {"id": 71, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] $) {\n       Scanner sc = new Scanner(System.in);\n       int a = sc.nextInt();\n       int b = sc.nextInt();\n       int C = sc.nextInt();\n       double Cc = C * Math.PI /180;\n       System.out.println(b * Math.sin(Cc) * a /2);\n       System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(Cc)) + a + b);\n       System.out.println(b * Math.sin(Cc));\n    }\n}\n", "label": 1}, {"id": 539, "code1": "import java.io.FileNotFoundException;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tMaxHeapSort maxheap = new MaxHeapSort(new int[] {});\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tmaxheap.add(a[i]);\n\t\t}\n\t\ta = maxheap.sortedArray();\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tSystem.out.print(a[i] + (i == n - 1 ? \"\\n\" : \" \"));\n\t\t}\n\t}\n\n\tclass MaxHeapSort {\n\t\tint n;\n\t\tint[] v;\n\n\t\tpublic MaxHeapSort(int[] v_) {\n\t\t\tif (v_.length > 1_000_000)\n\t\t\t\tthrow new AssertionError();\n\t\t\tv = Arrays.copyOf(v_, 1_000_000);\n\t\t\tn = v_.length;\n\t\t\tfor (int i = n; i >= 0; --i) {\n\t\t\t\tmaxHeapify(i);\n\t\t\t}\n\t\t}\n\n\t\tvoid add(int val) {\n\t\t\tv[n] = val;\n\t\t\tint cur = n;\n\t\t\t++n;\n\t\t\twhile (cur > 0) {\n\t\t\t\tcur = (cur - 1) / 2;\n\t\t\t\tmaxHeapify(cur);\n\t\t\t}\n\t\t}\n\n\t\tint[] sortedArray() {\n\t\t\tint sz = n;\n\t\t\tint[] ret = new int[sz];\n\t\t\tfor (int i = 0; i < sz; ++i) {\n\t\t\t\tret[sz - 1 - i] = poll();\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tint poll() {\n\t\t\tint ret = v[0];\n\t\t\tv[0] = v[n - 1];\n\t\t\tv[n - 1] = ret;\n\t\t\t--n;\n\t\t\tmaxHeapify(0);\n\t\t\treturn ret;\n\t\t}\n\n\t\tvoid maxHeapify(int cur) {\n\t\t\tif (2 * cur + 1 >= n)\n\t\t\t\treturn;\n\t\t\tif (v[cur] >= v[2 * cur + 1] && (2 * cur + 2 >= n || v[cur] >= v[2 * cur + 2])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint dst = -1;\n\t\t\tif (2 * cur + 2 >= n || v[2 * cur + 1] >= v[2 * cur + 2]) {\n\t\t\t\tdst = 2 * cur + 1;\n\t\t\t} else {\n\t\t\t\tdst = 2 * cur + 2;\n\t\t\t}\n\t\t\tint tmp = v[cur];\n\t\t\tv[cur] = v[dst];\n\t\t\tv[dst] = tmp;\n\t\t\tmaxHeapify(dst);\n\t\t}\n\t}\n\n\tstatic void tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n}", "code2": "import java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    static void solve() {\n        int n = nextInt();\n\n        long ans = nextLong();\n//        System.out.println(ans);\n        for (int i = 1; i < n; i++) {\n            long t = nextLong();\n            ans = lcm(ans, t);\n//            System.out.println(ans);\n        }\n        out.println(ans);\n    }\n\n    static final int MOD = 1_000_000_007;\n    static long[] fac, finv, inv;\n\n    // nCk\u306e\u521d\u671f\u5316\n    static void comInit(int max) {\n        fac = new long[max];\n        finv = new long[max];\n        inv = new long[max];\n        fac[0] = fac[1] = 1;\n        finv[0] = finv[1] = 1;\n        inv[1] = 1;\n\n        for (int i = 2; i < max; i++) {\n            fac[i] = fac[i - 1] * i % MOD;\n            inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;\n            finv[i] = finv[i - 1] * inv[i] % MOD;\n        }\n    }\n\n    // nCk\u306e\u8a08\u7b97\n    static long com(int n, int k) {\n        if (n < k)\n            return 0;\n        if (n < 0 || k < 0)\n            return 0;\n        return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n    }\n\n    static PrintWriter out;\n    static Scanner sc;\n\n    static int[][] newIntArray(int h, int w, int value) {\n        int[][] ret = new int[h][w];\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                ret[i][j] = value;\n            }\n        }\n        return ret;\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(sc.next());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(sc.next());\n    }\n\n    static String nextString() {\n        return sc.next();\n    }\n\n    static int[] nextIntArray(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    static List<Integer> nextIntList(int n) {\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextInt());\n        }\n        return list;\n    }\n\n    static List<Double> nextDoubleList(int n) {\n        List<Double> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add((double) nextInt());\n        }\n        return list;\n    }\n\n    static List<Long> nextLongList(int n) {\n        List<Long> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextLong());\n        }\n        return list;\n    }\n\n    static char[][] nextCharArray(int h, int w) {\n        char[][] c = new char[h][w];\n        for (int i = 0; i < h; i++) {\n            String str = nextString();\n            for (int j = 0; j < w; j++) {\n                c[i][j] = str.charAt(j);\n            }\n        }\n        return c;\n    }\n\n    static <T extends Comparable<? super T>> void sort(List<T> list) {\n        Collections.sort(list);\n    }\n\n    // greatest common divisor\n    // \u6700\u5927\u516c\u7d04\u6570\n    static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    // least common multiple\n    // \u6700\u5c0f\u516c\u500d\u6570\n    static long lcm(long a, long b) {\n        if (a >= b && a % b == 0)\n            return a;\n        if (b > a && b % a == 0)\n            return b;\n\n//        return a * b / gcd(a, b);\n        if (a > b) {\n            return (a / gcd(a, b)) * b;\n        } else {\n            return (b / gcd(a, b)) * a;\n        }\n    }\n\n    // base\u306en\u4e57\u3092\u8a08\u7b97\u3092\u8fd4\u3059\n    static int pow(int base, int n) {\n        int ret = 1;\n        for (int i = 0; i < n; i++) {\n            ret *= base;\n        }\n        return ret;\n    }\n\n    // return n^k mod m\n    static long powMod(long n, long k, long m) {\n        if (k == 0) {\n            return 1;\n        } else if (k % 2 == 1) {\n            return powMod(n, k - 1, m) * n % m;\n        } else {\n            long tmp = powMod(n, k / 2, m);\n            return tmp * tmp % m;\n        }\n    }\n\n    // int\u3092length\u6841\u306ebit\u6587\u5b57\u5217\u306b\u5909\u63db\n    static String toBitString(int length, int n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = length - 1; i >= 0; i--) {\n            if ((n >> i) % 2 == 1) {\n                sb.append(\"1\");\n            } else {\n                sb.append(\"0\");\n            }\n        }\n        return sb.toString();\n    }\n\n    public static void main(String[] args) {\n        out = new PrintWriter(System.out);\n        sc = new Scanner(System.in);\n\n        solve();\n\n        out.flush();\n        sc.close();\n    }\n\n}\n", "label": 0}, {"id": 709, "code1": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    //input\n    int d = sc.nextInt();\n    /*\n    int[] c = new int[26]; //array of decrease\n    for(int i = 0; i < c.length; i++){\n      c[i] = sc.nextInt();\n    }\n    */\n\n    int[] c = new int[26];\n    for(int i = 0; i < 26; i++){\n      c[i] = sc.nextInt();\n    }\n\n    int[][] s = new int[d][26]; //two dimensional array of increase\n    for(int row = 0; row < s.length; row++){ //day\n      for(int col = 0; col < s[row].length; col++){ //contest number\n        s[row][col] = sc.nextInt();\n      }\n    }\n    int[] t = new int[d]; //array of contest numbers of the day\n    for(int i = 0; i < t.length; i++){\n      t[i] = 13;\n    }\n\n    //output\n    //based on increase\n    /*\n    int largestNum = s[0][0];\n    int largestNumRow = 0;\n    int largestNumCol = 0;\n    for(int row = 0; row < s.length; row++){\n      for(int col = 0; col < s[row].length; col++){\n        if( s[row][col] > largestNum ){\n          largestNum = s[row][col];\n          largestNumRow = row;\n          largestNumCol = col;\n        }\n      }\n    }\n\n    int largestNuM = c.get(0);\n    int largestNumPos = 0;\n    for(int j = 0; j < c.size(); j++){\n      if( c.get(j) > largestNuM ){\n        largestNuM = c.get(j);\n        largestNumPos = j;\n      }\n    }\n\n    for(int i = 0; i < d; i++){\n      if( largestNum > largestNuM ){\n        System.out.println(largestNumCol+1);\n      }else{\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n    /*\n\n    for(int m = 0; m < d; m++){\n      if( m%2 == 0 ){\n        System.out.println(largestNumCol+1);\n      }else{\n        int largestNuM = c.get(0);\n        int largestNumPos = 0;\n        for(int j = 0; j < c.size(); j++){\n          if( c.get(j) > largestNuM ){\n            largestNuM = c.get(j);\n            largestNumPos = j;\n          }\n        }\n        c.remove(largestNumPos);\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n\n    for(int i = 0; i < d; i++){\n      System.out.println((int)(Math.random()*26+1));\n      //System.out.println(largestNumCol+1);\n    }\n\n    /*\n    int value = 0;\n    for(int i = 0; i < t.length; i++){\n      int contestNum = t[i]-1;\n      int day = i+1;\n      value += s[day-1][contestNum]; //increase\n      for(int j = 0; j < c.length; j++){\n        if( !(j == contestNum) ){\n          int daySinceLast = day;\n          for(int m = 0; m < i; m++){\n            if( j == t[m]-1 ){\n              daySinceLast = day-m-1;\n            }\n          }\n          value -= c[j]*(daySinceLast); //decrease (amount of decrease * days since last one)\n        }\n      }\n      System.out.println(value);\n    }\n    */\n\n\n  }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "label": 0}, {"id": 63, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "label": 1}, {"id": 348, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\n \nclass Main implements Runnable {\n  // static Scanner in;\n  static FastReader in;\n  static PrintWriter out;\n  static int[][] dirs8 = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1}};\n  static int[][] dirs = {{0, -1}, {1, 0}, {0, +1}, {-1, 0}};\n \n  static int[][] E;\n  // static List<int[]>[] adj;\n  static List<Integer>[] adj;\n  static int[] vis;\n \n  static long INFL = (long) 1e15 + 7;\n  static int INF = (int) 1e9 + 7;\n  static int mod = 998244353;\n  \n  static int T, n, m, k, count, cur, w;\n  static boolean flag;\n  static int[] a, b;\n  static int[][] map;\n\n  static int[] par;\n  static boolean[] dp;\n\n  static void solve() throws Exception {\n    n = in.nextInt();\n    k = in.nextInt();\n    a = new int[n]; \n    for (int i = 0; i < n; i++) {a[i] = in.nextInt();}\n    dp = new boolean[k + 1];\n    // dp[i]: win(true) or loss(false) if \"I\" have i stones left and I am to play this round\n    dp[0] = false;\n    for (int i = 1; i <= k; i++) {\n      for (int x : a) {\n        if (x > i) {break;}\n        if (!dp[i - x]) {dp[i] = true; break;}\n      }\n    }\n    out.println(dp[k] ? \"First\" : \"Second\");\n  }\n\n\n  public static void main(String[] args) throws Exception {\n \n    // in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n    in = new FastReader();\n    out = new PrintWriter(System.out);\n \n    // int numOfTests = in.nextInt();\n    // for (int caseNum = 1; caseNum <= numOfTests; caseNum++) {\n    //   // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    //   // t.start();\n    //   // t.join();\n    //   solve();\n    // }\n \n    // // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    // // t.start();\n    // // t.join();\n    solve();\n \n    out.flush();\n    out.close();\n  }\n \n  @Override\n  public void run() {\n    try {\n      solve();\n    } catch (Exception e) {\n      e.printStackTrace(); \n    }\n  }\n \n  static class FastReader {\n    public BufferedReader br; \n    StringTokenizer st; \n    public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));} \n    String next() { \n      while (st == null || !st.hasMoreElements()) { \n          try {st = new StringTokenizer(br.readLine());} \n          catch (IOException e) {e.printStackTrace();} \n      } \n      return st.nextToken(); \n    } \n    int nextInt() {return Integer.parseInt(next());} \n    long nextLong() {return Long.parseLong(next());} \n    double nextDouble() {return Double.parseDouble(next());} \n    String nextLine() {\n      String str = \"\"; \n        try {str = br.readLine();} \n        catch (IOException e) {e.printStackTrace();} \n        return str; \n    }\n  }\n\n  static void as(boolean result) throws Exception {\n    if (!result) {\n      throw new Exception();\n    }\n  }\n\n  static int modInverse(int a, int m) { \n    int m0 = m; \n    int y = 0, x = 1; \n    if (m == 1) {return 0;} \n    while (a > 1) { \n      // q is quotient \n      int q = a / m; \n      int t = m; \n      // m is remainder now, process \n      // same as Euclid's algo \n      m = a % m; \n      a = t; \n      t = y; \n      // Update x and y \n      y = x - q * y; \n      x = t; \n    } \n    // Make x positive \n    if (x < 0) \n      x += m0; \n    return x; \n  } \n} \n", "label": 0}, {"id": 437, "code1": "import java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic Scanner sc;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//InputStream in = new FileInputStream(\"src/input.txt\");\n\t\tInputStream in = System.in;\n\t\t//PrintStream out = new PrintStream(\"src/output.txt\");\n\n\t\t//System.setOut(out);\n\n\t\tsc = new Scanner(in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] a = new int[N];\n\t\tint answer = 0;\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tif(a[a[i]-1] == i+1){\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(answer/2);\n\n\t\t//out.close();\n\t}\n}", "code2": "import java.io.File;\nimport java.io.IOException;\nimport java.util.*;\n \npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\t//File file = new File(\"input.txt\");\n\t\t//Scanner in = new Scanner(file);\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tString SS = in.next();\n\t\tString T = in.next();\n\t\t\n\t\tint index = SS.length() - T.length();\n\t\t\n\t\twhile(index >= 0){\n\t\t\tString s = SS.substring(index, index + T.length());\n\t\t\t\n\t\t\tboolean tf = true;\n\t\t\tfor(int i = 0; i < T.length(); i++){\n\t\t\t\tif(s.charAt(i) != '?' && s.charAt(i) != T.charAt(i)){\n\t\t\t\t\ttf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(tf){\n\t\t\t\tSS = new StringBuilder(SS).replace(index, index + s.length(), T).toString();\n\t\t\t\tSS = SS.replace('?', 'a');\n\t\t\t\tSystem.out.println(SS);\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"UNRESTORABLE\");\n\t}\n}", "label": 0}, {"id": 56, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n\tBufferedReader sc=new BufferedReader(new InputStreamReader(System.in));\n\tString st, sx[] = {\"A\", \"B\", \"AB\", \"O\"};\n\tint a=0, b=0, ab=0, o=0;\n\ttry{\n\t    while((st=sc.readLine())!=null){\n\t\tString[] bld = st.split(\",\");\n\t\tif(bld[1].equals(sx[0]))\n\t\t    a++;\n\t\telse if(bld[1].equals(sx[1]))\n\t\t    b++;\n\t\telse if(bld[1].equals(sx[2]))\n\t\t    ab++;\n\t\telse\n\t\t    o++;\n\t    }\n\t    System.out.println(a);\n\t    System.out.println(b);\n\t    System.out.println(ab);\n\t    System.out.println(o);\n\t}catch(Exception e){\n\t    System.out.println(\"Error\");\n\t}\n    }\n}", "label": 1}, {"id": 210, "code1": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) throws Exception{\n\t\tScanner scan=new Scanner(System.in);\n\t\tString A=scan.next();\n\t\tString B=scan.next();\n\t\tString C=scan.next();\n\t\tint ac=0,bc=0,cc=0,c=0;\n\t\tfor(;;) {\n\t\t\tif(c==0) {\n\t\t\t\tac++;\n\t\t\t\tif(ac==A.length()+1) {\n\t\t\t\t\tSystem.out.println(\"A\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(A.charAt(ac-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}if(c==1) {\n\t\t\t\tbc++;\n\t\t\t\tif(bc==B.length()+1) {\n\t\t\t\t\tSystem.out.println(\"B\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(B.charAt(bc-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}if(c==2) {\n\t\t\t\tcc++;\n\t\t\t\tif(cc==C.length()+1) {\n\t\t\t\t\tSystem.out.println(\"C\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswitch(C.charAt(cc-1)) {\n\t\t\t\tcase 'a':c=0;break;\n\t\t\t\tcase 'b':c=1;break;\n\t\t\t\tcase 'c':c=2;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 388, "code1": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t\n\tint cmp (String p1, String p2) {\n\t\tif( p1.length() != p2.length() ) return p2.length() - p1.length();\n\t\treturn p2.compareTo(p1);\n\t}\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;) {\n\t\t\tint w = sc.nextInt();\n\t\t\tint h = sc.nextInt();\n\t\t\tif((w|h) == 0 ) break;\n\t\t\t\n\t\t\tString[][] dp = new String[h+1][w+1];\n\t\t\tString pass = \"\";\n\t\t\tchar[][] map = new char[h+1][w+1];\n\t\t\t\n\t\t\tfor(String[] a: dp) fill(a, \"\");\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) {\n\t\t\t\tString str = sc.next();\n\t\t\t\tfor(int j=1;j<=w;j++) {\n\t\t\t\t\tmap[i][j] = str.charAt(j-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=1;i<=h;i++) for(int j=1;j<=w;j++) {\n\t\t\t\tif( '0' <= map[i][j] && map[i][j] <= '9' ) {\n\t\t\t\t\tif( map[i][j] == '0' && dp[i-1][j].equals(\"\") && dp[i][j-1].equals(\"\") ) continue;\n\t\t\t\t\tdp[i][j] = ( cmp(dp[i-1][j], dp[i][j-1])<0? dp[i-1][j]: dp[i][j-1] ) + (char)map[i][j];\n\t\t\t\t}\n\t\t\t\tpass = cmp(pass, dp[i][j])<0? pass: dp[i][j];\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(pass);\n\t\t\t\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "label": 0}, {"id": 274, "code1": "import java.util.Scanner;\n\n\npublic class Main{\n\t\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNextInt()) {\n\t\t\tint in = sc.nextInt();\n\t\t\tSystem.out.println(numOfArea(in));\n\t\t}\n\t\tsc.close();\n\t}\n\t\n\tprivate static int numOfArea(int n) {\n\t\treturn 1 + n * (n + 1) / 2;\n\t}\n\t\n}", "code2": "import java.util.Scanner;\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tint n, num;\n\t\t\n\t\twhile (input.hasNext()){\n\t\t\tn = input.nextInt();\n\t\t\tnum = (n + 1) * n / 2 + 1;\n\t\t\tSystem.out.println(num);\n\t\t}\n\t}\n}", "label": 1}, {"id": 311, "code1": "import java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayDeque;\nimport java.util.Deque;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Main{\n          public static void main(String[] args) {\n                  Scanner scan = new Scanner(System.in);\n                  int count = 0;\n                  int N = scan.nextInt();\n                  int a[] = new int[N];\n                  for (int i = 0; i < N; i++) {\n                          a[i] = scan.nextInt();\n                  }\n                  for(int j = 1; j < N; j++){\n                          if (a[j-1] == a[j]) {\n                                  a[j] = 10001;\n                                  count++;\n                          }\n                  }\n                  System.out.println(count);\n                  }\n}\n", "code2": "import java.util.*;\nclass Main {\n\tstatic int n;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) break;\n\t\t\tint maxDistance = 0;\n\t\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d = sc.nextInt() + sc.nextInt();\n\t\t\t\tmap.put(d, p);\n\t\t\t\tmaxDistance = Math.max(d, maxDistance);\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d %d\\n\", map.get(maxDistance), maxDistance);\n\t\t}\n\t}\n}", "label": 0}, {"id": 715, "code1": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int count = 0;\n    for(int i = 0; i < N.length(); i++){\n      if(N.charAt(i) == '2') count++;\n    }\n    System.out.println(count);\n  }\n}", "code2": "import java.util.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(), C = sc.nextInt();\n\t\tint D[][] = new int[C][C];\n\t\tint c[][] = new int[N][N];\n\t\t\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tD[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\t\n\t\t//\u30ef\u30fc\u30b7\u30e3\u30eb\u30d5\u30ed\u30a4\u30c9\n//\t\tfor(int k=0;k<C;k++) {\n//\t\t\tfor(int i=0;i<C;i++) {\n//\t\t\t\tfor(int j=0;j<C;j++) {\n//\t\t\t\t\tD[i][j]=Math.min(D[i][j], D[i][k]+D[k][j]);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n\t\t\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\tc[i][j] = sc.nextInt()-1;//0index\n\t\t\t}\n\t\t}\n\t\tsc.close(); \n\t\t\n\t\tint costSum0[] = new int[C]; //%3==0\n\t\tint costSum1[] = new int[C];\n\t\tint costSum2[] = new int[C];\n\t\t\n\t\tfor(int color=0;color<C;color++) {\n\t\t\tfor(int i=0;i<N;i++) {\n\t\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\t\tint nowColor = c[i][j];\n\t\t\t\t\tif((i+j)%3==0) costSum0[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==1) costSum1[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==2) costSum2[color] += D[nowColor][color];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = Integer.MAX_VALUE/2;\n\t\t//\u4f59\u308a\uff11\u306e\u3068\u3053\u308d\u5168\u901a\u308a\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tfor(int k=0;k<C;k++) {\n\t\t\t\t\tif(i==j||j==k||k==i)continue;\n\t\t\t\t\tint sum = costSum0[i]+costSum1[j]+costSum2[k];\n\t\t\t\t\tans = Math.min(ans,sum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}", "label": 0}, {"id": 653, "code1": "/*\n    Arnab Chanda \n*/\n\n// All imports here\n\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.InputStream;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n// Template code starts here //\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Debugger debug = new Debugger(out);\n        Objectify objectify = new Objectify(debug);\n        Task solver = new Task();\n        int test = 1;\n        while(test-->0){\n            solver.solve(1, in, out, debug, objectify);\n        }\n\t\tout.close();\n\t}\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n \n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public Double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public float nextFloat() {\n        return Float.parseFloat(next());\n    }\n \n}\n\nclass Debugger{\n    PrintWriter out;\n\n    Debugger(PrintWriter out){    \n        this.out = out;\n    }\n\n    public <T> void printList(List<T> arrayList){\n        for( Object ob: arrayList){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printSet(Set<T> set){\n        for(Object ob: set){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printMap(Map<?,?> map){\n        for(Object ob: map.keySet()){\n            System.out.println(ob+\" : \"+map.get(ob));\n        }\n    }\n}\n\nclass Objectify{\n    \n    Debugger debug;\n\n    Objectify(Debugger ob){ debug = ob; }\n\n    public void printArr(int[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(double[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(long[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(char[] arr){ debug.printList( String.valueOf(arr).chars().mapToObj(c -> (char) c).collect(Collectors.toList())); }\n    public void printArr(String[] arr){ debug.printList(Arrays.asList(arr)); }\n\n    public void printMatrix(int[][] arr){ for(int a[]:arr) printArr(a); }\n    public void printMatrix(double[][] arr){ for(double a[]:arr) printArr(a); }\n    public void printMatrix(long[][] arr){ for(long a[]:arr) printArr(a); }\n    public void printMatrix(char[][] arr){ for(char a[]:arr) printArr(a); }\n    public void printMatrix(String[][] arr){ for(String a[]:arr) printArr(a); }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Template code ends here\n\n\nclass Task {\n\n    final long MOD = (int)Math.pow(10,9)+7;\n\n    public void solve(int testNumber, InputReader sc, PrintWriter out, Debugger debug, Objectify objectify) {\n        \n        // write your code here\n        int k = sc.nextInt();\n\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n\n        for(int i = A; i <= B; ++i){\n            if (i%k == 0){\n                out.println(\"OK\");\n                return;\n                // break;\n            }\n        }\n\n        out.println(\"NG\");\n    }\n}", "code2": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt(), m = in.nextInt();\n\t\tout.println((1L << m) * (1900 * m + 100 * (n - m))); \n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "label": 0}, {"id": 232, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tint n;\n\tint max=1000000;\n\tint[] prime;\n\tboolean[] isPrime;\n\n\tvoid run(){\n\t\tint p=0;\n\t\tprime=new int[max];\n\t\tisPrime=new boolean[max+1];\n\t\tArrays.fill(isPrime, true);\n\t\tisPrime[0]=isPrime[1]=false;\n\t\tfor(int i=2; i<=max; i++){\n\t\t\tif(isPrime[i]){\n\t\t\t\tprime[p++]=i;\n\t\t\t\tfor(int j=2*i; j<=max; j+=i){\n\t\t\t\t\tisPrime[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(;;){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tfor(int i=0; i<p; i++){\n\t\t\t\tif(prime[i]>n/2){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(isPrime[n-prime[i]]){\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintln(\"\"+ans);\n\t\t}\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 1}, {"id": 774, "code1": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n// import java.awt.Point;\n \npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n \n    static int mod = 1_000_000_007;\n    // int mod = 998244353;\n    long inf = Long.MAX_VALUE/2;\n\n    void solve(){\n        char[] c = ns().toCharArray();\n        int n = c.length;\n        int mindist = n;\n        for(int i = 0; i < n-1; i++){\n            if(c[i]==c[i+1]) continue;\n            int dist = Math.max(i+1, n-1-i);\n            mindist = Math.min(mindist, dist);\n        }\n        out.println(mindist);\n    }\n\n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n \n}\n", "code2": "import java.io.*;\nimport java.util.StringTokenizer;\nimport java.util.Arrays;\n\nclass Point {\n\tint x,y;\n\tPoint(int x,int y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString buf;\n\t\tint w,h,xs,ys,xg,yg,n,c,d,x,y;\n\n\t\ttry {\n\t\t\twhile (!(buf = br.readLine()).equals(\"0 0\")) {\n\t\t\t\tStringTokenizer st = new StringTokenizer(buf);\n\t\t\t\tw = Integer.parseInt(st.nextToken());\n\t\t\t\th = Integer.parseInt(st.nextToken());\n\t\t\t\tint board[][] = new int[h][w];\n\t\t\t\tint check[][] = new int[h][w];\n\t\t\t\tfor (int i=0;i<h;i++) {\n\t\t\t\t\tArrays.fill(board[i],-1);\n\t\t\t\t\tArrays.fill(check[i],0);\n\t\t\t\t}\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\txs = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tys = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\txg = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tyg = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tn = Integer.parseInt(br.readLine());\n\t\t\t\tfor (int i=0;i<n;i++) {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t\tc = Integer.parseInt(st.nextToken());\n\t\t\t\t\td = Integer.parseInt(st.nextToken());\n\t\t\t\t\tx = Integer.parseInt(st.nextToken());\n\t\t\t\t\ty = Integer.parseInt(st.nextToken());\n\t\t\t\t\tPutBlock(board,x,y,c,d);\n\t\t\t\t}\n\t\t\t\tif (board[ys][xs]==-1) {\n\t\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tboolean OK = false;\n\t\t\t\tPoint queue[] = new Point[h*w];\n\t\t\t\tint p = 0;\n\t\t\t\tqueue[p++] = new Point(xs,ys);\n\t\t\t\twhile (p>0) {\n\t\t\t\t\tPoint dq = queue[--p];\n\t\t\t\t\tcheck[dq.y][dq.x] = 1;\n\t\t\t\t\tif (dq.x==xg&&dq.y==yg) {\n\t\t\t\t\t\tOK = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.x>0) {\n\t\t\t\t\t\tif (board[dq.y][dq.x-1]==board[dq.y][dq.x]&&check[dq.y][dq.x-1]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x-1,dq.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.x<w-1) {\n\t\t\t\t\t\tif (board[dq.y][dq.x+1]==board[dq.y][dq.x]&&check[dq.y][dq.x+1]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x+1,dq.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.y>0) {\n\t\t\t\t\t\tif (board[dq.y-1][dq.x]==board[dq.y][dq.x]&&check[dq.y-1][dq.x]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x,dq.y-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.y<h-1) {\n\t\t\t\t\t\tif (board[dq.y+1][dq.x]==board[dq.y][dq.x]&&check[dq.y+1][dq.x]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x,dq.y+1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (OK) System.out.println(\"OK\");\n\t\t\t\telse System.out.println(\"NG\");\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic static void PutBlock(int[][] b,int x,int y,int c,int target) {\n\t\tif (target==0) {\n\t\t\tfor (int i=y-1;i<y+1;i++) {\n\t\t\t\tfor (int j=x-1;j<x+3;j++) b[i][j] = c;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i=y-1;i<y+3;i++) {\n\t\t\t\tfor (int j=x-1;j<x+1;j++) b[i][j] = c;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void PrintBoard(int[][] b,int h,int w) {\n\t\tfor (int i=0;i<h;i++) {\n\t\t\tfor (int j=0;j<w;j++) System.out.print(b[i][j]+\" \");\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}", "label": 0}, {"id": 744, "code1": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.awt.Point;\n\npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n    int n;\n    void solve()\n    {\n        n = ni();\n        int[] d  = new int[n+1];\n        d[0] = 0;\n        for(int i = 0; i < n; i++){\n            d[i+1] = ni();\n        }\n        n++;\n        boolean[] seen = new boolean[25];\n        int min = 0;\n        int ans = 0;\n        for(int i = 0; i <= 24; i++){\n            int[][] e = new int[n][2];\n            e[0][0] = i;\n            e[0][1] = i;\n            for(int j = 0; j < n-1; j++){\n                e[j+1][0] = (d[j+1]+i)%24;\n                e[j+1][1] = (-d[j+1]+i+24)%24;\n            }\n            int left = 1;\n            int right = 24;\n            while(left+1<right){\n                int res = (left+right)/2;\n                if(f(e,res,0,seen)) left = res;\n                else{\n                    right = res;\n                }\n            }\n            if(left>min){\n                // if(left==5){\n                //     out.println(i);\n                // }\n                if(left == 1){\n                    if(f(e,left,0,seen)){\n                        min = left;\n                    }\n                }\n                else min = left;\n            }\n        }\n\n        ans = min;\n        out.println(ans);\n    }\n\n    boolean f(int[][] d, int sub, int k, boolean[] seen){\n        if(k==n){\n            return true;\n        }\n        boolean res = false;\n        for(int i = 0; i < 2; i++){\n            boolean[] seenc  = new boolean[25];\n            for(int j = 0; j <= 24; j++) seenc[j] = seen[j];\n            seenc[d[k][i]] = true;\n            if(d[k][i]==0) seenc[24] = true;\n            if(d[k][i]==24) seenc[0] = true;\n            for(int j = 0; j <= 24; j++){\n                if(d[k][i]-sub < j && j < d[k][i]+sub) seenc[j] = true;\n                if(d[k][i]-sub < 0 && j > d[k][i]-sub+24) seenc[j] = true;\n                if(d[k][i]+sub > 24 && j < d[k][i]+sub-24) seenc[j] = true;\n            }\n            // for(int g = 0; g <= 24; g++){\n            //     if(seenc[g]) out.print(g);\n            // }\n            // out.println();\n            // out.println(d[k][i]);\n            // if(!seen[d[k][i]])out.println(\"ok\");\n            // else out.println(\"ng\");\n            if(!seen[d[k][i]]){\n                if(d[k][i]==0){\n                    if(!seen[24])res |= f(d, sub, k+1, seenc);\n                } \n                else if(d[k][i]==24){\n                    if(!seen[0])res |= f(d, sub, k+1, seenc);\n                } \n                else res |= f(d, sub, k+1, seenc);\n            }\n        }  \n        return res;\n    }   \n    \n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        \n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n\n    static class ArrayUtils {\n        public static void fill(double[][] array, double value) {\n            for (double[] a : array) Arrays.fill(a, value);\n        }\n \n        public static void fill(double[][][] array, double value) {\n            for (double[][] l : array) fill(l, value);\n        } \n    }\n}", "code2": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "label": 0}, {"id": 272, "code1": "import java.util.Scanner;\n\n\npublic class Main{\n\t\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNextInt()) {\n\t\t\tint in = sc.nextInt();\n\t\t\tSystem.out.println(numOfArea(in));\n\t\t}\n\t\tsc.close();\n\t}\n\t\n\tprivate static int numOfArea(int n) {\n\t\treturn 1 + n * (n + 1) / 2;\n\t}\n\t\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n * The Number of Area\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = \"\";\n\n\t\twhile ((line = br.readLine()) != null && !line.isEmpty()) {\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tSystem.out.println((n * (n + 1) >> 1) + 1);\n\t\t}\n\t}\n}", "label": 1}, {"id": 221, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "label": 1}, {"id": 736, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tlong a = sc.nextLong();\n\t\tlong b = sc.nextLong();\n\t\tlong[] h = new long[n];\n\t\tfor(int i = 0; i < n; i++) h[i] = sc.nextLong();\n\t\tlong l = 0, r = Integer.MAX_VALUE;\n\t\twhile(r - l != 1) {\n\t\t\tlong mid = (r + l) / 2;\n\t\t\tlong[] x = Arrays.copyOf(h, h.length);\n\t\t\tlong cnt = 0;\n\t\t\tfor(int i = 0; i < x.length; i++) {\n\t\t\t\tif(x[i] - b * mid <= 0) continue;\n\t\t\t\tcnt += ((x[i] - b * mid) + (a - b - 1)) / (a - b);\n\t\t\t}\n\t\t\tif(mid >= cnt) r = mid;\n\t\t\telse l = mid;\n\t\t}\n\t\tSystem.out.println(r);\n\t}\n}\n", "code2": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.awt.Point;\n\npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n    int n;\n    void solve()\n    {\n        n = ni();\n        int[] d  = new int[n+1];\n        d[0] = 0;\n        for(int i = 0; i < n; i++){\n            d[i+1] = ni();\n        }\n        n++;\n        boolean[] seen = new boolean[25];\n        int min = 0;\n        int ans = 0;\n        for(int i = 0; i <= 24; i++){\n            int[][] e = new int[n][2];\n            e[0][0] = i;\n            e[0][1] = i;\n            for(int j = 0; j < n-1; j++){\n                e[j+1][0] = (d[j+1]+i)%24;\n                e[j+1][1] = (-d[j+1]+i+24)%24;\n            }\n            int left = 1;\n            int right = 24;\n            while(left+1<right){\n                int res = (left+right)/2;\n                if(f(e,res,0,seen)) left = res;\n                else{\n                    right = res;\n                }\n            }\n            if(left>min){\n                // if(left==5){\n                //     out.println(i);\n                // }\n                if(left == 1){\n                    if(f(e,left,0,seen)){\n                        min = left;\n                    }\n                }\n                else min = left;\n            }\n        }\n\n        ans = min;\n        out.println(ans);\n    }\n\n    boolean f(int[][] d, int sub, int k, boolean[] seen){\n        if(k==n){\n            return true;\n        }\n        boolean res = false;\n        for(int i = 0; i < 2; i++){\n            boolean[] seenc  = new boolean[25];\n            for(int j = 0; j <= 24; j++) seenc[j] = seen[j];\n            seenc[d[k][i]] = true;\n            if(d[k][i]==0) seenc[24] = true;\n            if(d[k][i]==24) seenc[0] = true;\n            for(int j = 0; j <= 24; j++){\n                if(d[k][i]-sub < j && j < d[k][i]+sub) seenc[j] = true;\n                if(d[k][i]-sub < 0 && j > d[k][i]-sub+24) seenc[j] = true;\n                if(d[k][i]+sub > 24 && j < d[k][i]+sub-24) seenc[j] = true;\n            }\n            // for(int g = 0; g <= 24; g++){\n            //     if(seenc[g]) out.print(g);\n            // }\n            // out.println();\n            // out.println(d[k][i]);\n            // if(!seen[d[k][i]])out.println(\"ok\");\n            // else out.println(\"ng\");\n            if(!seen[d[k][i]]){\n                if(d[k][i]==0){\n                    if(!seen[24])res |= f(d, sub, k+1, seenc);\n                } \n                else if(d[k][i]==24){\n                    if(!seen[0])res |= f(d, sub, k+1, seenc);\n                } \n                else res |= f(d, sub, k+1, seenc);\n            }\n        }  \n        return res;\n    }   \n    \n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        \n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n\n    static class ArrayUtils {\n        public static void fill(double[][] array, double value) {\n            for (double[] a : array) Arrays.fill(a, value);\n        }\n \n        public static void fill(double[][][] array, double value) {\n            for (double[][] l : array) fill(l, value);\n        } \n    }\n}", "label": 0}, {"id": 685, "code1": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tint n;\n\tlong mo = 1_000_000_000 + 7;\n\tlong[] fac = new long[3000000];\n\tlong[] ifac = new long[3000000];\n\tlong[] inv = new long[3000000];\n\t{\n\t\tfac[0] = 1;\n\t\tfor (int i = 1; i < fac.length; ++i) {\n\t\t\tfac[i] = i * fac[i - 1] % mo;\n\t\t}\n\t\tinv[1] = 1;\n\t\tfor (int i = 2; i < inv.length; ++i) {\n\t\t\tinv[i] = mo - inv[(int) (mo % i)] * (mo / i) % mo;\n\t\t}\n\t\tifac[0] = 1;\n\t\tfor (int i = 1; i < ifac.length; ++i) {\n\t\t\tifac[i] = ifac[i - 1] * inv[i] % mo;\n\t\t}\n\t}\n\n\tlong comb(int n, int k) {\n\t\treturn fac[n] * ifac[n - k] % mo * ifac[k] % mo;\n\t}\n\n\tlong g(int k) {\n\t\tif (2 * k < n)\n\t\t\treturn 0;\n\t\tint a = 2 * k - n;\n\t\tint b = n - k;\n\t\treturn comb(a - 1 + b, b - 1) * fac[k] % mo * fac[n - 1 - k] % mo;\n\t}\n\n\tlong f(int k) {\n\t\treturn (g(k) - g(k - 1) + mo) % mo;\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner();\n\t\tn = (int) sc.nextLong();\n\t\tlong ans = 0;\n\t\tfor (int i = (n + 1) / 2; i <= n - 1; ++i) {\n\t\t\tans = (ans + f(i) * i % mo) % mo;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n\tlong pow(long a, long n) {\n\t\tlong ret = 1;\n\t\tfor (; n > 0; n >>= 1, a = a * a % mo) {\n\t\t\tif (n % 2 == 1) {\n\t\t\t\tret = ret * a % mo;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tlong inv(long a) {\n\t\treturn pow(a, mo - 2);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tclass Scanner {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[ptr++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isPrintableChar(int c) {\n\t\t\treturn 33 <= c && c <= 126;\n\t\t}\n\n\t\tprivate void skipUnprintable() {\n\t\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\t\tptr++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskipUnprintable();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n\n}\n", "label": 0}, {"id": 140, "code1": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint c = sc.nextInt();\n\t\t\n\t\tint[] x = {a, b, c};\n\t\t\n\t\tArrays.sort(x);\n\t\t\n\t\tSystem.out.println(x[0] + x[1]);\n\t\t\n\t}\n}\n", "label": 1}, {"id": 310, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "label": 0}, {"id": 561, "code1": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint l = in.nextInt();\n\t\t\tUnionFind u1 = new UnionFind(n);\n\t\t\tUnionFind u2 = new UnionFind(n);\n\t\t\tfor (int i = 0; i < k; i++) {\n\t\t\t\tint p = in.nextInt()-1;\n\t\t\t\tint q = in.nextInt()-1;\n\t\t\t\tu1.link(p, q);\n\t\t\t}\n\t\t\tfor (int i = 0; i < l; i++) {\n\t\t\t\tint r = in.nextInt()-1;\n\t\t\t\tint s = in.nextInt()-1;\n\t\t\t\tu2.link(r, s);\n\t\t\t}\n\t\t\tMap<Long, Integer> roots = new HashMap<Long, Integer>();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlong code = (long)u1.root(i)<< 32 | u2.root(i);\n\t\t\t\troots.merge(code, 1, Integer::sum);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (i > 0)out.print(\" \");\n\t\t\t\tlong code = (long)u1.root(i) << 32 | u2.root(i);\n\t\t\t\tout.print(roots.get(code));\n\t\t\t}\n\n\t\t}\n\n\t\tpublic class UnionFind {\n\t\t\tint[] data;\n\n\t\t\tpublic UnionFind(int n) {\n\t\t\t\tdata = new int[n];\n\t\t\t\tArrays.fill(data, -1);\n\t\t\t}\n\n\t\t\tboolean link(int x, int y) {\n\t\t\t\tx = root(x);\n\t\t\t\ty = root(y);\n\t\t\t\tif (x != y) {\n\t\t\t\t\tif (data[y] < data[x]) {\n\t\t\t\t\t\tdata[y] += data[x];\n\t\t\t\t\t\tdata[x] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[x] += data[y];\n\t\t\t\t\t\tdata[y] = x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn x != y;\n\t\t\t}\n\n\t\t\tint root(int x) {\n\t\t\t\treturn data[x] < 0 ? x : (data[x] = root(data[x]));\n\t\t\t}\n\t\t}\n\t}\n\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] days={\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\"};\n\t\twhile(sc.hasNextInt()){\n\t\t\tint month=sc.nextInt();\n\t\t\tint day=sc.nextInt();\n\t\t\tint a=modd(month);\n\t\t\tint b=a+day;\n\t\t\tif(month==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif((b-1)%7==0){\n\t\t\t\tSystem.out.println(days[0]);\n\t\t}else if((b-1)%7==1){\n\t\t\tSystem.out.println(days[1]);\n\t\t}else if((b-1)%7==2){\n\t\t\tSystem.out.println(days[2]);\n\t\t}else if((b-1)%7==3){\n\t\t\tSystem.out.println(days[3]);\n\t\t}else if((b-1)%7==4){\n\t\t\tSystem.out.println(days[4]);\n\t\t}else if((b-1)%7==5){\n\t\t\tSystem.out.println(days[5]);\n\t\t}else if((b-1)%7==6){\n\t\t\tSystem.out.println(days[6]);\n\t\t}\n\t}\n\n\t}\n\tpublic static int modd(int month){\n\t\tint[] months={31,29,31,30,31,30,31,31,30,31,30,31};\n\t\tint a=0;\n\t\tfor(int i=0; i<=month-2; i++){\n\t\t\ta+=months[i];\n\t\t}\n\n\t\treturn a;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}", "label": 0}, {"id": 645, "code1": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        try (Scanner s = new Scanner(System.in)) {\n            int k = s.nextInt();\n            int a = s.nextInt();\n            int b = s.nextInt();\n            int mod = a % k;\n            int d = b - a;\n            System.out.println((mod == 0 || (k - mod) <= d) ? \"OK\" : \"NG\");\n        }\n    }\n}\n", "label": 0}, {"id": 656, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt(), m = in.nextInt();\n\t\tout.println((1L << m) * (1900 * m + 100 * (n - m))); \n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "label": 0}, {"id": 655, "code1": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\nimport java.util.function.*;\nimport static java.lang.System.out;\n\npublic final class Main {\n    public static void main(String[] args) throws Exception {\n        try (var input = new Reader()) {\n            int k = input.nextInt();\n            int a = input.nextInt();\n          \tint b = input.nextInt();\n          \tfor (int i = a; i <= b; ++i) {\n              \tif (i % k == 0) {\n                  out.printf(\"OK%n\");\n                  return;\n                }\n            }\n          \tout.printf(\"NG%n\");\n        }\n    }\n\n    private static final class Reader implements AutoCloseable {\n        private final int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private FileInputStream fis;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        private Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private Reader(String filename) throws IOException {\n            fis = new FileInputStream(filename);\n            din = new DataInputStream(fis);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        private String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') { break; }\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        private int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ') { c = read(); }\n            boolean neg = (c == '-');\n            if (neg) { c = read(); }\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg) { return -ret; }\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) { buffer[0] = -1; }\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) { fillBuffer(); }\n            return buffer[bufferPointer++];\n        }\n\n        @Override\n        public void close() throws Exception {\n            if (fis != null) {\n                fis.close();\n            }\n\n            if (din != null) {\n                din.close();\n            }\n        }\n    }\n}\n\n", "code2": "// package arc.arc085;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n        long time = m * 1900 + (n - m) * 100;\n\n        out.println(time * (1<<m));\n        out.flush();\n    }\n\n    public static void debug(Object... o) {\n        System.err.println(Arrays.deepToString(o));\n    }\n\n    public static class InputReader {\n        private static final int BUFFER_LENGTH = 1 << 12;\n        private InputStream stream;\n        private byte[] buf = new byte[BUFFER_LENGTH];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int next() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public char nextChar() {\n            return (char) skipWhileSpace();\n        }\n\n        public String nextToken() {\n            int c = skipWhileSpace();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.append((char) c);\n                c = next();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            int c = skipWhileSpace();\n            long sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = next();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = next();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            return Double.valueOf(nextToken());\n        }\n\n        int skipWhileSpace() {\n            int c = next();\n            while (isSpaceChar(c)) {\n                c = next();\n            }\n            return c;\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n}", "label": 0}, {"id": 420, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.*;\n\npublic class Main {\n\n    static <T extends Comparable<? super T>> boolean nextPermutation(T[] sequence) {\n        int first = getFirst(sequence);\n        if (first == -1) return false;\n        int toSwap = sequence.length - 1;\n        while (sequence[first].compareTo(sequence[toSwap]) >= 0) --toSwap;\n        swap(sequence, first++, toSwap);\n        toSwap = sequence.length - 1;\n        while (first < toSwap) swap(sequence, first++, toSwap--);\n        return true;\n    }\n\n    static <T extends Comparable<? super T>> int getFirst(T[] sequence) {\n        for (int i = sequence.length - 2; i >= 0; --i)\n            if (sequence[i].compareTo(sequence[i + 1]) < 0) return i;\n        return -1;\n    }\n\n    static <T extends Comparable<? super T>> void swap(T[] sequence, int i, int j) {\n        T tmp = sequence[i];\n        sequence[i] = sequence[j];\n        sequence[j] = tmp;\n    }\n\n    public static void main(String[] args) {\n        FastScanner fs = new FastScanner();\n        int N = fs.nextInt();\n        Integer[] P = new Integer[N];\n        Integer[] Q = new Integer[N];\n        for (int i = 0; i < N; ++i) P[i] = fs.nextInt();\n        for (int i = 0; i < N; ++i) Q[i] = fs.nextInt();\n\n        Integer[] arr = new Integer[N];\n        for (int i = 0; i < N; ++i) arr[i] = i+1;\n\n        int cnt = 1, pNum = 0, qNum = 0;\n        do {\n            if (Arrays.toString(arr).equals(Arrays.toString(P))) pNum = cnt;\n            if (Arrays.toString(arr).equals(Arrays.toString(Q))) qNum = cnt;\n            ++cnt;\n        } while (nextPermutation(arr));\n\n        System.out.println(Math.abs(pNum - qNum));\n\n    }\n\n\n    static class FastScanner {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b)){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public double nextDouble() { return Double.parseDouble(next());}\n    }\n\n}", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tint INF = 1 << 28;\n\tdouble EPS = 1e-9;\n\n\tint n;\n\tint start, goal, ttl;\n\tLinkedList<Integer>[] graph;\n\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run() {\n\t\tn = sc.nextInt();\n\t\tgraph = new LinkedList[n];\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint u = sc.nextInt() - 1;// \u0083\u008b\u0081[\u0083^\u0094\u00d4\u008d\u0086\n\t\t\tint m = sc.nextInt();\n\t\t\tgraph[u] = new LinkedList<Integer>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint v = sc.nextInt() - 1;\n\t\t\t\tgraph[u].add(v);\n\t\t\t}\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i = 0; i < p; i++) {\n\t\t\tstart = sc.nextInt() - 1;\n\t\t\tgoal = sc.nextInt() - 1;\n\t\t\tttl = sc.nextInt();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve() {\n\t\tLinkedList<Integer> que = new LinkedList<Integer>();\n\t\tboolean[] visited = new boolean[n];\n\t\tint[] d = new int[n];\n\t\tArrays.fill(d, INF);\n\t\tque.offer(start);\n\t\td[start] = 1;\n\t\tvisited[start] = true;\n\t\tfor (; !que.isEmpty();) {\n\t\t\tint u = que.poll();\n\t\t\tfor (int v : graph[u]) {\n\t\t\t\tif (!visited[v]) {\n\t\t\t\t\tque.offer(v);\n\t\t\t\t\td[v] = d[u] + 1;\n\t\t\t\t\tvisited[v] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (d[goal] <= ttl) {\n\t\t\tprintln(\"\" + d[goal]);\n\t\t} else {\n\t\t\tprintln(\"NA\");\n\t\t}\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s) {\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s) {\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 231, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner scan = new Scanner(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tstatic boolean[] prime = new boolean[1000001];\n\n\tpublic static void main(String[] args) {\n\t\tersis();\n\t\twhile(true){\n\t\t\tint n = si();\n\t\t\tif(n==0) break;\n\n\t\t\tint cnt = 0;\n\t\t\tfor (int i = 2; i <= n/2 ; i++) {\n\t\t\t\tif(!prime[i] && !prime[n-i]) cnt++;\n\t\t\t}\n\t\t\tout.println(cnt);\n\t\t}\n\t\tout.flush();\n\t}\n\n\tstatic void ersis(){\n\t\tprime[0] = prime[1] = true;\n\t\tfor (int i = 0; i*i<1000000 ; i++) {\n\t\t\tif(!prime[i])\n\t\t\t\tfor (int j = i*2; j <= 1000000 ; j+=i) {\n\t\t\t\t\tprime[j] = true;\n\t\t\t\t}\n\t\t}\n\t}\n\n\tstatic int si() {\n\t\treturn Integer.parseInt(scan.next());\n\t}\n}", "label": 1}, {"id": 98, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString str = scanner.nextLine();\n\t\tString[] ab = str.split(\" \");\n\t\tint a = Integer.parseInt(ab[0]);\n\t\tint b = Integer.parseInt(ab[1]);\n\t\tif (a > b) {\n\t\t\tSystem.out.println(a - 1);\n\t\t}else {\n\t\t\tSystem.out.println(a);\n\t\t}\n\t\t\n\t\tscanner.close();\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 1}, {"id": 452, "code1": "\nimport java.util.*;\n\npublic class Main {\n    public static void main(final String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        // final int a = sc.nextInt();\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\n        // final String s1 = sc.next();\n        final int a = sc.nextInt();\n        final int b = sc.nextInt();\n        final int c = sc.nextInt();\n        final int k = sc.nextInt();\n        sc.close();\n        int result = 0;\n        if (a >= k) {\n            result = k;\n        } else if (b >= k - a) {\n            result = a;\n        } else if (c >= k - b - a) {\n            result = 2 * a + b - k;\n        }\n\n        System.out.println(result);\n    }\n}\n", "code2": "import java.io.BufferedReader;\n\nimport static java.util.Comparator.*;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.lang.reflect.Array;\nimport java.math.BigDecimal;\nimport java.util.AbstractMap;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\npublic class Main {\n\t\n//\tpublic static Set<String> mem = new HashSet<String>();\n//\tpublic static boolean[] mem_1 = new boolean[100];\n//\tpublic static boolean[] mem_2 = new boolean[100];\n//\tpublic static Set<Integer> mem = new TreeSet<Integer>();\n//\tpublic static Map<String, Integer> mem_1= new HashMap<String, Integer>();\n//\tpublic static Map<String, Integer> mem_2 = new HashMap<String, Integer>();\n\t\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        \n        Solver solver = new Solver();\n        solver.solve(1, in, out);\n        \n        out.close();\n    }\n    \n    // ======================================================================\n    static class Solver {\n    \t\n\t\tList<Pair<Integer, Integer>> lP = new ArrayList<Pair<Integer, Integer>>();\n\t\tList<Pair<Integer, Integer>> lAns = new ArrayList<Pair<Integer, Integer>>();\n\n    \tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n    \t\tlong ans = 0L;\n    \t\tint[] cnt = new int[4];\n    \t\tfor(int i=0; i < 6; i++) {\n        \t\tint a = in.nextInt();\n        \t\tcnt[a-1] += 1;\n        // \t\tout.println(\"[\" + a + \"]\");\n    \t\t}\n    \t\tboolean f = true;\n    \t\tfor(int i=0; i < 4; i++) {\n        // \t\tout.println(\"[\" + cnt[i] + \"]\");\n    \t\t\tif(cnt[i] >= 3)\t\tf = false;\n    \t\t}\n    \t\tif(f)   \t\tout.println(\"YES\");\n    \t\telse            out.println(\"NO\");\n        }\n    }\n    // ======================================================================\n    static class Pair<K, V> extends AbstractMap.SimpleEntry<K, V> {\n        /** serialVersionUID. */\n        private static final long serialVersionUID = 6411527075103472113L;\n\n        public Pair(final K key, final V value) {\n            super(key, value);\n        }\n        public String getString() {\n            return \"[\" + getKey() + \"] [\" + getValue() + \"]\";\n        }\n     }    \n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n \n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n \n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n \n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n \n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n \n        public String nextString() {\n        \tString ret = new String(nextDChar()).trim();\n            return ret;\n        }\n \n        public char[] nextDChar() {\n            int len = 0;\n            len = reads(len, isSpace);\n            char[] ret = new char[len + 1];\n            for (int i=0; i < len; i++)\t\tret[i] = str[i];\n            ret[len] = 0x00;\n            return ret;\n        }\n \n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n \n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n \n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n    }\n}\n", "label": 0}, {"id": 28, "code1": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\npublic class Main { \n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) { \n        while (true) { \n        int n = sc.nextInt(); \n            if (n == 0) { \n            break; \n            } \n            int[] scores = new int[n]; \n            for (int i = 0; i < scores.length; i++) { \n            scores[i] = sc.nextInt(); \n            } \n            double average = 0, variance = 0;\n            for(int i = 0; i < scores.length; i++){ \n                average += scores[i]; \n            } \n            average = average/n; \n            for(int i = 0; i < scores.length; i++){ \n                variance += (scores[i]-average)*(scores[i]-average); \n            }\n            variance = variance/n;\n            System.out.println(Math.sqrt(variance)); \n            } \n        } \n    }\n}\n", "label": 1}, {"id": 130, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int a = scan.nextInt();\n        int b = scan.nextInt();\n        int c = scan.nextInt();\n\n        System.out.println(Math.max(0,c-Math.max(0,a-b)));\n    }\n}\n", "label": 1}, {"id": 444, "code1": "import java.util.*;\n \nclass Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n \n        String S = sc.next();\n        String T = sc.next();\n        int ls = S.length();\n        int lt = T.length();\n        String a = \"?\";\n\n        if(ls<lt){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        int x = -1;\n        for(int i=0; i<=ls-lt; i++){\n            if(S.charAt(i)==T.charAt(0) || S.charAt(i)==a.charAt(0)){\n                for(int j=0; j<lt; j++){\n                    if(S.charAt(i+j)!=T.charAt(j) && S.charAt(i+j)!=a.charAt(0)){\n                        break;\n                    }\n                    if(j==lt-1){\n                        x = i;\n                    }\n                }\n            }\n        }\n        if(x==-1){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        else if(ls==lt){\n            S = T;\n            System.out.println(S);\n            return;\n        }\n        else if(x==0){\n            S = T + S.substring(lt);\n        }\n        else if(x!=0){\n            if(x+lt-1==ls){\n                S = S.substring(0, x) + T;\n            }\n            else{\n                S = S.substring(0, x) + T + S.substring(x + lt);\n            }\n        }\n        String st = \"\";\n        for(int i=0; i<ls; i++){\n            if(S.charAt(i)==a.charAt(0)){\n                st += \"a\";\n            }\n            else{\n                st += String.valueOf((char)S.charAt(i));\n            }\n        }\n        System.out.println(st);\n    }\n}", "code2": "import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Random;\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\n\n            _Scanner sc = new _Scanner(in);\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int c = sc.nextInt();\n            int k = sc.nextInt();\n\n            if (a + b >= k) {\n                out.println(Math.min(k, a));\n            } else {\n                out.println(a - (k - a - b));\n            }\n        }\n    }\n\n    private static void reverse(int[] vs) {\n        for (int i = 0; i < vs.length / 2; i++) {\n            swap(vs, i, vs.length - 1 - i);\n        }\n    }\n\n    static class _Scanner {\n        InputStream is;\n        _Scanner(InputStream is) {\n            this.is = is;\n        }\n        byte[] bb = new byte[1 << 15];\n        int k, l;\n        byte getc() {\n            try {\n                if (k >= l) {\n                    k = 0;\n                    l = is.read(bb);\n                    if (l < 0) return -1;\n                }\n                return bb[k++];\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        byte skip() {\n            byte b;\n            while ((b = getc()) <= 32)\n                ;\n            return b;\n        }\n\n        int nextInt() {\n            int n = 0;\n            int sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        long nextLong() {\n            long n = 0;\n            long sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        public String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); b > 32; b = getc()) {\n                sb.append(((char) b));\n            }\n            return sb.toString();\n        }\n    }\n\n    private static void shuffle(int[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void shuffle(Object[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void swap(int[] ar, int i, int j) {\n        int t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n    private static void swap(Object[] ar, int i, int j) {\n        Object t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n\n}\n", "label": 0}, {"id": 767, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport java.util.Random;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tint[][] G;\n\tMap<Integer,List<Integer>> Genb = new HashMap<>();\n\tint V;\n\tint E;\n\tint Venb;\n\tint Eenb;\n\tlong START_TIME;\n\tint GenbSize;//Genb\u30b0\u30e9\u30d5\u306e1\u8fba\n\tRandom rand = new Random();\n\tpublic void calc() {\n\n\t\tsb = new StringBuilder();\n\n\n\t\t//\u5165\u529b\u51e6\u7406\n\t\tIO sc = new IO();\n\t\tchar[] s = sc.next().toCharArray();\n\t\tlong ans = s.length/2 + s.length%2;\n\t\tchar f = s[0];\n\t\tlong min = INF;\n\t\tfor (int i=1; i < s.length;i++) {\n\t\t\tif (s[i] != f) {\n\t\t\t\tmin = Math.min(min, Math.max(i, s.length-i));\n\t\t\t\tf = s[i];\n\t\t\t}else {\n\t\t\t}\n\t\t}\n\n\t\tans = Math.min(min,s.length);\n\n\t\tSystem.out.println(ans);\n\n\n\n\t}\n\t//\u5f97\u70b9\u8a08\u7b97\u30e1\u30bd\u30c3\u30c9\n\tpublic int calcScore(int[] ans) {\n\t\tint ret = 0;\n\t\tfor (int i=0; i < Venb; i++) {\n\t\t\tif (ans[i] != 0) {\n\t\t\t\tfor(int t: Genb.get(i)) {\n\t\t\t\t\t//\u81ea\u5206\u3088\u308a\u5c0f\u3055\u3044\u8fba\u306b\u5bfe\u3057\u3066\u306f2\u91cd\u306b\u306a\u308b\u306e\u3067\u8db3\u3055\u306a\u3044\n\t\t\t\t\t//\u9802\u70b9\u306b\u306a\u306b\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u306a\u3044\u5834\u5408\u3082\u8db3\u3055\u306a\u3044\n\t\t\t\t\tif (t < i || ans[t] == 0) continue;\n\t\t\t\t\t//\u3053\u306e\u8fba\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u308b\u91cd\u307f\u8db3\u3059\n\t\t\t\t\tret += G[ans[i]][ans[t]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}", "label": 0}, {"id": 240, "code1": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString S = sc.next();\n\t\tfor (int i = S.length() - 1; i > 0; i--) {\n\t\t\tString f = S.substring(0, i / 2);\n\t\t\tString s = S.substring(i / 2, i);\n\t\t\tif (f.equals(s)) {\n\t\t\t\tSystem.out.println(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t}\n}", "label": 1}, {"id": 353, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tchar[] s = in.nextChars();\n\n\t\t\tlong[][] dp = new long[n+1][n+1];\n\t\t\tArrays.fill(dp[0], 1);\n\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tif (s[i] == '<') {\n\t\t\t\t\tfor (int j = 0; j < n-i; j++) {\n\t\t\t\t\t\tdp[i+1][j] += dp[i][j];\n\t\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 0; j < n-i; j++) {\n\t\t\t\t\t\tdp[i+1][0] += dp[i][j];\n\t\t\t\t\t\tdp[i+1][j] -= dp[i][j] - MOD;\n\t\t\t\t\t\tdp[i+1][0] %= MOD;\n\t\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (int j = 1; j < n-1-i; j++) {\n\t\t\t\t\tdp[i+1][j] += dp[i+1][j-1];\n\t\t\t\t\tdp[i+1][j] %= MOD;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(dp[n-1][0]);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 31, "code1": "import java.util.Scanner;\npublic class Main { \n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) { \n        while (true) { \n        int n = sc.nextInt(); \n            if (n == 0) { \n            break; \n            } \n            int[] scores = new int[n]; \n            for (int i = 0; i < scores.length; i++) { \n            scores[i] = sc.nextInt(); \n            } \n            double average = 0, variance = 0;\n            for(int i = 0; i < scores.length; i++){ \n                average += scores[i]; \n            } \n            average = average/n; \n            for(int i = 0; i < scores.length; i++){ \n                variance += (scores[i]-average)*(scores[i]-average); \n            }\n            variance = variance/n;\n            System.out.println(Math.sqrt(variance)); \n            } \n        } \n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "label": 1}, {"id": 759, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "code2": "\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String args[]){\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try{\n            String line;\n            while((line=br.readLine())!=null){  if(line.equals(\"\"))break;\n                String[] splited = line.split(\",\");\n                double xa=Double.parseDouble(splited[0]),ya=Double.parseDouble(splited[1]);\n                double xb=Double.parseDouble(splited[2]),yb=Double.parseDouble(splited[3]);\n                double xc=Double.parseDouble(splited[4]),yc=Double.parseDouble(splited[5]);\n                double xd=Double.parseDouble(splited[6]),yd=Double.parseDouble(splited[7]);\n                gra=(yc-ya)/(xc-xa);y0=ya;x0=xa;\n                boolean check1;\n                check1=linemaker(xb,yb)*linemaker(xd,yd)<0;\n      if(!check1){System.out.println(\"NO\");continue;}\n      gra=(yd-yb)/(xd-xb);y0=yb;x0=xb;\n                boolean check2=linemaker(xa,ya)*linemaker(xc,yc)<0;\n                if(check2)System.out.println(\"YES\");else System.out.println(\"NO\");\n                \n            }         \n        }catch(Exception e){e.printStackTrace();}        \n    }\n    static double gra=0,y0=0,x0=0;\n    static double linemaker(double x1, double y1){\n        return y1-y0-(gra*(x1-x0));\n    }\n}", "label": 0}, {"id": 377, "code1": "/**\n * Created at 16:38 on 2019-08-27\n */\n\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n  static FastScanner sc = new FastScanner();\n  static Output out = new Output(System.out);\n\n  static final int[] dx = {0, 1, 0, -1};\n  static final int[] dy = {-1, 0, 1, 0};\n\n  static final long MOD = (long) (1e9 + 7);\n  static final long INF = Long.MAX_VALUE / 2;\n\n  public static class Solver {\n    public Solver() {\n\n      int Q = sc.nextInt();\n\n      for (int q=0; q<Q; q++) {\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long P = A * B;\n\n        long sqrt = sqrt(P-1);\n\n        long ans = 2*sqrt;\n\n        if (Math.min(A, B) <= sqrt) ans--; //\u9ad8\u6a4b\u541b\u3068\u540c\u3058\u9806\u4f4d\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f\n        if (sqrt * (sqrt+1) > P-1) ans--; //\u30c0\u30d6\u30eb\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f(x == y \u306e\u3068\u304d)\n\n        out.println(ans);\n      }\n\n\n    }\n\n    long sqrt(long n) {\n      long res = (long)Math.floor(Math.sqrt(n));\n      while (res * res > n) res--;\n      while ((res+1) * (res+1) <= n) res++;\n      return res;\n    }\n\n  }\n\n  public static void main(String[] args) {\n    new Solver();\n    out.flush();\n  }\n\n  static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < buflen) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          buflen = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (buflen <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    public boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    public long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int N, boolean oneBased) {\n      if (oneBased) {\n        int[] array = new int[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      } else {\n        int[] array = new int[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      }\n    }\n\n    public long[] nextLongArray(int N, boolean oneBased) {\n      if (oneBased) {\n        long[] array = new long[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      } else {\n        long[] array = new long[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      }\n    }\n  }\n\n  static class Output extends PrintWriter {\n\n    public Output(PrintStream ps) {\n      super(ps);\n    }\n\n    public void print(int[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(long[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(String[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(ArrayList a, String separator) {\n      for (int i = 0; i < a.size(); i++) {\n        if (i == 0) print(a.get(i));\n        else print(separator + a.get(i));\n      }\n      println();\n    }\n  }\n\n}\n", "code2": "import java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tchar[] s = sc.next().toCharArray();\n\t\tStack<Character> st = new Stack<>();\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\tif (s[i] == 'T') {\n\t\t\t\tif (st.isEmpty()) cnt++;\n\t\t\t\telse st.pop();\n\t\t\t} else {\n\t\t\t\tst.push('S');\n\t\t\t}\n\t\t}\n\t\tcnt += st.size();\n\t\tSystem.out.println(cnt);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 304, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt(), result = 0, combo = 0, color = 0;\n        for (int i = 0; i < n; i++) {\n            int j = scanner.nextInt();\n            combo++;\n\n            if (j != color) {\n                result += combo / 2;\n                combo = 0;\n                color = j;\n            }\n        }\n        System.out.println(result + ++combo / 2);\n    }\n}", "label": 0}, {"id": 197, "code1": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "code2": "class Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tfor(int i=0;i<1000;i++)\n\t\t{\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 396, "code1": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\nimport java.io.*;\n\n\nclass Main {\n\n    public static void main(String[] args) throws IOException\n    {\n        PrintWriter out = new PrintWriter(System.out);\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        int n = Integer.parseInt(br.readLine());\n        Long arr[] = new Long[n];\n        StringTokenizer st1 = new StringTokenizer(br.readLine());\n        for(int i = 0 ; i < n ; i++)\n        {\n            arr[i] = Long.parseLong(st1.nextToken());\n        }\n        Arrays.sort(arr);\n        long sum = arr[n-1];\n        int ind = n-2;\n        for(int i = 0 ; i < n-2 ; i++)\n        {\n            sum += arr[ind];\n\n            if(i%2 != 0)\n                ind--;\n        }\n        out.println(sum);\n\n        out.flush();\n        out.close();\n\n    }\n\n    static class pair{\n        long x1;\n        long x2;\n\n        public pair(long x1 , long x2)\n        {\n            this.x1 = x1;\n            this.x2 = x2;\n        }\n\n    }\n\n}\n", "label": 0}, {"id": 113, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "label": 1}, {"id": 33, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .parallel()\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .parallel()\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .parallel()\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "label": 1}, {"id": 467, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CStreamline solver = new CStreamline();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CStreamline {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int[] x = in.nextIntArray(m);\n            Arrays.sort(x);\n            int ans = x[m - 1] - x[0];\n            PriorityQueue<Integer> q = new PriorityQueue<>();\n            for (int i = 0; i < m - 1; i++) {\n                q.add(-(x[i + 1] - x[i]));\n            }\n            for (int i = 0; i < n - 1 && !q.isEmpty(); i++) {\n                ans += q.poll();\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main {\n    \n    public static boolean[] alr;\n    \n    public static List<List<Integer>> list = new ArrayList<>();\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        alr = new boolean[N];\n        for (int i = 0; i < N; i++) {\n            list.add(new ArrayList<>());\n        }\n        for (int i = 0; i < M; i++) {\n            int A = sc.nextInt()-1;\n            int B = sc.nextInt()-1;\n            list.get(A).add(B);\n            list.get(B).add(A);\n        }\n        long count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n                count++;\n            }\n            List<Integer> lst = list.get(i);\n            count(lst);\n        }\n        System.out.println(count-1);\n    }\n    \n    private static void count(List<Integer> lst) {\n        int friends = 0;\n        for (Integer i : lst) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n            }           \n            count(list.get(i));\n        }\n    }\n}\n", "label": 0}, {"id": 705, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int N = in.nextInt();\n            int A[] = new int[2 * N - 1];\n            for (int i = 0; i < 2 * N - 1; i++) {\n                A[i] = in.nextInt();\n            }\n\n            int lo = 0, hi = 2 * N;\n\n            while (lo + 1 < hi) {\n                int mid = lo + (hi - lo) / 2;\n\n                if (onTopAtLeast(mid, A)) {\n                    lo = mid;\n                } else {\n                    hi = mid;\n                }\n            }\n\n            out.println(lo);\n        }\n\n        private boolean onTopAtLeast(int x, int[] a) {\n            int LEN = a.length; // LEN = 2*N-1\n            int[] b = new int[LEN];\n            for (int i = 0; i < LEN; i++) {\n                b[i] = a[i] < x ? 0 : 1;\n            }\n            int[] c = new int[LEN - 2];\n            for (int i = 1; i < LEN - 1; i++) {\n                c[i - 1] = b[i - 1] + b[i] + b[i + 1] < 2 ? 0 : 1;\n            }\n\n            int MID = c.length / 2;\n            int left = MID;\n            int right = MID;\n\n            while (left > 0 && c[left - 1] != c[left]) left--;\n            while (right < c.length - 1 && c[right] != c[right + 1]) right++;//C[1, 2*N-3]\n\n            int ANS = (MID - left < right - MID) ? c[left] : c[right];\n\n            return ANS == 1;\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n", "code2": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int count = 0;\n    for(int i = 0; i < N.length(); i++){\n      if(N.charAt(i) == '2') count++;\n    }\n    System.out.println(count);\n  }\n}", "label": 0}, {"id": 681, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString A = br.readLine();\n\t\tString B = br.readLine();\n\t\tString C = br.readLine();\n\t\t\n\t\tint i=0,j=0,k=0;\n\t\tchar turn = 'a';\n\t\twhile(i<=A.length() && j<=B.length() && k<=C.length())\n\t\t{\n\t\t\tif(turn == 'a')\n\t\t\t{\n\t\t\t\tif(i == A.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('A');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = A.charAt(i++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse if(turn == 'b')\n\t\t\t{\n\t\t\t\tif(j == B.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('B');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = B.charAt(j++);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(k == C.length())\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println('C');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tturn = C.charAt(k++);\n\t\t\t}\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] s = new int[N+1];\n\t\tint total = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\ts[i] = sc.nextInt();\n\t\t\ttotal += s[i];\n\t\t}\n\t\tArrays.sort(s);\n\t\tint ans = 0;\n\t\tint dis = 0;\n\t\tint a = 1;\n\t\tint b = 0;\n\t\tfor( int i=1; i<=N; i++ ){\n\t\t\tif( s[i]%10!=0 ){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( i==N ){\n\t\t\t\tans = 0;\n\t\t\t\tb = 1;\n\t\t\t}\n\t\t}\n\t\tif( total%10!=0 ){\n\t\t\tans = total;\n\t\t}else if(b==0){\n\t\t\tfor( int i=1; i<=N; i++ ){\n\t\t\t\tif( s[i]%10!=0 ){\n\t\t\t\t\tans = total - s[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 325, "code1": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "label": 0}, {"id": 132, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int a = scan.nextInt();\n        int b = scan.nextInt();\n        int c = scan.nextInt();\n\n        System.out.println(Math.max(0,c-Math.max(0,a-b)));\n    }\n}\n", "label": 1}, {"id": 601, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tchar[] s = ns(n);\n\t\tint[] pres = new int[n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tpres[i+1] = pres[i] + (s[i] == 'W' ? 1 : 0);\n\t\t}\n\t\tint[] sufs = new int[n+1];\n\t\tfor(int i = n-1;i >= 0;i--){\n\t\t\tsufs[i] = sufs[i+1] + (s[i] == 'E' ? 1 : 0);\n\t\t}\n\t\tint min = 999999999;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tmin = Math.min(min, pres[i] + sufs[i+1]);\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        final static long INF = (long) 4.1e18;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            long L = 2L * in.nextInt();\n            long T = in.nextInt() * 2L;\n            TaskC.Chameleon[] chameleon = new TaskC.Chameleon[n];\n            int[] cnt = new int[3];\n            for (int i = 0; i < n; ++i) {\n                chameleon[i] = new TaskC.Chameleon();\n                chameleon[i].start = in.nextInt() * 2L;\n                chameleon[i].color = 0;\n                chameleon[i].dir = in.nextInt() == 1 ? 1 : -1;\n                chameleon[i].indexInInput = i;\n                ++cnt[chameleon[i].dir + 1];\n            }\n\n            // Determine new positions\n            for (TaskC.Chameleon c : chameleon) {\n                c.newPos = ((c.start + T * c.dir) % L + L) % L;\n            }\n\n            TaskC.Chameleon[] res;\n\n            if (cnt[0] == 0 || cnt[2] == 0) {\n                // No meetings at all.\n                for (TaskC.Chameleon c : chameleon) {\n                    c.newColor = c.color;\n                }\n                res = chameleon.clone();\n            } else {\n                // Determine new colors\n                {\n                    TaskC.Chameleon[] perm = chameleon.clone();\n                    Arrays.sort(perm, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n\n                    int indNextReverse = 0;\n                    for (int ind = 0; ind < n; ++ind) {\n                        TaskC.Chameleon c = perm[ind];\n                        if (c.dir > 0)\n                            c.newColor = c.color;\n                        else {\n                            while (perm[indNextReverse].dir < 0)\n                                indNextReverse = (indNextReverse + 1) % n;\n                            TaskC.Chameleon d = perm[indNextReverse];\n                            long delta = c.start - d.start;\n                            if (delta < 0)\n                                delta += L;\n                            if (delta <= 2 * T) {\n                                // There was at least one change of color!\n                                c.newColor = d.color;\n                            } else {\n                                c.newColor = c.color;\n                            }\n                        }\n                        if (indNextReverse == ind)\n                            indNextReverse = (indNextReverse + 1) % n;\n                    }\n                }\n\n                TaskC.Chameleon first;\n                TaskC.Chameleon firstMapsTo;\n                // Detemine which chameleon did the first one become\n                {\n                    List<TaskC.Chameleon> positive = new ArrayList<TaskC.Chameleon>();\n                    List<TaskC.Chameleon> negative = new ArrayList<TaskC.Chameleon>();\n                    for (TaskC.Chameleon c : chameleon) {\n                        if (c.dir == 1)\n                            positive.add(c);\n                        else\n                            negative.add(c);\n                    }\n                    Collections.sort(positive, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    Collections.sort(negative, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    first = positive.get(0);\n                    TaskC.Chameleon closestNegative = negative.get(0);\n                    long deltaBest = closestNegative.start - first.start;\n                    if (deltaBest < 0)\n                        deltaBest += L;\n                    for (TaskC.Chameleon c : negative) {\n                        long deltaCur = c.start - first.start;\n                        if (deltaCur < 0)\n                            deltaCur += L;\n                        if (deltaCur < deltaBest) {\n                            closestNegative = c;\n                            deltaBest = deltaCur;\n                        }\n                    }\n                    long timeLeft = T;\n                    if (timeLeft < deltaBest / 2) {\n                        // The first chameleon stayed himself\n                        firstMapsTo = first;\n                    } else {\n                        timeLeft -= deltaBest / 2;\n                        List<Long> positiveDeltas = new ArrayList<Long>();\n                        positiveDeltas.add(0L);\n                        long sum = 0;\n                        for (int i = 0; i < positive.size(); ++i) {\n                            long delta = positive.get((positive.size() - i) % positive.size()).start - positive.get((positive.size() - i - 1) % positive.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            positiveDeltas.add(sum);\n                        }\n                        int shift = negative.indexOf(closestNegative);\n                        List<Long> negativeDeltas = new ArrayList<Long>();\n                        negativeDeltas.add(0L);\n                        sum = 0;\n                        for (int i = 0; i < negative.size(); ++i) {\n                            long delta = negative.get((shift + i + 1) % negative.size()).start - negative.get((shift + i) % negative.size()).start;\n                            if (delta < 0)\n                                delta += L;\n                            sum += delta;\n                            negativeDeltas.add(sum);\n                        }\n                        long l = 0;\n                        long r = INF;\n                        while (r - l > 1) {\n                            long m = (l + r) / 2;\n                            long cntPositive = (m + 1) / 2;\n                            long cntNegative = m / 2;\n                            long positiveTimeSpent = mulWithInf(cntPositive / positive.size(), L) + positiveDeltas.get((int) (cntPositive % positive.size()));\n                            long negativeTimeSpent = mulWithInf(cntNegative / negative.size(), L) + negativeDeltas.get((int) (cntNegative % negative.size()));\n                            if (positiveTimeSpent + negativeTimeSpent <= timeLeft * 2)\n                                l = m;\n                            else\n                                r = m;\n                        }\n                        if (l % 2 == 0) {\n                            firstMapsTo = negative.get((int) ((shift + l / 2) % negative.size()));\n                        } else {\n                            firstMapsTo = positive.get(((int) ((positive.size() - (l + 1) / 2) % positive.size()) + positive.size()) % positive.size());\n                        }\n                    }\n                }\n\n                // Now, create the final mapping!\n                {\n                    TaskC.Chameleon[] firstSortedByPos = chameleon.clone();\n                    Arrays.sort(firstSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.start < b.start) {\n                                return -1;\n                            } else if (a.start > b.start) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    TaskC.Chameleon[] finalSortedByPos = chameleon.clone();\n                    Arrays.sort(finalSortedByPos, new Comparator<TaskC.Chameleon>() {\n                        public int compare(TaskC.Chameleon a, TaskC.Chameleon b) {\n                            if (a.newPos < b.newPos) {\n                                return -1;\n                            } else if (a.newPos > b.newPos) {\n                                return 1;\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    int delta = Arrays.asList(finalSortedByPos).indexOf(firstMapsTo) - Arrays.asList(firstSortedByPos).indexOf(first);\n                    res = new TaskC.Chameleon[chameleon.length];\n                    for (int i = 0; i < chameleon.length; ++i) {\n                        res[firstSortedByPos[i].indexInInput] = finalSortedByPos[((i + delta) % chameleon.length + chameleon.length) % chameleon.length];\n                    }\n                }\n            }\n\n            for (TaskC.Chameleon c : res) {\n                out.println(c.newPos / 2);\n            }\n        }\n\n        private long mulWithInf(long a, long b) {\n            if (a == 0)\n                return 0;\n            else if (INF / a <= b)\n                return INF;\n            else\n                return a * b;\n        }\n\n        static class Chameleon {\n            long start;\n            long newPos;\n            int newColor;\n            int color;\n            int dir;\n            int indexInInput;\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 603, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\t\t\n\t\tint n = stdIn.nextInt();\n\t\tint[] a = new int[n];\n\t\tint i;\n\t\t\n\t\tfor (i = 0; i < n; i++)\n\t\t\ta[i] = stdIn.nextInt();\n\t\t\n\t\tint count = SelectionSort(a, n);\n\t\t\n\t\tSystem.out.print(a[0]);\n\t\tfor (i = 1; i < n; i++)\n\t\t\tSystem.out.print(\" \" + a[i]);\n\t\tSystem.out.println();\n\t\tSystem.out.println(count);\n\t}\n\t\n\tpublic static int SelectionSort(int[] a, int n) {\n\t\tint i, j, minat, t, count = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tminat = i;\n\t\t\tfor (j = i + 1; j < n; j++)\n\t\t\t\tif (a[j] < a[minat])\n\t\t\t\t\tminat = j;\n\t\t\tif (i != minat) {\n\t\t\t\tt = a[i];\n\t\t\t\ta[i] = a[minat];\n\t\t\t\ta[minat] = t;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}", "code2": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n  public static void main(String[] args) {\n    FastScanner sc = new FastScanner();\n    int N = sc.nextInt();\n    int L = sc.nextInt();\n    long T = sc.nextLong();\n    \n    long[][] ari = sc.nextLongTable(N, 2);\n    \n    long[] cl = new long[N];\n    long[] ccl = new long[N];\n\n    int p = 0, q = 0;\n    for (int i = 0; i < N; i ++) {\n      if (ari[i][1] == 1) {\n        cl[p ++] = L - ari[i][0];\n      } else {\n        ccl[q ++] = ari[i][0];\n      }\n    }\n    cl = Arrays.copyOf(cl, p);\n    ccl = Arrays.copyOf(ccl, q);\n    Arrays.sort(cl);\n\n    long[] rets = new long[N];\n    for (int i = 0; i < N ;i ++) {\n      if (ari[i][1] == 1) {\n        int count = (int)(count(ccl, ari[i][0], ari[i][0] + 2L * T, L) % N);\n        rets[(i + count) % N] = (ari[i][0] + T) % L;\n      } else {\n        int count = (int)(count(cl, L - ari[i][0], L - ari[i][0] + 2L * T, L) % N);\n        rets[(i + N - count) % N] = (ari[i][0] + L - T % L) % L;\n      }\n    }\n    \n    for (int i = 0; i < N; i ++) {\n      System.out.println(rets[i]);\n    }\n  }\n  \n  private static long count(long[] xs, long f, long t, int L) {\n    long ret = 0;\n    int n = xs.length;\n    {\n      ret += t / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(t % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret += ind;\n    }\n    {\n      ret -= f / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(f % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret -= ind;\n    }\n    return ret;\n  }\n}\n\n\n\n\nclass FastScanner {\n\tpublic static String debug = null;\n\n\tprivate final InputStream in = System.in;\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate byte[] buffer = new byte[1024];\n\tprivate boolean eos = false;\n\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tif (debug != null) {\n\t\t\t\t\tbuflen = debug.length();\n\t\t\t\t\tbuffer = debug.getBytes();\n\t\t\t\t\tdebug = \"\";\n\t\t\t\t\teos = true;\n\t\t\t\t} else {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen < 0) {\n\t\t\t\teos = true;\n\t\t\t\treturn false;\n\t\t\t} else if (buflen == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate int readByte() {\n\t\tif (hasNextByte())\n\t\t\treturn buffer[ptr++];\n\t\telse\n\t\t\treturn -1;\n\t}\n\n\tprivate static boolean isPrintableChar(int c) {\n\t\treturn 33 <= c && c <= 126;\n\t}\n\n\tprivate void skipUnprintable() {\n\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\tptr++;\n\t}\n\n\tpublic boolean isEOS() {\n\t\treturn this.eos;\n\t}\n\n\tpublic boolean hasNext() {\n\t\tskipUnprintable();\n\t\treturn hasNextByte();\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile (isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic long nextLong() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile (true) {\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\treturn minus ? -n : n;\n\t\t\t} else {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tpublic int nextInt() {\n\t\treturn (int) nextLong();\n\t}\n\n\tpublic long[] nextLongList(int n) {\n\t\treturn nextLongTable(1, n)[0];\n\t}\n\n\tpublic int[] nextIntList(int n) {\n\t\treturn nextIntTable(1, n)[0];\n\t}\n\n\tpublic long[][] nextLongTable(int n, int m) {\n\t\tlong[][] ret = new long[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextLong();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic int[][] nextIntTable(int n, int m) {\n\t\tint[][] ret = new int[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextInt();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}", "label": 0}, {"id": 495, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\n\tint N,M;\n\tboolean[] first,second;\n\n\tpublic void solve() {\n\n\t\tN = nextInt();\n\t\tM = nextInt();\n\n\t\tfirst = new boolean[N];\n\t\tsecond = new boolean[N];\n\n\t\tfor(int i = 0;i < M;i++){\n\t\t\tint a = nextInt()-1;\n\t\t\tint b = nextInt()-1;\n\n\t\t\tif(a == 0){\n\t\t\t\tfirst[b] = true;\n\t\t\t}\n\n\t\t\tif(b == N-1){\n\t\t\t\tsecond[a] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 1;i < N - 1;i++){\n\t\t\tif(first[i] && second[i]){\n\t\t\t\tout.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tout.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "label": 0}, {"id": 87, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] abc = new int[3];\n\t\tArrays.setAll(abc, i -> sc.nextInt());\n\t\tArrays.sort(abc);\n\t\t\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tint dif = abc[2] - abc[i];\n\t\t\tint quo = dif / 2;\n\t\t\tcnt += quo;\n\t\t\tabc[i] += 2 * quo;\n\t\t}\n\t\t\n\t\tArrays.sort(abc);\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tabc[2 - i] -= abc[0];\n\t\t}\n\t\t\n\t\tfor (int i : abc) {\n\t\t\tcnt += i;\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\t\n}\n", "code2": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "label": 1}, {"id": 440, "code1": "import java.io.FileInputStream;\nimport java.io.InputStream;\nimport java.util.Scanner;\n\npublic class Main{\n\tstatic Scanner sc;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//InputStream in = new FileInputStream(\"src/input.txt\");\n\t\tInputStream in = System.in;\n\t\t//PrintStream out = new PrintStream(\"src/output.txt\");\n\n\t\t//System.setOut(out);\n\n\t\tsc = new Scanner(in);\n\n\t\tint N = sc.nextInt();\n\t\tint[] a = new int[N];\n\t\tint answer = 0;\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tif(a[a[i]-1] == i+1){\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(answer/2);\n\n\t\t//out.close();\n\t}\n}", "code2": "\nimport java.util.*;\n\npublic class Main {\n    public static void main(final String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        // final int a = sc.nextInt();\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\n        // final String s1 = sc.next();\n        final int a = sc.nextInt();\n        final int b = sc.nextInt();\n        final int c = sc.nextInt();\n        final int k = sc.nextInt();\n        sc.close();\n        int result = 0;\n        if (a >= k) {\n            result = k;\n        } else if (b >= k - a) {\n            result = a;\n        } else if (c >= k - b - a) {\n            result = 2 * a + b - k;\n        }\n\n        System.out.println(result);\n    }\n}\n", "label": 0}, {"id": 475, "code1": "import java.util.*;\npublic class Main {\n\tstatic int yono;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\tint N = Integer.parseInt(sc.next());\n\t\tyono = N - 1;\n\t\tint M = sc.nextInt();\n\t\ttree = new int[N];\n\t\tArrays.fill(tree, -1);\n\t\tfor (int i = 0; i < M; i++)union(Integer.parseInt(sc.next()) - 1, Integer.parseInt(sc.next()) - 1);\n\t\tSystem.out.println(yono);\n\t}\n\t\n\tstatic int[] tree;\n\tstatic void union(int x, int y) {\n\t\tx = root(x);\n\t\ty = root(y);\n\t\tif(x != y) {\n\t\t\tyono--;\n\t\t\tif(tree[x] < tree[y]) {\n\t\t\t\tx ^= y; y ^= x; x^= y;\n\t\t\t}\n\t\t\ttree[x] += tree[y];\n\t\t\ttree[y] = x;\n\t\t}\n\t}\n\tstatic boolean find(int x, int y) {\n\t\treturn root(x) == root(y);\n\t}\n\tstatic int root(int x) {\n\t\treturn tree[x] < 0 ? x : (tree[x] = root(tree[x]));\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n  public static long MOD = (long)Math.pow(10, 6) + 3;\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long[] kai = new long[(int)MOD];\n//    long[] inkai = new long[(int)MOD];\n//    long[] in = new long[(int)MOD];\n    kai[0] = 1;\n    kai[1] = 1;\n//    inkai[0] = 1;\n//    inkai[1] = 1;\n//    in[1] = 1;\n    for(long i = 2; i < MOD; i++) {\n      kai[(int)i] = (i * kai[(int)i - 1]) % MOD;\n//      inkai[(int)i] = func(kai[(int)i], MOD - 2);\n//      in[(int)i] = func(i, MOD - 2);\n    }\n    int q = sc.nextInt();\n    for(int i = 0; i < q; i++) {\n      long x = sc.nextLong();\n      long d = sc.nextLong();\n      long n = sc.nextLong();\n      long ans = 0;\n      if(d == 0) {\n        if(x == 0) {\n          ans = 0;\n        } else {\n          ans = func(x, n % (MOD - 1));\n        }\n      } else {\n        long inv = func(d, MOD - 2);\n        x = (x * inv) % MOD;\n        if(x == 0) {\n          ans = 0;\n        } else {\n          if((int)(x + n - 1) >= MOD) {\n            ans = 0;\n          } else {\n            long t = func(d, n % (MOD - 1));\n            long invkai = func(kai[(int)x - 1], MOD - 2);\n            ans = (((kai[(int)(x + n - 1)] * invkai) % MOD) * t) % MOD;\n          }\n        }\n      }\n      System.out.println(ans);\n    }\n  }\n  public static long func(long a, long x) {\n    if(x == 0) return 1;\n    if(x >= 1) {\n      if(x % 2 == 0) {\n        long t = func(a, x / 2);\n        return (t * t) % MOD;\n      } else {\n        long t = func(a, x - 1);\n        return (a * t) % MOD;\n      }\n    }\n    return 0;\n  } \n}", "label": 0}, {"id": 255, "code1": "\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String args[]){\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try{\n            String line;\n            while((line=br.readLine())!=null){  if(line.equals(\"\"))break;\n                String[] splited = line.split(\",\");\n                double xa=Double.parseDouble(splited[0]),ya=Double.parseDouble(splited[1]);\n                double xb=Double.parseDouble(splited[2]),yb=Double.parseDouble(splited[3]);\n                double xc=Double.parseDouble(splited[4]),yc=Double.parseDouble(splited[5]);\n                double xd=Double.parseDouble(splited[6]),yd=Double.parseDouble(splited[7]);\n                gra=(yc-ya)/(xc-xa);y0=ya;x0=xa;\n                boolean check1;\n                check1=linemaker(xb,yb)*linemaker(xd,yd)<0;\n      if(!check1){System.out.println(\"NO\");continue;}\n      gra=(yd-yb)/(xd-xb);y0=yb;x0=xb;\n                boolean check2=linemaker(xa,ya)*linemaker(xc,yc)<0;\n                if(check2)System.out.println(\"YES\");else System.out.println(\"NO\");\n                \n            }         \n        }catch(Exception e){e.printStackTrace();}        \n    }\n    static double gra=0,y0=0,x0=0;\n    static double linemaker(double x1, double y1){\n        return y1-y0-(gra*(x1-x0));\n    }\n}", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc;\n\n\tstatic final int INF=1<<28;\n\tstatic final double EPS=1e-9;\n\n\tvoid run(){\n\t\tsc=new Scanner(System.in);\n\t\tfor(; sc.hasNext();){\n\t\t\tString[] s=sc.nextLine().split(\",\");\n\t\t\tdouble[] x=new double[4];\n\t\t\tdouble[] y=new double[4];\n\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\tx[i]=Double.parseDouble(s[i*2]);\n\t\t\t\ty[i]=Double.parseDouble(s[i*2+1]);\n\t\t\t}\n\t\t\tint[] signs=new int[4];\n\t\t\tfor(int k=0; k<4; k++){\n\t\t\t\tint i=(k+1)%4;\n\t\t\t\tint j=(k+3)%4;\n\t\t\t\tdouble vx1=x[i]-x[k];\n\t\t\t\tdouble vy1=y[i]-y[k];\n\t\t\t\tdouble vx2=x[j]-x[k];\n\t\t\t\tdouble vy2=y[j]-y[k];\n\t\t\t\tdouble det=vx1*vy2-vy1*vx2;\n\t\t\t\tif(det<-EPS)\n\t\t\t\t\tsigns[i]=-1;\n\t\t\t\telse\n\t\t\t\t\tsigns[i]=1;\n\t\t\t}\n\t\t\tboolean f=true;\n\t\t\tfor(int i=0; i<3; i++)\n\t\t\t\tif(signs[i]!=signs[i+1])\n\t\t\t\t\tf=false;\n\t\t\tprintln(f?\"YES\":\"NO\");\n\t\t}\n\t\tsc.close();\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\tnew Main().run();\n\t}\n}", "label": 1}, {"id": 423, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.*;\n\npublic class Main {\n\n    static <T extends Comparable<? super T>> boolean nextPermutation(T[] sequence) {\n        int first = getFirst(sequence);\n        if (first == -1) return false;\n        int toSwap = sequence.length - 1;\n        while (sequence[first].compareTo(sequence[toSwap]) >= 0) --toSwap;\n        swap(sequence, first++, toSwap);\n        toSwap = sequence.length - 1;\n        while (first < toSwap) swap(sequence, first++, toSwap--);\n        return true;\n    }\n\n    static <T extends Comparable<? super T>> int getFirst(T[] sequence) {\n        for (int i = sequence.length - 2; i >= 0; --i)\n            if (sequence[i].compareTo(sequence[i + 1]) < 0) return i;\n        return -1;\n    }\n\n    static <T extends Comparable<? super T>> void swap(T[] sequence, int i, int j) {\n        T tmp = sequence[i];\n        sequence[i] = sequence[j];\n        sequence[j] = tmp;\n    }\n\n    public static void main(String[] args) {\n        FastScanner fs = new FastScanner();\n        int N = fs.nextInt();\n        Integer[] P = new Integer[N];\n        Integer[] Q = new Integer[N];\n        for (int i = 0; i < N; ++i) P[i] = fs.nextInt();\n        for (int i = 0; i < N; ++i) Q[i] = fs.nextInt();\n\n        Integer[] arr = new Integer[N];\n        for (int i = 0; i < N; ++i) arr[i] = i+1;\n\n        int cnt = 1, pNum = 0, qNum = 0;\n        do {\n            if (Arrays.toString(arr).equals(Arrays.toString(P))) pNum = cnt;\n            if (Arrays.toString(arr).equals(Arrays.toString(Q))) qNum = cnt;\n            ++cnt;\n        } while (nextPermutation(arr));\n\n        System.out.println(Math.abs(pNum - qNum));\n\n    }\n\n\n    static class FastScanner {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b)){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public double nextDouble() { return Double.parseDouble(next());}\n    }\n\n}", "code2": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint[] wn = in.nextIntArray(n);\n\n\t\t\tint left = 0;\n\t\t\tint right = INF;\n\t\t\tint mid = 0;\n\t\t\twhile (right > left + 1) {\n\t\t\t\tmid = (left + right) / 2;\n\t\t\t\tint count = 1;\n\t\t\t\tint ca = mid;\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tca = mid;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcount = INF;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// k\u53f0\u4ee5\u4e0b\u3067\u7a4d\u3081\u308b\u5834\u5408\n\t\t\t\tif (count <= k){\n\t\t\t\t\tright = mid;\n\n\t\t\t\t// \uff4b\u53f0\u4ee5\u4e0a\u5fc5\u8981\u306a\u5834\u5408\n\t\t\t\t} else if (count > k) {\n\t\t\t\t\tleft = mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(right);\n\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n\n", "label": 0}, {"id": 558, "code1": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint l = in.nextInt();\n\t\t\tUnionFind u1 = new UnionFind(n);\n\t\t\tUnionFind u2 = new UnionFind(n);\n\t\t\tfor (int i = 0; i < k; i++) {\n\t\t\t\tint p = in.nextInt()-1;\n\t\t\t\tint q = in.nextInt()-1;\n\t\t\t\tu1.link(p, q);\n\t\t\t}\n\t\t\tfor (int i = 0; i < l; i++) {\n\t\t\t\tint r = in.nextInt()-1;\n\t\t\t\tint s = in.nextInt()-1;\n\t\t\t\tu2.link(r, s);\n\t\t\t}\n\t\t\tMap<Long, Integer> roots = new HashMap<Long, Integer>();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlong code = (long)u1.root(i)<< 32 | u2.root(i);\n\t\t\t\troots.merge(code, 1, Integer::sum);\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (i > 0)out.print(\" \");\n\t\t\t\tlong code = (long)u1.root(i) << 32 | u2.root(i);\n\t\t\t\tout.print(roots.get(code));\n\t\t\t}\n\n\t\t}\n\n\t\tpublic class UnionFind {\n\t\t\tint[] data;\n\n\t\t\tpublic UnionFind(int n) {\n\t\t\t\tdata = new int[n];\n\t\t\t\tArrays.fill(data, -1);\n\t\t\t}\n\n\t\t\tboolean link(int x, int y) {\n\t\t\t\tx = root(x);\n\t\t\t\ty = root(y);\n\t\t\t\tif (x != y) {\n\t\t\t\t\tif (data[y] < data[x]) {\n\t\t\t\t\t\tdata[y] += data[x];\n\t\t\t\t\t\tdata[x] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[x] += data[y];\n\t\t\t\t\t\tdata[y] = x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn x != y;\n\t\t\t}\n\n\t\t\tint root(int x) {\n\t\t\t\treturn data[x] < 0 ? x : (data[x] = root(data[x]));\n\t\t\t}\n\t\t}\n\t}\n\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n\tstatic final Reader in = new Reader();\n\tstatic final long M=(long)1e9+7;\n\t\n\tpublic static void main(String[] args) {\n\t\tint n=in.nextInt();\n\t\tlong[] ps = new long[n+1];\n\t\tlong nf=1;\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tps[i]=(ps[i-1]+in.nextInt())%M;\n\t\t\tnf=nf*i%M;\n\t\t}\n\t\tlong ans=nf*ps[n]%M, s=0;\n\t\tfor(int i=1; i<=n-1; ++i) {\n\t\t\ts=(s+ps[n-i]-ps[i]+M)%M;\n\t\t\tans=(ans+nf*modI((long)(i+1)*(i>=n-1?1:i+2), M)%M*2*s+nf*modI(i+1, M)%M*(ps[i]+ps[n]-ps[n-i]+M))%M;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tstatic long modI(long a, long m) {\n\t\treturn (a%=m)<=1?1:(1-modI(m%a, a)*m)/a+m;\n\t}\n\t\n\tstatic class Reader {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st;\n\t\tString next() {\n\t\t\twhile(st==null||!st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}", "label": 0}, {"id": 104, "code1": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\tScanner scn = new Scanner(System.in);\n\t\tint A = scn.nextInt(), B = scn.nextInt();\n\t\tSystem.out.println(B>=A?A:A-1);\n\t}\n\n}\n", "label": 1}, {"id": 200, "code1": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "code2": "import java.util.*;\nclass Main{\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    long X = sc.nextLong();\n    long answer = 0;\n    \n    for(long i=X;i<100000000;i++){\n      int count = 0;\n      for(long j=2;j*j<=i;j++){\n        if(i%j==0){\n          count++;\n          break;\n        }\n      }\n      if(count==0){\n        answer = i;\n        break;\n      }\n    }\n    System.out.println(answer);\n  }\n}", "label": 1}, {"id": 583, "code1": "import java.util.*;\n\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int[] a = new int[N];\n        int[] b = new int[N];\n        for(int i = 0; i < N; i++)\n            a[i] = sc.nextInt();\n        for(int i = 0; i < N; i++)\n            b[i] = sc.nextInt();\n        sc.close();\n        long sum1 = 0;\n        long sum2 = 0;\n        for(int i = 0; i < N; i++){\n            if(a[i] > b[i]){\n                sum1 += (a[i]-b[i]);\n            } else {\n                sum2 += (b[i]-a[i])/2;\n            }\n        }\n        if(sum1 <= sum2)\n            System.out.println(\"Yes\");\n        else\n            System.out.println(\"No\");\n\n    }\n}", "code2": "\n\nimport java.util.*;\nimport java.io.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\tScanner sc=new Scanner(System.in);\n\t     int n=sc.nextInt();\n\t     int m=sc.nextInt();\n\t     ArrayList<ArrayList<Integer>> a=new ArrayList<>();\nfor(int i=0;i<n;i++) {\n\ta.add(new ArrayList<Integer>());\n}\nfor(int j=0;j<m;j++) {\n\tint x=sc.nextInt()-1;\n\tint y=sc.nextInt()-1;\n\ta.get(x).add(y);\n\ta.get(y).add(x);\n}\nboolean vis[]=new boolean[n];\nans=0;\n\tSystem.out.println(dfs(a,0,vis,1,n));\n\t}\nstatic int ans=0;\t\n\tstatic int dfs(ArrayList<ArrayList<Integer>> a,int src,boolean vis[],int count,int n) {\n\t\tvis[src]=true;\n\t\tfor(int i:a.get(src)) {\n\t\t\tif(vis[i]==false) {\n\t\t\t\t\n\t\t\t\tdfs(a,i,vis,count+1,n);\n\t\t\t}\n\t\t}\n\t\tif(count==n) {\n\t\tans++;\n\t\tvis[src]=false;\n\t\t\t}else {\n\t\t\t\tvis[src]=false;\n\t\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\tstatic int[] arr(int n,Scanner sc) {\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\treturn a;\n}\n\n}\n", "label": 0}, {"id": 226, "code1": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        int n = sc.nextInt();\n        \n        int cnt = 0;\n        for (int i = 1; i <= 4; i++) {\n            if (n % 10 == 2)\n                cnt++;\n            n /= 10;\n        }\n        System.out.print(cnt);\n    }\n}\n", "label": 1}, {"id": 327, "code1": "import java.util.*;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = findK(n);\n        if(k==-1){\n            System.out.println(\"No\");\n            System.exit(0);\n        }\n        int[][] res = new int[k][k-1];\n        for(int i=0;i<k-1;i++) res[0][i] = i+1;\n        int[] index = new int[k];\n        for(int i=0;i<k;i++) index[i]=i;\n        for(int row=1;row<k;row++){\n            int idx = 0;\n            for(int j=0;j<row;j++) res[row][idx++] = res[j][index[j]++];\n            if(row==k-1) continue;\n            res[row][idx++]=res[row-1][k-2]+1;\n            while(idx<k-1){\n                res[row][idx] = res[row][idx-1]+1;\n                idx++;\n            }\n        }\n        System.out.println(\"Yes\");\n        System.out.println(k);\n        for(int i=0;i<k;i++){\n            System.out.print(Integer.toString(k-1)+\" \");\n            for(int j=0;j<k-1;j++){\n                System.out.print(Integer.toString(res[i][j])+\" \");\n            }\n            System.out.println(\"\");\n        }\n    }\n    static int findK(int n){\n        int k=1;\n        while(k*(k-1)<=2*n){\n            if(k*(k-1)==2*n) return k;\n            k++;\n        }\n        return -1;\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "label": 0}, {"id": 773, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br =\n\t\t\t\tnew BufferedReader(new InputStreamReader(System.in));\n\t\tfor (String str; (str=br.readLine()) != null; ) {\n\t\t\tString[] data = str.split(\",\");\n\n\t\t\tdouble xa = Double.parseDouble(data[0]);\n\t\t\tdouble ya = Double.parseDouble(data[1]);\n\n\t\t\tdouble xb = Double.parseDouble(data[2]);\n\t\t\tdouble yb = Double.parseDouble(data[3]);\n\n\t\t\tdouble xc = Double.parseDouble(data[4]);\n\t\t\tdouble yc = Double.parseDouble(data[5]);\n\n\t\t\tdouble xd = Double.parseDouble(data[6]);\n\t\t\tdouble yd = Double.parseDouble(data[7]);\n\t\t\t/*\n\t\t\t * vector ab : (xb-xa, yb-ya)\n\t\t\t * vector ac\n\t\t\t * vector ad\n\t\t\t * vector bc : (xc-xb, yc-yb)\n\t\t\t * vector ba\n\t\t\t * vector bd\n\t\t\t * vector cd : (xd-xc, yd-yc)\n\t\t\t * vector ca\n\t\t\t * vector cb\n\t\t\t */\n\t\t\tVector2d a = new Vector2d(xa, ya);\n\t\t\tVector2d b = new Vector2d(xb, yb);\n\t\t\tVector2d c = new Vector2d(xc, yc);\n\t\t\tVector2d d = new Vector2d(xd, yd);\n\t\t\tif ( isSameSide(a, b, c, d)\n\t\t\t\t\t&& isSameSide(b, c, d, a)\n\t\t\t\t\t&& isSameSide(c, d, a, b) ) {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static class Vector2d {\n\t\tprivate double x;\n\t\tprivate double y;\n\n\t\tpublic Vector2d(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t// vecotr this - v\n\t\tpublic Vector2d minus(Vector2d v) {\n\t\t\treturn new Vector2d(this.x - v.x, this.y - v.y);\n\t\t}\n\t\t// outerProduct this x b\n\t\tpublic double op(Vector2d b) {\n\t\t\treturn this.x * b.y  -  this.y * b.x;\n\t\t}\n\t}\n\t/*\n\t * outerProduct\n\t * a = (a.x, a.y)\n\t * b = (b.x, b.y)\n\t */\n//\tpublic static double op(Vector2d a, Vector2d b) {\n//\t\treturn a.x * b.y  -  a.y * b.x;\n//\t}\n\n\t// line ab, point c, point d\n\tpublic static boolean isSameSide(\n\t\t\tVector2d a, Vector2d b, Vector2d c, Vector2d d) {\n\t\tVector2d ab = b.minus(a);\n\t\tVector2d ac = c.minus(a);\n\t\tVector2d ad = d.minus(a);\n//\t\tif ( op(ab, ac) > 0 && op(ab, ad) > 0 ) {\n\t\tif ( ab.op(ac) > 0 && ab.op(ad) > 0 ) {\n\t\t\treturn true;\n//\t\t} else if ( op(ab, ac) < 0 && op(ab, ad) < 0 ) {\n\t\t} else if ( ab.op(ac) < 0 && ab.op(ad) < 0 ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n}", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tint w, h;\n\tint sx, sy;\n\tint gx, gy;\n\tint[][] a;\n\n\tvoid run(){\n\t\tfor(;;){\n\t\t\tw=sc.nextInt();\n\t\t\th=sc.nextInt();\n\t\t\tif((w|h)==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsx=sc.nextInt()-1;\n\t\t\tsy=sc.nextInt()-1;\n\t\t\tgx=sc.nextInt()-1;\n\t\t\tgy=sc.nextInt()-1;\n\t\t\tint n=sc.nextInt();\n\t\t\ta=new int[h][w];\n\t\t\tfor(int k=0; k<n; k++){\n\t\t\t\tint c=sc.nextInt();\n\t\t\t\tint d=sc.nextInt();\n\t\t\t\tint x=sc.nextInt()-1;\n\t\t\t\tint y=sc.nextInt()-1;\n\t\t\t\tfor(int j=0; j<2; j++){\n\t\t\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\t\t\tif(d==0){\n\t\t\t\t\t\t\ta[y+j][x+i]=c;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\ta[y+i][x+j]=c;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve(){\n\t\tLinkedList<P> que=new LinkedList<P>();\n\t\tboolean[][] visited=new boolean[h][w];\n\n\t\tint[] dx={0, 0, -1, 1};\n\t\tint[] dy={-1, 1, 0, 0};\n\n\t\tque.offer(new P(sx, sy));\n\t\tvisited[sy][sx]=true;\n\n\t\tfor(; !que.isEmpty();){\n\t\t\tP p=que.poll();\n\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\tP q=new P(p.x+dx[i], p.y+dy[i]);\n\t\t\t\tif(q.x>=0&&q.x<w&&q.y>=0&&q.y<h&&a[q.y][q.x]==a[sy][sx]\n\t\t\t\t\t\t&&!visited[q.y][q.x]){\n\t\t\t\t\tque.offer(q);\n\t\t\t\t\tvisited[q.y][q.x]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintln(visited[gy][gx]?\"OK\":\"NG\");\n\t}\n\n\tclass P{\n\t\tint x, y;\n\n\t\tP(int x, int y){\n\t\t\tthis.x=x;\n\t\t\tthis.y=y;\n\t\t}\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 476, "code1": "import java.util.*;\n\npublic class Main {\n    \n    public static boolean[] alr;\n    \n    public static List<List<Integer>> list = new ArrayList<>();\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        alr = new boolean[N];\n        for (int i = 0; i < N; i++) {\n            list.add(new ArrayList<>());\n        }\n        for (int i = 0; i < M; i++) {\n            int A = sc.nextInt()-1;\n            int B = sc.nextInt()-1;\n            list.get(A).add(B);\n            list.get(B).add(A);\n        }\n        long count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n                count++;\n            }\n            List<Integer> lst = list.get(i);\n            count(lst);\n        }\n        System.out.println(count-1);\n    }\n    \n    private static void count(List<Integer> lst) {\n        int friends = 0;\n        for (Integer i : lst) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n            }           \n            count(list.get(i));\n        }\n    }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author cunbidun\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        EProductOfArithmeticProgression solver = new EProductOfArithmeticProgression();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class EProductOfArithmeticProgression {\n        private static final int MOD = (int) 1e6 + 3;\n        private InputReader in;\n        private PrintWriter out;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n            int q = in.nextInt();\n\n            int[] fac = new int[MOD + 1];\n            int[] inv = new int[MOD + 1];\n            fac[0] = 1;\n            inv[0] = Op.inv(1, MOD);\n            for (int i = 1; i <= MOD; i++) {\n                fac[i] = Op.mulMod(fac[i - 1], i, MOD);\n                inv[i] = Op.inv(fac[i], MOD);\n            }\n\n            while (q-- > 0) {\n                int x = in.nextInt();\n                int d = in.nextInt();\n                int n = in.nextInt();\n                if (d == 0) {\n                    out.println(Op.powMod(x, n, MOD));\n                    continue;\n                }\n                x = Op.mulMod(x, Op.inv(d, MOD), MOD);\n                int ans;\n                if (x + n - 1 >= MOD || x == 0) ans = 0;\n                else\n                    ans = Op.mulMod(fac[x + n - 1], inv[x - 1], MOD);\n                out.println(Op.mulMod(ans, Op.powMod(d, n, MOD), MOD));\n            }\n        }\n\n    }\n\n    static class Op {\n        public static int mulMod(int x, int y, int MOD) {\n            return (int) (((long) x * y) % MOD);\n        }\n\n        public static int powMod(int x, long p, int MOD) {\n            if (p == 0) return 1;\n            int t = powMod(x, p / 2, MOD);\n            if ((p & 1) == 1)\n                return mulMod(mulMod(t, t, MOD), x, MOD);\n            return mulMod(t, t, MOD);\n        }\n\n        public static int inv(int x, int MOD) {\n            return powMod(x, MOD - 2, MOD);\n        }\n\n    }\n\n    static class InputReader extends InputStream {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        private static boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 227, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[]args) {\n\t\ttry(Scanner scan = new Scanner(System.in)){\n\n\t\t\tint N = scan.nextInt();\n\t\t\tint M = scan.nextInt();\n\t\t\tint K = scan.nextInt();\n\n\n\n\t\t\tint goukei = 0;\n\t\t\tint ok = 0;\n\t\t\tfor(int i = 0;i<=N;i++) {\n\t\t\t\tfor(int j = 0;j<=M;j++) {\n\t\t\t\t\tgoukei =  i*M+j*N-2*i*j;\n\t\t\t\t\tif(goukei==K) {\n\t\t\t\t\t\tok=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok==1)System.out.println(\"Yes\");\n\t\t\telse System.out.println(\"No\");\n\n\t\t}\n\n\n\t}\n\n\n}\n", "code2": "import java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint k = sc.nextInt();\n\n\t\tboolean canK = false;\n\n\t\touter:\n\t\tfor (int row = 0; row <= n; row++) {\n\t\t\tfor (int clm = 0; clm <= m ; clm++) {\n\t\t\t\tint black = (m - clm) * row + (n - row) * clm;\n\t\t\t\tif (black == k) {\n\t\t\t\t\tcanK = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(canK ? \"Yes\" : \"No\");\n\t\tsc.close();\n\t}\n\n}\n", "label": 1}, {"id": 528, "code1": "import java.util.Scanner;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c;\n    long x = sc.nextLong();\n    if(a%x == 0) {\n      c = a / x -1;\n    }else {\n      c = a / x;\n    }\n    System.out.println(b/x-c);\n  }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tInteger[] num = new Integer[n];\n\t\tStringBuilder s = new StringBuilder(\"\");\n\t\tfor(int i=0;i<n;i++){\n\t\t\tnum[i] = scan.nextInt();\n\t\t}\n\t\tArrays.sort(num);\n\t\t\n\t\ts.append(num[0]);\n\t\tfor(int i=1;i<num.length;i++){\n\t\t\ts.append(\" \"+num[i]);\n\t\t}\n\t\t\n\t\tSystem.out.println(s);\n\t}\n}", "label": 0}, {"id": 749, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint[] a = na(n);\n\t\tint[] f = new int[13];\n\t\tf[0]++;\n\t\tfor(int v : a)f[v]++;\n\t\tif(f[0] >= 2 || f[12] >= 2){\n\t\t\tout.println(0);\n\t\t\treturn;\n\t\t}\n\t\tfor(int i = 1;i <= 11;i++){\n\t\t\tif(f[i] >= 3){\n\t\t\t\tout.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < 1<<11;i++){\n\t\t\tboolean[] b = new boolean[25];\n\t\t\tb[0] = b[24] = true;\n\t\t\tif(f[12] > 0)b[12] = true;\n\t\t\tfor(int j = 0;j < 11;j++){\n\t\t\t\tif(f[j+1] == 2){\n\t\t\t\t\tb[j+1] = b[24-(j+1)] = true;\n\t\t\t\t}else if(f[j+1] == 1){\n\t\t\t\t\tif(i<<~j<0){\n\t\t\t\t\t\tb[24-(j+1)] = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tb[j+1] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint min = 99;\n\t\t\tint pre = -99;\n\t\t\tfor(int j = 0;j <= 24;j++){\n\t\t\t\tif(b[j]){\n\t\t\t\t\tmin = Math.min(min, j-pre);\n\t\t\t\t\tpre = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = Math.max(ans, min);\n\t\t}\n\t\tout.println(ans);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "label": 0}, {"id": 765, "code1": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        double num = 0.006;\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        sc.nextLine();\n        int T = sc.nextInt();\n        int A = sc.nextInt();\n        sc.nextLine();\n        int num2 = Integer.MAX_VALUE;\n        int tmp;\n        int ans = 0;\n        for(int i = 0; i < N; i++){\n            tmp = sc.nextInt();\n            tmp = T*1000 - tmp*6;\n            tmp = Math.abs(A*1000 - tmp);\n            if(tmp < num2){\n                num2 = tmp;\n                ans = i+1;\n            }\n        }\n        System.out.println(ans);\n    }\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n// import java.awt.Point;\n \npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n \n    static int mod = 1_000_000_007;\n    // int mod = 998244353;\n    long inf = Long.MAX_VALUE/2;\n\n    void solve(){\n        char[] c = ns().toCharArray();\n        int n = c.length;\n        int mindist = n;\n        for(int i = 0; i < n-1; i++){\n            if(c[i]==c[i+1]) continue;\n            int dist = Math.max(i+1, n-1-i);\n            mindist = Math.min(mindist, dist);\n        }\n        out.println(mindist);\n    }\n\n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n \n}\n", "label": 0}, {"id": 285, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n \npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    double H = sc.nextDouble();\n    double W = sc.nextDouble();\n    if (H != 1 && W != 1)\n\t\t\tSystem.out.println((long) Math.ceil(H * W / 2));\n\t\telse\n\t\t\tSystem.out.println(1);\n  }\n}\n    ", "label": 0}, {"id": 129, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "label": 1}, {"id": 740, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint[] a = na(n);\n\t\tint[] f = new int[13];\n\t\tf[0]++;\n\t\tfor(int v : a)f[v]++;\n\t\tif(f[0] >= 2 || f[12] >= 2){\n\t\t\tout.println(0);\n\t\t\treturn;\n\t\t}\n\t\tfor(int i = 1;i <= 11;i++){\n\t\t\tif(f[i] >= 3){\n\t\t\t\tout.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < 1<<11;i++){\n\t\t\tboolean[] b = new boolean[25];\n\t\t\tb[0] = b[24] = true;\n\t\t\tif(f[12] > 0)b[12] = true;\n\t\t\tfor(int j = 0;j < 11;j++){\n\t\t\t\tif(f[j+1] == 2){\n\t\t\t\t\tb[j+1] = b[24-(j+1)] = true;\n\t\t\t\t}else if(f[j+1] == 1){\n\t\t\t\t\tif(i<<~j<0){\n\t\t\t\t\t\tb[24-(j+1)] = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tb[j+1] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint min = 99;\n\t\t\tint pre = -99;\n\t\t\tfor(int j = 0;j <= 24;j++){\n\t\t\t\tif(b[j]){\n\t\t\t\t\tmin = Math.min(min, j-pre);\n\t\t\t\t\tpre = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = Math.max(ans, min);\n\t\t}\n\t\tout.println(ans);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 303, "code1": "import java.util.Scanner;\npublic class Main { \n    public static void main(String[] args) {\n        try (Scanner sc = new Scanner(System.in)) { \n        while (true) { \n        int n = sc.nextInt(); \n            if (n == 0) { \n            break; \n            } \n            int[] scores = new int[n]; \n            for (int i = 0; i < scores.length; i++) { \n            scores[i] = sc.nextInt(); \n            } \n            double average = 0, variance = 0;\n            for(int i = 0; i < scores.length; i++){ \n                average += scores[i]; \n            } \n            average = average/n; \n            for(int i = 0; i < scores.length; i++){ \n                variance += (scores[i]-average)*(scores[i]-average); \n            }\n            variance = variance/n;\n            System.out.println(Math.sqrt(variance)); \n            } \n        } \n    }\n}\n", "code2": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint[] a = in.nextIntArray(n);\n\n\t\t\tint count = 0;\n\n\t\t\tfor (int l = 0, r = 0; l < n; l = r) {\n\t\t\t\twhile (r < n && a[l] == a[r]) {\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t\t\tint len = r-l;\n\t\t\t\tcount += len/2;\n\t\t\t}\n\n\t\t\tout.println(count);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\t}\n\n}\n", "label": 0}, {"id": 717, "code1": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "code2": "\npublic class Main {\n\n\n  private static void solve() {\n    int N = ni();\n    int C = ni();\n    int[][] D = ntable(C, C);\n    int[][] c = ntable(N, N);\n\n    int[][] dp = new int[C][3];\n    for (int i = 0; i < C; i++) {\n      for (int x = 0; x < N; x++) {\n        for (int y = 0; y < N; y++) {\n          dp[i][(x + y) % 3] += D[c[x][y] - 1][i];\n        }\n      }\n    }\n\n    int min = Integer.MAX_VALUE;\n    for (int i = 0; i < C; i++) {\n      for (int j = 0; j < C; j++) {\n        if (i == j)\n          continue;\n        for (int k = 0; k < C; k++) {\n          if (i == k || j == k)\n            continue;\n\n          int now = dp[i][0] + dp[j][1] + dp[k][2];\n          min = Math.min(now, min);\n        }\n      }\n    }\n    System.out.println(min);\n  }\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n", "label": 0}, {"id": 165, "code1": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            list.add(scanner.nextInt());\n        }\n        list.sort((val1, val2) -> val1 - val2);\n        int b = list.get(0);\n        for (int i = 1; i < list.size(); i++) {\n            int a = list.get(i);\n            int r = a % b;\n            while (r != 0) {\n                a = b;\n                b = r;\n                r = a % b;\n            }\n        }\n        System.out.println(b);\n    }\n}", "code2": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n        }\n        int ans = A[0];\n        for (int i = 1; i < N; i++) {\n            ans = gcd(ans, A[i]);\n        }\n        System.out.println(ans);\n    }\n\n    public static int gcd(int x, int y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n}", "label": 1}, {"id": 64, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        long N = scanner.nextLong();\n        long K = scanner.nextLong();\n\n        long answer = N - ((N / K) * K);\n        if (answer != 0) {\n            long check = answer - K;\n            if (check < 0) {\n                check *= -1;\n            }\n            if (check < answer) {\n                answer = check;\n            }\n        }\n        System.out.println(answer);\n    }\n}\n", "label": 1}, {"id": 411, "code1": "\nimport static java.lang.Math.*;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic int modP = 1000000007;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong[] t = in.nextLongArray(n), a = in.nextLongArray(n);\n\n\t\t\tlong[] tCalc = new long[n];\n\t\t\tArrays.fill(tCalc, -1);\n\n\t\t\tlong[] aCalc = new long[n];\n\t\t\tArrays.fill(aCalc, -1);\n\n\t\t\tlong[] tDef = new long[n];\n\t\t\tlong[] aDef = new long[n];\n\n\t\t\tlong tMax = -1, aMax = -1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tMax < t[i]) {\n\t\t\t\t\ttMax = t[i];\n\t\t\t\t\ttDef[i] = t[i];\n\t\t\t\t} else {\n\t\t\t\t\ttCalc[i] = tMax;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = n-1; i >= 0; i--) {\n\t\t\t\tif (aMax < a[i]) {\n\t\t\t\t\taMax = a[i];\n\t\t\t\t\taDef[i] = a[i];\n\t\t\t\t} else {\n\t\t\t\t\taCalc[i] = aMax;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (aCalc[i] == -1 && tCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] != tDef[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (aCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] > tCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (tCalc[i] == -1) {\n\t\t\t\t\tif (tDef[i] > aCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlong ans = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tCalc[i] == -1 || aCalc[i] == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tans = ans * min(aCalc[i],tCalc[i]) % modP;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.*;\n\npublic class Main {\n\n    static <T extends Comparable<? super T>> boolean nextPermutation(T[] sequence) {\n        int first = getFirst(sequence);\n        if (first == -1) return false;\n        int toSwap = sequence.length - 1;\n        while (sequence[first].compareTo(sequence[toSwap]) >= 0) --toSwap;\n        swap(sequence, first++, toSwap);\n        toSwap = sequence.length - 1;\n        while (first < toSwap) swap(sequence, first++, toSwap--);\n        return true;\n    }\n\n    static <T extends Comparable<? super T>> int getFirst(T[] sequence) {\n        for (int i = sequence.length - 2; i >= 0; --i)\n            if (sequence[i].compareTo(sequence[i + 1]) < 0) return i;\n        return -1;\n    }\n\n    static <T extends Comparable<? super T>> void swap(T[] sequence, int i, int j) {\n        T tmp = sequence[i];\n        sequence[i] = sequence[j];\n        sequence[j] = tmp;\n    }\n\n    public static void main(String[] args) {\n        FastScanner fs = new FastScanner();\n        int N = fs.nextInt();\n        Integer[] P = new Integer[N];\n        Integer[] Q = new Integer[N];\n        for (int i = 0; i < N; ++i) P[i] = fs.nextInt();\n        for (int i = 0; i < N; ++i) Q[i] = fs.nextInt();\n\n        Integer[] arr = new Integer[N];\n        for (int i = 0; i < N; ++i) arr[i] = i+1;\n\n        int cnt = 1, pNum = 0, qNum = 0;\n        do {\n            if (Arrays.toString(arr).equals(Arrays.toString(P))) pNum = cnt;\n            if (Arrays.toString(arr).equals(Arrays.toString(Q))) qNum = cnt;\n            ++cnt;\n        } while (nextPermutation(arr));\n\n        System.out.println(Math.abs(pNum - qNum));\n\n    }\n\n\n    static class FastScanner {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b)){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public double nextDouble() { return Double.parseDouble(next());}\n    }\n\n}", "label": 0}, {"id": 133, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n\n        int remain = a - b;\n        int ans = c - remain > 0 ? c - remain : 0;\n        System.out.println(ans);\n    }\n\n}\n", "label": 1}, {"id": 487, "code1": "import java.util.*;\n\npublic class Main {\n  public static long MOD = (long)Math.pow(10, 6) + 3;\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long[] kai = new long[(int)MOD];\n//    long[] inkai = new long[(int)MOD];\n//    long[] in = new long[(int)MOD];\n    kai[0] = 1;\n    kai[1] = 1;\n//    inkai[0] = 1;\n//    inkai[1] = 1;\n//    in[1] = 1;\n    for(long i = 2; i < MOD; i++) {\n      kai[(int)i] = (i * kai[(int)i - 1]) % MOD;\n//      inkai[(int)i] = func(kai[(int)i], MOD - 2);\n//      in[(int)i] = func(i, MOD - 2);\n    }\n    int q = sc.nextInt();\n    for(int i = 0; i < q; i++) {\n      long x = sc.nextLong();\n      long d = sc.nextLong();\n      long n = sc.nextLong();\n      long ans = 0;\n      if(d == 0) {\n        if(x == 0) {\n          ans = 0;\n        } else {\n          ans = func(x, n % (MOD - 1));\n        }\n      } else {\n        long inv = func(d, MOD - 2);\n        x = (x * inv) % MOD;\n        if(x == 0) {\n          ans = 0;\n        } else {\n          if((int)(x + n - 1) >= MOD) {\n            ans = 0;\n          } else {\n            long t = func(d, n % (MOD - 1));\n            long invkai = func(kai[(int)x - 1], MOD - 2);\n            ans = (((kai[(int)(x + n - 1)] * invkai) % MOD) * t) % MOD;\n          }\n        }\n      }\n      System.out.println(ans);\n    }\n  }\n  public static long func(long a, long x) {\n    if(x == 0) return 1;\n    if(x >= 1) {\n      if(x % 2 == 0) {\n        long t = func(a, x / 2);\n        return (t * t) % MOD;\n      } else {\n        long t = func(a, x - 1);\n        return (a * t) % MOD;\n      }\n    }\n    return 0;\n  } \n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    private static int[] arr;\n\n    public static void main(String[] args) {\n\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        arr = Arrays.stream(input.split(\"\")).mapToInt(Integer::parseInt).toArray();\n\n        long sum = calc(0, arr.length - 1);\n        System.out.println(sum);\n    }\n\n    private static long calc(int position, int end) {\n        if (position > end) return 0;\n\n        long tmp = 0;\n        for (int i = position; i < end; i++) {\n            tmp += toInt(position, i) * Math.pow(2, (end - i - 1)) + calc(i + 1, end);\n        }\n        tmp += toInt(position, end);\n        return tmp;\n    }\n\n    private static long toInt(int start, int end) {\n        if (start == end) {\n//            System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + arr[start]);\n            return arr[start];\n        }\n\n        long tmp = 0;\n        for (int i = start; i <= end; i++) {\n            tmp += arr[i] * Math.pow(10, (end - i));\n        }\n//        System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + tmp);\n        return tmp;\n    }\n}", "label": 0}, {"id": 66, "code1": "import java.util.*;\n\npublic class Main {\n\tvoid solve() {\n\t\tScanner scan = new Scanner(System.in);\n\t\tlong n = scan.nextLong();\n\t\tlong k = scan.nextLong();\n\t\tif(n % k == 0) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\tn %= k;\n\t\tSystem.out.println(Math.min(n, k - n));\n\t\tscan.close();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        long N = scanner.nextLong();\n        long K = scanner.nextLong();\n\n        long answer = N - ((N / K) * K);\n        if (answer != 0) {\n            long check = answer - K;\n            if (check < 0) {\n                check *= -1;\n            }\n            if (check < answer) {\n                answer = check;\n            }\n        }\n        System.out.println(answer);\n    }\n}\n", "label": 1}, {"id": 70, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner sc = new Scanner(System.in);) {\n\t\t\tdouble a = sc.nextDouble();\n\t\t\tdouble b = sc.nextDouble();\n\t\t\tdouble c = sc.nextDouble();\n\t\t\t//\uff12\u70b9\u9593\u306e\u8ddd\u96e2\n\t\t\tdouble s = (a * b / 2 * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(s);\n\t\t\tdouble l = (a + b +Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) - 2 * a * b\n\t\t\t\t\t* Math.cos(Math.toRadians(c))));\n\t\t\t\tSystem.out.println(l);\n\t\t\tdouble h = (b * Math.sin(Math.toRadians(c)));\n\t\t\t\tSystem.out.println(h);\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "label": 1}, {"id": 279, "code1": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/10 10:58 \u4e0b\u5348\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.next();\n        long sum = 0;\n        int length = s.length();\n        for(int i = 0;i<length;i++){\n            sum += (s.charAt(i)-'0');\n        }\n        System.out.println(sum % 9==0?\"Yes\":\"No\");\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 308, "code1": "import java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayDeque;\nimport java.util.Deque;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Main{\n          public static void main(String[] args) {\n                  Scanner scan = new Scanner(System.in);\n                  int count = 0;\n                  int N = scan.nextInt();\n                  int a[] = new int[N];\n                  for (int i = 0; i < N; i++) {\n                          a[i] = scan.nextInt();\n                  }\n                  for(int j = 1; j < N; j++){\n                          if (a[j-1] == a[j]) {\n                                  a[j] = 10001;\n                                  count++;\n                          }\n                  }\n                  System.out.println(count);\n                  }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 400, "code1": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\n\nimport static java.util.Comparator.reverseOrder;\n\npublic class Main {\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n\n        List<Long> inputList = new ArrayList<Long>();\n        for(int i = 0; i < n ;i++) {\n            inputList.add(sc.nextLong());\n        }\n\n        /*\n        List<Integer> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        for(int a: sortedList) {\n            System.out.println(a);\n        }\n        */\n        List<Long> sortedList = inputList.stream().sorted(reverseOrder()).collect(Collectors.toList());\n        long result = sortedList.get(0);\n        int index = 1;\n        int count = 0;\n        for (int i = 0; i < n - 2 ; i++) {\n            result += sortedList.get(index);\n            count = count + 1;\n            if (count == 2) {\n                count = 0;\n                index = index + 1;\n            }\n        }\n        System.out.println(result);\n    }\n}", "code2": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tpublic void calc() {\n\t\tsb = new StringBuilder();\n\n\n\t\tIO sc = new IO();\n\n\t\tint n = sc.nextInt();\n\t\tint[] t = sc.nextIntArray(n);\n\t\tint[] a = sc.nextIntArray(n);\n\n\n\t\tlong ans = 1;\n\t\t//BigInteger bi = new BigInteger(\"1\");\n\t\tint[] min = new int[n];\n\t\tint[] max = new int[n];\n\t\tArrays.fill(min, 1);\n\t\tArrays.fill(max, INF);\n\t\tint b = -1, nb = -1;\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(\"t\" + i);\n\t\t\tint ni = n-1-i;\n\t\t\tif (b != t[i]) {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t\tmin[i] = Math.max(min[i],t[i]);\n\t\t\t\tb = t[i];\n\t\t\t}else {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t}\n\t\t\tif (nb != a[ni]) {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t\tmin[ni] = Math.max(min[ni],a[ni]);\n\t\t\t\tnb = a[ni];\n\t\t\t}else {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t}\n\n\t\t}\n\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(min[i] + \":\" + max[i]);\n\t\t\tif (max[i] - min[i] < 0) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tans *= max[i] - min[i] +1;\n\t\t\tans %= C;\n\t\t\t//bi = bi.multiply(new BigInteger((max[i] - min[i] +1)+\"\" ));\n\n\t\t}\n\n\n\t\tSystem.out.println(ans);\n\t}\n\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}\n\n", "label": 0}, {"id": 267, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        long A = scanner.nextLong();\n        long B = scanner.nextLong();\n        long[] X = new long[N];\n        for (int i = 0; i < N; i++) {\n            X[i] = scanner.nextInt();\n        }\n        long ans = 0;\n        for (int i = 0; i < N - 1; i++) {\n            if (A * (X[i + 1] - X[i]) < B) {\n                ans += A * (X[i + 1] - X[i]);\n            } else {\n                ans += B;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int[] x = new int[n];\n        for (int i = 0 ; i < n ; i++) {\n            x[i] = sc.nextInt();\n        }\n        long ans = 0;\n        for (int i = 0 ; i < n - 1 ; i++) {\n            ans += (long) Math.min(b,(long) (x[i + 1] - x[i]) * a);\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "label": 1}, {"id": 189, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        try (Scanner s = new Scanner(System.in)) {\n            int k = s.nextInt();\n            int a = s.nextInt();\n            int b = s.nextInt();\n            int mod = a % k;\n            int d = b - a;\n            System.out.println((mod == 0 || (k - mod) <= d) ? \"OK\" : \"NG\");\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int k = sc.nextInt();\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        boolean flg = false;\n        for (int i = a; i <= b; i++) {\n            if ((i % k) == 0) {\n                flg = true;\n                break;\n            }\n        }\n        if (flg) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(\"NG\");\n        }\n\n        sc.close();\n    }\n\n}\n", "label": 1}, {"id": 565, "code1": "import java.util.*;\nclass Main\n{\n    static long mod = 1000000007;\n    public static void main (String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        for(int i = 0; i < n; i++){\n            a[i] = sc.nextLong();\n        }\n        long[] b = new long[n+1];\n        b[0] = 0;\n        for(int i = 1; i <= n; i++){\n            b[i] = (b[i-1] + pow(i, mod - 2)) % mod;\n        }\n        long ans = 0;\n        for(int i = 0; i < n; i++){\n            ans += a[i] * (b[i+1] + b[n - i] - 1);\n            ans %= mod;\n        }\n        for(int i = 1; i <= n; i++){\n            ans *= i;\n            ans %= mod;\n        }\n        System.out.println(ans);\n    }\n    static long pow(long a, long p){\n        if(p == 0) return 1;\n        else if(p % 2 == 0){\n            long d = pow(a, p/2);\n            return d * d % mod;\n        }\n        else return pow(a, p-1) * a % mod;\n    }\n}", "code2": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tif((m|d) == 0) break;\n\t\t\tint day = d;\n\t\t\tswitch(m){\n\t\t\tcase 12:\n\t\t\t\tday += 335;\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tday += 305;\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tday += 274;\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tday += 244;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tday += 213;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tday += 182;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tday += 152;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tday += 121;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tday += 91;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tday += 60;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tday += 31;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t}\n\t\t\tswitch(day%7){\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(\"Thursday\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.println(\"Friday\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.println(\"Saturday\");\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.println(\"Sunday\");\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"Monday\");\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.println(\"Tuesday\");\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(\"Wednesday\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}", "label": 0}, {"id": 435, "code1": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint[] wn = in.nextIntArray(n);\n\n\t\t\tint left = 0;\n\t\t\tint right = INF;\n\t\t\tint mid = 0;\n\t\t\twhile (right > left + 1) {\n\t\t\t\tmid = (left + right) / 2;\n\t\t\t\tint count = 1;\n\t\t\t\tint ca = mid;\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tca = mid;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcount = INF;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// k\u53f0\u4ee5\u4e0b\u3067\u7a4d\u3081\u308b\u5834\u5408\n\t\t\t\tif (count <= k){\n\t\t\t\t\tright = mid;\n\n\t\t\t\t// \uff4b\u53f0\u4ee5\u4e0a\u5fc5\u8981\u306a\u5834\u5408\n\t\t\t\t} else if (count > k) {\n\t\t\t\t\tleft = mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(right);\n\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n\n", "code2": "import java.util.*;\n \nclass Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n \n        String S = sc.next();\n        String T = sc.next();\n        int ls = S.length();\n        int lt = T.length();\n        String a = \"?\";\n\n        if(ls<lt){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        int x = -1;\n        for(int i=0; i<=ls-lt; i++){\n            if(S.charAt(i)==T.charAt(0) || S.charAt(i)==a.charAt(0)){\n                for(int j=0; j<lt; j++){\n                    if(S.charAt(i+j)!=T.charAt(j) && S.charAt(i+j)!=a.charAt(0)){\n                        break;\n                    }\n                    if(j==lt-1){\n                        x = i;\n                    }\n                }\n            }\n        }\n        if(x==-1){\n            System.out.println(\"UNRESTORABLE\");\n            return;\n        }\n        else if(ls==lt){\n            S = T;\n            System.out.println(S);\n            return;\n        }\n        else if(x==0){\n            S = T + S.substring(lt);\n        }\n        else if(x!=0){\n            if(x+lt-1==ls){\n                S = S.substring(0, x) + T;\n            }\n            else{\n                S = S.substring(0, x) + T + S.substring(x + lt);\n            }\n        }\n        String st = \"\";\n        for(int i=0; i<ls; i++){\n            if(S.charAt(i)==a.charAt(0)){\n                st += \"a\";\n            }\n            else{\n                st += String.valueOf((char)S.charAt(i));\n            }\n        }\n        System.out.println(st);\n    }\n}", "label": 0}, {"id": 157, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tString[][] a = new String[n][];\n\t\t\tint p;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ts = sc.next().replaceAll(\":\", \" \").replaceAll(\",\", \" \");\n\t\t\t\ta[i] = s.split(\" \");\n\t\t\t\tp = a[i].length-1;\n\t\t\t\ta[i][p] = a[i][p].substring(0,a[i][p].length()-1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tArrayList<String> list = new ArrayList<String>();\n\t\t\tfor(int i=1;i<a[0].length;i++) list.add(a[0][i]);\n\t\t\t\n\t\t\tboolean flag;\n\t\t\twhile(true){\n\t\t\t\tflag = false;\n\t\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\t\tif(list.contains(a[i][0])==true){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\tlist.remove(list.indexOf(a[i][0]));\n\t\t\t\t\t\tfor(int j=1;j<a[i].length;j++){\n\t\t\t\t\t\t\tif(list.contains(a[i][j])==false) list.add(a[i][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==false) break;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(list.size());\n\t\t}\t\n\t}\t\n}", "code2": "import java.util.*;\n\npublic class Main {\n\tpublic static HashMap<String,HashSet<String>> map;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tmap = new HashMap<String, HashSet<String>>();\n\t\t\tString first = null;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString[] s = sc.next().split(\":\");\n\t\t\t\tif(i == 0) first = s[0];\n\t\t\t\ts[1] = s[1].replaceAll(\"\\\\.\", \"\");\n\t\t\t\tString[] ss = s[1].split(\",\");\n\t\t\t\tmap.put(s[0], new HashSet<String>());\n\t\t\t\tfor(String tmp : ss){\n\t\t\t\t\tmap.get(s[0]).add(tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(String si : map.keySet()){\n\t\t\t\tfor(String sj : map.keySet()){\n\t\t\t\t\tif(map.get(si).contains(sj)){\n\t\t\t\t\t\tmap.get(si).remove(sj);\n\t\t\t\t\t\tmap.get(si).addAll(map.get(sj));\n\t\t\t\t\t}\n\t\t\t\t\tif(map.get(sj).contains(si)){\n\t\t\t\t\t\tmap.get(sj).remove(si);\n\t\t\t\t\t\tmap.get(sj).addAll(map.get(si));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(map.get(first).size());\n\t\t}\n\t}\n/*\n\tpublic static HashSet<String> solve(String group){\n\t\tfor(String s : map.get(group)){\n\n\t\t}\n\n\t}\n\t*/\n}", "label": 1}, {"id": 47, "code1": "import java.util.*;\nclass Main {\n\tstatic int n;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) break;\n\t\t\tint maxDistance = 0;\n\t\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d = sc.nextInt() + sc.nextInt();\n\t\t\t\tmap.put(d, p);\n\t\t\t\tmaxDistance = Math.max(d, maxDistance);\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d %d\\n\", map.get(maxDistance), maxDistance);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0)break;\n\t\t\tint[] a = new int[n];\n\t\t\tint x,y,z,v;\n\t\t\tint babaa = 0;\n\t\t\tv = 0;\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\ta[i] = sc.nextInt();\n\t\t\t\tx = sc.nextInt();\n\t\t\t\ty = sc.nextInt();\n\t\t\t\tz = x + y;\n\t\t\t\tif(v < z){\n\t\t\t\t\tbabaa = a[i];\n\t\t\t\t\tv = z;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(babaa + \" \" + v);\n\t\t}sc.close();\n\t}\n}", "label": 1}, {"id": 442, "code1": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n\n        char[] s = sc.next().toCharArray();\n        char[] t = sc.next().toCharArray();\n\n        boolean isAns = false;\n        for (int i = s.length-1; i >= t.length-1; i--) {\n            char[] tmp = s.clone();\n            isAns = true;\n            for (int j = 0; j < t.length; j++) {\n                if (s[i-j] == t[t.length-1-j] || s[i-j] == '?') {\n                    tmp[i-j] = t[t.length-1-j];\n                } else {\n                    isAns = false;\n                    break;\n                }\n            }\n\n            if (isAns) {\n                s = tmp;\n                break;\n            }\n        }\n\n        if (isAns) {\n            for (char c : s)\n                System.out.print(c == '?' ? 'a' : c);\n        } else {\n            System.out.println(\"UNRESTORABLE\");\n        }\n    }\n\n    static class MyScanner {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1 << 15);\n        StringTokenizer tokenizer;\n\n        String next() {\n            try {\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                }\n            } catch (IOException ignored) {\n            }\n            return tokenizer.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint A = sc.nextInt();\n\t\tint B = sc.nextInt();\n\t\tint C = sc.nextInt();\n\t\tint K = sc.nextInt();\n\t\tint res = 0;\n\t\tres+=Math.min(A, K);\n\t\tK -= res;\n\t\tif(K==0) {\n\t\t\tSystem.out.println(res);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tK-=B;\n\t\tif(K>0) {\n\t\t\tres-=Math.min(K, C);\n\t\t}\n\t\tSystem.out.println(res);\n\n\t}\n}", "label": 0}, {"id": 479, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author cunbidun\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        EProductOfArithmeticProgression solver = new EProductOfArithmeticProgression();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class EProductOfArithmeticProgression {\n        private static final int MOD = (int) 1e6 + 3;\n        private InputReader in;\n        private PrintWriter out;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n            int q = in.nextInt();\n\n            int[] fac = new int[MOD + 1];\n            int[] inv = new int[MOD + 1];\n            fac[0] = 1;\n            inv[0] = Op.inv(1, MOD);\n            for (int i = 1; i <= MOD; i++) {\n                fac[i] = Op.mulMod(fac[i - 1], i, MOD);\n                inv[i] = Op.inv(fac[i], MOD);\n            }\n\n            while (q-- > 0) {\n                int x = in.nextInt();\n                int d = in.nextInt();\n                int n = in.nextInt();\n                if (d == 0) {\n                    out.println(Op.powMod(x, n, MOD));\n                    continue;\n                }\n                x = Op.mulMod(x, Op.inv(d, MOD), MOD);\n                int ans;\n                if (x + n - 1 >= MOD || x == 0) ans = 0;\n                else\n                    ans = Op.mulMod(fac[x + n - 1], inv[x - 1], MOD);\n                out.println(Op.mulMod(ans, Op.powMod(d, n, MOD), MOD));\n            }\n        }\n\n    }\n\n    static class Op {\n        public static int mulMod(int x, int y, int MOD) {\n            return (int) (((long) x * y) % MOD);\n        }\n\n        public static int powMod(int x, long p, int MOD) {\n            if (p == 0) return 1;\n            int t = powMod(x, p / 2, MOD);\n            if ((p & 1) == 1)\n                return mulMod(mulMod(t, t, MOD), x, MOD);\n            return mulMod(t, t, MOD);\n        }\n\n        public static int inv(int x, int MOD) {\n            return powMod(x, MOD - 2, MOD);\n        }\n\n    }\n\n    static class InputReader extends InputStream {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        private static boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 567, "code1": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n\tstatic final Reader in = new Reader();\n\tstatic final long M=(long)1e9+7;\n\t\n\tpublic static void main(String[] args) {\n\t\tint n=in.nextInt();\n\t\tlong[] ps = new long[n+1];\n\t\tlong nf=1;\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tps[i]=(ps[i-1]+in.nextInt())%M;\n\t\t\tnf=nf*i%M;\n\t\t}\n\t\tlong ans=nf*ps[n]%M, s=0;\n\t\tfor(int i=1; i<=n-1; ++i) {\n\t\t\ts=(s+ps[n-i]-ps[i]+M)%M;\n\t\t\tans=(ans+nf*modI((long)(i+1)*(i>=n-1?1:i+2), M)%M*2*s+nf*modI(i+1, M)%M*(ps[i]+ps[n]-ps[n-i]+M))%M;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tstatic long modI(long a, long m) {\n\t\treturn (a%=m)<=1?1:(1-modI(m%a, a)*m)/a+m;\n\t}\n\t\n\tstatic class Reader {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st;\n\t\tString next() {\n\t\t\twhile(st==null||!st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.stream.IntStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.util.PriorityQueue;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.AbstractCollection;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            Dijkstra d = new Dijkstra(n);\n            for (int i = 0; i < n - 1; i++) {\n                int from = in.readInt() - 1;\n                int to = in.readInt() - 1;\n                d.addUndirectedEdge(from, to, 1);\n            }\n            long[] dist1 = d.getDist(0);\n            long[] distN = d.getDist(n - 1);\n            long count1 = IntStream.range(0, n)\n                    .filter(i -> dist1[i] <= distN[i])\n                    .count();\n            out.printLine(count1 > n - count1 ? \"Fennec\" : \"Snuke\");\n        }\n\n    }\n\n    static class Dijkstra {\n        int n;\n        ArrayList<Pair>[] G;\n        private long INF = Long.MAX_VALUE / 3;\n\n        public Dijkstra(int n) {\n            this.n = n;\n            G = new ArrayList[n];\n            for (int i = 0; i < n; i++) {\n                G[i] = new ArrayList<>();\n            }\n        }\n\n        public void addUndirectedEdge(int from, int to, long cost) {\n            G[from].add(new Pair(to, cost));\n            G[to].add(new Pair(from, cost));\n        }\n\n        public long[] getDist(int s) {\n            PriorityQueue<Pair> Q = new PriorityQueue<>();\n            Q.add(new Pair(s, 0));\n            long[] dist = new long[n];\n            Arrays.fill(dist, INF);\n            boolean[] used = new boolean[n];\n            while (!Q.isEmpty()) {\n                Pair p = Q.poll();\n                if (used[p.x]) continue;\n                used[p.x] = true;\n                dist[p.x] = p.y;\n\n                for (Pair edge : G[p.x]) {\n                    Q.add(new Pair(edge.x, p.y + edge.y));\n                }\n            }\n            return dist;\n        }\n\n        class Pair implements Comparable<Pair> {\n            int x;\n            long y;\n\n            Pair(int x, long y) {\n                this.x = x;\n                this.y = y;\n            }\n\n            public int compareTo(Pair p) {\n                return Long.compare(y, p.y);\n            }\n\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 666, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n, m;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        m = sc.nextInt();\n        solve();\n    }\n\n    void solve() {\n        int ans = n * 100 + 1800 * m;\n        System.out.println(ans * pow(2, m));\n    }\n\n    long pow(long x, int n) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = ans * x;\n            }\n            x = x * x;\n            n >>= 1;\n        }\n        return ans;\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int h = scanner.nextInt();\n        int w = scanner.nextInt();\n        String[] letters = new String[h];\n\n        int[] occurrences = new int[26];\n        int numOfFours = 0;\n        int numOfTwos = 0;\n        int numOfOnes = 0;\n\n        for (int i = 0; i < letters.length; i++) {\n            letters[i] = scanner.next();\n            for (int j = 0; j < letters[i].length(); j++) {\n                occurrences[letters[i].charAt(j) - 'a']++;\n            }\n        }\n        boolean isPossible = true;\n\n        if (h % 2 == 0 && w % 2 == 0){\n            for (int occurrence : occurrences) {\n                if (occurrence % 4 != 0) {\n                    isPossible = false;\n                    break;\n                } else numOfFours += (occurrence / 4);\n            }\n\n            if (numOfFours != (h/2)*(w/2)) isPossible = false;\n        }\n        else if (h % 2 == 0 && w % 2 == 1){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (h/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2)) isPossible = false;\n        }\n        else if (h % 2 == 1 && w % 2 == 0){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (w/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (w/2)) isPossible = false;\n        }\n        else {\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfTwos < ((h/2) + (w/2)) && occurrences[i] >= 2){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] == 1) {\n                    numOfOnes++;\n                    occurrences[i] -= 1;\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2) + (w/2) || numOfOnes != 1) isPossible = false;\n        }\n\n        System.out.println(isPossible?\"Yes\":\"No\");\n    }\n}\n", "label": 0}, {"id": 769, "code1": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()) {\n\t\t\tP[] ps = new P[4];\n\t\t\tString[] vs = sc.next().split(\",\");\n\t\t\tfor(int i=0;i<4;i++) ps[i] = new P( Double.parseDouble(vs[2*i]), Double.parseDouble(vs[2*i+1]) );\n\t\t\t\n\t\t\tSystem.out.println( ( cross(ps[0], ps[2], ps[1], ps[3])? \"YES\": \"NO\" ) );\n\t\t}\n\t}\n\t\n\tboolean cross(P p1, P p2, P q1, P q2) {\n\t\treturn p1.sub(p2).det(q1.sub(p2)) * p1.sub(p2).det(q2.sub(p2)) < 0.0 &&\n\t\t\t   q1.sub(q2).det(p1.sub(q2)) * q1.sub(q2).det(p2.sub(q2)) < 0.0;\n\t}\n\t\n\tclass P {\n\t\tdouble x, y;\n\t\tP(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t\n\t\tP sub(P p) {\n\t\t\treturn new P(x-p.x, y-p.y);\n\t\t}\n\t\t\n\t\tdouble det(P p) {\n\t\t\treturn x*p.y - p.x*y;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "code2": "\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tchar[] s = ns().toCharArray();\n\t\tint min = s.length;\n\t\tfor(int i = 0;i < s.length-1;i++){\n\t\t\tif(s[i] != s[i+1]){\n\t\t\t\tmin = Math.min(min, Math.max(i+1, s.length-(i+1)));\n\t\t\t}\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 409, "code1": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tpublic void calc() {\n\t\tsb = new StringBuilder();\n\n\n\t\tIO sc = new IO();\n\n\t\tint n = sc.nextInt();\n\t\tint[] t = sc.nextIntArray(n);\n\t\tint[] a = sc.nextIntArray(n);\n\n\n\t\tlong ans = 1;\n\t\t//BigInteger bi = new BigInteger(\"1\");\n\t\tint[] min = new int[n];\n\t\tint[] max = new int[n];\n\t\tArrays.fill(min, 1);\n\t\tArrays.fill(max, INF);\n\t\tint b = -1, nb = -1;\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(\"t\" + i);\n\t\t\tint ni = n-1-i;\n\t\t\tif (b != t[i]) {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t\tmin[i] = Math.max(min[i],t[i]);\n\t\t\t\tb = t[i];\n\t\t\t}else {\n\t\t\t\tmax[i] = Math.min(max[i],t[i]);\n\t\t\t}\n\t\t\tif (nb != a[ni]) {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t\tmin[ni] = Math.max(min[ni],a[ni]);\n\t\t\t\tnb = a[ni];\n\t\t\t}else {\n\t\t\t\tmax[ni] = Math.min(max[ni],a[ni]);\n\t\t\t}\n\n\t\t}\n\n\t\tfor (int i=0; i < n; i++) {\n\t\t\t//System.out.println(min[i] + \":\" + max[i]);\n\t\t\tif (max[i] - min[i] < 0) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tans *= max[i] - min[i] +1;\n\t\t\tans %= C;\n\t\t\t//bi = bi.multiply(new BigInteger((max[i] - min[i] +1)+\"\" ));\n\n\t\t}\n\n\n\t\tSystem.out.println(ans);\n\t}\n\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[] fact = new int[9];\n\n\n\tpublic static void main(String[] args) {\n\t\tfact[1] = 1;\n\t\tfor(int i = 2; i <= 8; i++)\n\t\t\tfact[i] = fact[i-1] * i;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] p = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tp[i] = sc.nextInt();\n\n\t\tint[] q = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tq[i] = sc.nextInt();\n\n\t\tint ans = Math.abs(getPosi(p) - getPosi(q));\n\t\tSystem.out.println(ans);\n        return;\n    }\n\n\tstatic private int getPosi(int[] x) {\n\n\t\t\tint l = x.length;\n\t\t\tint p = 1;\n\n\t\t\tfor(int i = 0; i < l; i++) {\n\t\t\t\tp += fact[l-i-1] * (x[i]-1);\n\t\t\t\tfor(int j = i+1; j < l; j++) {\n\t\t\t\t\tif(x[j] > x[i])\n\t\t\t\t\t\tx[j]--;\n\t\t\t\t}\n\t\t\t}\n\t\treturn p;\n\n\t}\n\n}\n\n", "label": 0}, {"id": 535, "code1": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n  private static Scanner sc;\n\n  public static void main(String[] args) {\n    sc = new Scanner(System.in);\n    new Main().solve();\n  }\n\n  private void solve() {\n    int N = sc.nextInt();\n    int[] a = new int[N + 2];\n    for (int i = 0; i < N; i++) {\n      a[i + 1] = sc.nextInt();\n    }\n    int sum = 0;\n    for (int i = 0; i <= N; i++) {\n      sum += Math.abs(a[i] - a[i + 1]);\n    }\n\n    for (int i = 0; i < N; i++) {\n      System.out.println(sum - Math.abs(a[i] - a[i + 1]) - Math.abs(a[i + 2] - a[i + 1]) + Math.abs(a[i] - a[i + 2]));\n    }\n  }\n}\n", "label": 0}, {"id": 524, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\n    void solve() throws IOException {\n        int h = ni(), w = ni();\n        String[] a = nsa(h);\n\n        char[][] ansR = new char[h][w];\n        char[][] ansB = new char[h][w];\n\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (i == 0 || i < h - 1 && j % 2 == 0) {\n                    ansR[i][j] = '#';\n                    ansB[i][j] = '.';\n                } else {\n                    ansR[i][j] = '.';\n                    ansB[i][j] = '#';\n                }\n            }\n        }\n\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                if (a[i].charAt(j) == '#') {\n                    ansR[i][j] = '#';\n                    ansB[i][j] = '#';\n                }\n            }\n        }\n\n        for (int i = 0; i < h; i++) {\n            out.println(String.valueOf(ansR[i]));\n        }\n        out.println();\n        for (int i = 0; i < h; i++) {\n            out.println(String.valueOf(ansB[i]));\n        }\n    }\n\n    String ns() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine(), \" \");\n        }\n        return tok.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(ns());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(ns());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(ns());\n    }\n\n    String[] nsa(int n) throws IOException {\n        String[] res = new String[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ns();\n        }\n        return res;\n    }\n\n    int[] nia(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = ni();\n        }\n        return res;\n    }\n\n    long[] nla(int n) throws IOException {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nl();\n        }\n        return res;\n    }\n\n    class INA {\n        int[][] a;\n\n        INA(int n, int m) throws IOException {\n            this(n, m, -1);\n        }\n\n        INA(int n, int m, int t) throws IOException {\n            a = new int[m][n];\n\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[j][i] = ni() + t;\n                }\n            }\n        }\n\n        int[] get(int i) {\n            return a[i - 1];\n        }\n    }\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        tok = new StringTokenizer(\"\");\n        Main main = new Main();\n        main.solve();\n        out.close();\n    }\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "label": 0}, {"id": 686, "code1": "import java.util.*;\n\npublic class Main {    \n    \n  public static void main(String[] args) {              \n     Scanner sc = new Scanner(System.in);\n     \n     int N = sc.nextInt();\n     \n     int sum = 0;\n     int min = Integer.MAX_VALUE;\n     \n     int count = 0;\n     for(int i = 0;i < N;i++){\n         int a = sc.nextInt();\n         if(a%10 == 0){\n               count++;\n         }\n         sum += a;\n         if(a%10 != 0){\n           min = Math.min(min,a);\n         }\n     }\n     \n     if(count == N){\n         System.out.println(0);\n         return;\n     }     \n                           \n     if(sum%10 != 0){\n         System.out.println(sum);\n         return;\n     }else{\n         System.out.println(sum - min);\n         return;\n     }\n      \n  }          \n}", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint mod = 1000000007;\n\t\tlong[][] res =  guessLeaned(1000000007, \n\t\t\t\t1, 4, 16, 84, 516, 3696, 30096, 275040, 2786400, 31000320, 375736320, 928152292\n\t\t\t\t);\n\t\t\n\t\tlong[] u = {1, 4, 16};\n\t\tfor(int i = 3;i <= n;i++){\n\t\t\tlong v = f(res, u, i, mod);\n\t\t\tfor(int j = 0;j < 2;j++){\n\t\t\t\tu[j] = u[j+1];\n\t\t\t}\n\t\t\tu[2] = v;\n\t\t}\n\t\tout.println(u[0]);\n\t}\n\t\n\tpublic static long f(long[][] ged, long[] prevs, long x, int mod)\n\t{\n\t\tint n = ged.length;\n\t\tassert prevs.length == n-1;\n\t\tx -= n-1;\n\t\t\n\t\tlong s = 0;\n\t\tlong tar = 0;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tlong co = 0;\n\t\t\tfor(int j = ged[i].length-1;j >= 0;j--){\n\t\t\t\tco = (co * x + ged[i][j]) % mod;\n\t\t\t}\n\t\t\tif(i < n-1){\n\t\t\t\ts += co * prevs[i];\n\t\t\t\ts %= mod;\n\t\t\t}else{\n\t\t\t\ttar = co;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong ret = -invl(tar, mod) * s % mod;\n\t\tif(ret < 0)ret += mod;\n\t\treturn ret;\n\t}\n\t\n\tpublic static long[][] guessLeaned(int mod, long... a)\n\t{\n\t\tint n = a.length;\n\t\t\n\t\t// #formula >= #variable\n\t\t// n-r+2 >= r(r+1)/2\n\t\tfor(int r = n;r >= 1;r--){\n\t\t\tif(n-r+2 < r*(r+1)/2)continue;\n\t\t\tint[][] M = new int[n-r+2][r*(r+1)/2];\n\t\t\tfor(int i = 0;i < n-r+1;i++){\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int j = 0;j < r;j++){\n\t\t\t\t\tlong prod = 1;\n\t\t\t\t\tfor(int k = 0;k <= r-j-1;k++){\n\t\t\t\t\t\tM[i][p++] = (int)(prod*a[i+j]%mod);\n\t\t\t\t\t\tprod = prod * i % mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tM[n-r+1][0] = 1;\n\t\t\t\n\t\t\tint[] v = new int[n-r+2];\n\t\t\tv[n-r+1] = 1;\n\t\t\t\n\t\t\tResult res = gaussElimination(M, v, mod);\n\t\t\tif(res.exists){\n\t\t\t\tlong[][] ret = new long[r][];\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int i = 0;i < r;i++){\n\t\t\t\t\tret[i] = new long[r-i];\n\t\t\t\t\tfor(int j = 0;j < r-i;j++){\n\t\t\t\t\t\tret[i][j] = res.sol[p++];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic static Result gaussElimination(int[][] M, int[] v, int mod)\n\t{\n\t\tint n = M.length, m = M[0].length;\n\t\tint[] head = new int[n];\n\t\t\n\t\t// if not needed, comment out.\n\t\tfor(int[] row : M){\n\t\t\tfor(int i = 0;i < row.length;i++){\n\t\t\t\trow[i] %= mod;\n\t\t\t\tif(row[i] < 0)row[i] += mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forward Elimination\n\t\tint row = 0;\n\t\tfor(int col = 0;col < m;col++){\n\t\t\t// select pivot\n\t\t\tboolean pivotFound = false;\n\t\t\tout:\n\t\t\tfor(int prow = row;prow < n;prow++){\n\t\t\t\tif(M[prow][col] != 0){\n\t\t\t\t\t// pivot found\n\t\t\t\t\tif(prow != row){\n\t\t\t\t\t\t// swap rows\n\t\t\t\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\t\t\t\tint u = M[prow][k]; M[prow][k] = M[row][k]; M[row][k] = u;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint dum = v[prow]; v[prow] = v[row]; v[row] = dum;\n\t\t\t\t\t}\n\t\t\t\t\tpivotFound = true;\n\t\t\t\t\tbreak out;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!pivotFound)continue;\n\t\t\thead[row] = col;\n\t\t\t\n\t\t\t// diag to 1\n\t\t\tlong imul = invl(M[row][col], mod);\n\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\tM[row][k] = (int)(M[row][k] * imul % mod);\n\t\t\t}\n\t\t\tv[row] = (int)(v[row] * imul % mod);\n\t\t\t\n\t\t\tfor(int j = row+1;j < n;j++){\n\t\t\t\tif(M[j][col] != 0){\n\t\t\t\t\tlong mul = mod-M[j][col];\n\t\t\t\t\tfor(int k = col;k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[row][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[row] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t\trow++;\n\t\t}\n\t\t\n\t\tResult ret = new Result();\n\t\tret.mat = M;\n\t\tfor(int i = row;i < n;i++){\n\t\t\tif(v[i] != 0){\n\t\t\t\tret.rank = row;\n\t\t\t\tret.exists = false;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = row-1;i >= 0;i--){\n\t\t\tfor(int j = i-1;j >= 0;j--){\n\t\t\t\tif(M[j][head[i]] != 0){\n\t\t\t\t\tlong mul = mod-M[j][head[i]];\n\t\t\t\t\tfor(int k = head[i];k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[i][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[i] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] retv = new int[m];\n\t\tfor(int i = 0;i < row;i++){\n\t\t\tretv[head[i]] = v[i];\n\t\t}\n\t\t\n\t\tret.sol = retv;\n\t\tret.rank = row;\n\t\tret.exists = true;\n\t\treturn ret;\n\t}\n\t\n\tpublic static class Result\n\t{\n\t\tpublic int[][] mat;\n\t\tpublic int[] sol;\n\t\tpublic int rank;\n\t\tpublic boolean exists;\n\t}\n\t\n\tpublic static long invl(long a, long mod) {\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\treturn p < 0 ? p + mod : p;\n\t}\n\n\n\t\n\tpublic static long C(int n, int r, int mod, int[][] fif) {\n\t\tif (n < 0 || r < 0 || r > n)\n\t\t\treturn 0;\n\t\treturn (long) fif[0][n] * fif[1][r] % mod * fif[1][n - r] % mod;\n\t}\n\n\t\n\tpublic static int[][] enumFIF(int n, int mod) {\n\t\tint[] f = new int[n + 1];\n\t\tint[] invf = new int[n + 1];\n\t\tf[0] = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tf[i] = (int) ((long) f[i - 1] * i % mod);\n\t\t}\n\t\tlong a = f[n];\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\tinvf[n] = (int) (p < 0 ? p + mod : p);\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tinvf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n\t\t}\n\t\treturn new int[][] { f, invf };\n\t}\n\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 721, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int k = in.nextInt();\n            String ans = \"No\";\n            for (int i = 0; i <= n; i++) {\n                for (int j = 0; j <= m; j++) {\n                    int v = (n - i) * j + i * (m - j);\n                    if (v == k) {\n                        ans = \"Yes\";\n                    }\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextInt();\n        }\n        int[] c = new int[n];\n        for (int i = 0; i < n; i++) {\n            c[i] = sc.nextInt();\n        }\n        Arrays.sort(a);\n        Arrays.sort(b);\n        Arrays.sort(c);\n        System.out.println(solve(a, b, c));\n    }\n\n    private static long solve(int[] a, int[] b, int[] c) {\n        int n = a.length;\n        long[] bmemo = new long[n];\n        int cidx = 0;\n        for (int j = 0; j < n; j++) {\n            for (int k = cidx; k < n; k++) {\n                if (b[j] >= c[k]) {\n                    cidx++;\n                } else {\n                    bmemo[j] = n - k;\n                    break;\n                }\n            }\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            bmemo[i] += bmemo[i + 1];\n        }\n        long sum = 0;\n        int bidx = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = bidx; j < n; j++) {\n                if (a[i] >= b[j]) {\n                    bidx++;\n                } else {\n                    sum += bmemo[j];\n                    break;\n                }\n            }\n        }\n        return sum;\n    }\n}\n", "label": 0}, {"id": 145, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tprivate void solve() {\n\t\tScanner io = new Scanner(System.in);\n\t\tint N = io.nextInt();\n\t\tint M = io.nextInt();\n\t\tboolean[] medium = new boolean[N];\n\t\tboolean[] ableToN = new boolean[N];\n\t\tfor(int i=0;i<M;i++){\n\t\t\tint a = io.nextInt()-1;\n\t\t\tint b = io.nextInt()-1;\n\t\t\tif(a==0) medium[b] = true;\n\t\t\tif(b==0) medium[a] = true;\n\t\t\tif(a==N-1) ableToN[b] = true;\n\t\t\tif(b==N-1) ableToN[a] = true;\n\t\t}\n\t\tfor(int i=0;i<N;i++){\n\t\t\tif(medium[i] && ableToN[i]){\n\t\t\t\tSystem.out.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}", "code2": "\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner scanner;\n\tpublic static void main(String[] args) {\n\t    scanner = new Scanner(System.in);\n\n\t    int N=gi();\n\t    int M=gi();\n\t    long[] A=new long[M];\n\t    long[] B=new long[M];\n\t    Map<Long, Integer> map=new HashMap<Long, Integer>();\n\n\t    long sum=0;\n\t    for(int i=0; i<M; i++) {\n\t        A[i]=gl();\n\t        B[i]=gl();\n\t        if(A[i]==1) {\n\t        \tif(map.containsKey(B[i])) {\n\t        \t\tSystem.out.println(\"POSSIBLE\");\n                    return;\n\t        \t} else {\n\t        \t\tmap.put(B[i], 0);\n\t        \t}\n\t        }\n\t        if(B[i]==N) {\n\t        \tif(map.containsKey(A[i])) {\n\t        \t\tSystem.out.println(\"POSSIBLE\");\n                    return;\n\t        \t} else {\n\t        \t\tmap.put(A[i], 0);\n\t        \t}\n\t        }\n\t    }\n\n\n\t\tSystem.out.println(\"IMPOSSIBLE\");\n\t}\n\n\t// \u6587\u5b57\u5217\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static String gs() {\n\t\treturn scanner.next();\n\t}\n\n\t// int\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static int gi() {\n\t\treturn Integer.parseInt(scanner.next());\n\t}\n\n\t// long\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static long gl() {\n\t\treturn Long.parseLong(scanner.next());\n\t}\n\n\t// double\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static double gd() {\n\t\treturn Double.parseDouble(scanner.next());\n\t}\n}", "label": 1}, {"id": 692, "code1": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint mod = 1000000007;\n\t\tlong[][] res =  guessLeaned(1000000007, \n\t\t\t\t1, 4, 16, 84, 516, 3696, 30096, 275040, 2786400, 31000320, 375736320, 928152292\n\t\t\t\t);\n\t\t\n\t\tlong[] u = {1, 4, 16};\n\t\tfor(int i = 3;i <= n;i++){\n\t\t\tlong v = f(res, u, i, mod);\n\t\t\tfor(int j = 0;j < 2;j++){\n\t\t\t\tu[j] = u[j+1];\n\t\t\t}\n\t\t\tu[2] = v;\n\t\t}\n\t\tout.println(u[0]);\n\t}\n\t\n\tpublic static long f(long[][] ged, long[] prevs, long x, int mod)\n\t{\n\t\tint n = ged.length;\n\t\tassert prevs.length == n-1;\n\t\tx -= n-1;\n\t\t\n\t\tlong s = 0;\n\t\tlong tar = 0;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tlong co = 0;\n\t\t\tfor(int j = ged[i].length-1;j >= 0;j--){\n\t\t\t\tco = (co * x + ged[i][j]) % mod;\n\t\t\t}\n\t\t\tif(i < n-1){\n\t\t\t\ts += co * prevs[i];\n\t\t\t\ts %= mod;\n\t\t\t}else{\n\t\t\t\ttar = co;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong ret = -invl(tar, mod) * s % mod;\n\t\tif(ret < 0)ret += mod;\n\t\treturn ret;\n\t}\n\t\n\tpublic static long[][] guessLeaned(int mod, long... a)\n\t{\n\t\tint n = a.length;\n\t\t\n\t\t// #formula >= #variable\n\t\t// n-r+2 >= r(r+1)/2\n\t\tfor(int r = n;r >= 1;r--){\n\t\t\tif(n-r+2 < r*(r+1)/2)continue;\n\t\t\tint[][] M = new int[n-r+2][r*(r+1)/2];\n\t\t\tfor(int i = 0;i < n-r+1;i++){\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int j = 0;j < r;j++){\n\t\t\t\t\tlong prod = 1;\n\t\t\t\t\tfor(int k = 0;k <= r-j-1;k++){\n\t\t\t\t\t\tM[i][p++] = (int)(prod*a[i+j]%mod);\n\t\t\t\t\t\tprod = prod * i % mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tM[n-r+1][0] = 1;\n\t\t\t\n\t\t\tint[] v = new int[n-r+2];\n\t\t\tv[n-r+1] = 1;\n\t\t\t\n\t\t\tResult res = gaussElimination(M, v, mod);\n\t\t\tif(res.exists){\n\t\t\t\tlong[][] ret = new long[r][];\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int i = 0;i < r;i++){\n\t\t\t\t\tret[i] = new long[r-i];\n\t\t\t\t\tfor(int j = 0;j < r-i;j++){\n\t\t\t\t\t\tret[i][j] = res.sol[p++];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic static Result gaussElimination(int[][] M, int[] v, int mod)\n\t{\n\t\tint n = M.length, m = M[0].length;\n\t\tint[] head = new int[n];\n\t\t\n\t\t// if not needed, comment out.\n\t\tfor(int[] row : M){\n\t\t\tfor(int i = 0;i < row.length;i++){\n\t\t\t\trow[i] %= mod;\n\t\t\t\tif(row[i] < 0)row[i] += mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forward Elimination\n\t\tint row = 0;\n\t\tfor(int col = 0;col < m;col++){\n\t\t\t// select pivot\n\t\t\tboolean pivotFound = false;\n\t\t\tout:\n\t\t\tfor(int prow = row;prow < n;prow++){\n\t\t\t\tif(M[prow][col] != 0){\n\t\t\t\t\t// pivot found\n\t\t\t\t\tif(prow != row){\n\t\t\t\t\t\t// swap rows\n\t\t\t\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\t\t\t\tint u = M[prow][k]; M[prow][k] = M[row][k]; M[row][k] = u;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint dum = v[prow]; v[prow] = v[row]; v[row] = dum;\n\t\t\t\t\t}\n\t\t\t\t\tpivotFound = true;\n\t\t\t\t\tbreak out;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!pivotFound)continue;\n\t\t\thead[row] = col;\n\t\t\t\n\t\t\t// diag to 1\n\t\t\tlong imul = invl(M[row][col], mod);\n\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\tM[row][k] = (int)(M[row][k] * imul % mod);\n\t\t\t}\n\t\t\tv[row] = (int)(v[row] * imul % mod);\n\t\t\t\n\t\t\tfor(int j = row+1;j < n;j++){\n\t\t\t\tif(M[j][col] != 0){\n\t\t\t\t\tlong mul = mod-M[j][col];\n\t\t\t\t\tfor(int k = col;k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[row][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[row] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t\trow++;\n\t\t}\n\t\t\n\t\tResult ret = new Result();\n\t\tret.mat = M;\n\t\tfor(int i = row;i < n;i++){\n\t\t\tif(v[i] != 0){\n\t\t\t\tret.rank = row;\n\t\t\t\tret.exists = false;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = row-1;i >= 0;i--){\n\t\t\tfor(int j = i-1;j >= 0;j--){\n\t\t\t\tif(M[j][head[i]] != 0){\n\t\t\t\t\tlong mul = mod-M[j][head[i]];\n\t\t\t\t\tfor(int k = head[i];k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[i][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[i] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] retv = new int[m];\n\t\tfor(int i = 0;i < row;i++){\n\t\t\tretv[head[i]] = v[i];\n\t\t}\n\t\t\n\t\tret.sol = retv;\n\t\tret.rank = row;\n\t\tret.exists = true;\n\t\treturn ret;\n\t}\n\t\n\tpublic static class Result\n\t{\n\t\tpublic int[][] mat;\n\t\tpublic int[] sol;\n\t\tpublic int rank;\n\t\tpublic boolean exists;\n\t}\n\t\n\tpublic static long invl(long a, long mod) {\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\treturn p < 0 ? p + mod : p;\n\t}\n\n\n\t\n\tpublic static long C(int n, int r, int mod, int[][] fif) {\n\t\tif (n < 0 || r < 0 || r > n)\n\t\t\treturn 0;\n\t\treturn (long) fif[0][n] * fif[1][r] % mod * fif[1][n - r] % mod;\n\t}\n\n\t\n\tpublic static int[][] enumFIF(int n, int mod) {\n\t\tint[] f = new int[n + 1];\n\t\tint[] invf = new int[n + 1];\n\t\tf[0] = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tf[i] = (int) ((long) f[i - 1] * i % mod);\n\t\t}\n\t\tlong a = f[n];\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\tinvf[n] = (int) (p < 0 ? p + mod : p);\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tinvf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n\t\t}\n\t\treturn new int[][] { f, invf };\n\t}\n\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\nimport java.util.StringTokenizer;\n\n\nclass Main{\n\tstatic int[][] ban;\n\tstatic boolean[][] visited;\n\tstatic long sum=0;\n\tstatic int H,W;\n\tstatic long kuro=0;\n\tstatic long siro=0;\n\tpublic static void main(String[] args) {\n\t\tSC sc=new SC(System.in);\n\t\tH=sc.nextInt();\n\t\tW=sc.nextInt();\n\t\tvisited=new boolean[H][W];\n\t\tban=new int[H][W];\n\t\tString s;\n\t\tfor(int i=0; i<H; i++){\n\t\t\ts=sc.next();\n\t\t\tfor(int j=0; j<W; j++){\n\t\t\t\tif(s.charAt(j)=='#'){\n\t\t\t\t\tban[i][j]=1;\t//\u9ed2\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tban[i][j]=0;\t//\u767d\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(int i=0; i<H; i++){\t\t//\u3057\u3089\u3079\u308b\n\t\t\tfor(int j=0; j<W; j++){\n\t\t\t\tif(ban[i][j]==1 && !visited[i][j]){\n\t\t\t\t\tkuro=0; siro=0;\n\t\t\t\t\tdfs(i,j);\n\t\t\t\t\tsum+=kuro*siro;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpl(sum);\n\t}\n\n\tpublic static void dfs(int y,int x){\n\t\tint[] vx={0,1,0,-1};\n\t\tint[] vy={-1,0,1,0};\n\t\tif(ban[y][x]==1){\n\t\t\tkuro++;\n\t\t}\n\t\telse{\n\t\t\tsiro++;\n\t\t}\n\t\tvisited[y][x]=true;\n\t\tfor(int i=0; i<4; i++){\n\t\t\tif(x+vx[i]>=0 && x+vx[i]<W && y+vy[i]>=0 && y+vy[i]<H){\n\t\t\t\tif(ban[y][x]!=ban[y+vy[i]][x+vx[i]] && !visited[y+vy[i]][x+vx[i]]){\n\t\t\t\t\tdfs(y+vy[i],x+vx[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void pl(Object o) {\n\t\tSystem.out.println(o);\n\t}\n\tpublic static void pl() {\n\t\tSystem.out.println();\n\t}\n\tpublic static void p(Object o) {\n\t\tSystem.out.print(o);\n\t}\n\tstatic class SC {\n\t\tprivate BufferedReader reader = null;\n\t\tprivate StringTokenizer tokenizer = null;\n\t\tpublic SC(InputStream in) {\n\t\t\treader = new BufferedReader(new InputStreamReader(in));\n\t\t}\n\t\tpublic String next() {\n\t\t\tif (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new UncheckedIOException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new UncheckedIOException(e);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 0}, {"id": 714, "code1": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[]args) {\n\t\ttry(Scanner scan = new Scanner(System.in)){\n\n\t\t\tint N = scan.nextInt();\n\t\t\tint M = scan.nextInt();\n\t\t\tint K = scan.nextInt();\n\n\n\n\t\t\tint goukei = 0;\n\t\t\tint ok = 0;\n\t\t\tfor(int i = 0;i<=N;i++) {\n\t\t\t\tfor(int j = 0;j<=M;j++) {\n\t\t\t\t\tgoukei =  i*M+j*N-2*i*j;\n\t\t\t\t\tif(goukei==K) {\n\t\t\t\t\t\tok=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok==1)System.out.println(\"Yes\");\n\t\t\telse System.out.println(\"No\");\n\n\t\t}\n\n\n\t}\n\n\n}\n", "label": 0}, {"id": 722, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class Main{\n    public static void main (String[] args) throws java.lang.Exception {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                long cur = i * m + j * n - 2 * (i * j);\n                if (cur == k) {\n                    w.println(\"Yes\");\n                    w.close();\n                    return;\n                }\n            }\n        }\n        w.println(\"No\");\n        w.close();\n    }\n\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n\n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String nextString() {\n            return next();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}", "code2": "\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tC();\n\t}\n\t\n\tpublic static void A() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s1 = sc.next();\n\t\tString s2 = sc.next();\n\t\tfor(int i=0;i<3;i++) {\n\t\t\tif(s1.charAt(i)!=s2.charAt(2-i)) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t}\n\t\n\t// 1\u304b\u3089\u9806\u306b\uff12\u4e57\u3092\u8a08\u7b97\u3057\u3066\u3001N\u3092\u8d85\u3048\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u3002 O(root(N))\n\t//\uff12\u5206\u63a2\u7d22\u3059\u308b\u306a\u3089\u3001O(logN)\n\t// \u4e8c\u5206\u63a2\u7d22\u3067\u3001N\u306e\uff12\u4e57\u3092\u8d85\u3048\u306a\u3044\u6700\u5c0f\u306e\u5e73\u65b9\u6570\u3092\u767a\u898b\n\tpublic static long binsearchN2(long left, long right, int N) {\n\t\tif(left >= right) return (long) Math.pow(right, 2);\n\t\tlong mid = (left+right)/2;\n\t\tif(Math.pow(mid, 2) > N ) return binsearchN2(left, mid-1, N);\n\t\telse {\n\t\t\t//\u7121\u9650\u30eb\u30fc\u30d7\u3092\u9632\u3050\u3000\u518d\u8d77\u3059\u308b\u6642\u306f\u5fc5\u305a\u3001\u63a2\u7d22\u7bc4\u56f2\u304c\uff11\u4ee5\u4e0a\u5c0f\u3055\u304f\u306a\u308b\n\t\t\tif(Math.pow(mid+1, 2) > N) return (long) Math.pow(mid, 2) ;\n\t\t\telse return binsearchN2(mid+1,right, N);\n\t\t}\n\t}\n\t\n\tpublic static void B() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tSystem.out.println(binsearchN2(0,N,N));\n\t}\n\n\t// B\u3092\u4e2d\u5fc3\u306b\u3057\u3066\u4e8c\u5206\u63a2\u7d22\u3057\u3066A\u3068C\u306e\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u308b\n\t//\u3000A\u3092\u4e2d\u5fc3\u3068\u3059\u308b\u3068\u3001O(N^2)\n\t\n\t// B\u3092\u8d85\u3048\u306a\u3044\u8981\u7d20\u6570\u3092\u8fd4\u3059\n\tpublic static void C() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tdouble[] A=new double[N],  C = new double[N];\n\t\tint[] B=new int[N];\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tA[i] = sc.nextDouble();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tB[i] = sc.nextInt();\n\t\t}\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tC[i] = sc.nextDouble();\n\t\t}\n\t\tArrays.sort(A);\n\t\tArrays.sort(B);\n\t\tArrays.sort(C);\n\t\tlong sum = 0;\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tdouble b = B[i];\n\t\t\tsum += numlessB(A,b)*(long)numlargerB(C,b);\n\t\t}\n\t\tSystem.out.println(sum);\n\t\t\n\t}\n\t//B\u3088\u308a\u3082\u5c0f\u3055\u3044\u8981\u7d20\u306e\u6570\u3000==B\u306f\u542b\u307e\u306a\u3044 B\u3092\u5c11\u3057\u305a\u3089\u3059\n\tpublic static int numlessB(double[] A, double B){\n\t\tint idx = Arrays.binarySearch(A, B-0.1);\n\t\treturn -idx-1;\n\t}\n\tpublic static int numlargerB(double[] A, double B) {\n\t\tint idx = Arrays.binarySearch(A, B+0.1);\n\t\treturn A.length-(-idx-1);\n\t}\n}\n", "label": 0}, {"id": 414, "code1": "import java.util.*;\npublic class Main{\n    public static void main(String args[]) {\n        Scanner cin = new Scanner(System.in);\n        while(cin.hasNext()){\n        \tint n = cin.nextInt();\n        \tint[][] vote = readMatrix(cin,n,2);\n        \tSystem.out.println(getNum(vote,n));\n        }\n    }\n    public static long getNum(int[][] vote, int n){\n    \tlong[] result={vote[0][0],vote[0][1]};\n    \tlong result1;\n    \tfor(int i=1;i<n;i++){\n    \t\tresult1 = result[1];\n    \t\tif(result[0]>vote[i][0]){\n    \t\t\tif(result[0]%vote[i][0]!=0) result[0] += vote[i][0]-result[0]%vote[i][0];\n    \t\t}else{result[0]=vote[i][0];}\n    \t\tresult[1] = result[0]/vote[i][0]*vote[i][1];\n    \t\tif(result1>result[1]){\n    \t\t\tresult[1] = result1;\n    \t\t\tif(result[1]%vote[i][1]!=0) result[1] += vote[i][1]-result[1]%vote[i][1];\n    \t\t\t result[0] = result[1]/vote[i][1]*vote[i][0];\n    \t\t}\n    \t}\n    \treturn result[0]+result[1];\n    }\n    public static int[][] readMatrix(Scanner in,int n,int m){\n    \tint[][] mtx = new int[n][m];\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<m;j++){\n    \t\t\tmtx[i][j] = in.nextInt();\n    \t\t}\n    \t}\n    \treturn mtx;\n    }\n    \n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.*;\n\npublic class Main {\n\n    static <T extends Comparable<? super T>> boolean nextPermutation(T[] sequence) {\n        int first = getFirst(sequence);\n        if (first == -1) return false;\n        int toSwap = sequence.length - 1;\n        while (sequence[first].compareTo(sequence[toSwap]) >= 0) --toSwap;\n        swap(sequence, first++, toSwap);\n        toSwap = sequence.length - 1;\n        while (first < toSwap) swap(sequence, first++, toSwap--);\n        return true;\n    }\n\n    static <T extends Comparable<? super T>> int getFirst(T[] sequence) {\n        for (int i = sequence.length - 2; i >= 0; --i)\n            if (sequence[i].compareTo(sequence[i + 1]) < 0) return i;\n        return -1;\n    }\n\n    static <T extends Comparable<? super T>> void swap(T[] sequence, int i, int j) {\n        T tmp = sequence[i];\n        sequence[i] = sequence[j];\n        sequence[j] = tmp;\n    }\n\n    public static void main(String[] args) {\n        FastScanner fs = new FastScanner();\n        int N = fs.nextInt();\n        Integer[] P = new Integer[N];\n        Integer[] Q = new Integer[N];\n        for (int i = 0; i < N; ++i) P[i] = fs.nextInt();\n        for (int i = 0; i < N; ++i) Q[i] = fs.nextInt();\n\n        Integer[] arr = new Integer[N];\n        for (int i = 0; i < N; ++i) arr[i] = i+1;\n\n        int cnt = 1, pNum = 0, qNum = 0;\n        do {\n            if (Arrays.toString(arr).equals(Arrays.toString(P))) pNum = cnt;\n            if (Arrays.toString(arr).equals(Arrays.toString(Q))) qNum = cnt;\n            ++cnt;\n        } while (nextPermutation(arr));\n\n        System.out.println(Math.abs(pNum - qNum));\n\n    }\n\n\n    static class FastScanner {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b)){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public double nextDouble() { return Double.parseDouble(next());}\n    }\n\n}", "label": 0}, {"id": 597, "code1": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int A = scan.nextInt();\n        int B = scan.nextInt();\n        int C = scan.nextInt();\n        if(A == B && A== C){\n            System.out.println(\"No\");\n        }\n        else if(A == B || A == C || B == C){\n            System.out.println(\"Yes\");\n        }\n        else{\n            System.out.println(\"No\");\n        }\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    static int selectSort(int[] data) {\n        int ret = 0, n = data.length;\n        for (int i = 0; i < n; ++i) {\n            int minJ = i;\n            for (int j = i; j < n; ++j) {\n                if (data[j] < data[minJ]) minJ = j;\n            }\n            if(minJ != i) {\n                ++ret;\n                int tmp = data[minJ];\n                data[minJ] = data[i];\n                data[i] = tmp;\n            }\n        }\n        return ret;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        int[] data = new int[n];\n\n        for (int i = 0; i < n; ++i) {\n            data[i] = scanner.nextInt();\n        }\n\n        int cnt = selectSort(data);\n        for (int i = 0; i < n; ++i) {\n            System.out.print(data[i]);\n            if (i != n - 1) System.out.print(\" \");\n        }\n        System.out.println();\n        System.out.println(cnt);\n    }\n}\n", "label": 0}, {"id": 560, "code1": "import java.io.*;\nimport java.util.*;\n\n/**\n *\n * @author baito\n */\nclass UnionFindTree\n{\n    int[] par;\n    int[] rank;\n    int[] sizes;\n\n    UnionFindTree(int n)\n    {\n        par = new int[n];\n        rank = new int[n];\n        sizes = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            par[i] = i;\n            rank[i] = 0;\n            sizes[i] = 1;\n        }\n    }\n\n    int find(int x)\n    {\n        if (par[x] == x) return x;\n        else return par[x] = find(par[x]);\n    }\n\n    void unite(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n\n        if (x == y) return;\n        if (rank[x] < rank[y])\n        {\n            par[x] = y;\n            sizes[y] += sizes[x];\n        }\n        else\n        {\n            par[y] = x;\n            sizes[x] += sizes[y];\n            if (rank[x] == rank[y]) rank[x]++;\n        }\n    }\n\n    boolean same(int x, int y)\n    {\n        return find(x) == find(y);\n    }\n\n    int size(int x)\n    {\n        return sizes[par[x]];\n    }\n}\npublic class Main\n{\n    static StringBuilder sb = new StringBuilder();\n    static FastScanner sc = new FastScanner(System.in);\n    static int INF = 10000;\n    static long MOD =1000000007;\n    static long[] f;//factorial\n    static int[] y4 = {0,1,0,-1};\n    static int[] x4 = {1,0,-1,0};\n    static int[] y8 = {0,1,0,-1,-1,1,1,-1};\n    static int[] x8 = {1,0,-1,0,1,-1,1,-1};\n\n    static int N,K,L;\n\n    public static void main(String[] args)\n    {\n\n        N = sc.nextInt();\n        K = sc.nextInt();\n        L = sc.nextInt();\n        UnionFindTree u1 = new UnionFindTree(N);\n        UnionFindTree u2 = new UnionFindTree(N);\n        //long\u3092\u5fd8\u308c\u308b\u306a\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3059\u308b\u305e\n        for (int i = 0; i < K; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u1.unite(p,q);\n        }\n        for (int i = 0; i < L; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u2.unite(p,q);\n        }\n        Map<Long,Integer> sizes = new HashMap<>();\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            int value = sizes.containsKey(hash) ? sizes.get(hash):0;\n            sizes.put(hash,value+1);\n\n\n        }\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            System.out.println(sizes.get(hash));\n        }\n\n\n\n    }\n    //\u2193nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3002\u3000***factorial(N)\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b***\n    static long comb(int n, int r)\n    {\n        long result = f[n];\n        result = result * modInv(f[n - r]) % MOD;\n        result = result * modInv(f[r]) % MOD;\n        return result;\n    }\n\n    static long modInv(long n)\n    {\n        return modPow(n, MOD - 2);\n    }\n\n    static void factorial(int n)\n    {\n        f = new long[n + 1];\n        f[0] = f[1] = 1;\n        for (int i = 2; i <= n; i++)\n        {\n            f[i] = (f[i - 1] * i) % MOD;\n        }\n    }\n\n    static long modPow(long x, long n)\n    {\n        long res = 1L;\n        while (n > 0)\n        {\n            if ((n & 1) == 1)\n            {\n                res = res * x % MOD;\n            }\n            x = x * x % MOD;\n            n >>= 1;\n        }\n        return res;\n    }\n\n    //\u2191nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n\n    static int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n    static long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\n    static <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n    static void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n    public static void reverse(int[] x)\n    {\n        int l = 0;\n        int r = x.length - 1;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    public static void reverse(int[] x,int s, int e)\n    {\n        int l = s;\n        int r = e;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    static int length(int a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int length(long a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int countC2(char[][] a, char c){\n        int co = 0;\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                if(a[i][j] == c)\n                    co++;\n        return co;\n    }\n    static void fill(int[][] a, int v){\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                a[i][j] = v;\n    }\n    static class FastScanner {\n\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        /*public String nextChar(){\n            return (char)next()[0];\n        }*/\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public int [][] nextIntArray2(int h, int w){\n            int[][] a = new int[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < w ; wi++){\n                    a[hi][wi] = nextInt();\n                }\n            }\n            return a;\n        }\n        public Integer[] nextIntegerArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public char[] nextCharArray(int n){\n            char[] a = next().toCharArray();\n\n            return a;\n        }\n        public char[][] nextCharArray2(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = next().toCharArray();\n            }\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\n        public char[][] nextCharArray2s(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = nextLine().replace(\" \",\"\").toCharArray();\n            }\n            return a;\n        }\n        public char[][] nextWrapCharArray2(int h , int w, char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + next() + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u308b\u6642\u7528\n        public char[][] nextWrapCharArray2s(int h , int w ,char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + nextLine().replace(\" \",\"\") + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n        public long [][] nextLongArray2(int h, int w){\n            long[][] a = new long[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < h ; wi++){\n                    a[h][w] = nextLong();\n                }\n            }\n            return a;\n        }\n    }\n}\n", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        BRemovingBlocks solver = new BRemovingBlocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BRemovingBlocks {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] a = in.readLongArray(n);\n\n            Modulo.mod = MiscUtils.MOD7;\n\n            long[] s = new long[n];\n            s[0] = 1;\n            for (int i = 1; i < n; i++) {\n                s[i] = Modulo.add(s[i - 1], Modulo.rev(i + 1));\n            }\n\n            long ans = 0;\n            for (int i = 0; i < n; i++) {\n                long sum = Modulo.mlt(a[i], s[i] + s[n - 1 - i] - 1);\n                ans = Modulo.add(ans, sum);\n            }\n            for (int i = 1; i <= n; i++) ans = Modulo.mlt(ans, i);\n            out.printLine(ans);\n        }\n\n    }\n\n    static class Modulo {\n        public static long mod;\n        private long value;\n\n        public Modulo(long value) {\n            this.value = (value % mod + mod) % mod;\n        }\n\n        public static long add(long a, long b) {\n            return ((a + b) % mod + mod) % mod;\n        }\n\n        public static long mlt(long a, long b) {\n            return ((a % mod + mod) * (b % mod + mod)) % mod;\n        }\n\n        public static long rev(long a) {\n            //return pow(a, mod - 2);\n            return (Euclid.extgcd(a, mod, new long[3])[0] % mod + mod) % mod;\n        }\n\n        public String toString() {\n            return \"\" + value;\n        }\n\n    }\n\n    static class Euclid {\n        public static long[] extgcd(long a, long b, long[] is) {\n            if (a == 0) {\n                is[0] = 0;\n                is[1] = 1;\n                is[2] = b;\n            } else {\n                extgcd(b % a, a, is);\n                long x = is[1] - b / a * is[0];\n                is[1] = is[0];\n                is[0] = x;\n            }\n            return is;\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 15, "code1": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main{\n    public static Scanner scan  = new Scanner(System.in);\n    public static void main(String[]args){\n        String s;\n        boolean flag;\n\n        flag=false;\n        s=next();\n\n        for(int i=0;i<s.length();i++){\n            if(i%2==0){\n                if(s.charAt(i)=='R'||s.charAt(i)=='U'||s.charAt(i)=='D'){\n                    flag=true;\n                }\n                else{\n                    flag=false;\n                    break;\n                }\n            }\n            else{\n                if(s.charAt(i)=='L'||s.charAt(i)=='U'||s.charAt(i)=='D'){\n                    flag=true;\n                }\n                else{\n                    flag=false;\n                    break;\n                }\n            }\n        }\n        yesNo(flag);\n    }\n\n\n\n    public static int nextInt(){\n        return Integer.parseInt(scan.next());\n    }\n    public static long nextLong(){\n        return Long.parseLong(scan.next());\n    }\n    public static String next(){\n        return scan.next();\n    }\n    public static double nextDouble(){\n        return Double.parseDouble(scan.next());\n    }\n    public static float nextFloat(){\n        return Float.parseFloat(scan.next());\n    }\n\n    //Yes or No\n    public static void yesNo(boolean flag){\n        if(flag) System.out.println(\"Yes\");\n        else System.out.println(\"No\");\n    }\n    public static void print(Object a){\n        System.out.println(a);\n    }\n}", "label": 1}, {"id": 600, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n;\n    char[] cs;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        cs = sc.next().toCharArray();\n        solve();\n    }\n\n    void solve() {\n        int[] sumEastL = new int[n];\n        if (cs[0] == 'E') {\n            sumEastL[0] = 1;\n        }\n        for (int i = 1; i < n; i++) {\n            sumEastL[i] = sumEastL[i - 1] + (cs[i] == 'E' ? 1 : 0);\n        }\n        int min = 10000000;\n        for (int i = 0; i < n; i++) {\n            int num = sumEastL[n - 1] - sumEastL[i] + (i > 0 ? i - sumEastL[i - 1] : 0);\n            if (min > num) {\n                min = num;\n            }\n        }\n        System.out.println(min);\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "code2": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n  public static void main(String[] args) {\n    FastScanner sc = new FastScanner();\n    int N = sc.nextInt();\n    int L = sc.nextInt();\n    long T = sc.nextLong();\n    \n    long[][] ari = sc.nextLongTable(N, 2);\n    \n    long[] cl = new long[N];\n    long[] ccl = new long[N];\n\n    int p = 0, q = 0;\n    for (int i = 0; i < N; i ++) {\n      if (ari[i][1] == 1) {\n        cl[p ++] = L - ari[i][0];\n      } else {\n        ccl[q ++] = ari[i][0];\n      }\n    }\n    cl = Arrays.copyOf(cl, p);\n    ccl = Arrays.copyOf(ccl, q);\n    Arrays.sort(cl);\n\n    long[] rets = new long[N];\n    for (int i = 0; i < N ;i ++) {\n      if (ari[i][1] == 1) {\n        int count = (int)(count(ccl, ari[i][0], ari[i][0] + 2L * T, L) % N);\n        rets[(i + count) % N] = (ari[i][0] + T) % L;\n      } else {\n        int count = (int)(count(cl, L - ari[i][0], L - ari[i][0] + 2L * T, L) % N);\n        rets[(i + N - count) % N] = (ari[i][0] + L - T % L) % L;\n      }\n    }\n    \n    for (int i = 0; i < N; i ++) {\n      System.out.println(rets[i]);\n    }\n  }\n  \n  private static long count(long[] xs, long f, long t, int L) {\n    long ret = 0;\n    int n = xs.length;\n    {\n      ret += t / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(t % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret += ind;\n    }\n    {\n      ret -= f / L * n;\n      int ind = Arrays.binarySearch(xs, (int)(f % L));\n      if (ind < 0)  ind = -ind - 2;\n      ind ++;\n      ret -= ind;\n    }\n    return ret;\n  }\n}\n\n\n\n\nclass FastScanner {\n\tpublic static String debug = null;\n\n\tprivate final InputStream in = System.in;\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate byte[] buffer = new byte[1024];\n\tprivate boolean eos = false;\n\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tif (debug != null) {\n\t\t\t\t\tbuflen = debug.length();\n\t\t\t\t\tbuffer = debug.getBytes();\n\t\t\t\t\tdebug = \"\";\n\t\t\t\t\teos = true;\n\t\t\t\t} else {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen < 0) {\n\t\t\t\teos = true;\n\t\t\t\treturn false;\n\t\t\t} else if (buflen == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate int readByte() {\n\t\tif (hasNextByte())\n\t\t\treturn buffer[ptr++];\n\t\telse\n\t\t\treturn -1;\n\t}\n\n\tprivate static boolean isPrintableChar(int c) {\n\t\treturn 33 <= c && c <= 126;\n\t}\n\n\tprivate void skipUnprintable() {\n\t\twhile (hasNextByte() && !isPrintableChar(buffer[ptr]))\n\t\t\tptr++;\n\t}\n\n\tpublic boolean isEOS() {\n\t\treturn this.eos;\n\t}\n\n\tpublic boolean hasNext() {\n\t\tskipUnprintable();\n\t\treturn hasNextByte();\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile (isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic long nextLong() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile (true) {\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t} else if (b == -1 || !isPrintableChar(b)) {\n\t\t\t\treturn minus ? -n : n;\n\t\t\t} else {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tpublic int nextInt() {\n\t\treturn (int) nextLong();\n\t}\n\n\tpublic long[] nextLongList(int n) {\n\t\treturn nextLongTable(1, n)[0];\n\t}\n\n\tpublic int[] nextIntList(int n) {\n\t\treturn nextIntTable(1, n)[0];\n\t}\n\n\tpublic long[][] nextLongTable(int n, int m) {\n\t\tlong[][] ret = new long[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextLong();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic int[][] nextIntTable(int n, int m) {\n\t\tint[][] ret = new int[n][m];\n\t\tfor (int i = 0; i < n; i ++) {\n\t\t\tfor (int j = 0; j < m; j ++) {\n\t\t\t\tret[i][j] = nextInt();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}", "label": 0}, {"id": 657, "code1": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    int n, m;\n\n    public static void main(String args[]) {\n        new Main().run();\n    }\n\n    void run() {\n        FastReader sc = new FastReader();\n        n = sc.nextInt();\n        m = sc.nextInt();\n        solve();\n    }\n\n    void solve() {\n        int ans = n * 100 + 1800 * m;\n        System.out.println(ans * pow(2, m));\n    }\n\n    long pow(long x, int n) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = ans * x;\n            }\n            x = x * x;\n            n >>= 1;\n        }\n        return ans;\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n", "label": 0}, {"id": 74, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "code2": "import java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble c = sc.nextDouble();\n\t\tdouble c1 = c*Math.PI/180;\n\t\t\n\t\tSystem.out.println(String.format(\"%f\", 0.5*a*b*Math.sin(c1))\n\t\t\t\t+ \" \" + String.format(\"%f\", a+b+Math.pow(a*a+b*b-2*a*b*Math.cos(c1), 0.5))\n\t\t\t\t+ \" \" + String.format(\"%f\", b*Math.sin(c1)));\n\t}\n}\n", "label": 1}, {"id": 286, "code1": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "code2": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "label": 0}, {"id": 152, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    \n    long a = scanner.nextLong();\n    long b = scanner.nextLong();\n    long x = scanner.nextLong();\n\n    long count = b / x;\n    \n    if(a == 0L) {\n      count++;\n    } else {\n      count -= (a - 1L) / x;\n    }\n        \n    System.out.println(count);\n  }\n}\n", "label": 1}, {"id": 175, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "code2": "import java.util.*;\nimport java.math.*;\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner s=new Scanner(System.in);\n\t\tint a=s.nextInt();\n\t\tBigInteger bi=new BigInteger(\"1\");\n\t\tfor(int i=0;i<a;i++)bi=bi.multiply(new BigInteger(\"\"+(i+2)));\n\t\tbi=bi.add(new BigInteger(\"2\"));\n\t\tSystem.out.println(bi.toString());\n\t\tfor(int i=0;i<a;i++)System.out.println(2+i);\n\t}\n}", "label": 1}, {"id": 650, "code1": "/*\n    Arnab Chanda \n*/\n\n// All imports here\n\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.InputStream;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n// Template code starts here //\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Debugger debug = new Debugger(out);\n        Objectify objectify = new Objectify(debug);\n        Task solver = new Task();\n        int test = 1;\n        while(test-->0){\n            solver.solve(1, in, out, debug, objectify);\n        }\n\t\tout.close();\n\t}\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n \n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public Double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public float nextFloat() {\n        return Float.parseFloat(next());\n    }\n \n}\n\nclass Debugger{\n    PrintWriter out;\n\n    Debugger(PrintWriter out){    \n        this.out = out;\n    }\n\n    public <T> void printList(List<T> arrayList){\n        for( Object ob: arrayList){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printSet(Set<T> set){\n        for(Object ob: set){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printMap(Map<?,?> map){\n        for(Object ob: map.keySet()){\n            System.out.println(ob+\" : \"+map.get(ob));\n        }\n    }\n}\n\nclass Objectify{\n    \n    Debugger debug;\n\n    Objectify(Debugger ob){ debug = ob; }\n\n    public void printArr(int[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(double[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(long[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(char[] arr){ debug.printList( String.valueOf(arr).chars().mapToObj(c -> (char) c).collect(Collectors.toList())); }\n    public void printArr(String[] arr){ debug.printList(Arrays.asList(arr)); }\n\n    public void printMatrix(int[][] arr){ for(int a[]:arr) printArr(a); }\n    public void printMatrix(double[][] arr){ for(double a[]:arr) printArr(a); }\n    public void printMatrix(long[][] arr){ for(long a[]:arr) printArr(a); }\n    public void printMatrix(char[][] arr){ for(char a[]:arr) printArr(a); }\n    public void printMatrix(String[][] arr){ for(String a[]:arr) printArr(a); }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Template code ends here\n\n\nclass Task {\n\n    final long MOD = (int)Math.pow(10,9)+7;\n\n    public void solve(int testNumber, InputReader sc, PrintWriter out, Debugger debug, Objectify objectify) {\n        \n        // write your code here\n        int k = sc.nextInt();\n\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n\n        for(int i = A; i <= B; ++i){\n            if (i%k == 0){\n                out.println(\"OK\");\n                return;\n                // break;\n            }\n        }\n\n        out.println(\"NG\");\n    }\n}", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 757, "code1": "\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t > 0) {\n            int n = scan.nextInt();\n            int s;\n            int f;\n            int sum = 0;\n            for (int i = 0; i < n; i++) {\n                s = scan.nextInt();\n                f = scan.nextInt();\n                sum += f - s;\n            }\n\n            if (t <= sum) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(t - sum);\n            }\n            t = scan.nextInt();\n        }\n    }\n}\n\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.lang.Math;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tFS reader = new FS();\n\t\t// write reader\n\t\tint N = reader.nextInt();\n\t\tint T = reader.nextInt();\n\t\tint A = reader.nextInt();\n\t\tint[] H = new int[N];\n\t\tfor(int i=0; i<N; i++) {\n\t\t    H[i] = reader.nextInt();\n\t\t}\n\t\tint ans     = -1;\n\t\tdouble diff = 1000000;\n\t\tfor(int i=0; i<N; i++) {\n\t\t    double tmp = Math.abs((double)T-(double)H[i]*0.006-(double)A);\n\t\t    if (tmp < diff) {\n\t\t        ans = i+1;\n\t\t        diff = tmp;\n\t\t    }\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tpublic static void solver(int H, int W, boolean[][] matrix) {\n\t\t// write logic\n\t}\n\t\n\t// Read Class\n\tstatic class FS {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\tprivate int readByte() { return hasNextByte() ? buffer[ptr++] : -1;}\n\t\tprivate boolean isPrintableChar(int c) {return 33 <= c && c <= 126;}\n\t\tprivate void skipUnprintable() {while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n\t\n\t\tpublic boolean hasNext() { skipUnprintable(); return hasNextByte();}\n\t\tpublic String next() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile(isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile(true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if(b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 339, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble C = sc.nextDouble();\n\t\t\n\t\tdouble S = 0.5*a*b*Math.sin(Math.toRadians(C));\n\t\tdouble c = Math.sqrt(Math.pow(a, 2)+Math.pow(b, 2)-(2*a*b*Math.cos(Math.toRadians(C))));\n\t\tdouble L = a + b + c;\n\t\tdouble h = 2*S / a;\n\t\t\n\t\tSystem.out.println(S);\n\t\tSystem.out.println(L);\n\t\tSystem.out.println(h);\n\n\t}\n}", "label": 0}, {"id": 392, "code1": "\nimport java.util.Scanner;\n\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int W = sc.nextInt();\n\t\t\tfinal int H = sc.nextInt();\n\t\t\t\n\t\t\tif(W == 0  && H == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint[][] map = new int[H][W];\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tchar[] input = sc.next().toCharArray();\n\t\t\t\t\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif('0' <= input[j] && input[j] <= '9'){\n\t\t\t\t\t\tmap[i][j] = input[j] - '0';\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmap[i][j] = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint[][] len = new int[H][W];\n\t\t\tshort[][][] dp = new short[H][W][H+W+1];\n\t\t\t\n\t\t\tint max = 0;\n\t\t\tint m_x = -1;\n\t\t\tint m_y = -1;\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif(map[i][j] < 0){\n\t\t\t\t\t\tdp[i][j][0] = -1;\n\t\t\t\t\t\tlen[i][j] = -1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i == 0 && j == 0){\n\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t}else if(j == 0){\n\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len +  (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(i == 0){\n\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinal int left_len = len[i][j-1];\n\t\t\t\t\t\tfinal int up_len = len[i-1][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(left_len == -1 && up_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else if(left_len > up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else if(left_len < up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinal int size = len[i][j-1];\n\t\t\t\t\t\t\tboolean left_f = true;\n\t\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\t\tif(dp[i-1][j][k] < dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(dp[i-1][j][k] > dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(left_f){\n\t\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(max < len[i][j]){\n\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t}else if(max == len[i][j]){\n\t\t\t\t\t\tfinal int size = len[i][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\tif(dp[m_y][m_x][k] < dp[i][j][k]){\n\t\t\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}else if(dp[m_y][m_x][k] > dp[i][j][k]){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t/*\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tSystem.out.printf(\"%2d \", len[i][j]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\t*/\n\t\t\tfor(int i = 0; i < max; i++){\n\t\t\t\tSystem.out.print(dp[m_y][m_x][i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String[] args) {\n\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    long[] a = new long[n];\n\n    for (int i = 0; i < n; i++) {\n      a[i] = sc.nextInt();\n    }\n\n    Arrays.sort(a); // \u6607\u9806\n    long sum = a[n - 1];\n\n    if (n == 2) {\n      System.out.println(sum);\n    } else {\n      if (n % 2 == 1) {\n        int num = n / 2;\n        sum += a[n - num - 1];\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      } else {\n        int num = n / 2;\n        for (int i = n - num; i < n - 1; i++) {\n          sum += 2 * a[i];\n        }\n        System.out.println(sum);\n      }\n    }\n\n  }\n}", "label": 0}, {"id": 418, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[] fact = new int[9];\n\n\n\tpublic static void main(String[] args) {\n\t\tfact[1] = 1;\n\t\tfor(int i = 2; i <= 8; i++)\n\t\t\tfact[i] = fact[i-1] * i;\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] p = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tp[i] = sc.nextInt();\n\n\t\tint[] q = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tq[i] = sc.nextInt();\n\n\t\tint ans = Math.abs(getPosi(p) - getPosi(q));\n\t\tSystem.out.println(ans);\n        return;\n    }\n\n\tstatic private int getPosi(int[] x) {\n\n\t\t\tint l = x.length;\n\t\t\tint p = 1;\n\n\t\t\tfor(int i = 0; i < l; i++) {\n\t\t\t\tp += fact[l-i-1] * (x[i]-1);\n\t\t\t\tfor(int j = i+1; j < l; j++) {\n\t\t\t\t\tif(x[j] > x[i])\n\t\t\t\t\t\tx[j]--;\n\t\t\t\t}\n\t\t\t}\n\t\treturn p;\n\n\t}\n\n}\n\n", "code2": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\t\n\tint n;\n\tint[][] es;\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tn = sc.nextInt();\n\t\tes = new int[n][n];\n\t\tfor (int[] a: es) fill(a, INF);\n\t\tfor (int i=0;i<n;i++) es[i][i] = 0;\n\t\tfor (int i=0;i<n;i++) {\n\t\t\tint r = sc.nextInt()-1, k = sc.nextInt();\n\t\t\tfor (int j=0;j<k;j++) {\n\t\t\t\tint t = sc.nextInt()-1;\n\t\t\t\tes[r][t] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int k=0;k<n;k++) for (int i=0;i<n;i++) for (int j=0;j<n;j++) {\n\t\t\tes[i][j] = min(es[i][j], es[i][k] + es[k][j]);\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i=0;i<p;i++) {\n\t\t\tint s = sc.nextInt()-1, d = sc.nextInt()-1, v = sc.nextInt();\n\t\t\tSystem.out.println((es[s][d] + 1 <= v ? es[s][d] + 1 : \"NA\"));\n\t\t}\n\t}\n\t\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 49, "code1": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main\n{\n\n    public static void main(String[] args)\n    {\n        Scanner scan = new Scanner(System.in);\n\n        int k = 0;\n        int best = 0;\n        int n = scan.nextInt();\n\n        while (n != 0) {\n            for (int i = 0; i < n; i++) {\n                int p = scan.nextInt();\n                int b = scan.nextInt();\n                int c = scan.nextInt();\n\n                if (best <= b + c) {\n                    best = b + c;\n                    k = p;\n\n                }\n\n            }\n            System.out.println(k + \" \" + best);\n            k = 0;\n            best = 0;\n            n = scan.nextInt();\n        }\n    }\n}\n\n", "label": 1}, {"id": 365, "code1": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        List<Integer> abc = new ArrayList<>();\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        abc.add(sc.nextInt());\n        Collections.sort(abc);\n\n        int count = 0;\n        int diff21 = abc.get(2) - abc.get(1);\n        abc.set(0, abc.get(0) + diff21);\n        abc.set(1, abc.get(1) + diff21);\n        count += diff21;\n\n        int diff10 = abc.get(1) - abc.get(0);\n        if (diff10 % 2 == 0) {\n            count += diff10 / 2;\n        } else {\n            count += (diff10 + 1) / 2 + 1;\n        }\n        System.out.println(count);\n    }\n\n}\n", "code2": "import java.util.*;\npublic class Main {\n\tint n;\n\tint[] num;\n\tScanner stdin =new Scanner(System.in);\n\t\n\tvoid Solve(){\n\t\tnum=new int[21000000];\n\t\twhile(true){\n\t\t\tn=stdin.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tSystem.out.println(findPrime(n+1,2*n));\n\t\t}\n\t\t\n\t}\n\tint findPrime(int a,int b){\n\t\tint count=0;\n\t\tfor(int i=a;i<=b;i++){\n\t\t\tif(judgePrime(i)) count++;\n\t\t}\n\t\t\n\t\treturn count;\n\t}\n\t\n\tboolean judgePrime(int p){\n\t\tif(num[p]==1) return true;\n\t\tif(num[p]==-1) return false;\n\t\t\n\t\tif(p<4){\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tif(p%2==0){\n\t\t\t\tnum[p]=-1;\n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=3;i<p;i++){\n\t\t\t\tif(p%i==0){\n\t\t\t\t\tnum[p]=-1;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tnum[p]=1;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t\n\tpublic static void main(String args[]){\n\t\tMain m=new Main();\n\t\tm.Solve();\n\t}\n\t\n}", "label": 0}, {"id": 464, "code1": "import java.io.BufferedReader;\n\nimport static java.util.Comparator.*;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.lang.reflect.Array;\nimport java.math.BigDecimal;\nimport java.util.AbstractMap;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\npublic class Main {\n\t\n//\tpublic static Set<String> mem = new HashSet<String>();\n//\tpublic static boolean[] mem_1 = new boolean[100];\n//\tpublic static boolean[] mem_2 = new boolean[100];\n//\tpublic static Set<Integer> mem = new TreeSet<Integer>();\n//\tpublic static Map<String, Integer> mem_1= new HashMap<String, Integer>();\n//\tpublic static Map<String, Integer> mem_2 = new HashMap<String, Integer>();\n\t\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        \n        Solver solver = new Solver();\n        solver.solve(1, in, out);\n        \n        out.close();\n    }\n    \n    // ======================================================================\n    static class Solver {\n    \t\n\t\tList<Pair<Integer, Integer>> lP = new ArrayList<Pair<Integer, Integer>>();\n\t\tList<Pair<Integer, Integer>> lAns = new ArrayList<Pair<Integer, Integer>>();\n\n    \tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n    \t\tlong ans = 0L;\n    \t\tint[] cnt = new int[4];\n    \t\tfor(int i=0; i < 6; i++) {\n        \t\tint a = in.nextInt();\n        \t\tcnt[a-1] += 1;\n        // \t\tout.println(\"[\" + a + \"]\");\n    \t\t}\n    \t\tboolean f = true;\n    \t\tfor(int i=0; i < 4; i++) {\n        // \t\tout.println(\"[\" + cnt[i] + \"]\");\n    \t\t\tif(cnt[i] >= 3)\t\tf = false;\n    \t\t}\n    \t\tif(f)   \t\tout.println(\"YES\");\n    \t\telse            out.println(\"NO\");\n        }\n    }\n    // ======================================================================\n    static class Pair<K, V> extends AbstractMap.SimpleEntry<K, V> {\n        /** serialVersionUID. */\n        private static final long serialVersionUID = 6411527075103472113L;\n\n        public Pair(final K key, final V value) {\n            super(key, value);\n        }\n        public String getString() {\n            return \"[\" + getKey() + \"] [\" + getValue() + \"]\";\n        }\n     }    \n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n \n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n \n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n \n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n \n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n \n        public String nextString() {\n        \tString ret = new String(nextDChar()).trim();\n            return ret;\n        }\n \n        public char[] nextDChar() {\n            int len = 0;\n            len = reads(len, isSpace);\n            char[] ret = new char[len + 1];\n            for (int i=0; i < len; i++)\t\tret[i] = str[i];\n            ret[len] = 0x00;\n            return ret;\n        }\n \n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n \n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n \n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    \n    public static boolean[] alr;\n    \n    public static List<List<Integer>> list = new ArrayList<>();\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        alr = new boolean[N];\n        for (int i = 0; i < N; i++) {\n            list.add(new ArrayList<>());\n        }\n        for (int i = 0; i < M; i++) {\n            int A = sc.nextInt()-1;\n            int B = sc.nextInt()-1;\n            list.get(A).add(B);\n            list.get(B).add(A);\n        }\n        long count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n                count++;\n            }\n            List<Integer> lst = list.get(i);\n            count(lst);\n        }\n        System.out.println(count-1);\n    }\n    \n    private static void count(List<Integer> lst) {\n        int friends = 0;\n        for (Integer i : lst) {\n            if (alr[i]) {\n                continue;\n            } else {\n                alr[i] = true;\n            }           \n            count(list.get(i));\n        }\n    }\n}\n", "label": 0}, {"id": 217, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "code2": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main (String[] args){\n\t    Scanner scan = new Scanner(System.in);\n\t    int N = Integer.parseInt(scan.next());\n\n\t    ArrayList<Integer> SList = new  ArrayList<Integer>();\n\t    int seiseki = 0;\n\t    for(int i = 0; i < N; i++){\n\t    \tint S = Integer.parseInt(scan.next());\n\t    \tSList.add(S);\n\t    \tseiseki = seiseki + S;\n\t    }\n\t    Collections.sort(SList);\n\t    \n\t    if(seiseki % 10 != 0){\n\t    \tSystem.out.println(seiseki);\n\t    }else{\n\t    \tfor(int s : SList){\n\t    \t\tif(s  % 10 != 0){\n\t    \t\t\tseiseki = seiseki - s;\n\t    \t\t\tSystem.out.println(seiseki);\n\t    \t\t\tbreak;\n\t    \t\t}\n\t    \t}\n\t    \tif(seiseki % 10 == 0){\n\t    \t\tSystem.out.println(0);\n\t    \t}\n\t    }\n\t}\n}", "label": 1}, {"id": 111, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint A = sc.nextInt();\n\t\tint B = sc.nextInt();\n\t\tint C = sc.nextInt();\n\t\tint K = sc.nextInt();\n\t\tint res = 0;\n\t\tres+=Math.min(A, K);\n\t\tK -= res;\n\t\tif(K==0) {\n\t\t\tSystem.out.println(res);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tK-=B;\n\t\tif(K>0) {\n\t\t\tres-=Math.min(K, C);\n\t\t}\n\t\tSystem.out.println(res);\n\n\t}\n}", "code2": "\nimport java.util.*;\n\npublic class Main {\n    public static void main(final String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        // final int a = sc.nextInt();\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\n        // final String s1 = sc.next();\n        final int a = sc.nextInt();\n        final int b = sc.nextInt();\n        final int c = sc.nextInt();\n        final int k = sc.nextInt();\n        sc.close();\n        int result = 0;\n        if (a >= k) {\n            result = k;\n        } else if (b >= k - a) {\n            result = a;\n        } else if (c >= k - b - a) {\n            result = 2 * a + b - k;\n        }\n\n        System.out.println(result);\n    }\n}\n", "label": 1}, {"id": 188, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String a = sc.next();\n        String b = sc.next();\n        if(a.equals(b)) System.out.println(\"H\");\n        else System.out.println(\"D\");\n    }\n}", "label": 1}, {"id": 691, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint h = Integer.parseInt(sa[0]);\n\t\tint w = Integer.parseInt(sa[1]);\n\t\tchar[][] s = new char[h][w];\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\ts[i] = br.readLine().toCharArray();\n\t\t}\n\t\tbr.close();\n\n\t\tint[] dx = {0, 0, -1, 1};\n\t\tint[] dy = {-1, 1, 0, 0};\n\t\tboolean[][] visit = new boolean[h][w];\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\tfor (int j = 0; j < w; j++) {\n\t\t\t\tif (visit[i][j]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong kuro = 0;\n\t\t\t\tlong siro = 0;\n\t\t\t\tQueue<Integer> que = new ArrayDeque<Integer>();\n\t\t\t\tque.add(i * 1000 + j);\n\t\t\t\tvisit[i][j] = true;\n\t\t\t\twhile (!que.isEmpty()) {\n\t\t\t\t\tint cur = que.poll();\n\t\t\t\t\tint x = cur / 1000;\n\t\t\t\t\tint y = cur % 1000;\n\t\t\t\t\tif (s[x][y] == '#') {\n\t\t\t\t\t\tkuro++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsiro++;\n\t\t\t\t\t}\n\t\t\t\t\tfor (int a = 0; a < 4; a++) {\n\t\t\t\t\t\tint xx = x + dx[a];\n\t\t\t\t\t\tint yy = y + dy[a];\n\t\t\t\t\t\tif (0 <= xx && xx < h && 0 <= yy && yy < w\n\t\t\t\t\t\t\t\t&& !visit[xx][yy] && s[x][y] != s[xx][yy]) {\n\t\t\t\t\t\t\tque.add(xx * 1000 + yy);\n\t\t\t\t\t\t\tvisit[xx][yy] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans += kuro * siro;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 733, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong[] a = new long[n];\n\t\tlong[] b = new long[n];\n\t\tlong[] c = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = Long.parseLong(sc.next());\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tb[i] = Long.parseLong(sc.next());\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tc[i] = Long.parseLong(sc.next());\n\t\tArrays.sort(a);\n\t\tArrays.sort(b);\n\t\tArrays.sort(c);\n\t\tlong[] u = new long[n];\n\t\tint index = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (index < n && a[index] < b[i])\n\t\t\t\tindex++;\n\t\t\tif (i == 0)\n\t\t\t\tu[i] = index;\n\t\t\telse\n\t\t\t\tu[i] = u[i - 1] + index;\n\t\t}\n\t\tint[] l = new int[n];\n\t\tindex = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (index < n && b[index] < c[i])\n\t\t\t\tindex++;\n\t\t\tl[i] = index;\n\t\t}\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (l[i] != 0)\n\t\t\t\tans += u[l[i] - 1];\n\t\tSystem.out.println(ans);\n\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic boolean p[];\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n,i,count;\n\t\twhile(true){\n\t\t\tn=sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\tcount=0;\n\t\t\tp=new boolean[n];\n\t\t\tArrays.fill(p, true);\n\t\t\tp[0]=p[1]=false;\n\t\t\tprime(p,n);\n\n\t\t\tfor(i=n-1;1<=i/2;i--){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tif(i!=n-i){\n\t\t\t\t\t\tp[i]=false;\n\t\t\t\t\t}\n\t\t\t\t\tif(p[n-i]){\n\t\t\t\t\t\tp[n-i]=false;\n\t\t\t\t\t\t//System.out.printf(\"%d %d\\n\",i,n-i);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\tstatic void prime(boolean p[],int n){\n\t\tint i,j;\n\t\tfor(i=2;i<n;i++){\n\t\t\tif(p[i]){\n\t\t\t\tfor(j=2*i;j<n;j+=i){\n\t\t\t\t\tp[j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "label": 0}, {"id": 378, "code1": "import java.util.*;\npublic class Main{\npublic static void main(String[] args){\nScanner sc = new Scanner(System.in);\n  int Q = sc.nextInt();\n  for(int i=0;i<Q;i++){\n    long f = sc.nextLong();\n    long s = sc.nextLong();\n    long a = Math.max(f, s);\n    long b = Math.min(f, s);\n    long K = a*b;\n    long L = (long) Math.sqrt(K);\n    long M = (K-1)/L;\n    long N = Math.max(-1,M-b-1);\n    System.out.println(L+N+b-1);\n  }\n}}\n", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n        long nl = nextLong();\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n        return (int) nl;\n    }\n    public double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner stdIn=new FastScanner();\n\tpublic static void main(String[] args) {\n\t\tString X=stdIn.next();\n\t\tint N=X.length();\n\t\tint s=0,t=0,ans=N;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tchar a=X.charAt(i);\n\t\t\tif(a=='S')\n\t\t\t\ts++;\n\t\t\telse{\n\t\t\t\tif(s!=0){\n\t\t\t\t\tans-=2;\n\t\t\t\t\ts--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 724, "code1": "import java.util.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt(), C = sc.nextInt();\n\t\tint D[][] = new int[C][C];\n\t\tint c[][] = new int[N][N];\n\t\t\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tD[i][j] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\t\n\t\t//\u30ef\u30fc\u30b7\u30e3\u30eb\u30d5\u30ed\u30a4\u30c9\n//\t\tfor(int k=0;k<C;k++) {\n//\t\t\tfor(int i=0;i<C;i++) {\n//\t\t\t\tfor(int j=0;j<C;j++) {\n//\t\t\t\t\tD[i][j]=Math.min(D[i][j], D[i][k]+D[k][j]);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n\t\t\n\t\tfor(int i=0;i<N;i++) {\n\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\tc[i][j] = sc.nextInt()-1;//0index\n\t\t\t}\n\t\t}\n\t\tsc.close(); \n\t\t\n\t\tint costSum0[] = new int[C]; //%3==0\n\t\tint costSum1[] = new int[C];\n\t\tint costSum2[] = new int[C];\n\t\t\n\t\tfor(int color=0;color<C;color++) {\n\t\t\tfor(int i=0;i<N;i++) {\n\t\t\t\tfor(int j=0;j<N;j++) {\n\t\t\t\t\tint nowColor = c[i][j];\n\t\t\t\t\tif((i+j)%3==0) costSum0[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==1) costSum1[color] += D[nowColor][color];\n\t\t\t\t\tif((i+j)%3==2) costSum2[color] += D[nowColor][color];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = Integer.MAX_VALUE/2;\n\t\t//\u4f59\u308a\uff11\u306e\u3068\u3053\u308d\u5168\u901a\u308a\n\t\tfor(int i=0;i<C;i++) {\n\t\t\tfor(int j=0;j<C;j++) {\n\t\t\t\tfor(int k=0;k<C;k++) {\n\t\t\t\t\tif(i==j||j==k||k==i)continue;\n\t\t\t\t\tint sum = costSum0[i]+costSum1[j]+costSum2[k];\n\t\t\t\t\tans = Math.min(ans,sum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextInt();\n        }\n        int[] c = new int[n];\n        for (int i = 0; i < n; i++) {\n            c[i] = sc.nextInt();\n        }\n        Arrays.sort(a);\n        Arrays.sort(b);\n        Arrays.sort(c);\n        System.out.println(solve(a, b, c));\n    }\n\n    private static long solve(int[] a, int[] b, int[] c) {\n        int n = a.length;\n        long[] bmemo = new long[n];\n        int cidx = 0;\n        for (int j = 0; j < n; j++) {\n            for (int k = cidx; k < n; k++) {\n                if (b[j] >= c[k]) {\n                    cidx++;\n                } else {\n                    bmemo[j] = n - k;\n                    break;\n                }\n            }\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            bmemo[i] += bmemo[i + 1];\n        }\n        long sum = 0;\n        int bidx = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = bidx; j < n; j++) {\n                if (a[i] >= b[j]) {\n                    bidx++;\n                } else {\n                    sum += bmemo[j];\n                    break;\n                }\n            }\n        }\n        return sum;\n    }\n}\n", "label": 0}, {"id": 213, "code1": "import java.util.*;\n\npublic class Main {    \n    \n  public static void main(String[] args) {              \n     Scanner sc = new Scanner(System.in);\n     \n     int N = sc.nextInt();\n     \n     int sum = 0;\n     int min = Integer.MAX_VALUE;\n     \n     int count = 0;\n     for(int i = 0;i < N;i++){\n         int a = sc.nextInt();\n         if(a%10 == 0){\n               count++;\n         }\n         sum += a;\n         if(a%10 != 0){\n           min = Math.min(min,a);\n         }\n     }\n     \n     if(count == N){\n         System.out.println(0);\n         return;\n     }     \n                           \n     if(sum%10 != 0){\n         System.out.println(sum);\n         return;\n     }else{\n         System.out.println(sum - min);\n         return;\n     }\n      \n  }          \n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n    void solve(){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        int sum = 0;\n        for(int i = 0; i < n; i++){\n            s[i] = in.nextInt();\n            sum += s[i];\n        }\n        \n        if(sum % 10 != 0){\n            System.out.println(sum);\n            return;\n        }else{\n            Arrays.sort(s);\n            int i = 0;\n            while(sum%10==0 && i < n){\n                if(s[i]%10 != 0){\n                    sum -= s[i];\n                }\n                i++;\n            }\n            if(i == n){\n                sum = 0;\n            }\n        }\n        System.out.println(sum);\n    }\n    \n    public static void main(String[] args){\n        new Main().solve();\n    }\n}", "label": 1}, {"id": 429, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tint INF = 1 << 28;\n\tdouble EPS = 1e-9;\n\n\tint n;\n\tint start, goal, ttl;\n\tLinkedList<Integer>[] graph;\n\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run() {\n\t\tn = sc.nextInt();\n\t\tgraph = new LinkedList[n];\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint u = sc.nextInt() - 1;// \u0083\u008b\u0081[\u0083^\u0094\u00d4\u008d\u0086\n\t\t\tint m = sc.nextInt();\n\t\t\tgraph[u] = new LinkedList<Integer>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint v = sc.nextInt() - 1;\n\t\t\t\tgraph[u].add(v);\n\t\t\t}\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i = 0; i < p; i++) {\n\t\t\tstart = sc.nextInt() - 1;\n\t\t\tgoal = sc.nextInt() - 1;\n\t\t\tttl = sc.nextInt();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve() {\n\t\tLinkedList<Integer> que = new LinkedList<Integer>();\n\t\tboolean[] visited = new boolean[n];\n\t\tint[] d = new int[n];\n\t\tArrays.fill(d, INF);\n\t\tque.offer(start);\n\t\td[start] = 1;\n\t\tvisited[start] = true;\n\t\tfor (; !que.isEmpty();) {\n\t\t\tint u = que.poll();\n\t\t\tfor (int v : graph[u]) {\n\t\t\t\tif (!visited[v]) {\n\t\t\t\t\tque.offer(v);\n\t\t\t\t\td[v] = d[u] + 1;\n\t\t\t\t\tvisited[v] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (d[goal] <= ttl) {\n\t\t\tprintln(\"\" + d[goal]);\n\t\t} else {\n\t\t\tprintln(\"NA\");\n\t\t}\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s) {\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s) {\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\tpublic void solve() {\n\t\tint N = nextInt();\n\t\tint[] a = new int[N];\n\t\tfor(int i = 0;i < N;i++){\n\t\t\ta[i] = nextInt() - 1;\n\t\t}\n\t\tboolean[] used = new boolean[N];\n\t\tint ans = 0;\n\t\tfor(int i = 0;i < N;i++){\n\t\t\tint x = a[i];\n\t\t\tint y = a[x];\n\t\t\tif(used[x])continue;\n\t\t\tif(used[y])continue;\n\t\t\tif(x == a[y] && y == a[x]){\n\t\t\t\tans++;\n\t\t\t\tused[x] = true;\n\t\t\t\tused[y] = true;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "label": 0}, {"id": 667, "code1": "// package arc.arc085;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n        long time = m * 1900 + (n - m) * 100;\n\n        out.println(time * (1<<m));\n        out.flush();\n    }\n\n    public static void debug(Object... o) {\n        System.err.println(Arrays.deepToString(o));\n    }\n\n    public static class InputReader {\n        private static final int BUFFER_LENGTH = 1 << 12;\n        private InputStream stream;\n        private byte[] buf = new byte[BUFFER_LENGTH];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int next() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public char nextChar() {\n            return (char) skipWhileSpace();\n        }\n\n        public String nextToken() {\n            int c = skipWhileSpace();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.append((char) c);\n                c = next();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public int nextInt() {\n            return (int) nextLong();\n        }\n\n        public long nextLong() {\n            int c = skipWhileSpace();\n            long sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = next();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = next();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            return Double.valueOf(nextToken());\n        }\n\n        int skipWhileSpace() {\n            int c = next();\n            while (isSpaceChar(c)) {\n                c = next();\n            }\n            return c;\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.PrimitiveIterator;\nimport java.util.Scanner;\nimport java.util.function.Supplier;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\nclass Main{\n\n\tprivate void solve(){\n\t\tint[] c=new int[26];\n\t\tint h=gInt(),w=gInt();\n\t\tSTRS(h).flatMapToInt(String::chars)\n\t\t\t\t.map(i->i-'a')\n\t\t\t\t.forEach(i->++c[i]);\n\t\tint one=(h%2)*(w%2);\n\n\t\tint two=(w%2==1?h/2*2:0)+(h%2==1?w/2*2:0);\n\t\tint four=h*w-one-two;\n\n\t\tSystem.err.println(one);\n\t\tSystem.err.println(two);\n\t\tSystem.err.println(four);\n\t\tSystem.err.println(Arrays.toString(c));\n\t\tfor(int i:rep(26)) {\n\t\t\twhile(four>0&&c[i]>=4) {\n\t\t\t\tfour-=4;\n\t\t\t\tc[i]-=4;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\ttwo-=c[i]/2*2;\n\t\t\tc[i]%=2;\n\t\t\tif(two<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor(int i:rep(26)) {\n\t\t\tone-=c[i];\n\t\t\tc[i]=0;\n\t\t\tif(one<0) {\n\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\n\t\t\t\tArrays.stream(c).noneMatch(i->i>0)\n\t\t\t\t?\"Yes\":\"No\");\n\t}\n\n\tpublic static void main(String[]$){\n\t\tnew Main().solve();\n\t}\n\n\tScanner s=new Scanner(System.in);\n\n\tint gInt(){\n\t\treturn Integer.parseInt(s.next());\n\t}\n\tlong gLong(){\n\t\treturn Long.parseLong(s.next());\n\t}\n\tdouble gDouble(){\n\t\treturn Double.parseDouble(s.next());\n\t}\n\n\tSupplierIterator<Integer> ints(int n){\n\t\treturn new SupplierIterator<>(n,this::gInt);\n\t}\n\tSupplierIterator<Long> longs(int n){\n\t\treturn new SupplierIterator<>(n,this::gLong);\n\t}\n\tSupplierIterator<Double> doubles(int n){\n\t\treturn new SupplierIterator<>(n,this::gDouble);\n\t}\n\tSupplierIterator<String> strs(int n){\n\t\treturn new SupplierIterator<>(n,s::next);\n\t}\n\n\tstatic class SupplierIterator<T> implements Iterable<T>,Iterator<T>{\n\t\tint\t\t\tt;\n\t\tSupplier<T>\tsupplier;\n\n\t\tSupplierIterator(int t,Supplier<T> supplier){\n\t\t\tthis.t=t;\n\t\t\tthis.supplier=supplier;\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<T> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn t>0;\n\t\t}\n\n\t\t@Override\n\t\tpublic T next(){\n\t\t\t--t;\n\t\t\treturn supplier.get();\n\t\t}\n\t}\n\n\n\tRange rep(int i){\n\t\treturn Range.rep(i);\n\t}\n\tRange rep(int f,int t,int d){\n\t\treturn Range.rep(f,t,d);\n\t}\n\tRange rep(int f,int t){\n\t\treturn rep(f,t,1);\n\t}\n\tRange rrep(int f,int t){\n\t\treturn rep(f,t,-1);\n\t}\n\n\tstatic class Range implements Iterable<Integer>,PrimitiveIterator.OfInt{\n\n\t\tint to,cur,d;\n\n\t\tRange(int from,int to,int d){\n\t\t\tthis.cur=from-d;\n\t\t\tthis.to=to;\n\t\t\tthis.d=d;\n\t\t}\n\n\t\tRange(int n){\n\t\t\tthis(0,n-1,1);\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<Integer> iterator(){\n\t\t\treturn this;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean hasNext(){\n\t\t\treturn cur+d==to||(cur!=to&&(cur<to==cur+d<to));\n\t\t}\n\n\t\t@Override\n\t\tpublic int nextInt(){\n\t\t\treturn cur+=d;\n\t\t}\n\n\t\tstatic Range rep(int i){\n\t\t\treturn new Range(i);\n\t\t}\n\t\tstatic Range rep(int f,int t,int d){\n\t\t\treturn new Range(f,t,d);\n\t\t}\n\t\tstatic Range rep(int f,int t){\n\t\t\treturn rep(f,t,1);\n\t\t}\n\t\tstatic Range rrep(int f,int t){\n\t\t\treturn rep(f,t,-1);\n\t\t}\n\t}\n\n\n\tIntStream REP(int v){\n\t\treturn IntStream.range(0,v);\n\t}\n\tIntStream REP(int l,int r){\n\t\treturn IntStream.rangeClosed(l,r);\n\t}\n\n\tIntStream INTS(int n){\n\t\treturn REP(n).map(i->gInt());\n\t}\n\tStream<String> STRS(int n){\n\t\treturn REP(n).mapToObj(i->s.next());\n\t}\n}\n", "label": 0}, {"id": 62, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        long N = scanner.nextLong();\n        long K = scanner.nextLong();\n\n        long answer = N - ((N / K) * K);\n        if (answer != 0) {\n            long check = answer - K;\n            if (check < 0) {\n                check *= -1;\n            }\n            if (check < answer) {\n                answer = check;\n            }\n        }\n        System.out.println(answer);\n    }\n}\n", "label": 1}, {"id": 324, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\n\n\npublic class Main {\n\n\tprivate BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1);\n\n\tprivate String inputData = null;\n\n\tpublic String[] data = null;\n\n\tpublic int num = 0;\n\n\tpublic int count = 0;\n\n\tpublic HashMap<Integer, Integer> humanData = new HashMap<Integer, Integer>();\n\n\tpublic ArrayList<Integer> topId = new ArrayList<Integer>();\n\n\tpublic ArrayList<Integer> topLength = new ArrayList<Integer>();\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().start();\n\t\tSystem.exit(0);\n\t}\n\n\tpublic void start() {\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\tif (this.data.length == 1) {\n\t\t\t\tif (this.data[0].equals(\"0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.num = Integer.parseInt(this.data[0]);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.humanData.clear();\n\n\t\t\tfor (int i = 0; i < this.num; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\t\tthis.humanData.put(Integer.parseInt(data[0]),\n\t\t\t\t\t\tInteger.parseInt(data[1]) + Integer.parseInt(data[2]));\n\n\t\t\t}\n\n\t\t\tIterator<Integer> itId = this.humanData.keySet().iterator();\n\t\t\tint numCount = 0;\n\t\t\twhile (itId.hasNext()) {\n\t\t\t\tint id = itId.next();\n\t\t\t\tif (numCount == 0) {\n\t\t\t\t\tthis.topId.add(id);\n\t\t\t\t\tthis.topLength.add(this.humanData.get(id));\n\t\t\t\t} else {\n\t\t\t\t\tif (this.topLength.get(count) <= this.humanData.get(id)) {\n\t\t\t\t\t\tthis.topId.set(this.count, id);\n\t\t\t\t\t\tthis.topLength.set(this.count, this.humanData.get(id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumCount++;\n\t\t\t}\n\n\t\t\tthis.count++;\n\n\t\t}\n\n\t\tfor (int i = 0; i < this.topId.size(); i++) {\n\t\t\tSystem.out.println(this.topId.get(i) + \" \" + this.topLength.get(i));\n\t\t}\n\n\t}\n\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "label": 0}, {"id": 763, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.lang.Math;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tFS reader = new FS();\n\t\t// write reader\n\t\tint N = reader.nextInt();\n\t\tint T = reader.nextInt();\n\t\tint A = reader.nextInt();\n\t\tint[] H = new int[N];\n\t\tfor(int i=0; i<N; i++) {\n\t\t    H[i] = reader.nextInt();\n\t\t}\n\t\tint ans     = -1;\n\t\tdouble diff = 1000000;\n\t\tfor(int i=0; i<N; i++) {\n\t\t    double tmp = Math.abs((double)T-(double)H[i]*0.006-(double)A);\n\t\t    if (tmp < diff) {\n\t\t        ans = i+1;\n\t\t        diff = tmp;\n\t\t    }\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tpublic static void solver(int H, int W, boolean[][] matrix) {\n\t\t// write logic\n\t}\n\t\n\t// Read Class\n\tstatic class FS {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\t\tprivate boolean hasNextByte() {\n\t\t\tif (ptr < buflen) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tptr = 0;\n\t\t\t\ttry {\n\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\n\t\tprivate int readByte() { return hasNextByte() ? buffer[ptr++] : -1;}\n\t\tprivate boolean isPrintableChar(int c) {return 33 <= c && c <= 126;}\n\t\tprivate void skipUnprintable() {while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}\n\t\n\t\tpublic boolean hasNext() { skipUnprintable(); return hasNextByte();}\n\t\tpublic String next() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile(isPrintableChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tlong n = 0;\n\t\t\tboolean minus = false;\n\t\t\tint b = readByte();\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\twhile(true) {\n\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += b - '0';\n\t\t\t\t} else if(b == -1 || !isPrintableChar(b)) {\n\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\t}\n}\n", "code2": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()) {\n\t\t\tP[] ps = new P[4];\n\t\t\tString[] vs = sc.next().split(\",\");\n\t\t\tfor(int i=0;i<4;i++) ps[i] = new P( Double.parseDouble(vs[2*i]), Double.parseDouble(vs[2*i+1]) );\n\t\t\t\n\t\t\tSystem.out.println( ( cross(ps[0], ps[2], ps[1], ps[3])? \"YES\": \"NO\" ) );\n\t\t}\n\t}\n\t\n\tboolean cross(P p1, P p2, P q1, P q2) {\n\t\treturn p1.sub(p2).det(q1.sub(p2)) * p1.sub(p2).det(q2.sub(p2)) < 0.0 &&\n\t\t\t   q1.sub(q2).det(p1.sub(q2)) * q1.sub(q2).det(p2.sub(q2)) < 0.0;\n\t}\n\t\n\tclass P {\n\t\tdouble x, y;\n\t\tP(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t\n\t\tP sub(P p) {\n\t\t\treturn new P(x-p.x, y-p.y);\n\t\t}\n\t\t\n\t\tdouble det(P p) {\n\t\t\treturn x*p.y - p.x*y;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "label": 0}, {"id": 448, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint A = sc.nextInt();\n\t\tint B = sc.nextInt();\n\t\tint C = sc.nextInt();\n\t\tint K = sc.nextInt();\n\t\tint res = 0;\n\t\tres+=Math.min(A, K);\n\t\tK -= res;\n\t\tif(K==0) {\n\t\t\tSystem.out.println(res);\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tK-=B;\n\t\tif(K>0) {\n\t\t\tres-=Math.min(K, C);\n\t\t}\n\t\tSystem.out.println(res);\n\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "label": 0}, {"id": 355, "code1": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\n \nclass Main implements Runnable {\n  // static Scanner in;\n  static FastReader in;\n  static PrintWriter out;\n  static int[][] dirs8 = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1}};\n  static int[][] dirs = {{0, -1}, {1, 0}, {0, +1}, {-1, 0}};\n \n  static int[][] E;\n  // static List<int[]>[] adj;\n  static List<Integer>[] adj;\n  static int[] vis;\n \n  static long INFL = (long) 1e15 + 7;\n  static int INF = (int) 1e9 + 7;\n  static int mod = 998244353;\n  \n  static int T, n, m, k, count, cur, w;\n  static boolean flag;\n  static int[] a, b;\n  static int[][] map;\n\n  static int[] par;\n  static boolean[] dp;\n\n  static void solve() throws Exception {\n    n = in.nextInt();\n    k = in.nextInt();\n    a = new int[n]; \n    for (int i = 0; i < n; i++) {a[i] = in.nextInt();}\n    dp = new boolean[k + 1];\n    // dp[i]: win(true) or loss(false) if \"I\" have i stones left and I am to play this round\n    dp[0] = false;\n    for (int i = 1; i <= k; i++) {\n      for (int x : a) {\n        if (x > i) {break;}\n        if (!dp[i - x]) {dp[i] = true; break;}\n      }\n    }\n    out.println(dp[k] ? \"First\" : \"Second\");\n  }\n\n\n  public static void main(String[] args) throws Exception {\n \n    // in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n    in = new FastReader();\n    out = new PrintWriter(System.out);\n \n    // int numOfTests = in.nextInt();\n    // for (int caseNum = 1; caseNum <= numOfTests; caseNum++) {\n    //   // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    //   // t.start();\n    //   // t.join();\n    //   solve();\n    // }\n \n    // // Thread t = new Thread(null, new Main(), \"Main\", 1 << 28);\n    // // t.start();\n    // // t.join();\n    solve();\n \n    out.flush();\n    out.close();\n  }\n \n  @Override\n  public void run() {\n    try {\n      solve();\n    } catch (Exception e) {\n      e.printStackTrace(); \n    }\n  }\n \n  static class FastReader {\n    public BufferedReader br; \n    StringTokenizer st; \n    public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));} \n    String next() { \n      while (st == null || !st.hasMoreElements()) { \n          try {st = new StringTokenizer(br.readLine());} \n          catch (IOException e) {e.printStackTrace();} \n      } \n      return st.nextToken(); \n    } \n    int nextInt() {return Integer.parseInt(next());} \n    long nextLong() {return Long.parseLong(next());} \n    double nextDouble() {return Double.parseDouble(next());} \n    String nextLine() {\n      String str = \"\"; \n        try {str = br.readLine();} \n        catch (IOException e) {e.printStackTrace();} \n        return str; \n    }\n  }\n\n  static void as(boolean result) throws Exception {\n    if (!result) {\n      throw new Exception();\n    }\n  }\n\n  static int modInverse(int a, int m) { \n    int m0 = m; \n    int y = 0, x = 1; \n    if (m == 1) {return 0;} \n    while (a > 1) { \n      // q is quotient \n      int q = a / m; \n      int t = m; \n      // m is remainder now, process \n      // same as Euclid's algo \n      m = a % m; \n      a = t; \n      t = y; \n      // Update x and y \n      y = x - q * y; \n      x = t; \n    } \n    // Make x positive \n    if (x < 0) \n      x += m0; \n    return x; \n  } \n} \n", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tvoid solve() {\n\t\tint n = scn.nextInt(), mod = (int) 1e9 + 7;\n\t\tchar[] cmp = scn.next().toCharArray();\n\t\t\n\t\tint[][] dp = new int[n + 1][n + 1];\n\t\tdp[1][1] = 1;\n\t\t\n\t\tfor(int len = 2; len <= n; len++) {\n\t\t\tint[] pref = new int[n + 1];\n\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\tpref[i] = (pref[i - 1] + dp[len - 1][i]) % mod;\n\t\t\t}\n\t\t\tfor(int curr = 1; curr <= len; curr++) {\n\t\t\t\tint L, R;\n\t\t\t\tif(cmp[len - 2] == '<') {\n\t\t\t\t\tL = 1;\n\t\t\t\t\tR = curr - 1;\n\t\t\t\t} else {\n\t\t\t\t\tL = curr;\n\t\t\t\t\tR = n;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(L <= R) {\n\t\t\t\t\tdp[len][curr] += (pref[R] - pref[L - 1]);\n\t\t\t\t\tif(dp[len][curr] >= mod) {\n\t\t\t\t\t\tdp[len][curr] -= mod;\n\t\t\t\t\t} else if(dp[len][curr] < 0) {\n\t\t\t\t\t\tdp[len][curr] += mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint ans = 0;\n\t\tfor(int curr = 1; curr <= n; curr++) {\n\t\t\tans += dp[n][curr];\n\t\t\tif(ans >= mod) {\n\t\t\t\tans -= mod;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = true;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new Main(), \"Main\", 1 << 26).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tpublic FastReader() {\n\t\t\tis = System.in;\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] IndIntArray(int n) {\n\t\t\tint[][] a = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = new int[] { nextInt(), i };\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tint c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] shuffle(long[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tlong c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tlong[] uniq(long[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tlong[] rv = new long[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] reverse(long[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] compress(int[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tint[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] compress(long[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tlong[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}", "label": 0}, {"id": 622, "code1": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n     \npublic class Main{\n\tpublic static void main(String[] args) throws Exception {\n\tIO io = new IO();\n\tPrintWriter out = new PrintWriter(System.out);\n\tSolver sr = new Solver();\n\tsr.solve(io,out);\n\tout.flush();\n\tout.close();\n    \t}\n\n\tstatic class Solver\n\t{\n      class Pair{\n        int x, y;\n        Pair(int a, int b)\n        {\n          x=a;\n          y=b;\n        }\n      }\n\t    void solve(IO io, PrintWriter out)\n\t    {\n           int i, j;\n          int n = io.nextInt();\n          int m = io.nextInt();\n          \n          ArrayList<Pair> ar = new ArrayList<>();\n          for(i=0 ; i<=n ; i++)\n            \tar.add(new Pair(0,0));\n          for(i=0 ; i<m ; i++)\n          {\n            int tmp=io.nextInt();\n            String str = io.next();\n            if(ar.get(tmp).x==0)\n            {\n              if(str.equals(\"WA\"))\n                ar.get(tmp).y++;\n              else\n                ar.get(tmp).x++;\n            }\n          }\n          int pen=0, correct=0;\n          for(Pair p : ar)\n          {\n            if(p.x!=0)\n            {\n              correct++;\n              pen+=p.y;\n            }\n          }\n            out.print(correct+\" \"+pen);\n\t    }\n    \t\n\t}\n\t//Special thanks to Petr (on codeforces) who inspired me to implement IO class!\n\tstatic class IO\n\t{\n    \tBufferedReader reader;\n        StringTokenizer tokenizer;\n    \tpublic IO() {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                tokenizer = null;\n            }\n     \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public String nextLine() {\n            String s=\"\";\n            try {\n                    s=reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            return s;\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    \tdouble nextDouble()\n    \t{\n    \t\treturn Double.parseDouble(next());\n    \t}\n\t}\n}", "label": 0}, {"id": 460, "code1": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n       int ar[]=new int[] {0,0,0,0};\n       for(int i=0;i<3;i++)\n       {\n           int a=sc.nextInt();\n           int b=sc.nextInt();\n           ar[a-1]+=1;\n           ar[b-1]+=1;\n       }\n       \n       for(int i = 0; i < 4; i++) {\n\t\t\tif(ar[i] < 1 || ar[i] > 2) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"YES\");\n       \n//       for(int i:ar)\n//       {\n//           if(i>2)\n//           {\n//               System.out.println(\"NO\");\n//               System.exit(0);\n//           }\n//       }\n//       System.out.println(\"YES\");\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint N = scan.nextInt();\n\t\tint M = scan.nextInt();\n\n\t\tint[] X = new int[M];\n\t\tfor(int i=0; i<M; i++) {\n\t\t\tX[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\t\t\n\t\tif(M <= N) {\n\t\t\tSystem.out.println(0);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(X);\n\t\t\n\t\tint distance[] = new int[M-1];\n\t\tfor(int i=0; i<M-1; i++) {\n\t\t\tdistance[i] = X[i+1] - X[i];\n\t\t}\n\t\t\n\t\tArrays.sort(distance);\n\t\t\n\t\tint sum = 0;\n\t\tfor(int i=0; i<(M-N); i++) {\n\t\t\tsum+=distance[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\n\n\t}\n\n}", "label": 0}, {"id": 564, "code1": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n\tstatic final Reader in = new Reader();\n\tstatic final long M=(long)1e9+7;\n\t\n\tpublic static void main(String[] args) {\n\t\tint n=in.nextInt();\n\t\tlong[] ps = new long[n+1];\n\t\tlong nf=1;\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tps[i]=(ps[i-1]+in.nextInt())%M;\n\t\t\tnf=nf*i%M;\n\t\t}\n\t\tlong ans=nf*ps[n]%M, s=0;\n\t\tfor(int i=1; i<=n-1; ++i) {\n\t\t\ts=(s+ps[n-i]-ps[i]+M)%M;\n\t\t\tans=(ans+nf*modI((long)(i+1)*(i>=n-1?1:i+2), M)%M*2*s+nf*modI(i+1, M)%M*(ps[i]+ps[n]-ps[n-i]+M))%M;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\t\n\tstatic long modI(long a, long m) {\n\t\treturn (a%=m)<=1?1:(1-modI(m%a, a)*m)/a+m;\n\t}\n\t\n\tstatic class Reader {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st;\n\t\tString next() {\n\t\t\twhile(st==null||!st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\t\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString[] days={\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\"};\n\t\twhile(sc.hasNextInt()){\n\t\t\tint month=sc.nextInt();\n\t\t\tint day=sc.nextInt();\n\t\t\tint a=modd(month);\n\t\t\tint b=a+day;\n\t\t\tif(month==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif((b-1)%7==0){\n\t\t\t\tSystem.out.println(days[0]);\n\t\t}else if((b-1)%7==1){\n\t\t\tSystem.out.println(days[1]);\n\t\t}else if((b-1)%7==2){\n\t\t\tSystem.out.println(days[2]);\n\t\t}else if((b-1)%7==3){\n\t\t\tSystem.out.println(days[3]);\n\t\t}else if((b-1)%7==4){\n\t\t\tSystem.out.println(days[4]);\n\t\t}else if((b-1)%7==5){\n\t\t\tSystem.out.println(days[5]);\n\t\t}else if((b-1)%7==6){\n\t\t\tSystem.out.println(days[6]);\n\t\t}\n\t}\n\n\t}\n\tpublic static int modd(int month){\n\t\tint[] months={31,29,31,30,31,30,31,31,30,31,30,31};\n\t\tint a=0;\n\t\tfor(int i=0; i<=month-2; i++){\n\t\t\ta+=months[i];\n\t\t}\n\n\t\treturn a;\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}", "label": 0}, {"id": 316, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "code2": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\t//\u305d\u308c\u305e\u308c\u306e\u60a3\u8005\u306e\u756a\u53f7 p\n\t\t//1\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d1\n\t\t//2\u56de\u76ee\u306b\u6b69\u3044\u305f\u8ddd\u96e2 d2\n\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tint n = sc.nextInt();//\u60a3\u8005\u306e\u6570 n\n\t\t\tint maxWalk = 0;//\u4e00\u756a\u6b69\u3044\u305f\u4eba\u306e\u8ddd\u96e2\n\t\t\tif(n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tMap<Integer, Integer> walkSum = new HashMap<Integer, Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d1 = sc.nextInt();\n\t\t\t\tint d2 = sc.nextInt();\n\t\t\t\tint sumWalk = d1 + d2;\n\t\t\t\tif(sumWalk > maxWalk)maxWalk = sumWalk;\n\t\t\t\twalkSum.put(sumWalk,p);\n\t\t\t}\n\t\t\tSystem.out.println(walkSum.get((Object)maxWalk)+\" \"+maxWalk);\n\t\t}\n\t}\n}", "label": 0}, {"id": 262, "code1": "import java.util.*;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc=new Scanner(System.in);\n    System.out.println((sc.nextInt()+sc.nextInt()+1)/2);\n  }\n}", "code2": "import java.util.*;\n \npublic class Main{\n\tpublic static void main(String[] args){\n    \tScanner scan = new Scanner(System.in);\n      \tint a = scan.nextInt();\n      \tint b = scan.nextInt();\n      \tint x = a + b;\n      \tint ans = 0;\n      \tif(x % 2 == 0){\n        \tans = x / 2;\n        }\n      \telse{\n        \tans = x / 2 + 1;\n        }\n      \t\n      \tSystem.out.print(ans);\n    }\n}", "label": 1}, {"id": 219, "code1": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int count = 0;\n    for(int i = 0; i < N.length(); i++){\n      if(N.charAt(i) == '2') count++;\n    }\n    System.out.println(count);\n  }\n}", "code2": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "label": 1}, {"id": 271, "code1": "import java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint[] team=new int[100];\n\t\tint[] data=new int[100];\n\t\tint ptr=0;\n\t\twhile(true){\n\t\t\tString str=sc.next();\n\t\t\tif(str.equals(\"0,0\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tteam[ptr]=Integer.parseInt(str.split(\",\")[0]);\n\t\t\tdata[ptr]=Integer.parseInt(str.split(\",\")[1]);\n\t\t\tptr++;\n\t\t}\n\t\tfor(int i=0;i<ptr;i++){\n\t\t\tfor(int j=ptr-1;j>=i+1;j--){\n\t\t\t\tif(data[j]>data[j-1]){\n\t\t\t\t\tint box=data[j];\n\t\t\t\t\tdata[j]=data[j-1];\n\t\t\t\t\tdata[j-1]=box;\n\t\t\t\t\tbox=team[j];\n\t\t\t\t\tteam[j]=team[j-1];\n\t\t\t\t\tteam[j-1]=box;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint[] ranking=new int[ptr];\n\t\tint checkRank=data[0];\n\t\tint rank=1;\n\t\tfor(int i=0;i<ptr;i++){\n\t\t\tif(data[i]!=checkRank){\n\t\t\t\tcheckRank=data[i];\n\t\t\t\trank++;\n\t\t\t}\n\t\t\tranking[i]=rank;\n\t\t}\n\t\twhile(sc.hasNext()){\n\t\t\tint searchTeam=sc.nextInt();\n\t\t\tfor(int i=0;i<ptr;i++){\n\t\t\t\tif(team[i]==searchTeam){\n\t\t\t\t\tSystem.out.println(ranking[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.awt.geom.Point2D;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) {\n\t\tnew Main();\n\t}\n\n\tpublic Main() {\n\t\tnew AOJ().doIt();\n\t}\n\tclass AOJ{\n\t\tvoid doIt(){\n\t\t\tint TEAMS[] = new int[101];\n\t\t\tArrayList<ArrayList<Integer>> POINTS = new ArrayList<ArrayList<Integer>>();\n\t\t\tfor(int i = 0;i < 31;i++)POINTS.add(new ArrayList<Integer>());\n\t\t\tint RANK = 0;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tString str[] = sc.next().split(\",\");\n\t\t\t\tint team = Integer.parseInt(str[0]);\n\t\t\t\tint point = Integer.parseInt(str[1]);\n\t\t\t\tif(team + point == 0)break;\n\t\t\t\tArrayList<Integer> array = POINTS.get(point);\n\t\t\t\tarray.add(team);\n\t\t\t\tPOINTS.set(point,array);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = 30;i >= 0;i--){\n\t\t\t\tif(POINTS.get(i).size() > 0){\n\t\t\t\t\tRANK++;\n\t\t\t\t\tArrayList<Integer> array = POINTS.get(i);\n//\t\t\t\t\tSystem.out.println(RANK+\": \"+i+\" \"+array.toString());\n\t\t\t\t\tfor(int j = 0;j < array.size();j++){\n\t\t\t\t\t\tTEAMS[array.get(j)] = RANK;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile(sc.hasNext()){\n\t\t\t\tint Q = sc.nextInt();\n\t\t\t\tSystem.out.println(TEAMS[Q]);\n\t\t\t}\n\t\t}\n\t}\n}", "label": 1}, {"id": 456, "code1": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "code2": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args)\n  {\n    Scanner scanner = new Scanner(System.in);\n    int[] a = new int[3];\n    int[] b = new int[3];\n\n    int iti = 0,ni=0,san=0,si =0;\n\n    int odd=0, even=0;\n\n    for(int i=0; i<3; i++){\n      a[i] = scanner.nextInt();\n      b[i] = scanner.nextInt();\n    }\n\n    for(int i=0; i<3; i++){\n      if(a[i] == 1){\n        iti++;\n      }\n      else if(a[i]==2)\n      {\n        ni++;\n      }else if(a[i] == 3)\n      {\n        san++;\n      }else if(a[i] == 4){\n        si++;\n      }\n\n      if(b[i] == 1){\n        iti++;\n      }\n      else if(b[i]==2)\n      {\n        ni++;\n      }else if(b[i] == 3)\n      {\n        san++;\n      }else if(b[i] == 4){\n        si++;\n      }\n    }\n\n    if(checkEven(iti)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(ni)){\n      even++;\n    }else{\n      odd++;\n    }\n    if(checkEven(san)){\n      even++;\n    }else{\n      odd++;\n    }\n\n    if(checkEven(si)){\n      even++;\n    }else{\n      odd++;\n    }\n\n      if(odd == 2 && even == 2)\n      {\n        System.out.println(\"YES\");\n      }else{\n        System.out.println(\"NO\");\n      }\n\n  }\n\n  public static boolean checkEven(int num){\n    if(num %2 == 0){\n      return true;\n    }\n    return false;\n  }\n\n}", "label": 0}, {"id": 218, "code1": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int count = 0;\n    for(int i = 0; i < N.length(); i++){\n      if(N.charAt(i) == '2') count++;\n    }\n    System.out.println(count);\n  }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        String ns = sc.next();\n        int count = 0;\n        for(int i = 0; i < 4; i++){\n            if(ns.charAt(i) == '2') count++;\n        }\n        \n        System.out.println(count);\n    }\n}\n", "label": 1}, {"id": 149, "code1": "import java.util.*;\nimport java.lang.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long x = sc.nextLong();\n        long countA = a ==0 ? 0 : (a-1)/x+1;\n        long countB = b/x+1;\n        System.out.println(countB-countA);\n\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n\n        long a = scn.nextLong(), b = scn.nextLong(), x = scn.nextLong();\n        long ans = 0;\n\n        ans = (b / x) - (a / x);\n\n        if(a % x == 0){\n            ans++;\n        }\n\n        System.out.println(ans);\n\n    }\n\n}", "label": 1}, {"id": 634, "code1": "import java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String args[]){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint num = sc.nextInt();\n\n\t\tBigInteger big_num = BigInteger.valueOf(1);\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tbig_num = big_num.multiply(BigInteger.valueOf(i));\n\t\t}\n\n\t\tSystem.out.println(big_num.add(BigInteger.valueOf(2)));\n\n\t\tfor(int i = 2; i <= num+1; i++){\n\t\t\tSystem.out.println(i);\n\t\t}\n\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "label": 0}, {"id": 580, "code1": "import java.util.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t// \u5165\u529b\n\t\tint n = sc.nextInt();\n\t\tGraph g = new Graph(n, false);\n\t\tfor(int i = 0; i < n-1; i++){\n\t\t    int a = sc.nextInt() - 1;\n\t\t    int b = sc.nextInt() - 1;\n\t\t    g.add(a, b);\n\t\t}\n\t\t\n\t\t// \u8a08\u7b97\n\t\tString result = \"Snuke\";\n\t\tlong[] distFromB = g.dijkstra(0);\n\t\tlong[] distFromW = g.dijkstra(n-1);\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < n; i++){\n\t\t    if(distFromB[i] <= distFromW[i]) cnt++;\n\t\t}\n\t\tif(cnt > (n-cnt)) result = \"Fennec\";\n\t\t\n\t\t// \u51fa\u529b\n\t\tSystem.out.println(result);\n\t}\n\n}\n\nclass Graph {\n\tint n;\n\tboolean directed;\n\tArrayList<Edge>[] adjList;\n\tint m;\n\tlong[] dist;\n\tlong[][] distWF;\n\tint start;\n\tint[] prev;\n\tArrayList<Integer> path;\n\tlong INF = 1001001001001001001L;\n\n\tpublic Graph (int n, boolean directed) {\n\t\tthis.n = n;\n\t\tthis.m = 0;\n\t\tthis.directed = directed;\n\t\tthis.adjList = new ArrayList[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tadjList[i] = new ArrayList<Edge>();\n\t\t}\n\t}\n\t\n\tpublic void add(int from, int to) {\n\t\tadd(from, to, 1);\n\t}\n\tpublic void add(int from, int to, int w) {\n\t\tadjList[from].add(new Edge(from, to, w));\n\t\tthis.m++;\n\t\tif(!directed){\n\t\t\tadjList[to].add(new Edge(to, from, w));\n\t\t\tthis.m++;\n\t\t}\n\t}\n\t\n\tpublic long[] bfs(int start) { // O(M)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tArrayDeque<Integer> q = new ArrayDeque<Integer>();\n\t\tq.add(start);\n\t\twhile(!q.isEmpty()){\n\t\t\tint now = q.poll();\n\t\t\tfor(Edge e : adjList[now]){\n\t\t\t\tif(dist[e.to] != INF) continue;\n\t\t\t\tdist[e.to] = dist[now] + e.w;\n\t\t\t\tprev[e.to] = now;\n\t\t\t\tq.add(e.to);\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[] dijkstra(int start) { // O(MlogM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tPriorityQueue<Vertex> q = new PriorityQueue<Vertex>((x, y) -> Long.compare(x.distance, y.distance));\n\t\tq.add(new Vertex(start, 0));\n\t\twhile(!q.isEmpty()){\n\t\t\tVertex now = q.poll();\n\t\t\tif(now.distance > dist[now.id]) continue; \n\t\t\tfor(Edge e : adjList[now.id]){\n\t\t\t\tlong newDist = now.distance + e.w;\n\t\t\t\tif(dist[e.to] <= newDist) continue;\n\t\t\t\tdist[e.to] = newDist;\n\t\t\t\tprev[e.to] = now.id;\n\t\t\t\tq.add(new Vertex(e.to, newDist));\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[][] wf() { // O(N^3)\n\t\tthis.distWF = new long[n][n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tArrays.fill(distWF[i], INF);\n\t\t\tdistWF[i][i] = 0;\n\t\t}\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tdistWF[e.from][e.to] = e.w;\n\t\t\t}\n\t\t}\n\t\tfor(int k = 0; k < n; k++){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\t\tdistWF[i][j] = min(distWF[i][j], distWF[i][k] + distWF[k][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn distWF;\n\t}\n\t\n\tpublic boolean bf(int start) { // O(NM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tboolean hasNegativeLoop = false;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tfor(Edge e : adjList[j]){\n\t\t\t\t\tif(dist[e.to] <= dist[e.from] + e.w) continue;\n\t\t\t\t\tdist[e.to] = dist[e.from] + e.w;\n\t\t\t\t\tprev[e.to] = e.from;\n\t\t\t\t\tif(i == n-1) hasNegativeLoop = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hasNegativeLoop;\n\t}\n\t\n\tpublic ArrayList<Integer> pathTo(int to){\n\t\tthis.path = new ArrayList<Integer>();\n\t\treturn pathToRec(to);\n\t}\n\t\n\tprivate ArrayList<Integer> pathToRec(int to){\n\t\tif(to != start) pathToRec(prev[to]);\n\t\tpath.add(to);\n\t\treturn path;\n\t}\n\t\n\tpublic String toString(){\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tsb.append(e.toString());\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tpublic String distToString(){\n\t\tif(dist != null) return Arrays.toString(dist);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tif(distWF[i][j] == INF){\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:INF\" + \"\\n\");\n\t\t\t\t}else{\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:\" + distWF[i][j] + \"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tclass Edge {\n\t\tint from;\n\t\tint to;\n\t\tint w;\n\t\t\n\t\tEdge(int from, int to, int w){\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.w = w;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"from:\" + from + \" to:\" + to + \" w:\" + w;\n\t\t}\n\t}\n\t\n\tclass Vertex {\n\t\tint id;\n\t\tlong distance;\n\t\t\n\t\tVertex(int id, long distance){\n\t\t\tthis.id = id;\n\t\t\tthis.distance = distance;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"id:\" + id + \" distance:\" + distance;\n\t\t}\n\t}\n}\n", "code2": "\n\nimport java.util.*;\nimport java.io.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\tScanner sc=new Scanner(System.in);\n\t     int n=sc.nextInt();\n\t     int m=sc.nextInt();\n\t     ArrayList<ArrayList<Integer>> a=new ArrayList<>();\nfor(int i=0;i<n;i++) {\n\ta.add(new ArrayList<Integer>());\n}\nfor(int j=0;j<m;j++) {\n\tint x=sc.nextInt()-1;\n\tint y=sc.nextInt()-1;\n\ta.get(x).add(y);\n\ta.get(y).add(x);\n}\nboolean vis[]=new boolean[n];\nans=0;\n\tSystem.out.println(dfs(a,0,vis,1,n));\n\t}\nstatic int ans=0;\t\n\tstatic int dfs(ArrayList<ArrayList<Integer>> a,int src,boolean vis[],int count,int n) {\n\t\tvis[src]=true;\n\t\tfor(int i:a.get(src)) {\n\t\t\tif(vis[i]==false) {\n\t\t\t\t\n\t\t\t\tdfs(a,i,vis,count+1,n);\n\t\t\t}\n\t\t}\n\t\tif(count==n) {\n\t\tans++;\n\t\tvis[src]=false;\n\t\t\t}else {\n\t\t\t\tvis[src]=false;\n\t\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\tstatic int[] arr(int n,Scanner sc) {\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\treturn a;\n}\n\n}\n", "label": 0}, {"id": 237, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = br.readLine();\n        char[] alpha = line.toCharArray();\n        int n = alpha.length - 2;\n        int m = n / 2;\n        boolean b = true;\n        while(n != 0) {\n            b = true;\n            for(int i = 0; i < m; i++) {\n                if(alpha[i] != alpha[m + i]) {\n                    b = false;\n                    break;\n                }\n            }\n            if(b) {\n                break;\n            }\n            n = n -2;\n            m = n / 2;\n        }\n        System.out.println(n);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        String S = sc.next();\n\n        System.out.println(solve(S));\n\n        sc.close();\n    }\n\n    static int solve(String S) {\n        for (int length = (S.length() - 1) / 2 * 2;; length -= 2) {\n            if (isEven(S.substring(0, length))) {\n                return length;\n            }\n        }\n    }\n\n    static boolean isEven(String s) {\n        return s.endsWith(s.substring(0, s.length() / 2));\n    }\n}", "label": 1}, {"id": 536, "code1": "import java.io.FileNotFoundException;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tMaxHeapSort maxheap = new MaxHeapSort(new int[] {});\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tmaxheap.add(a[i]);\n\t\t}\n\t\ta = maxheap.sortedArray();\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tSystem.out.print(a[i] + (i == n - 1 ? \"\\n\" : \" \"));\n\t\t}\n\t}\n\n\tclass MaxHeapSort {\n\t\tint n;\n\t\tint[] v;\n\n\t\tpublic MaxHeapSort(int[] v_) {\n\t\t\tif (v_.length > 1_000_000)\n\t\t\t\tthrow new AssertionError();\n\t\t\tv = Arrays.copyOf(v_, 1_000_000);\n\t\t\tn = v_.length;\n\t\t\tfor (int i = n; i >= 0; --i) {\n\t\t\t\tmaxHeapify(i);\n\t\t\t}\n\t\t}\n\n\t\tvoid add(int val) {\n\t\t\tv[n] = val;\n\t\t\tint cur = n;\n\t\t\t++n;\n\t\t\twhile (cur > 0) {\n\t\t\t\tcur = (cur - 1) / 2;\n\t\t\t\tmaxHeapify(cur);\n\t\t\t}\n\t\t}\n\n\t\tint[] sortedArray() {\n\t\t\tint sz = n;\n\t\t\tint[] ret = new int[sz];\n\t\t\tfor (int i = 0; i < sz; ++i) {\n\t\t\t\tret[sz - 1 - i] = poll();\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tint poll() {\n\t\t\tint ret = v[0];\n\t\t\tv[0] = v[n - 1];\n\t\t\tv[n - 1] = ret;\n\t\t\t--n;\n\t\t\tmaxHeapify(0);\n\t\t\treturn ret;\n\t\t}\n\n\t\tvoid maxHeapify(int cur) {\n\t\t\tif (2 * cur + 1 >= n)\n\t\t\t\treturn;\n\t\t\tif (v[cur] >= v[2 * cur + 1] && (2 * cur + 2 >= n || v[cur] >= v[2 * cur + 2])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint dst = -1;\n\t\t\tif (2 * cur + 2 >= n || v[2 * cur + 1] >= v[2 * cur + 2]) {\n\t\t\t\tdst = 2 * cur + 1;\n\t\t\t} else {\n\t\t\t\tdst = 2 * cur + 2;\n\t\t\t}\n\t\t\tint tmp = v[cur];\n\t\t\tv[cur] = v[dst];\n\t\t\tv[dst] = tmp;\n\t\t\tmaxHeapify(dst);\n\t\t}\n\t}\n\n\tstatic void tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n + 2];\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tsc.close();\n\n\t\tint sum = 0;\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tsum += Math.abs(a[i] - a[i + 1]);\n\t\t}\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tSystem.out.println(sum + Math.abs(a[i- 1] - a[i + 1])\n\t\t\t\t\t- Math.abs(a[i] - a[i + 1]) - Math.abs(a[i] - a[i - 1]));\n\t\t}\n\t}\n}\n", "label": 0}, {"id": 455, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "code2": "import java.io.BufferedReader;\n\nimport static java.util.Comparator.*;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.lang.reflect.Array;\nimport java.math.BigDecimal;\nimport java.util.AbstractMap;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\npublic class Main {\n\t\n//\tpublic static Set<String> mem = new HashSet<String>();\n//\tpublic static boolean[] mem_1 = new boolean[100];\n//\tpublic static boolean[] mem_2 = new boolean[100];\n//\tpublic static Set<Integer> mem = new TreeSet<Integer>();\n//\tpublic static Map<String, Integer> mem_1= new HashMap<String, Integer>();\n//\tpublic static Map<String, Integer> mem_2 = new HashMap<String, Integer>();\n\t\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        \n        Solver solver = new Solver();\n        solver.solve(1, in, out);\n        \n        out.close();\n    }\n    \n    // ======================================================================\n    static class Solver {\n    \t\n\t\tList<Pair<Integer, Integer>> lP = new ArrayList<Pair<Integer, Integer>>();\n\t\tList<Pair<Integer, Integer>> lAns = new ArrayList<Pair<Integer, Integer>>();\n\n    \tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n    \t\tlong ans = 0L;\n    \t\tint[] cnt = new int[4];\n    \t\tfor(int i=0; i < 6; i++) {\n        \t\tint a = in.nextInt();\n        \t\tcnt[a-1] += 1;\n        // \t\tout.println(\"[\" + a + \"]\");\n    \t\t}\n    \t\tboolean f = true;\n    \t\tfor(int i=0; i < 4; i++) {\n        // \t\tout.println(\"[\" + cnt[i] + \"]\");\n    \t\t\tif(cnt[i] >= 3)\t\tf = false;\n    \t\t}\n    \t\tif(f)   \t\tout.println(\"YES\");\n    \t\telse            out.println(\"NO\");\n        }\n    }\n    // ======================================================================\n    static class Pair<K, V> extends AbstractMap.SimpleEntry<K, V> {\n        /** serialVersionUID. */\n        private static final long serialVersionUID = 6411527075103472113L;\n\n        public Pair(final K key, final V value) {\n            super(key, value);\n        }\n        public String getString() {\n            return \"[\" + getKey() + \"] [\" + getValue() + \"]\";\n        }\n     }    \n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n \n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n \n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n \n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n \n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n \n        public String nextString() {\n        \tString ret = new String(nextDChar()).trim();\n            return ret;\n        }\n \n        public char[] nextDChar() {\n            int len = 0;\n            len = reads(len, isSpace);\n            char[] ret = new char[len + 1];\n            for (int i=0; i < len; i++)\t\tret[i] = str[i];\n            ret[len] = 0x00;\n            return ret;\n        }\n \n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n \n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n \n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n    }\n}\n", "label": 0}, {"id": 386, "code1": "import java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tchar[] s = sc.next().toCharArray();\n\t\tStack<Character> st = new Stack<>();\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\tif (s[i] == 'T') {\n\t\t\t\tif (st.isEmpty()) cnt++;\n\t\t\t\telse st.pop();\n\t\t\t} else {\n\t\t\t\tst.push('S');\n\t\t\t}\n\t\t}\n\t\tcnt += st.size();\n\t\tSystem.out.println(cnt);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "label": 0}, {"id": 320, "code1": "import java.util.*;\nclass Main {\n\tstatic int n;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) break;\n\t\t\tint maxDistance = 0;\n\t\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d = sc.nextInt() + sc.nextInt();\n\t\t\t\tmap.put(d, p);\n\t\t\t\tmaxDistance = Math.max(d, maxDistance);\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d %d\\n\", map.get(maxDistance), maxDistance);\n\t\t}\n\t}\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint unko=sc.nextInt();\n\t\tboolean ike=false;\n\t\tint N=0;\n\t\tfor(int i=0; i<=500; i++) {\n\t\t\tif(unko==i*(i+1)/2) {\n\t\t\t\tike=true;\n\t\t\t\tN=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if(unko<i*(i+1)/2) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ike) {\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\tSystem.out.println(N+1);\n\t\t\tint[][] ary=new int[N+1][N];\n\t\t\tint[] kaz=new int[N+2];\n\t\t\tfor(int i=0; i<=N; i++) {\n\t\t\t\tfor(int j=0; j<N; j++) {\n\t\t\t\t\tary[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0; i<=N+1; i++) {\n\t\t\t\tkaz[i]=0;\n\t\t\t}\n\t\t\tint counter=1;\n\t\t\tfor(int i=1; i<=N+1; i++) {\n\t\t\t\tfor(int j=1; j<i; j++) {\n\t\t\t\t\tary[i-1][kaz[i-1]]=counter;\n\t\t\t\t\tkaz[i-1]++;\n\t\t\t\t\tary[j-1][kaz[j-1]]=counter;\n\t\t\t\t\tkaz[j-1]++;\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tString buri=\"\";\n\t\t\tfor(int i=0; i<N+1; i++) {\n\t\t\t\tburi=Arrays.toString(ary[i]);\n\t\t\t\tburi=buri.replaceAll(\",\",\"\");\n\t\t\t\tburi=buri.replace(\"[\",\" \");\n\t\t\t\tburi=buri.replace(\"]\",\"\");\n\t\t\t\tSystem.out.println(N+buri);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 95, "code1": "import java.util.*;\npublic class Main{\npublic static void main(String[] args){\nScanner sc = new Scanner(System.in);\n  int Q = sc.nextInt();\n  for(int i=0;i<Q;i++){\n    long f = sc.nextLong();\n    long s = sc.nextLong();\n    long a = Math.max(f, s);\n    long b = Math.min(f, s);\n    long K = a*b;\n    long L = (long) Math.sqrt(K);\n    long M = (K-1)/L;\n    long N = Math.max(-1,M-b-1);\n    System.out.println(L+N+b-1);\n  }\n}}\n", "code2": "import java.util.Scanner;\nimport java.util.stream.IntStream;\n\n/**\n * \u89e3\u8aac\u3069\u304a\u308a\u306b\u4f5c\u6210\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n */\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner scanner = new Scanner(System.in)) {\n\t\t\tint q = scanner.nextInt();\n\t\t\tIntStream.range(0, q).mapToLong(i -> getResult(scanner.nextInt(), scanner.nextInt()))\n\t\t\t\t\t.forEach(System.out::println);\n\t\t}\n\t}\n\n\t/**\n\t * \u9806\u4f4d\u304c\u9ad8\u6a4b\u3088\u308a\u4f4e\u3044\u6700\u5927\u306e\u4eba\u6570\u3092\u8a08\u7b97\u3059\u308b\n\t * \n\t * @param a \u9ad8\u6a4b\u306e1\u56de\u76ee\u306e\u9806\u4f4d\n\t * @param b \u9ad8\u6a4b\u306e2\u56de\u76ee\u306e\u9806\u4f4d\n\t * @return \u9806\u4f4d\u304c\u9ad8\u6a4b\u3088\u308a\u4f4e\u3044\u6700\u5927\u306e\u4eba\u6570\n\t */\n\tprivate static long getResult(long a, long b) {\n\t\tif (1 >= Math.abs(a - b)) {\n\t\t\treturn 2 * Math.min(a, b) - 2;\n\t\t}\n\t\tlong c = (long) Math.sqrt(a * b);\n\t\tif (c * c == a * b) {\n\t\t\tc--;\n\t\t}\n\t\tif (c * (c + 1) >= a * b) {\n\t\t\treturn 2 * c - 2;\n\t\t} else {\n\t\t\treturn 2 * c - 1;\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 484, "code1": "import java.util.*;\n\npublic class Main {\n  public static long MOD = (long)Math.pow(10, 6) + 3;\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long[] kai = new long[(int)MOD];\n//    long[] inkai = new long[(int)MOD];\n//    long[] in = new long[(int)MOD];\n    kai[0] = 1;\n    kai[1] = 1;\n//    inkai[0] = 1;\n//    inkai[1] = 1;\n//    in[1] = 1;\n    for(long i = 2; i < MOD; i++) {\n      kai[(int)i] = (i * kai[(int)i - 1]) % MOD;\n//      inkai[(int)i] = func(kai[(int)i], MOD - 2);\n//      in[(int)i] = func(i, MOD - 2);\n    }\n    int q = sc.nextInt();\n    for(int i = 0; i < q; i++) {\n      long x = sc.nextLong();\n      long d = sc.nextLong();\n      long n = sc.nextLong();\n      long ans = 0;\n      if(d == 0) {\n        if(x == 0) {\n          ans = 0;\n        } else {\n          ans = func(x, n % (MOD - 1));\n        }\n      } else {\n        long inv = func(d, MOD - 2);\n        x = (x * inv) % MOD;\n        if(x == 0) {\n          ans = 0;\n        } else {\n          if((int)(x + n - 1) >= MOD) {\n            ans = 0;\n          } else {\n            long t = func(d, n % (MOD - 1));\n            long invkai = func(kai[(int)x - 1], MOD - 2);\n            ans = (((kai[(int)(x + n - 1)] * invkai) % MOD) * t) % MOD;\n          }\n        }\n      }\n      System.out.println(ans);\n    }\n  }\n  public static long func(long a, long x) {\n    if(x == 0) return 1;\n    if(x >= 1) {\n      if(x % 2 == 0) {\n        long t = func(a, x / 2);\n        return (t * t) % MOD;\n      } else {\n        long t = func(a, x - 1);\n        return (a * t) % MOD;\n      }\n    }\n    return 0;\n  } \n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "label": 0}, {"id": 419, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class Main {\n    public static void main(String[] args) {\n        Main main = new Main();\n        main.solve();\n    }\n\n    public void solve() {\n        Scanner scan = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        int N = scan.nextInt();\n        List<Integer> candidate = new ArrayList<>();\n        for (int i = 1; i <= N; i++) {\n            candidate.add(i);\n        }\n        scan.nextLine();\n        String p = scan.nextLine();\n        String q = scan.nextLine();\n        List<List<Integer>> list = make(candidate);\n        List<String> strings = new ArrayList();\n        for (List<Integer> x : list) {\n            strings.add(x.stream().map(i -> i.toString()).collect(Collectors.joining(\" \")));\n        }\n        int len = strings.size();\n        int l = 0;\n        int r = 0;\n        for (int i = 0; i < len; i++) {\n            if (p.equals(strings.get(i))) {\n                l = i;\n            }\n            if (q.equals(strings.get(i))) {\n                r = i;\n            }\n        }\n        System.out.println(Math.abs(l - r));\n    }\n\n    public static List<List<Integer>> make(List<Integer> candidate) {\n        if (candidate.size() == 0) {\n            List<List<Integer>> empty = new ArrayList<>();\n            empty.add(new ArrayList<>());\n            return empty;\n        }\n\n        return candidate.stream().flatMap(i -> {\n            List<Integer> rest = new ArrayList<>(candidate);\n            rest.remove(i);\n            return make(rest).stream().map(list -> {\n                list.add(0, i);\n                return list;\n            });\n        }).collect(Collectors.toList());\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\tint cnt(int s,int g,int cnt,int xy[][],int n){\n\t\tint result = 0;\n\t\tint c[] = new int [n+1];\n\t\tint d[] = new int [n+1];\n\t\tc[s] = 1;\n\t\tif(s == g && cnt > 0)result = 1;\n\t\tfor(int i = 1;i < cnt;i++){\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tfor(int k = 1;k < n+1;k++){\n\t\t\t\t\tif(xy[j][k] == 1 && c[j] == i){\n\t\t\t\t\t\td[k] = i + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j = 1;j < n+1;j++){\n\t\t\t\tc[j] = d[j];\n\t\t\t}\n\t\t\tif(c[g] > 0){\n\t\t\t\tresult = c[g];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(i == 101){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tvoid doIt() { \n\t\tint n = sc.nextInt();\n\t\tint xy[][] = new int [n+1][n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tint r1 = sc.nextInt();\n\t\t\tint k1 = sc.nextInt();\n\t\t\tfor(int j = 0;j < k1;j++){\n\t\t\t\tint t = sc.nextInt();\n\t\t\t\txy[r1][t] = 1;\n\t\t\t}\n    \t }\n\t\tint p = sc.nextInt();\n\t\tfor(int i = 0;i < p;i++){\n\t\t\tint s = sc.nextInt();\n\t\t\tint d = sc.nextInt();\n\t\t\tint TTL = sc.nextInt();\n\t\t\tint ans = cnt(s,d,TTL,xy,n);\n\t\t\tif(ans == 0){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t//\u4e2d\u8eab\n\t\tfor(int i = 1;i <= n;i++){\n\t\t\tfor(int j = 1;j <= n;j++){\n\t\t\t\tSystem.out.print(xy[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t*/\n     }\n    public static void main(String[] args) {\n    \t// TODO Auto-generated method stub\n    \tnew Main().doIt();\n    }\n}", "label": 0}, {"id": 710, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String args[]){\n        Scanner stdIn = new Scanner(System.in);\n        int n = stdIn.nextInt();\n        int c[] = new int[26];\n        int s[][] = new int[n][26];\n        \n        for(int i = 0; i < 26; i++){\n            c[i] = stdIn.nextInt();\n        }\n        \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < 26; j++){\n                s[i][j] = stdIn.nextInt();\n            }\n        }\n        \n        /* \n        for(int i = 0; i < n; i++){\n            int max = 0;\n            int index = 0;\n            for(int j = 0; j < 26; j++){\n                if(s[i][j] > max){\n                    max = s[i][j];\n                    index = j;\n                }\n            }\n            System.out.println(index + 1);\n        }\n        */\n        \n        for(int i = 1; i < n + 1; i++){\n            System.out.println(i % 26 + 1);\n        }\n        \n        //System.out.println(\"XXXXXXXX\");\n    }\n}\n", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class Main{\n    public static void main (String[] args) throws java.lang.Exception {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                long cur = i * m + j * n - 2 * (i * j);\n                if (cur == k) {\n                    w.println(\"Yes\");\n                    w.close();\n                    return;\n                }\n            }\n        }\n        w.println(\"No\");\n        w.close();\n    }\n\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n\n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String nextString() {\n            return next();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}", "label": 0}, {"id": 380, "code1": "/**\n * Created at 16:38 on 2019-08-27\n */\n\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n  static FastScanner sc = new FastScanner();\n  static Output out = new Output(System.out);\n\n  static final int[] dx = {0, 1, 0, -1};\n  static final int[] dy = {-1, 0, 1, 0};\n\n  static final long MOD = (long) (1e9 + 7);\n  static final long INF = Long.MAX_VALUE / 2;\n\n  public static class Solver {\n    public Solver() {\n\n      int Q = sc.nextInt();\n\n      for (int q=0; q<Q; q++) {\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long P = A * B;\n\n        long sqrt = sqrt(P-1);\n\n        long ans = 2*sqrt;\n\n        if (Math.min(A, B) <= sqrt) ans--; //\u9ad8\u6a4b\u541b\u3068\u540c\u3058\u9806\u4f4d\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f\n        if (sqrt * (sqrt+1) > P-1) ans--; //\u30c0\u30d6\u30eb\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u9664\u304f(x == y \u306e\u3068\u304d)\n\n        out.println(ans);\n      }\n\n\n    }\n\n    long sqrt(long n) {\n      long res = (long)Math.floor(Math.sqrt(n));\n      while (res * res > n) res--;\n      while ((res+1) * (res+1) <= n) res++;\n      return res;\n    }\n\n  }\n\n  public static void main(String[] args) {\n    new Solver();\n    out.flush();\n  }\n\n  static class FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n      if (ptr < buflen) {\n        return true;\n      } else {\n        ptr = 0;\n        try {\n          buflen = in.read(buffer);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        if (buflen <= 0) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private int readByte() {\n      if (hasNextByte()) return buffer[ptr++];\n      else return -1;\n    }\n\n    private static boolean isPrintableChar(int c) {\n      return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n      while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n    }\n\n    public boolean hasNext() {\n      skipUnprintable();\n      return hasNextByte();\n    }\n\n    public String next() {\n      if (!hasNext()) throw new NoSuchElementException();\n      StringBuilder sb = new StringBuilder();\n      int b = readByte();\n      while (isPrintableChar(b)) {\n        sb.appendCodePoint(b);\n        b = readByte();\n      }\n      return sb.toString();\n    }\n\n    public long nextLong() {\n      if (!hasNext()) throw new NoSuchElementException();\n      long n = 0;\n      boolean minus = false;\n      int b = readByte();\n      if (b == '-') {\n        minus = true;\n        b = readByte();\n      }\n      if (b < '0' || '9' < b) {\n        throw new NumberFormatException();\n      }\n      while (true) {\n        if ('0' <= b && b <= '9') {\n          n *= 10;\n          n += b - '0';\n        } else if (b == -1 || !isPrintableChar(b)) {\n          return minus ? -n : n;\n        } else {\n          throw new NumberFormatException();\n        }\n        b = readByte();\n      }\n    }\n\n    public int nextInt() {\n      return (int) nextLong();\n    }\n\n    public int[] nextIntArray(int N, boolean oneBased) {\n      if (oneBased) {\n        int[] array = new int[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      } else {\n        int[] array = new int[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextInt();\n        }\n        return array;\n      }\n    }\n\n    public long[] nextLongArray(int N, boolean oneBased) {\n      if (oneBased) {\n        long[] array = new long[N + 1];\n        for (int i = 1; i <= N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      } else {\n        long[] array = new long[N];\n        for (int i = 0; i < N; i++) {\n          array[i] = sc.nextLong();\n        }\n        return array;\n      }\n    }\n  }\n\n  static class Output extends PrintWriter {\n\n    public Output(PrintStream ps) {\n      super(ps);\n    }\n\n    public void print(int[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(long[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(String[] a, String separator) {\n      for (int i = 0; i < a.length; i++) {\n        if (i == 0) print(a[i]);\n        else print(separator + a[i]);\n      }\n      println();\n    }\n\n    public void print(ArrayList a, String separator) {\n      for (int i = 0; i < a.size(); i++) {\n        if (i == 0) print(a.get(i));\n        else print(separator + a.get(i));\n      }\n      println();\n    }\n  }\n\n}\n", "code2": "\nimport java.util.Scanner;\n\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int W = sc.nextInt();\n\t\t\tfinal int H = sc.nextInt();\n\t\t\t\n\t\t\tif(W == 0  && H == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint[][] map = new int[H][W];\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tchar[] input = sc.next().toCharArray();\n\t\t\t\t\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif('0' <= input[j] && input[j] <= '9'){\n\t\t\t\t\t\tmap[i][j] = input[j] - '0';\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmap[i][j] = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint[][] len = new int[H][W];\n\t\t\tshort[][][] dp = new short[H][W][H+W+1];\n\t\t\t\n\t\t\tint max = 0;\n\t\t\tint m_x = -1;\n\t\t\tint m_y = -1;\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif(map[i][j] < 0){\n\t\t\t\t\t\tdp[i][j][0] = -1;\n\t\t\t\t\t\tlen[i][j] = -1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i == 0 && j == 0){\n\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t}else if(j == 0){\n\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len +  (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(i == 0){\n\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinal int left_len = len[i][j-1];\n\t\t\t\t\t\tfinal int up_len = len[i-1][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(left_len == -1 && up_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else if(left_len > up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else if(left_len < up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinal int size = len[i][j-1];\n\t\t\t\t\t\t\tboolean left_f = true;\n\t\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\t\tif(dp[i-1][j][k] < dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(dp[i-1][j][k] > dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(left_f){\n\t\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(max < len[i][j]){\n\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t}else if(max == len[i][j]){\n\t\t\t\t\t\tfinal int size = len[i][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\tif(dp[m_y][m_x][k] < dp[i][j][k]){\n\t\t\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}else if(dp[m_y][m_x][k] > dp[i][j][k]){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t/*\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tSystem.out.printf(\"%2d \", len[i][j]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\t*/\n\t\t\tfor(int i = 0; i < max; i++){\n\t\t\t\tSystem.out.print(dp[m_y][m_x][i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n\n}", "label": 0}, {"id": 449, "code1": "\nimport java.util.*;\n\npublic class Main {\n    public static void main(final String[] args) {\n        final Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        // final int a = sc.nextInt();\n        // \u6587\u5b57\u5217\u306e\u5165\u529b\n        // final String s1 = sc.next();\n        final int a = sc.nextInt();\n        final int b = sc.nextInt();\n        final int c = sc.nextInt();\n        final int k = sc.nextInt();\n        sc.close();\n        int result = 0;\n        if (a >= k) {\n            result = k;\n        } else if (b >= k - a) {\n            result = a;\n        } else if (c >= k - b - a) {\n            result = 2 * a + b - k;\n        }\n\n        System.out.println(result);\n    }\n}\n", "code2": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "label": 0}, {"id": 314, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.*;\nclass Main {\n\tstatic int n;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) break;\n\t\t\tint maxDistance = 0;\n\t\t\tMap<Integer, Integer> map = new HashMap<Integer, Integer>(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\tint d = sc.nextInt() + sc.nextInt();\n\t\t\t\tmap.put(d, p);\n\t\t\t\tmaxDistance = Math.max(d, maxDistance);\n\t\t\t}\n\t\t\tSystem.out.printf(\"%d %d\\n\", map.get(maxDistance), maxDistance);\n\t\t}\n\t}\n}", "label": 0}, {"id": 257, "code1": "import java.util.*;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        System.out.println((a+b+1)/2);\n    }   \n}\n", "code2": "import java.util.*;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc=new Scanner(System.in);\n    System.out.println((sc.nextInt()+sc.nextInt()+1)/2);\n  }\n}", "label": 1}, {"id": 506, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass Solver extends Main{\n\tSolver(){\n\t\t\n\t}\n}//Solver_end\n\n@SuppressWarnings(\"unchecked\")\nclass Main{\n\tstatic int imax=Integer.MAX_VALUE;\n\tstatic long lmax=Long.MAX_VALUE;\n\t\n\tpublic static void main(String[] args) throws FileNotFoundException{\n\t\t\n\t\t\n\t\tScanner sc=new Scanner(System.in);\n\t\t//Scanner sc=new Scanner(fp);\n\t\t\n\t\tint[] data=readlnI(sc,\" \");\n\t\tint n=data[0];\n\t\tint m=data[1];\n\t\tint[] path=new int[200000];\n\t\t\n\t\tfor(int i=0;i<m; i++){\n\t\t\tint[] line=readlnI(sc,\" \");\n\t\t\tif(line[0]==1){\n\t\t\t\tpath[line[1]-1]+=1;\n\t\t\t}else if(line[1]==n){\n\t\t\t\tpath[line[0]-1]+=1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tboolean fnd=false;\n\t\t\n\t\tfor(int x:path){\n\t\t\tif(x==2)fnd=true;\n\t\t}\n\t\t\n\t\tputs(fnd==true ? \"POSSIBLE\" : \"IMPOSSIBLE\");\n\t\t\n\t}//main_end\n\t\n//---------------------------------------------------------------------------\n\tstatic int readI(Scanner sc){\n\t\treturn Integer.parseInt(sc.nextLine().trim());\n\t}\n\tstatic long readL(Scanner sc){\n\t\treturn Long.parseLong(sc.nextLine().trim());\n\t}\n\tstatic String readS(Scanner sc){\n\t\treturn sc.nextLine().trim();\n\t}\n\tstatic int[] readlnI(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToInt(Integer::parseInt).toArray();\n\t}\n\tstatic long[] readlnL(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToLong(Long::parseLong).toArray();\n\t}\n\tstatic String[] readlnS(Scanner sc, String dl){\n\t\treturn sc.nextLine().trim().split(dl);\n\t}\n\t@SuppressWarnings(\"unchecked\")\n\tstatic <T> void puts(T... args){\n\t\tfor(int i=0; i<args.length-1; i++){\n\t\t\tSystem.out.printf(\"%s \",args[i]);\n\t\t}\n\t\tSystem.out.println(args[args.length-1]);\n\t}\n\tstatic void puts(int[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void puts(long[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void bs(){\n\t\tSystem.out.println(\"\");\n\t}\n\tstatic int sum(int[] ary){\n\t\tint sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic long sum(long[] ary){\n\t\tlong sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic void tblSort(int[][] tbl){\n\t\tArrays.sort(tbl, new Comparator<int[]>(){\n\t\t\t@Override\n\t\t\tpublic int compare(int[] a, int[] b){\n\t\t\t\tif(a[0]==b[0]){\n\t\t\t\t\treturn b[1]-a[1];\n\t\t\t\t}else{\n\t\t\t\t\treturn b[0]-a[0];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "code2": "import java.util.ArrayList;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\n/**\n * Created by shoya on 2017/04/12.\n */\npublic class Main {\n    public static void main(String... args) {\n        Scanner sc = new Scanner(System.in);\n        int V = sc.nextInt();\n        int E = sc.nextInt();\n        int r = sc.nextInt();\n        DijkstraClass dijkstra = new DijkstraClass(V, E, r);\n        for (int i = 0; i < E; i++) {\n            int s = sc.nextInt();\n            int d = sc.nextInt();\n            int c = sc.nextInt();\n            dijkstra.addDistande(s, d, c);\n        }\n        int[] dist = dijkstra.dikstra();\n        for (int i = 0; i < dist.length; i++){\n            if (dist[i] == 1 << 30)\n                System.out.println(\"INF\");\n            else\n                System.out.println(dist[i]);\n        }\n        return;\n    }\n\n\n    private static class DijkstraClass {\n        class edge{\n            int dest, cost;\n            edge(int dest, int cost){\n                this.dest = dest;\n                this.cost = cost;\n            }\n        }\n\n        private final int INF = 1 << 30;\n        private int S;\n        private int V;\n        private ArrayList<ArrayList<edge>> edgesOfNodes = new ArrayList<ArrayList<edge>>();\n\n        DijkstraClass(int V, int E, int Start){\n            this.S = Start;\n            this.V = V;\n            for (int i = 0; i < V; i++)\n                edgesOfNodes.add(new ArrayList<edge>());\n        }\n\n        void addDistande(int source, int dest, int cost){\n            edgesOfNodes.get(source).add(new edge(dest, cost));\n        }\n\n\n        int[] dikstra(){\n            class costAndNode implements Comparable {\n                int cost, node;\n                costAndNode(int cost, int node){\n                    this.cost = cost;\n                    this.node = node;\n                }\n                @Override\n                public int compareTo(Object o) {\n                    return this.cost - ((costAndNode) o).cost;\n                }\n            }\n\n            PriorityQueue<costAndNode> pque = new PriorityQueue<costAndNode>();\n            int[] distances = new int[V];\n            for (int i = 0; i < V; i++)\n                distances[i] = INF;\n            distances[S] = 0;\n\n            pque.add(new costAndNode(0, S));\n            while (!pque.isEmpty()){\n                costAndNode item = pque.poll();\n                if (distances[item.node] < item.cost)\n                    continue;\n\n                //System.out.printf(\"Focusing on Node %d\\n\", item.node);\n                //for (int i = 0; i < V; i++)\n                //    System.out.printf(\"%d \", distances[i]);\n                //System.out.println();\n\n                for (edge e : edgesOfNodes.get(item.node)) {\n                    //System.out.printf(\"Node %d -> %d, Cost %d -> %d\\n\",\n                    //        item.node, e.dest, distances[e.dest],\n                    //        distances[item.node] + e.cost);\n                    if (distances[e.dest] > distances[item.node] + e.cost) {\n                        distances[e.dest] = distances[item.node] + e.cost;\n                        pque.add(new costAndNode(distances[e.dest], e.dest));\n                    }\n                }\n            }\n\n            return distances;\n        }\n\n    }\n}", "label": 0}, {"id": 577, "code1": "import java.util.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\t// \u5165\u529b\n\t\tint n = sc.nextInt();\n\t\tGraph g = new Graph(n, false);\n\t\tfor(int i = 0; i < n-1; i++){\n\t\t    int a = sc.nextInt() - 1;\n\t\t    int b = sc.nextInt() - 1;\n\t\t    g.add(a, b);\n\t\t}\n\t\t\n\t\t// \u8a08\u7b97\n\t\tString result = \"Snuke\";\n\t\tlong[] distFromB = g.dijkstra(0);\n\t\tlong[] distFromW = g.dijkstra(n-1);\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < n; i++){\n\t\t    if(distFromB[i] <= distFromW[i]) cnt++;\n\t\t}\n\t\tif(cnt > (n-cnt)) result = \"Fennec\";\n\t\t\n\t\t// \u51fa\u529b\n\t\tSystem.out.println(result);\n\t}\n\n}\n\nclass Graph {\n\tint n;\n\tboolean directed;\n\tArrayList<Edge>[] adjList;\n\tint m;\n\tlong[] dist;\n\tlong[][] distWF;\n\tint start;\n\tint[] prev;\n\tArrayList<Integer> path;\n\tlong INF = 1001001001001001001L;\n\n\tpublic Graph (int n, boolean directed) {\n\t\tthis.n = n;\n\t\tthis.m = 0;\n\t\tthis.directed = directed;\n\t\tthis.adjList = new ArrayList[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tadjList[i] = new ArrayList<Edge>();\n\t\t}\n\t}\n\t\n\tpublic void add(int from, int to) {\n\t\tadd(from, to, 1);\n\t}\n\tpublic void add(int from, int to, int w) {\n\t\tadjList[from].add(new Edge(from, to, w));\n\t\tthis.m++;\n\t\tif(!directed){\n\t\t\tadjList[to].add(new Edge(to, from, w));\n\t\t\tthis.m++;\n\t\t}\n\t}\n\t\n\tpublic long[] bfs(int start) { // O(M)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tArrayDeque<Integer> q = new ArrayDeque<Integer>();\n\t\tq.add(start);\n\t\twhile(!q.isEmpty()){\n\t\t\tint now = q.poll();\n\t\t\tfor(Edge e : adjList[now]){\n\t\t\t\tif(dist[e.to] != INF) continue;\n\t\t\t\tdist[e.to] = dist[now] + e.w;\n\t\t\t\tprev[e.to] = now;\n\t\t\t\tq.add(e.to);\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[] dijkstra(int start) { // O(MlogM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tPriorityQueue<Vertex> q = new PriorityQueue<Vertex>((x, y) -> Long.compare(x.distance, y.distance));\n\t\tq.add(new Vertex(start, 0));\n\t\twhile(!q.isEmpty()){\n\t\t\tVertex now = q.poll();\n\t\t\tif(now.distance > dist[now.id]) continue; \n\t\t\tfor(Edge e : adjList[now.id]){\n\t\t\t\tlong newDist = now.distance + e.w;\n\t\t\t\tif(dist[e.to] <= newDist) continue;\n\t\t\t\tdist[e.to] = newDist;\n\t\t\t\tprev[e.to] = now.id;\n\t\t\t\tq.add(new Vertex(e.to, newDist));\n\t\t\t}\n\t\t}\n\t\treturn dist;\n\t}\n\t\n\tpublic long[][] wf() { // O(N^3)\n\t\tthis.distWF = new long[n][n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tArrays.fill(distWF[i], INF);\n\t\t\tdistWF[i][i] = 0;\n\t\t}\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tdistWF[e.from][e.to] = e.w;\n\t\t\t}\n\t\t}\n\t\tfor(int k = 0; k < n; k++){\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\t\tdistWF[i][j] = min(distWF[i][j], distWF[i][k] + distWF[k][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn distWF;\n\t}\n\t\n\tpublic boolean bf(int start) { // O(NM)\n\t\tthis.start = start;\n\t\tthis.prev = new int[n];\n\t\tArrays.fill(prev, -1);\n\t\tprev[start] = start;\n\t\tthis.dist = new long[n];\n\t\tArrays.fill(dist, INF);\n\t\tdist[start] = 0;\n\t\tboolean hasNegativeLoop = false;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tfor(Edge e : adjList[j]){\n\t\t\t\t\tif(dist[e.to] <= dist[e.from] + e.w) continue;\n\t\t\t\t\tdist[e.to] = dist[e.from] + e.w;\n\t\t\t\t\tprev[e.to] = e.from;\n\t\t\t\t\tif(i == n-1) hasNegativeLoop = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn hasNegativeLoop;\n\t}\n\t\n\tpublic ArrayList<Integer> pathTo(int to){\n\t\tthis.path = new ArrayList<Integer>();\n\t\treturn pathToRec(to);\n\t}\n\t\n\tprivate ArrayList<Integer> pathToRec(int to){\n\t\tif(to != start) pathToRec(prev[to]);\n\t\tpath.add(to);\n\t\treturn path;\n\t}\n\t\n\tpublic String toString(){\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(ArrayList<Edge> list : adjList){\n\t\t\tfor(Edge e : list){\n\t\t\t\tsb.append(e.toString());\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tpublic String distToString(){\n\t\tif(dist != null) return Arrays.toString(dist);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tif(distWF[i][j] == INF){\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:INF\" + \"\\n\");\n\t\t\t\t}else{\n\t\t\t\t\tsb.append(\"from:\" + i + \" to:\" + j + \" dist:\" + distWF[i][j] + \"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tclass Edge {\n\t\tint from;\n\t\tint to;\n\t\tint w;\n\t\t\n\t\tEdge(int from, int to, int w){\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.w = w;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"from:\" + from + \" to:\" + to + \" w:\" + w;\n\t\t}\n\t}\n\t\n\tclass Vertex {\n\t\tint id;\n\t\tlong distance;\n\t\t\n\t\tVertex(int id, long distance){\n\t\t\tthis.id = id;\n\t\t\tthis.distance = distance;\n\t\t}\n\t\t\n\t\tpublic String toString(){\n\t\t\treturn \"id:\" + id + \" distance:\" + distance;\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int[] a = new int[N];\n        int[] b = new int[N];\n        for(int i = 0; i < N; i++)\n            a[i] = sc.nextInt();\n        for(int i = 0; i < N; i++)\n            b[i] = sc.nextInt();\n        sc.close();\n        long sum1 = 0;\n        long sum2 = 0;\n        for(int i = 0; i < N; i++){\n            if(a[i] > b[i]){\n                sum1 += (a[i]-b[i]);\n            } else {\n                sum2 += (b[i]-a[i])/2;\n            }\n        }\n        if(sum1 <= sum2)\n            System.out.println(\"Yes\");\n        else\n            System.out.println(\"No\");\n\n    }\n}", "label": 0}, {"id": 384, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long nextLong() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b)){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int nextInt() {\n        long nl = nextLong();\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n        return (int) nl;\n    }\n    public double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner stdIn=new FastScanner();\n\tpublic static void main(String[] args) {\n\t\tString X=stdIn.next();\n\t\tint N=X.length();\n\t\tint s=0,t=0,ans=N;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tchar a=X.charAt(i);\n\t\t\tif(a=='S')\n\t\t\t\ts++;\n\t\t\telse{\n\t\t\t\tif(s!=0){\n\t\t\t\t\tans-=2;\n\t\t\t\t\ts--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] field;\n\tstatic String[][] dp;\n\tstatic int h,w;\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tw = cin.nextInt();\n\t\t\th = cin.nextInt();\n\t\t\tif(w+h==0)break;\n\t\t\tfield=new int[h][w];\n\t\t\tdp=new String[h][w];\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tString s = cin.next();\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tdp[i][j]=\"\";\n\t\t\t\t\tif(Character.isDigit(s.charAt(j))){\n\t\t\t\t\t\tfield[i][j]=s.charAt(j)-'0';\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tfield[i][j]=-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<w;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[0][i]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[0][i]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[0][i-1].equals(\"0\")&&!dp[0][i-1].equals(\"\")){\n\t\t\t\t\t\t\tdp[0][i]=dp[0][i-1]+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[i][0]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[i][0]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[i-1][0].equals(\"0\")&&!dp[i-1][0].equals(\"\")){\n\t\t\t\t\t\t\tdp[i][0]=dp[i-1][0]+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tString ans=\"0\";\n\t\t\tfor(int i = 1;i<h;i++){\n\t\t\t\tfor(int j = 1;j<w;j++){\n\t\t\t\t\tif(field[i][j]==-1)continue;\n\t\t\t\t\tString s1=dp[i-1][j]+field[i][j];\n\t\t\t\t\tString s2=dp[i][j-1]+field[i][j];\n\t\t\t\t\tString s3=field[i][j]+\"\";\n\t\t\t\t\tif(big(s1,s2)>=0){\n\t\t\t\t\t\tif(big(s1,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(big(s2,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twhile(dp[i][j].charAt(0)=='0'&&dp[i][j].length()>1){\n\t\t\t\t\t\tdp[i][j]=dp[i][j].substring(1,dp[i][j].length());\n\t\t\t\t\t}\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//output();\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\tstatic int big(String s1,String s2){\n\t\tif(s1.length()==s2.length()){\n\t\t\treturn s1.compareTo(s2);\n\t\t}\n\t\treturn s1.length()-s2.length();\n\t}\n\tstatic void output(){\n\t\tfor(int i = 0;i<h;i++){\n\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\tSystem.out.print(dp[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println();\n\t}\n}", "label": 0}, {"id": 118, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\t\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true){\n\t\t\tint n = sc.nextInt();\n\t\t\tint x = sc.nextInt();\n\t\t\tif (n == 0 && x == 0) break;\n\t\t\tint ways = 0;\n\t\t\tfor (int i = 1; i <= n; i++){\n\t\t\t\tfor (int j = i + 1; j <= n; j++){\n\t\t\t\t\tfor (int k = j + 1; k <= n; k++){\n\t\t\t\t\t\t//System.out.printf(\"%d+%d+%d=%d\\n\", i, j, k, (i+j)+k);\n\t\t\t\t\t\tif ((i + j) + k == x) ways++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ways);\n\t\t}\n\t}\n}", "label": 1}, {"id": 493, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tprivate void solve() {\n\t\tScanner io = new Scanner(System.in);\n\t\tint N = io.nextInt();\n\t\tint M = io.nextInt();\n\t\tboolean[] medium = new boolean[N];\n\t\tboolean[] ableToN = new boolean[N];\n\t\tfor(int i=0;i<M;i++){\n\t\t\tint a = io.nextInt()-1;\n\t\t\tint b = io.nextInt()-1;\n\t\t\tif(a==0) medium[b] = true;\n\t\t\tif(b==0) medium[a] = true;\n\t\t\tif(a==N-1) ableToN[b] = true;\n\t\t\tif(b==N-1) ableToN[a] = true;\n\t\t}\n\t\tfor(int i=0;i<N;i++){\n\t\t\tif(medium[i] && ableToN[i]){\n\t\t\t\tSystem.out.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}", "label": 0}, {"id": 772, "code1": "\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()) {\n\t\t\tP[] ps = new P[4];\n\t\t\tString[] vs = sc.next().split(\",\");\n\t\t\tfor(int i=0;i<4;i++) ps[i] = new P( Double.parseDouble(vs[2*i]), Double.parseDouble(vs[2*i+1]) );\n\t\t\t\n\t\t\tSystem.out.println( ( cross(ps[0], ps[2], ps[1], ps[3])? \"YES\": \"NO\" ) );\n\t\t}\n\t}\n\t\n\tboolean cross(P p1, P p2, P q1, P q2) {\n\t\treturn p1.sub(p2).det(q1.sub(p2)) * p1.sub(p2).det(q2.sub(p2)) < 0.0 &&\n\t\t\t   q1.sub(q2).det(p1.sub(q2)) * q1.sub(q2).det(p2.sub(q2)) < 0.0;\n\t}\n\t\n\tclass P {\n\t\tdouble x, y;\n\t\tP(double x, double y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t\n\t\tP sub(P p) {\n\t\t\treturn new P(x-p.x, y-p.y);\n\t\t}\n\t\t\n\t\tdouble det(P p) {\n\t\t\treturn x*p.y - p.x*y;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint w, h;\n\t\twhile ((w = in.nextInt()) != 0 && (h = in.nextInt()) != 0) {\n\t\t\tint xs = in.nextInt();\n\t\t\tint ys = in.nextInt();\n\t\t\tint xg = in.nextInt();\n\t\t\tint yg = in.nextInt();\n\t\t\tchar[][] b = new char[200][200];\n\t\t\tint n = in.nextInt();\n\t\t\twhile (n-- > 0) {\n\t\t\t\tsetBlock(b, in.next().charAt(0), in.nextInt(), in.nextInt(),\n\t\t\t\t\t\tin.nextInt());\n\t\t\t}\n\t\t\tString ans;\n\t\t\tif (b[xs][ys] == b[xg][yg] && b[xs][ys] != '0') {\n\t\t\t\tsolid(b, b[xs][ys], xs, ys, xg, yg);\n\t\t\t\tans = b[xs][ys] == b[xg][yg] ? \"OK\" : \"NG\";\n\t\t\t} else {\n\t\t\t\tans = \"NG\";\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\n\tpublic static void setBlock(char[][] b, char c, int d, int x, int y) {\n\t\tb[x][y] = b[x + 1][y] = b[x][y + 1] = b[x + 1][y + 1] = c;\n\t\tif (d == -1) {\n\t\t\treturn;\n\t\t} else if (d == 0) {\n\t\t\tsetBlock(b, c, -1, x + 2, y);\n\t\t} else if (d == 1) {\n\t\t\tsetBlock(b, c, -1, x, y + 2);\n\t\t}\n\t}\n\n\tpublic static void solid(char[][] b, char c, int x, int y, int xg, int yg) {\n\t\tif (b[x][y] == c) {\n\t\t\tb[x][y] = '*';\n\t\t\tif (x == xg && y == yg) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsolid(b, c, x + 1, y, xg, yg);\n\t\t\tsolid(b, c, x - 1, y, xg, yg);\n\t\t\tsolid(b, c, x, y + 1, xg, yg);\n\t\t\tsolid(b, c, x, y - 1, xg, yg);\n\t\t}\n\t}\n}", "label": 0}, {"id": 10, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    String[] s = sc.next().split(\"\");\n    int l =  s.length;\n    int count =0;\n    for(int i=0; i<l; i++){\n      if(s[i].equals(\"U\")||s[i].equals(\"D\")){\n        count +=1;\n        continue;\n      }\n\n\n      if(i%2==0){\n        if(s[i].equals(\"R\")){\n          count += 1;\n        }\n      }else{\n        if(s[i].equals(\"L\")){\n          count += 1;\n        }\n      }\n    }\n    if(count == l){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n\n\n\n\n  }\n}", "code2": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "label": 1}, {"id": 459, "code1": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "code2": "import java.util.*;\npublic class Main {\n        static Scanner sc = new Scanner(System.in);\n        static void myout(Object t){System.out.println(t);}//standard output\n        static void myerr(Object t){System.err.println(t);}//standard error\n        static String getStr(){return sc.next();}\n        static int getInt(){return Integer.parseInt(getStr());}\n        static long getLong(){return Long.parseLong(getStr());}\n        static boolean isNext(){return sc.hasNext();}\n        static String[] mySplit(String str){return str.split(\"\");}\n        public static void main(String[] args){\n          int N = getInt();\n          int M = getInt();\n          if(N >= M){\n            myout(0);\n            return;\n          }\n          long output = 0;\n          ArrayList<Integer> list = new ArrayList<Integer>(M);\n          for(int i = 0; i < M; i++){\n            list.add(getInt());\n          }\n          Collections.sort(list);\n          //myout(list);\n          PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n          for(int i = 1; i < M; i++){\n            pq.add(Math.abs(list.get(i)-list.get(i-1)));\n          }\n          for(int i = 0; i < N-1; i++){\n            pq.poll();\n          }\n          while(pq.size() != 0){\n            output += pq.poll();\n          }\n          myout(output);\n        }\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u304b\u3089\n\n        //\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\u67a0\u3053\u3053\u307e\u3067\n}\n", "label": 0}, {"id": 40, "code1": "import java.util.*;\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int x = 0, y = 0; \n\tstatic String second;\n\tstatic int second_ = 0;\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO \u30c4\u7be0\u30a5\u30c4\u7763\u30e7\u30c4\u9752\u30ab\u30c4\u9752\u30e3\u30c4\u3064\u30a6\u30c4\u3065\u30a7\u30c4\u3064\u30b9\u30c4\u03b4\u30bd\u30c4\u30c3\u30c4\u30c9\u30c4\u30fb\u30c4\u30b9\u30c4\u30bf\u30c4\u30d6\n\t\tread();\t\n\t\tslove();\n\t\t\n\t}\n\tstatic boolean read(){\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\tsecond = sc.next();\n\t\t\tsecond_ = second_ + Integer.parseInt(second);\n\t\t}\n\t\t//System.out.println(second_);\n\t\treturn true;\n\t}\n\tstatic void slove(){\n\t\tx = second_/60;\n\t\ty = second_ % 60;\n\t\tSystem.out.println(x);\n\t\tSystem.out.println(y);\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "label": 1}, {"id": 640, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "label": 0}, {"id": 651, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        try (Scanner s = new Scanner(System.in)) {\n            int k = s.nextInt();\n            int a = s.nextInt();\n            int b = s.nextInt();\n            int mod = a % k;\n            int d = b - a;\n            System.out.println((mod == 0 || (k - mod) <= d) ? \"OK\" : \"NG\");\n        }\n    }\n}\n", "code2": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 224, "code1": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args ) throws Exception {\n    Scanner sc = new Scanner(System.in);\n    String A = sc.next();\n    int count=0;\n    char[] B = A.toCharArray();\n    for(int i=0;i<A.length();i++){\n      if(B[i]=='2'){\n      \tcount++;\n      }\n    }\n    System.out.println(count);\n  }\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t  public static void main(String[] args) {\n\t    Scanner sc = new Scanner(System.in);\n\t    String n = sc.next();\n\t    int count = 0;\n\t    for(int i = 0; i < n.length(); i++) {\n\t    \tif(\"2\".equals(n.substring(i, i+1))) {\n\t    \t\tcount++;\n\t    \t}\n\t    }\n\t    System.out.println(count);\n\t}\n}\n", "label": 1}, {"id": 24, "code1": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.System.in;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n        long[] x = new long[n];\n        for(int i=0;i<n;i++) x[i]=sc.nextLong();\n        long ans= 0;\n        for(int i=0;i<n-1;i++){\n            ans += Math.min(A*(x[i+1]-x[i]),B);\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        out.println(ans);\n        out.flush();\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "label": 1}, {"id": 85, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "code2": "import java.util.Scanner;\n\nclass Main {\n  public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    int a,b,c;\n    a = scanner.nextInt();\n    b = scanner.nextInt();\n    c = scanner.nextInt();\n \n    if ((a < c) && (b > c)||(a > c) && (b < c)) {   //(1)\n      System.out.println(\"Yes\");\n      \n    }\n    else\n      System.out.println(\"No\");\n  }\n}\n", "label": 1}, {"id": 253, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "code2": "import java.util.*;\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int t = sc.nextInt();\n    int a = sc.nextInt();\n    int[] h = new int[n];\n    double[] res = new double[n];\n    double min;\n    int ans;\n    h[0] = sc.nextInt();\n    res[0] = t - h[0]*0.006;\n    min = Math.abs(a-res[0]);\n    ans = 0;\n    for(int i=1;i<n;i++){\n      h[i] = sc.nextInt();\n      res[i] = t - h[i]*0.006;\n      if(Math.abs(a-res[i])<min){\n        min = Math.abs(a-res[i]);\n        ans=i;\n      }\n    }\n    ans++;\n    System.out.println(ans);\n    \n  }\n}", "label": 1}, {"id": 616, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tRunner[] a = new Runner[18];\n\t\tint cnt=0;\n\t\tfor(int  j = 0;j<3;j++){\n\t\t\tRunner[] b = new Runner[8];\n\t\t\tfor(int i = 0;i<8;i++){\n\t\t\t\tint num = cin.nextInt();\n\t\t\t\tdouble time= cin.nextDouble();\n\t\t\t\tb[i]=new Runner(num,time);\n\t\t\t}\n\t\t\tArrays.sort(b);\n\t\t\tfor(int i = 0;i<6;i++){\n\t\t\t\ta[cnt++]=b[i+2];\n\t\t\t}\n\t\t\tSystem.out.println(b[0].num + \" \" + b[0].timestr);\n\t\t\tSystem.out.println(b[1].num + \" \" + b[1].timestr);\n\t\t}\n\t\tArrays.sort(a);\n\t\tSystem.out.println(a[0].num + \" \" + a[0].timestr);\n\t\tSystem.out.println(a[1].num + \" \" + a[1].timestr);\n\t}\n}\nclass Runner implements Comparable{\n\tint num;\n\tdouble time;\n\tString timestr;\n\tRunner(int a,double b){\n\t\tnum=a;\n\t\ttime=b;\n\t\ttimestr=String.valueOf(time);\n\t\tif(timestr.length()==4){\n\t\t\ttimestr = timestr+\"0\";\n\t\t}\n\t\t\n\t}\n\tpublic int compareTo(Object o) {\n\t\tRunner r = (Runner)o;\n\t\tif(this.time-r.time > 0)\n\t\t\treturn 1;\n\t\telse if(this.time-r.time == 0)\n\t\t\treturn 0;\n\t\telse{\n\t\t\treturn -1;\n\t\t}\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n\t\n\t// a < b\n\tpublic static int gcv(int a, int b){\n\t\tif(b % a == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tint mod = b % a;\n\t\t\n\t\treturn gcv(mod, a);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tLinkedList<Integer> monsters = new LinkedList<>();\n\t\t\n\t\t// input\n\t\tint num = scan.nextInt();\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tmonsters.add(scan.nextInt());\n\t\t}\n\t\t\n\t\t// check\n\t\tCollections.sort(monsters);\n\t\twhile(monsters.size() > 1){\n\t\t\tmonsters.push(gcv( monsters.pop(), monsters.pop()));\n\t\t}\n\t\t\n\t\t// answer\n\t\tSystem.out.println(monsters.pop());\n\t}\n}", "label": 0}, {"id": 538, "code1": "//\u0083\\\u0081[\u0083g\u0082\u00b7\u0082\u00e9\u0083v\u0083\u008d\u0083O\u0083\u0089\u0083\u0080\u0081i\u0082\u008e\u0082\u00cc\u0092l\u0082\u00cd1,000,000\u0088\u00c8\u0089\u00ba\u0081j\nimport java.util.*;\npublic class Main {\n\n\tpublic void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\t\tTreeMap<Integer,Integer> map = new TreeMap<Integer, Integer>();\n\n\t\tfor(int i=0; i < n; i++){\n\t\t\tint temp = sc.nextInt();\n\t\t\tif( set.contains(temp)){\n\t\t\t\tif(map.containsKey(temp)){\n\t\t\t\t\tmap.put(temp, map.get(temp) + 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmap.put(temp, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tset.add(temp);\n\t\t\t}\n\t\t}\n\t\tfor(int num: set){\n\t\t\tif(map.containsKey(num)){\n\t\t\t\tfor(int i=0; i < map.get(num);i++){\n\t\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num == set.last()){\n\t\t\t\tSystem.out.println(num);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(num + \" \");\n\t\t\t}\n\n\t\t}\n\n\t}\n\tpublic static void main(String[] args) {\n\t\tMain obj = new Main();\n\t\tobj.doIt();\n\n\t}\n\n}", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong m = Long.parseLong(sc.next());\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tm = lcm(m, Long.parseLong(sc.next()));\n\t\tSystem.out.println(m);\n\t}\n\tpublic static long lcm(long m, long n) {\n\t\tBigInteger M = new BigInteger(String.valueOf(m));\n\t\tBigInteger N = new BigInteger(String.valueOf(n));\n\t\tBigInteger G = new BigInteger(String.valueOf(gcd(m, n)));\n\t\treturn M.multiply(N).divide(G).longValue();\n\t}\n\tpublic static long gcd(long m, long n) {\n\t\tif (m < n) {\n\t\t\tlong tem = m;\n\t\t\tm = n;\n\t\t\tn = tem;\n\t\t}\n\t\tlong r = -1;\n\t\twhile (r != 0) {\n\t\t\tr = m % n;\n\t\t\tm = n;\n\t\t\tn = r;\n\t\t}\n\t\treturn m;\n\t}\n}", "label": 0}, {"id": 86, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tint A,B,C;\n\t\tScanner sc=new Scanner(System.in);\n\t\tA=sc.nextInt();\n\t\tB=sc.nextInt();\n\t\tC=sc.nextInt();\n\t\tif(C<=B&&C>=A) {\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else if(C>=B&&C<=A) {\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}\n", "label": 1}, {"id": 250, "code1": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        double num = 0.006;\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        sc.nextLine();\n        int T = sc.nextInt();\n        int A = sc.nextInt();\n        sc.nextLine();\n        int num2 = Integer.MAX_VALUE;\n        int tmp;\n        int ans = 0;\n        for(int i = 0; i < N; i++){\n            tmp = sc.nextInt();\n            tmp = T*1000 - tmp*6;\n            tmp = Math.abs(A*1000 - tmp);\n            if(tmp < num2){\n                num2 = tmp;\n                ans = i+1;\n            }\n        }\n        System.out.println(ans);\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "label": 1}, {"id": 288, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s= sc.next();\n\t\tfor (int i=0;i<s.length();i++) {\n\t\t\tif (s.charAt(i)=='R'||s.charAt(i)=='L') {\n\t\t\t\tif (i%2==0&&s.charAt(i)!='R')\t{\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t} else if (i%2==1&&s.charAt(i)!='L'){\n\t\t\t\t\tSystem.out.println(\"No\");\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\treturn ;\n\t\t}\n\t}\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong a = in.nextLong(), b = in.nextLong();\n\t\t\tlong[] x = in.nextLongArray(n);\n\n\t\t\tlong ans = 0;\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tans += Math.min(a * (x[i+1] - x[i]), b);\n\t\t\t}\n\t\t\tout.println(ans);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tpublic char[][] next2DChars(int h, int w) {\n\t\t\tchar[][] s = new char[h][w];\n\t\t\tfor (int i = 0; i < h; i++) {\n\t\t\t\ts[i] = nextChars();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 669, "code1": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int h = scanner.nextInt();\n        int w = scanner.nextInt();\n        String[] letters = new String[h];\n\n        int[] occurrences = new int[26];\n        int numOfFours = 0;\n        int numOfTwos = 0;\n        int numOfOnes = 0;\n\n        for (int i = 0; i < letters.length; i++) {\n            letters[i] = scanner.next();\n            for (int j = 0; j < letters[i].length(); j++) {\n                occurrences[letters[i].charAt(j) - 'a']++;\n            }\n        }\n        boolean isPossible = true;\n\n        if (h % 2 == 0 && w % 2 == 0){\n            for (int occurrence : occurrences) {\n                if (occurrence % 4 != 0) {\n                    isPossible = false;\n                    break;\n                } else numOfFours += (occurrence / 4);\n            }\n\n            if (numOfFours != (h/2)*(w/2)) isPossible = false;\n        }\n        else if (h % 2 == 0 && w % 2 == 1){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (h/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2)) isPossible = false;\n        }\n        else if (h % 2 == 1 && w % 2 == 0){\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] % 2 != 0){\n                    isPossible = false;\n                    break;\n                }\n                if (occurrences[i] != 0 && occurrences[i] % 2 == 0){\n                    while (numOfTwos < (w/2) && occurrences[i] > 0){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (w/2)) isPossible = false;\n        }\n        else {\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfFours < (h/2)*(w/2) && occurrences[i] >= 4){\n                        numOfFours ++;\n                        occurrences[i] -= 4;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] != 0){\n                    while (numOfTwos < ((h/2) + (w/2)) && occurrences[i] >= 2){\n                        numOfTwos ++;\n                        occurrences[i] -= 2;\n                    }\n                }\n            }\n\n            for (int i = 0; i < occurrences.length; i++) {\n                if (occurrences[i] == 1) {\n                    numOfOnes++;\n                    occurrences[i] -= 1;\n                }\n            }\n\n            for (int occurrence : occurrences) {\n                if (occurrence != 0) {\n                    isPossible = false;\n                    break;\n                }\n            }\n\n            if (numOfFours != (h/2)*(w/2) || numOfTwos != (h/2) + (w/2) || numOfOnes != 1) isPossible = false;\n        }\n\n        System.out.println(isPossible?\"Yes\":\"No\");\n    }\n}\n", "label": 0}, {"id": 483, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "label": 0}, {"id": 626, "code1": "import java.io.*;\nimport java.util.*;\n\nclass Main{\n    public static void main(String args[])throws IOException{\n      try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){\n        //input\n        String[] input = br.readLine().split(\" \");\n        int N = Integer.parseInt(input[0]);\n        int M = Integer.parseInt(input[1]);\n\n        //for algorithm & input\n        boolean[] answer = new boolean[N+1];\n        int[] wrong = new int[N+1];\n      \n        Arrays.fill(answer, false);\n        Arrays.fill(wrong, 0);\n        int pena = 0;\n        int result = 0;\n\n        for(int i = 0; i < M; i++){\n          String[] in = br.readLine().split(\" \");\n          int num = Integer.parseInt(in[0]);\n         \n          if(answer[num] == false){\n            if(in[1].equals(\"AC\")){\n              answer[num] = true;\n              result++;\n              pena += wrong[num];\n            }else{\n              wrong[num] += 1;\n            }\n          }else{\n            continue;\n          }\n        }\n\n        System.out.println(result + \" \" + pena);\n\n      }\n    }\n}\n", "code2": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "label": 0}, {"id": 592, "code1": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int a[][] = new int[n][n];\n\n        for (int i = 0; i < m; i++) {\n            int t1 = in.nextInt() - 1;\n            int t2 = in.nextInt() - 1;\n            a[t1][t2] = 1;\n            a[t2][t1] = 1;\n        }\n        List<Integer> order = new ArrayList<>();\n        order.add(0);\n        List<Integer> remain = new ArrayList<>();\n        for (int i = 1; i < n; i++) {\n            remain.add(i);\n        }\n        System.out.println(f(order, remain, a));\n    }\n\n    static int f(List<Integer> order, List<Integer> remain, int edges[][]) {\n        if (remain.size() == 0) {\n            int cur = order.get(0);\n            int next;\n            for (int p = 1; p < order.size(); p++) {\n                next = order.get(p);\n                if (edges[cur][next] == 1 || edges[next][cur] == 1) {\n                    cur = next; \n                } else {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n\n        int total = 0;\n        for (int p = 0; p < remain.size(); p++) {\n            order.add(remain.get(p));\n            remain.remove(p);\n            total += f(order, remain, edges);\n            remain.add(p, order.get(order.size() - 1));\n            order.remove(order.size() - 1);\n        }\n        return total;\n    }\n}", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tchar[] s = ns(n);\n\t\tint[] pres = new int[n+1];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tpres[i+1] = pres[i] + (s[i] == 'W' ? 1 : 0);\n\t\t}\n\t\tint[] sufs = new int[n+1];\n\t\tfor(int i = n-1;i >= 0;i--){\n\t\t\tsufs[i] = sufs[i+1] + (s[i] == 'E' ? 1 : 0);\n\t\t}\n\t\tint min = 999999999;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tmin = Math.min(min, pres[i] + sufs[i+1]);\n\t\t}\n\t\tout.println(min);\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 131, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n\n        int remain = a - b;\n        int ans = c - remain > 0 ? c - remain : 0;\n        System.out.println(ans);\n    }\n\n}\n", "label": 1}, {"id": 106, "code1": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main{\n\n    public static void main(String[] args){\n\n\tScanner sc = new Scanner(System.in);\n\n\tint a = sc.nextInt();\n\tint b = sc.nextInt();\n\n\tif(a<=b) System.out.println(a);\n\n\tif(a>b) System.out.println(a-1);\n    }\n}\n", "label": 1}, {"id": 117, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tint count=0;\n\t\t\tint n=sc.nextInt();\n\t\t\tint x=sc.nextInt();\n\t\t\tif(n==0 && x==0) break;\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tfor(int k=j+1;k<=n;k++){\n\t\t\t\t\t\tif(i+j+k == x) count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    while (true) {\n      int n = sc.nextInt();\n      int x = sc.nextInt();\n      if (n == 0 && x == 0) {\n        break;\n      }\n      int counter = 0;\n      for (int k = 1; k < n-1; k++) {\n        for (int j = k+1; j < n; j++) {\n          for (int i = j+1; i < n+1; i++) {\n            if (i+j+k == x) {\n              counter++;\n            }\n          }\n        }\n      }\n      System.out.println(counter);\n    }\n  }\n}", "label": 1}, {"id": 383, "code1": "import java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tchar[] s = sc.next().toCharArray();\n\t\tStack<Character> st = new Stack<>();\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\tif (s[i] == 'T') {\n\t\t\t\tif (st.isEmpty()) cnt++;\n\t\t\t\telse st.pop();\n\t\t\t} else {\n\t\t\t\tst.push('S');\n\t\t\t}\n\t\t}\n\t\tcnt += st.size();\n\t\tSystem.out.println(cnt);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "code2": "\nimport java.util.Scanner;\n\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal int W = sc.nextInt();\n\t\t\tfinal int H = sc.nextInt();\n\t\t\t\n\t\t\tif(W == 0  && H == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tint[][] map = new int[H][W];\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tchar[] input = sc.next().toCharArray();\n\t\t\t\t\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif('0' <= input[j] && input[j] <= '9'){\n\t\t\t\t\t\tmap[i][j] = input[j] - '0';\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmap[i][j] = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint[][] len = new int[H][W];\n\t\t\tshort[][][] dp = new short[H][W][H+W+1];\n\t\t\t\n\t\t\tint max = 0;\n\t\t\tint m_x = -1;\n\t\t\tint m_y = -1;\n\t\t\t\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tif(map[i][j] < 0){\n\t\t\t\t\t\tdp[i][j][0] = -1;\n\t\t\t\t\t\tlen[i][j] = -1;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i == 0 && j == 0){\n\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t}else if(j == 0){\n\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len +  (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(i == 0){\n\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\tif(p_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinal int left_len = len[i][j-1];\n\t\t\t\t\t\tfinal int up_len = len[i-1][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(left_len == -1 && up_len == -1){\n\t\t\t\t\t\t\tdp[i][j][0] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = map[i][j] == 0 ? 0 : 1;\n\t\t\t\t\t\t}else if(left_len > up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else if(left_len < up_len){\n\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinal int size = len[i][j-1];\n\t\t\t\t\t\t\tboolean left_f = true;\n\t\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\t\tif(dp[i-1][j][k] < dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(dp[i-1][j][k] > dp[i][j-1][k]){\n\t\t\t\t\t\t\t\t\tleft_f = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(left_f){\n\t\t\t\t\t\t\t\tfinal int p_len = len[i][j-1];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i][j-1], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tfinal int p_len = len[i-1][j];\n\t\t\t\t\t\t\t\tSystem.arraycopy(dp[i-1][j], 0, dp[i][j], 0, p_len);\n\t\t\t\t\t\t\t\tdp[i][j][p_len] = (short)(map[i][j]);\n\t\t\t\t\t\t\t\tlen[i][j] = p_len + (p_len == 0 && map[i][j] == 0 ? 0 : 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(max < len[i][j]){\n\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t}else if(max == len[i][j]){\n\t\t\t\t\t\tfinal int size = len[i][j];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(int k = 0; k < size; k++){\n\t\t\t\t\t\t\tif(dp[m_y][m_x][k] < dp[i][j][k]){\n\t\t\t\t\t\t\t\tmax = len[i][j];\n\t\t\t\t\t\t\t\tm_x = j;\n\t\t\t\t\t\t\t\tm_y = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}else if(dp[m_y][m_x][k] > dp[i][j][k]){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t/*\n\t\t\tfor(int i = 0; i < H; i++){\n\t\t\t\tfor(int j = 0; j < W; j++){\n\t\t\t\t\tSystem.out.printf(\"%2d \", len[i][j]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\t*/\n\t\t\tfor(int i = 0; i < max; i++){\n\t\t\t\tSystem.out.print(dp[m_y][m_x][i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n\n}", "label": 0}, {"id": 107, "code1": "import java.util.*;\npublic class Main{\n    public static void main(String args[]) {\n        Scanner cin = new Scanner(System.in);\n        while(cin.hasNext()){\n        \tint n = cin.nextInt();\n        \tint[][] vote = readMatrix(cin,n,2);\n        \tSystem.out.println(getNum(vote,n));\n        }\n    }\n    public static long getNum(int[][] vote, int n){\n    \tlong[] result={vote[0][0],vote[0][1]};\n    \tlong result1;\n    \tfor(int i=1;i<n;i++){\n    \t\tresult1 = result[1];\n    \t\tif(result[0]>vote[i][0]){\n    \t\t\tif(result[0]%vote[i][0]!=0) result[0] += vote[i][0]-result[0]%vote[i][0];\n    \t\t}else{result[0]=vote[i][0];}\n    \t\tresult[1] = result[0]/vote[i][0]*vote[i][1];\n    \t\tif(result1>result[1]){\n    \t\t\tresult[1] = result1;\n    \t\t\tif(result[1]%vote[i][1]!=0) result[1] += vote[i][1]-result[1]%vote[i][1];\n    \t\t\t result[0] = result[1]/vote[i][1]*vote[i][0];\n    \t\t}\n    \t}\n    \treturn result[0]+result[1];\n    }\n    public static int[][] readMatrix(Scanner in,int n,int m){\n    \tint[][] mtx = new int[n][m];\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<m;j++){\n    \t\t\tmtx[i][j] = in.nextInt();\n    \t\t}\n    \t}\n    \treturn mtx;\n    }\n    \n}", "code2": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\nimport java.text.*;\n\n\npublic class Main {\n\t\n\tpublic static void main(String args[]) throws IOException{\n\n\t\tScanner sc=new Scanner(System.in);\n\t\t\n\t\tBigInteger TWO=new BigInteger(\"2\");\n\n\t\tint n=sc.nextInt();\n\t\tBigInteger x=new BigInteger(sc.next());\n\t\tBigInteger y=new BigInteger(sc.next());\t\t\n\n\t\tfor(int i=0;i<n-1;i++){\n\n\t\t\tBigInteger t=new BigInteger(sc.next());\n\t\t\tBigInteger a=new BigInteger(sc.next());\n\t\t\tBigInteger X=x,Y=y;\n\n\t\t\tBigInteger A=t.multiply(y);\n\t\t\tBigInteger B=a.multiply(x);\n\t\t\tBigInteger g=A.gcd(B);\n\t\t\tA=A.divide(g);\n\t\t\tB=B.divide(g);\n\n\t\t\tx=x.multiply(A);\n\t\t\ty=y.multiply(B);\n\t\t\tg=x.gcd(y);\n\t\t\tx=x.divide(g); y=y.divide(g);\n\n\t\t\tif(x.compareTo(X)<0 || y.compareTo(Y)<0){\n\t\t\t\tBigInteger l=BigInteger.ZERO;\n\t\t\t\tBigInteger r=X.divide(x).max(Y.divide(y)).add(BigInteger.TEN);\n\n\t\t\t\twhile(r.subtract(l).compareTo(BigInteger.ONE)>0){\n\t\t\t\t\tBigInteger mid=l.add(r).divide(TWO);\n\t\t\t\t\tif(x.multiply(mid).compareTo(X)>=0 && y.multiply(mid).compareTo(Y)>=0){\n\t\t\t\t\t\tr=mid;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tl=mid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tx=x.multiply(r);\n\t\t\t\ty=y.multiply(r);\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(x.add(y));\n\n\t}\n\t\n\t\n\t\n}", "label": 1}, {"id": 750, "code1": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "label": 0}, {"id": 739, "code1": "import java.util.Scanner;\n\nclass Main {\n    private static boolean[] calcPrimeTable(int n) {\n        boolean[] table = new boolean[n + 1];\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (!table[i]) {\n                for (int j = i + i; j <= n; j += i) {\n                    table[j] = true;\n                }\n            }\n        }\n        return table;\n    }\n\n    private static void solve() {\n        boolean[] table = calcPrimeTable(1000000);\n        Scanner scanner = new Scanner(System.in);\n        while (true) {\n            int n = scanner.nextInt();\n            int counter = 0;\n            if (n == 0) {\n                break;\n            }\n            for (int i = 2; i <= n / 2; i++) {\n                if (!table[i] && !table[n - i]) {\n                    counter++;\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n\n    public static void main(String... args) {\n        solve();\n    }\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] d = in.nextIntArray(n);\n            int ans = 0;\n            LOOP:\n            for (int i = 24; i >= 0; i--) {\n                boolean[] vis = new boolean[n];\n                int[] time = new int[n + 1];\n                for (int j = 0; j < n; j++) {\n                    int idx = -1, t = 1 << 29;\n                    for (int k = 0; k < n; k++) {\n                        for (int r = 0; r < 2; r++) {\n                            int cur = r == 0 ? d[k] : 24 - d[k];\n                            if (!vis[k] && cur >= time[j] + i && (idx == -1 || cur < t)) {\n                                idx = k;\n                                t = cur;\n                                break;\n                            }\n                        }\n                    }\n                    if (idx == -1) continue LOOP;\n                    vis[idx] = true;\n                    time[j + 1] = t;\n                }\n                if ((24 - time[n]) % 24 >= i) {\n                    ans = i;\n                    break;\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 182, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n\n        long ans = Long.MAX_VALUE;\n\n        for (int i = 0; i <= Math.max(x*2, y*2); i+=2) {\n          long tmp = c*i + a*(Math.max(0,x-i/2)) + b*(Math.max(0,y-i/2));\n          ans = Math.min(tmp, ans);   \n        }\n\n        System.out.println(ans);\n        sc.close();\n    }\n}", "code2": "import java.util.*;\npublic class Main {\n\n  public static void main(String[] args) { \n      Scanner sc = new Scanner(System.in);\n      int a = sc.nextInt();\n      int b = sc.nextInt();\n      int c = sc.nextInt();\n      int x = sc.nextInt();\n      int y = sc.nextInt();\n      long total = 0;\n      if(a + b <= c * 2) {\n        total = a * x + b * y;\n      } else {\n        int ab = Math.min(x, y);\n        total = ab * 2 * c;\n        x -= ab;\n        y -= ab;\n        total += Math.min(a*x + b*y, (x + y) * 2 * c);\n      }\n      System.out.println(total);\n  }\n}", "label": 1}, {"id": 196, "code1": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "code2": "import java.io.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 312, "code1": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint[] a = in.nextIntArray(n);\n\n\t\t\tint count = 0;\n\n\t\t\tfor (int l = 0, r = 0; l < n; l = r) {\n\t\t\t\twhile (r < n && a[l] == a[r]) {\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t\t\tint len = r-l;\n\t\t\t\tcount += len/2;\n\t\t\t}\n\n\t\t\tout.println(count);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\t}\n\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\n\n\npublic class Main {\n\n\tprivate BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 1);\n\n\tprivate String inputData = null;\n\n\tpublic String[] data = null;\n\n\tpublic int num = 0;\n\n\tpublic int count = 0;\n\n\tpublic HashMap<Integer, Integer> humanData = new HashMap<Integer, Integer>();\n\n\tpublic ArrayList<Integer> topId = new ArrayList<Integer>();\n\n\tpublic ArrayList<Integer> topLength = new ArrayList<Integer>();\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().start();\n\t\tSystem.exit(0);\n\t}\n\n\tpublic void start() {\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\tif (this.data.length == 1) {\n\t\t\t\tif (this.data[0].equals(\"0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.num = Integer.parseInt(this.data[0]);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.humanData.clear();\n\n\t\t\tfor (int i = 0; i < this.num; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.inputData = reader.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tthis.data = this.inputData.split(\" \");\n\n\t\t\t\tthis.humanData.put(Integer.parseInt(data[0]),\n\t\t\t\t\t\tInteger.parseInt(data[1]) + Integer.parseInt(data[2]));\n\n\t\t\t}\n\n\t\t\tIterator<Integer> itId = this.humanData.keySet().iterator();\n\t\t\tint numCount = 0;\n\t\t\twhile (itId.hasNext()) {\n\t\t\t\tint id = itId.next();\n\t\t\t\tif (numCount == 0) {\n\t\t\t\t\tthis.topId.add(id);\n\t\t\t\t\tthis.topLength.add(this.humanData.get(id));\n\t\t\t\t} else {\n\t\t\t\t\tif (this.topLength.get(count) <= this.humanData.get(id)) {\n\t\t\t\t\t\tthis.topId.set(this.count, id);\n\t\t\t\t\t\tthis.topLength.set(this.count, this.humanData.get(id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnumCount++;\n\t\t\t}\n\n\t\t\tthis.count++;\n\n\t\t}\n\n\t\tfor (int i = 0; i < this.topId.size(); i++) {\n\t\t\tSystem.out.println(this.topId.get(i) + \" \" + this.topLength.get(i));\n\t\t}\n\n\t}\n\n}", "label": 0}, {"id": 97, "code1": "import java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tchar[] s = sc.next().toCharArray();\n\t\tStack<Character> st = new Stack<>();\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\tif (s[i] == 'T') {\n\t\t\t\tif (st.isEmpty()) cnt++;\n\t\t\t\telse st.pop();\n\t\t\t} else {\n\t\t\t\tst.push('S');\n\t\t\t}\n\t\t}\n\t\tcnt += st.size();\n\t\tSystem.out.println(cnt);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.util.*;\n\npublic class Main{\n    \n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        \n        String s = sc.next();\n        sc.close();\n\n        Deque<Character> dq = new ArrayDeque<>();\n        for(int i = 0; i < s.length(); i++){\n            if(s.charAt(i) == 'S'){\n                dq.push('S');\n            } else {\n                if(dq.size() == 0){\n                    dq.push('T');\n                }\n                else if(dq.peek() == 'S'){\n                    dq.pop();\n                } else {\n                    dq.push('T');\n                }\n            }\n        }\n        System.out.println(dq.size());\n   }\n}", "label": 1}, {"id": 541, "code1": "import java.util.Scanner;\n\npublic class Main {\n  private static Scanner sc;\n\n  public static void main(String[] args) {\n    sc = new Scanner(System.in);\n    new Main().solve();\n  }\n\n  private void solve() {\n    int N = sc.nextInt();\n    int[] a = new int[N + 2];\n    for (int i = 0; i < N; i++) {\n      a[i + 1] = sc.nextInt();\n    }\n    int sum = 0;\n    for (int i = 0; i <= N; i++) {\n      sum += Math.abs(a[i] - a[i + 1]);\n    }\n\n    for (int i = 0; i < N; i++) {\n      System.out.println(sum - Math.abs(a[i] - a[i + 1]) - Math.abs(a[i + 2] - a[i + 1]) + Math.abs(a[i] - a[i + 2]));\n    }\n  }\n}\n", "code2": "import java.math.BigInteger;\nimport java.util.Scanner;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = Integer.parseInt(sc.next());\n\t\tlong m = Long.parseLong(sc.next());\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tm = lcm(m, Long.parseLong(sc.next()));\n\t\tSystem.out.println(m);\n\t}\n\tpublic static long lcm(long m, long n) {\n\t\tBigInteger M = new BigInteger(String.valueOf(m));\n\t\tBigInteger N = new BigInteger(String.valueOf(n));\n\t\tBigInteger G = new BigInteger(String.valueOf(gcd(m, n)));\n\t\treturn M.multiply(N).divide(G).longValue();\n\t}\n\tpublic static long gcd(long m, long n) {\n\t\tif (m < n) {\n\t\t\tlong tem = m;\n\t\t\tm = n;\n\t\t\tn = tem;\n\t\t}\n\t\tlong r = -1;\n\t\twhile (r != 0) {\n\t\t\tr = m % n;\n\t\t\tm = n;\n\t\t\tn = r;\n\t\t}\n\t\treturn m;\n\t}\n}", "label": 0}, {"id": 195, "code1": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "class Main\n{\n\tpublic static void main(String args[])\n\t{\n\t\tfor(int i=0;i<1000;i++)\n\t\t{\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 701, "code1": "    import java.io.*;\n    import java.util.*;\n\n    public class Main {\n        public static void main(String[] args) throws IOException {\n            FastReader scan = new FastReader();\n            //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"taming.out\")));\n            PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n            Task solver = new Task();\n            //int t = scan.nextInt();\n            int t = 1;\n            for(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n            out.close();\n        }\n        static class Task {\n            boolean[][] matrix;\n            boolean[][] vis;\n            public void solve(int testNumber, FastReader sc, PrintWriter pw){\n                int n = sc.nextInt();\n                int m = sc.nextInt();\n                matrix = new boolean[n][m];\n                vis = new boolean[n][m];\n                long sum = 0;\n                for(int i=0;i<n;i++){\n                    String str = sc.nextLine();\n                    for(int j=0;j<m;j++){\n                        matrix[i][j]=(str.charAt(j)=='#');\n                    }\n                }\n                for(int i=0;i<n;i++){\n                    for(int j=0;j<m;j++){\n                        if(!vis[i][j]){\n                            int[] x = dfs(i,j,matrix[i][j]);\n                            sum+=((long)(x[0]))*x[1];\n                        }\n                    }\n                }\n                pw.println(sum);\n            }\n            public int[] dfs (int x, int y, boolean c){\n                int[] dx = {-1,1,0,0};\n                int[] dy = {0,0,-1,1};\n                if(x<0||y<0||x>=matrix.length||y>=matrix[0].length||vis[x][y]||matrix[x][y]!=c){\n                    return new int[]{0,0};\n                }\n                int a = 0;\n                int b = 0;\n                vis[x][y]=true;\n                if(c){\n                    a++;\n                }\n                else{\n                    b++;\n                }\n                for(int i=0;i<4;i++){\n                    int[] tt = dfs(x+dx[i],y+dy[i],!c);\n                    a+=tt[0];\n                    b+=tt[1];\n                }\n                return new int[]{a,b};\n            }\n        }\n        static class tup implements Comparable<tup> {\n            int a, b;\n            tup() {\n            }\n            ;\n\n\n\n            tup(int a, int b) {\n                this.a=a;\n                this.b=b;\n            }\n\n            @Override\n            public int compareTo(tup o2) {\n                return 0;\n            }\n        }\n        static void shuffle(long[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                long temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a) {\n            Random get = new Random();\n            for (int i = 0; i < a.length; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static void shuffle(int[] a,int l, int rb) {\n            Random get = new Random();\n            for (int i = l; i < rb; i++) {\n                int r = get.nextInt(a.length);\n                int temp = a[i];\n                a[i] = a[r];\n                a[r] = temp;\n            }\n        }\n        static class FastReader {\n            BufferedReader br;\n            StringTokenizer st;\n\n            public FastReader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            public FastReader(String s) throws FileNotFoundException {\n                br = new BufferedReader(new FileReader(new File(s)));\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n        }\n\n    }", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String args[]){\n        Scanner stdIn = new Scanner(System.in);\n        int n = stdIn.nextInt();\n        int c[] = new int[26];\n        int s[][] = new int[n][26];\n        \n        for(int i = 0; i < 26; i++){\n            c[i] = stdIn.nextInt();\n        }\n        \n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < 26; j++){\n                s[i][j] = stdIn.nextInt();\n            }\n        }\n        \n        /* \n        for(int i = 0; i < n; i++){\n            int max = 0;\n            int index = 0;\n            for(int j = 0; j < 26; j++){\n                if(s[i][j] > max){\n                    max = s[i][j];\n                    index = j;\n                }\n            }\n            System.out.println(index + 1);\n        }\n        */\n        \n        for(int i = 1; i < n + 1; i++){\n            System.out.println(i % 26 + 1);\n        }\n        \n        //System.out.println(\"XXXXXXXX\");\n    }\n}\n", "label": 0}, {"id": 370, "code1": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] pri = new int[25000];\n\t\tpri[0] = 2;\n\t\tpri[1] = 3;\n\t\tpri[2] = 5;\n\t\tpri[3] = 7;\n\t\tpri[4] = 11;\n\t\tpri[5] = 13;\n\t\tpri[6] = 17;\n\t\tpri[7] = 19;\n\t\tpri[8] = 23;\n\t\tpri[9] = 29;\n\t\tint fl = 0;\n\t\tint a=0;\n\t\tint b=0;\n\t\tint c=0;\n\t\twhile(pri[a]<=250000){\n\t\t\tfl++;\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\ta=0;\n\t\t\t\tb=0;\n\t\t\t\tc=0;\t\t\t\t\n\t\t\t\tif(i==0){\n\t\t\t\t\tc=1;\n\t\t\t\t}else if(i>0){\n\t\t\t\t\tc=pri[2+i];\n\t\t\t\t}\n\t\t\t\twhile(pri[a]!=0){\n\t\t\t\t\tif((30*fl + c)%pri[a]==0){\n\t\t\t\t\t\tb=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\tif(b==0){\n\t\t\t\t\tpri[a]=(30*fl + c);\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t}\n\t\t\n\t\tboolean exit = true;\n\t\twhile(exit==true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)exit=false;\n\t\t\tif(exit==true){\n\t\t\t\tint sum=-1;\n\t\t\t\tint i=0;\n\t\t\t\twhile(true){\n\t\t\t\t\tif(pri[i]>n)sum++;\n\t\t\t\t\tif(pri[i]>2*n)break;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(sum);\n\t\t\t}\n\t\t}\n\t}\n\t\n}", "code2": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n \n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n \n            int N = in.nextInt();\n            for (int i = 0; i < N; i++) {\n                long A = in.nextLong();\n                long B = in.nextLong();\n \n                long a = Math.min(A, B);\n                long b = Math.max(A, B);\n \n                long ans = 2L * (a - 1) + przedzial(a, b);\n \n                out.println(ans);\n            }\n        }\n \n        private long przedzial(long a, long b) {\n            if (a == b || a + 1 == b) {\n                return 0;\n            }\n \n            return 1L + szukaj(a + 1, b - 2, a * b);\n        }\n \n        private long szukaj(long a, long b, long LIMIT) {\n            if (a > b) return 0;\n            if (a == b) {\n                return a * b < LIMIT ? 1 : 0;\n            }\n            long lo = a, hi = b;\n            while (lo + 1 < hi) {\n                long m = lo + (hi - lo) / 2;\n                if (m * m >= LIMIT) {\n                    hi = m;\n                } else {\n                    lo = m;\n                }\n            }\n            long ans1 = 1 + 2L * (lo - 1 - a + 1);\n            long ans2 = 0;\n            if (lo * (lo + 1) < LIMIT) {\n                ans2 = 2L * (lo - a + 1);\n            }\n            return Math.max(ans1, ans2);\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n}", "label": 0}, {"id": 741, "code1": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint[] v = new int[500000];\n        for(int i = 0;i < 500000;i++){\n            v[i] = 1;\n        }\n        int p = 3;\n        while(true){\n            if(p*p > 1000000){\n                break;\n            }else{\n                if(v[(p-1)/2] == 0){\n                    p += 2;\n                }else{\n                    int t = p*p;\n                    while(t < 1000000){\n                        v[(t-1)/2] = 0;\n                        t += 2*p;\n                    }\n                    p += 2;\n                }\n            }\n        }\n        v[0] = 0;\n\t\twhile(scan.hasNext()){\n\t\t\tint n = scan.nextInt();\n\t\t\tif(n == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor(int i = 1;i < n/2;i++){\n\t\t\t\tif(v[i] != 1){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(v[(n-2*i-2)/2] == 1){\n\t\t\t\t\tcount += ((n-2*i-2)/2 == i)?2:1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/2);\n        }\n\t}\n}", "code2": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "label": 0}, {"id": 333, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        final Scanner sc = new Scanner(System.in);\n\n        final long n = sc.nextLong();\n        final long k = sc.nextLong();\n\n        final long t = n % k;\n        System.out.println(Math.min(t, k-t));\n    }\n}\n", "label": 0}, {"id": 273, "code1": "import java.util.Scanner;\n\n\npublic class Main{\n\t\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNextInt()) {\n\t\t\tint in = sc.nextInt();\n\t\t\tSystem.out.println(numOfArea(in));\n\t\t}\n\t\tsc.close();\n\t}\n\t\n\tprivate static int numOfArea(int n) {\n\t\treturn 1 + n * (n + 1) / 2;\n\t}\n\t\n}", "code2": "import java.io.*;\n\nclass Main{\npublic static void main(String[] args) throws IOException{\nBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\nString line=\"\";\nint count;\nwhile((line=br.readLine())!=null){\ncount=1;\nint n=Integer.parseInt(line);\nfor(int i=1;i<=n;i++){\ncount+=i;\n}\nSystem.out.println(count);\n}\n}\n}", "label": 1}, {"id": 179, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String args[]) {\n\n        // \u5165\u529b\n        Scanner sc = new Scanner(System.in);\n        int a = Integer.parseInt(sc.next());\n        int b = Integer.parseInt(sc.next());\n        int c = Integer.parseInt(sc.next());\n        int x = Integer.parseInt(sc.next());\n        int y = Integer.parseInt(sc.next());\n        sc.close();\n\n        // \u4e3b\u51e6\u7406\n        int normal = a * x + b * y;\n        int half = c * Math.max(x, y) * 2;\n\n        int comb = x > y ? a * (x - y) + c * Math.min(x, y) * 2 : b * (y - x) + c * Math.min(x, y) * 2;\n        int price = Math.min(Math.min(normal, half), comb);\n\n        int result = price;\n\n        // \u51fa\u529b\n        System.out.println(result);\n    }\n}\n", "label": 1}, {"id": 170, "code1": "import java.math.*;\nimport java.io.*;\n\n\nclass Main\n{\n    \n    public static void main(String args[])throws IOException\n    {\n\tBigInteger a = new BigInteger(\"1\");\n\tfor(int i=2;i<=1501;i++)\n\t    a = a.multiply(new BigInteger(Integer.toString(i)));\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));   \n\ta = a.add(new BigInteger(\"2\"));\n\tint n = Integer.parseInt(in.readLine());\n\tSystem.out.println(a);\n\tfor(int i=2;i<n+2;i++)\n\t    System.out.println(i);\n\n    }\n\n}", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.util.*;\n\nclass Main{public static void main(String[] args){new Solver();}}\n\nclass Solver{\n\tScanReader reader=new ScanReader(System.in);\n\tPrintWriter writer=new PrintWriter(System.out);\n\tSolver(){main(); writer.flush();}\n\t\n\tvoid main(){\n\t\tBigInteger m=BigInteger.ONE;\n\t\tfor(int i=0;i<1500;i++)\n\t\t\tm=m.multiply(BigInteger.valueOf(i+2));\n\t\tm=m.add(BigInteger.valueOf(2));\n\t\t\n\t\twhile(reader.hasNext()){\n\t\t\tint n=Integer.parseInt(reader.next());\n\t\t\tSystem.out.println(m);\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tSystem.out.println(i+2);\n\t\t}\n\t}\n}\n\nclass ScanReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic ScanReader(InputStream in){\n\t\tbr=new BufferedReader(new InputStreamReader(in));\n\t\tst=null;\n\t}\n\tpublic boolean hasNext(){\n\t\twhile(st==null || !st.hasMoreTokens()){\n\t\t\ttry{\n\t\t\t\tif(!br.ready())\n\t\t\t\t\treturn false;\n\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic String nextLine(){\n\t\thasNext();\n\t\treturn st.nextToken(\"\");\n\t}\n\tpublic String next(){\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n}", "label": 1}, {"id": 755, "code1": "import java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        for (int i=1; i < s.length(); i++) {\n            String a = s.substring(0, (s.length()-i)/2);\n            String b = s.substring((s.length()-i)/2,s.length()-i);\n            if(a.equals(b)){\n                System.err.println(a);\n                System.out.println(s.length()-i);\n                return;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "label": 0}, {"id": 602, "code1": "import java.util.Scanner;\n\tpublic class Main {\n\tprivate static Scanner scanner;\n\tpublic static void main(String args[]) {\n\n\t\tscanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt();\n\t\tint[] b = new int[a];\n\t\tint minj,count = 0;\n\t\tfor(int i=0;i < a;i++) b[i] = scanner.nextInt();\n\n\t\tfor(int i = 0;i < a;i++) {\n\t\t\tminj = i;\n\t\t\tfor(int j = i;j < a;j++) {\n\t\t\t\tif(b[j] < b[minj]) {\n\t\t\t\t\tminj = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tif(minj != i) {\n\t\t\t\t\tint tmp = b[i];\n\t\t\t\t\tb[i] = b[minj];\n\t\t\t\t\tb[minj] = tmp;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t}\n\t\tfor(int i=0;i < a;i++) {\n\t\t\tSystem.out.print(b[i]);\n\t\t\tif(i == a-1) System.out.println(\"\");\n\t\t\telse System.out.print(\" \");\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\t}\n\n", "code2": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint l = sc.nextInt();\n\t\tint t = sc.nextInt();\n\t\tint[] x = new int[n];\n\t\tint[] w = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tx[i] = sc.nextInt();\n\t\t\tw[i] = sc.nextInt();\n\t\t}\n\n\t\tint cnt = 0;\n\t\tfor(int i=1; i<n; i++){\n\t\t\tif(w[0]==1 && w[i]==2){\n\t\t\t\tif(t*2>=x[i]-x[0]){\n\t\t\t\t\tcnt += (1+(t*2-x[i]+x[0])/l);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(w[0]==2 && w[i]==1){\n\t\t\t\tif(t*2>=l-x[i]+x[0]){\n\t\t\t\t\tcnt -= (1+(t*2-l+x[i]-x[0])/l);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(w[0]==1){\n\t\t\tcnt %= n;\n\t\t}\n\t\telse{\n\t\t\tcnt = ((cnt%n)+n)%n;\n\t\t}\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(w[i]==1){\n\t\t\t\tx[i] = (x[i]+t)%l;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tx[i] = ((x[i]-t)%l+l)%l;\n\t\t\t}\n\t\t}\n\t\tint dist0 = x[0];\n\t\tArrays.sort(x);\n\t\tint index0 = 0;\n\t\tif(w[0]==1){\n\t\t\tfor(int i=n-1; i>=0; i--){\n\t\t\t\tif(x[i]==dist0){\n\t\t\t\t\tindex0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tif(x[i]==dist0){\n\t\t\t\t\tindex0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i<n; i++){\n\t\t\tSystem.out.println(x[(index0-cnt+n+i)%n]);\n\t\t}\n\t}\n}", "label": 0}, {"id": 228, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[]args) {\n\t\ttry(Scanner scan = new Scanner(System.in)){\n\n\t\t\tint N = scan.nextInt();\n\t\t\tint M = scan.nextInt();\n\t\t\tint K = scan.nextInt();\n\n\n\n\t\t\tint goukei = 0;\n\t\t\tint ok = 0;\n\t\t\tfor(int i = 0;i<=N;i++) {\n\t\t\t\tfor(int j = 0;j<=M;j++) {\n\t\t\t\t\tgoukei =  i*M+j*N-2*i*j;\n\t\t\t\t\tif(goukei==K) {\n\t\t\t\t\t\tok=1;break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(ok==1)System.out.println(\"Yes\");\n\t\t\telse System.out.println(\"No\");\n\n\t\t}\n\n\n\t}\n\n\n}\n", "code2": "import java.util.Scanner;\nimport java.util.stream.Collectors;\n\nclass Main {\n\n    public static void main(String[] args) {\n        new Main().compute();\n    }\n\n    void compute() {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int M = sc.nextInt();\n        int K = sc.nextInt();\n        for (int i = 0; i <= N; i++) {\n            for (int j = 0; j <= M; j++) {\n                if (i * M + j * N - 2 * i * j == K) {\n                    System.out.println(\"Yes\");\n                    return;\n                }\n            }\n        }\n        System.out.println(\"No\");\n    }\n}\n", "label": 1}, {"id": 119, "code1": "import java.util.*;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint m, f, count = 0, sum;\n\t\tm = scanner.nextInt();\n\t\tf = scanner.nextInt();\n\t\twhile(!(m == 0 && f == 0)) {\n\t\t\tfor(int i = 1;i < m+1;i++) {\n\t\t\t\tfor(int j = 1;j < m+1;j++) {\n\t\t\t\t\tfor(int k = 1;k < m+1;k++) {\n\t\t\t\t\t\t\tsum =  i+j+k;\n\t\t\t\t\t\t\tif(sum == f && (i!=j)&&(j!=k)&&(k!=i)) \n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/(1*2*3));\n\t\t\tcount = 0;\n\t\t\tm = scanner.nextInt();\n\t\t\tf = scanner.nextInt();\n\t\t}\n\t\tscanner.close();\n\t}\n}", "code2": "import java.util.Scanner;\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    while (true) {\n      int n = sc.nextInt();\n      int x = sc.nextInt();\n      if (n == 0 && x == 0) {\n        break;\n      }\n      int counter = 0;\n      for (int k = 1; k < n-1; k++) {\n        for (int j = k+1; j < n; j++) {\n          for (int i = j+1; i < n+1; i++) {\n            if (i+j+k == x) {\n              counter++;\n            }\n          }\n        }\n      }\n      System.out.println(counter);\n    }\n  }\n}", "label": 1}, {"id": 569, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        BRemovingBlocks solver = new BRemovingBlocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BRemovingBlocks {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] a = in.readLongArray(n);\n\n            Modulo.mod = MiscUtils.MOD7;\n\n            long[] s = new long[n];\n            s[0] = 1;\n            for (int i = 1; i < n; i++) {\n                s[i] = Modulo.add(s[i - 1], Modulo.rev(i + 1));\n            }\n\n            long ans = 0;\n            for (int i = 0; i < n; i++) {\n                long sum = Modulo.mlt(a[i], s[i] + s[n - 1 - i] - 1);\n                ans = Modulo.add(ans, sum);\n            }\n            for (int i = 1; i <= n; i++) ans = Modulo.mlt(ans, i);\n            out.printLine(ans);\n        }\n\n    }\n\n    static class Modulo {\n        public static long mod;\n        private long value;\n\n        public Modulo(long value) {\n            this.value = (value % mod + mod) % mod;\n        }\n\n        public static long add(long a, long b) {\n            return ((a + b) % mod + mod) % mod;\n        }\n\n        public static long mlt(long a, long b) {\n            return ((a % mod + mod) * (b % mod + mod)) % mod;\n        }\n\n        public static long rev(long a) {\n            //return pow(a, mod - 2);\n            return (Euclid.extgcd(a, mod, new long[3])[0] % mod + mod) % mod;\n        }\n\n        public String toString() {\n            return \"\" + value;\n        }\n\n    }\n\n    static class Euclid {\n        public static long[] extgcd(long a, long b, long[] is) {\n            if (a == 0) {\n                is[0] = 0;\n                is[1] = 1;\n                is[2] = b;\n            } else {\n                extgcd(b % a, a, is);\n                long x = is[1] - b / a * is[0];\n                is[1] = is[0];\n                is[0] = x;\n            }\n            return is;\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n", "code2": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tint INF=1000000007;\n\t\tScanner sc=new Scanner(System.in);\n\t\tint V=sc.nextInt();\n\t\tArrayList<ArrayList<Integer>> v=new ArrayList<ArrayList<Integer>>();\n\t\tfor(int i=0; i<=V; i++) {\n\t\t\tv.add(new ArrayList<Integer>());\n\t\t}\n\t\tfor(int i=0; i<V-1; i++) {\n\t\t\tint a=sc.nextInt();\n\t\t\tint b=sc.nextInt();\n\t\t\t(v.get(a)).add(b);\n\t\t\t(v.get(b)).add(a);\n\t\t}\n\t\tint[] Fe=new int[V+1];\n\t\tint[] Su=new int[V+1];\n\t\tboolean[] Fe_V=new boolean[V+1];\n\t\tboolean[] Su_V=new boolean[V+1];\n\t\tArrays.fill(Fe, INF);\n\t\tArrays.fill(Su, INF);\n\t\tFe[1]=0;\n\t\tSu[V]=0;\n\t\tStack<Integer> Q=new Stack<Integer>();\n\t\tQ.add(1);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Fe_V[v.get(tmp).get(i)] && Fe[tmp]+1<Fe[v.get(tmp).get(i)]) {\n\t\t\t\t\tFe_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tFe[v.get(tmp).get(i)]=Fe[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tQ.add(V);\n\t\twhile(!Q.isEmpty()) {\n\t\t\tint tmp=Q.pop();\n\t\t\tfor(int i=0; i<v.get(tmp).size(); i++) {\n\t\t\t\tif(!Su_V[v.get(tmp).get(i)] && Su[tmp]+1<Su[v.get(tmp).get(i)]) {\n\t\t\t\t\tSu_V[v.get(tmp).get(i)]=true;\n\t\t\t\t\tSu[v.get(tmp).get(i)]=Su[tmp]+1;\n\t\t\t\t\tQ.push(v.get(tmp).get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint Su_w=0;\n\t\tint Fe_w=0;\n\t\tfor(int i=1; i<=V; i++) {\n\t\t\tif(Fe[i]<=Su[i]) {\n\t\t\t\tFe_w++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSu_w++;\n\t\t\t}\n\t\t}\n\t\tif(Su_w>=Fe_w) {\n\t\t\tSystem.out.println(\"Snuke\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"Fennec\");\n\t\t\tSystem.out.flush();\n\t\t}\n\t}\n}", "label": 0}, {"id": 607, "code1": "import java.util.Scanner;\n\npublic class Main {\n    static int selectSort(int[] data) {\n        int ret = 0, n = data.length;\n        for (int i = 0; i < n; ++i) {\n            int minJ = i;\n            for (int j = i; j < n; ++j) {\n                if (data[j] < data[minJ]) minJ = j;\n            }\n            if(minJ != i) {\n                ++ret;\n                int tmp = data[minJ];\n                data[minJ] = data[i];\n                data[i] = tmp;\n            }\n        }\n        return ret;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        int[] data = new int[n];\n\n        for (int i = 0; i < n; ++i) {\n            data[i] = scanner.nextInt();\n        }\n\n        int cnt = selectSort(data);\n        for (int i = 0; i < n; ++i) {\n            System.out.print(data[i]);\n            if (i != n - 1) System.out.print(\" \");\n        }\n        System.out.println();\n        System.out.println(cnt);\n    }\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tRunner[] a = new Runner[18];\n\t\tint cnt=0;\n\t\tfor(int  j = 0;j<3;j++){\n\t\t\tRunner[] b = new Runner[8];\n\t\t\tfor(int i = 0;i<8;i++){\n\t\t\t\tint num = cin.nextInt();\n\t\t\t\tdouble time= cin.nextDouble();\n\t\t\t\tb[i]=new Runner(num,time);\n\t\t\t}\n\t\t\tArrays.sort(b);\n\t\t\tfor(int i = 0;i<6;i++){\n\t\t\t\ta[cnt++]=b[i+2];\n\t\t\t}\n\t\t\tSystem.out.println(b[0].num + \" \" + b[0].timestr);\n\t\t\tSystem.out.println(b[1].num + \" \" + b[1].timestr);\n\t\t}\n\t\tArrays.sort(a);\n\t\tSystem.out.println(a[0].num + \" \" + a[0].timestr);\n\t\tSystem.out.println(a[1].num + \" \" + a[1].timestr);\n\t}\n}\nclass Runner implements Comparable{\n\tint num;\n\tdouble time;\n\tString timestr;\n\tRunner(int a,double b){\n\t\tnum=a;\n\t\ttime=b;\n\t\ttimestr=String.valueOf(time);\n\t\tif(timestr.length()==4){\n\t\t\ttimestr = timestr+\"0\";\n\t\t}\n\t\t\n\t}\n\tpublic int compareTo(Object o) {\n\t\tRunner r = (Runner)o;\n\t\tif(this.time-r.time > 0)\n\t\t\treturn 1;\n\t\telse if(this.time-r.time == 0)\n\t\t\treturn 0;\n\t\telse{\n\t\t\treturn -1;\n\t\t}\n\t}\n}", "label": 0}, {"id": 660, "code1": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "import java.util.*; \n\nclass Main{\npublic static void main(String[] args){\n\tScanner sc=new Scanner(System.in);\n        int x=sc.nextInt();\n  \t\tint t=0;\n  if(x==2){\n \t System.out.println(x);\n  }else{\n  \n   for(int x1=x;x1>0;x1++){\n     for(int c=2;c<x1;c++){\n         if(x1%c==0){\n           t=0;\n           break;\n          }else{\n           t++;\n         }\n    \t }\n     if(t>0){\n        System.out.println(x1);\n           return;\n     } \n   }\n\n  }\n    }\n}", "label": 0}, {"id": 27, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "code2": "\n\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNextInt()) {\n            int n = sc.nextInt();\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int[] x = new int[n];\n\n            for (int i = 0; i < n; i++) {\n                x[i] = sc.nextInt();\n            }\n\n            long ans = 0;\n\n            for (int i = 0; i < n - 1; i++) {\n                long dist = x[i + 1] - x[i];\n                long walkCost = dist * a;\n                if ( walkCost < b ) {\n                    ans += walkCost;\n                } else {\n                    ans += b;\n                }\n            }\n\n            System.out.println(ans);\n        }\n    }\n}\n", "label": 1}, {"id": 180, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "code2": "import java.util.*;\npublic class Main {\n\n  public static void main(String[] args) { \n      Scanner sc = new Scanner(System.in);\n      int a = sc.nextInt();\n      int b = sc.nextInt();\n      int c = sc.nextInt();\n      int x = sc.nextInt();\n      int y = sc.nextInt();\n      long total = 0;\n      if(a + b <= c * 2) {\n        total = a * x + b * y;\n      } else {\n        int ab = Math.min(x, y);\n        total = ab * 2 * c;\n        x -= ab;\n        y -= ab;\n        total += Math.min(a*x + b*y, (x + y) * 2 * c);\n      }\n      System.out.println(total);\n  }\n}", "label": 1}, {"id": 426, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tint INF = 1 << 28;\n\tdouble EPS = 1e-9;\n\n\tint n;\n\tint start, goal, ttl;\n\tLinkedList<Integer>[] graph;\n\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run() {\n\t\tn = sc.nextInt();\n\t\tgraph = new LinkedList[n];\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tint u = sc.nextInt() - 1;// \u0083\u008b\u0081[\u0083^\u0094\u00d4\u008d\u0086\n\t\t\tint m = sc.nextInt();\n\t\t\tgraph[u] = new LinkedList<Integer>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint v = sc.nextInt() - 1;\n\t\t\t\tgraph[u].add(v);\n\t\t\t}\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i = 0; i < p; i++) {\n\t\t\tstart = sc.nextInt() - 1;\n\t\t\tgoal = sc.nextInt() - 1;\n\t\t\tttl = sc.nextInt();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve() {\n\t\tLinkedList<Integer> que = new LinkedList<Integer>();\n\t\tboolean[] visited = new boolean[n];\n\t\tint[] d = new int[n];\n\t\tArrays.fill(d, INF);\n\t\tque.offer(start);\n\t\td[start] = 1;\n\t\tvisited[start] = true;\n\t\tfor (; !que.isEmpty();) {\n\t\t\tint u = que.poll();\n\t\t\tfor (int v : graph[u]) {\n\t\t\t\tif (!visited[v]) {\n\t\t\t\t\tque.offer(v);\n\t\t\t\t\td[v] = d[u] + 1;\n\t\t\t\t\tvisited[v] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (d[goal] <= ttl) {\n\t\t\tprintln(\"\" + d[goal]);\n\t\t} else {\n\t\t\tprintln(\"NA\");\n\t\t}\n\t}\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s) {\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s) {\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tint[] wn = in.nextIntArray(n);\n\n\t\t\tint left = 0;\n\t\t\tint right = INF;\n\t\t\tint mid = 0;\n\t\t\twhile (right > left + 1) {\n\t\t\t\tmid = (left + right) / 2;\n\t\t\t\tint count = 1;\n\t\t\t\tint ca = mid;\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tca = mid;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif (ca - wn[i] >= 0) {\n\t\t\t\t\t\t\tca -= wn[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcount = INF;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// k\u53f0\u4ee5\u4e0b\u3067\u7a4d\u3081\u308b\u5834\u5408\n\t\t\t\tif (count <= k){\n\t\t\t\t\tright = mid;\n\n\t\t\t\t// \uff4b\u53f0\u4ee5\u4e0a\u5fc5\u8981\u306a\u5834\u5408\n\t\t\t\t} else if (count > k) {\n\t\t\t\t\tleft = mid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.println(right);\n\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n\n", "label": 0}, {"id": 415, "code1": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n\tpublic Main(){\n\t\tnew A().doIt();\n\t}\n\tclass A{\n\t\tlong euclid(long a, long b){\n\t\t    long temp;\n\n\t\t    if(a < b) { \n\t\t    \ttemp = a;\n\t\t    \ta = b;\n\t\t    \tb = temp;\n\t\t    }\n\t\t    if(a % b == 0) return b;\n\t\t    return euclid( b, a % b );\n\t\t}\n\t\tvoid doIt(){\n\t\t\tint n = sc.nextInt();\n\t\t\tlong A = 1;\n\t\t\tlong B = 1;\n\t\t\tfor(int i = 0;i < n;i++){\n\t\t\t\tlong aa = sc.nextLong();\n\t\t\t\tlong bb = sc.nextLong();\n\t\t\t\tif(A % aa != 0)A = A + aa - (A % aa);\n\t\t\t\tif(B % bb != 0)B = B + bb - (B % bb);\n\t\t\t\tlong max = Math.max(A/aa,B/bb);\n\t\t\t\tA = max * aa;\n\t\t\t\tB = max * bb;\n//\t\t\t\tSystem.out.println(A+\" \"+B);\n\t\t\t}\n\t\t\tSystem.out.println(A+B);\n\t\t}\n\t}\n}\n", "code2": "\nimport java.util.*;\nimport java.io.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n\n\tint INF = 1 << 28;\n\t//long INF = 1L << 62;\n\tdouble EPS = 1e-10;\n\t\n\tint n;\n\tint[][] es;\n\t\n\tvoid run() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tn = sc.nextInt();\n\t\tes = new int[n][n];\n\t\tfor (int[] a: es) fill(a, INF);\n\t\tfor (int i=0;i<n;i++) es[i][i] = 0;\n\t\tfor (int i=0;i<n;i++) {\n\t\t\tint r = sc.nextInt()-1, k = sc.nextInt();\n\t\t\tfor (int j=0;j<k;j++) {\n\t\t\t\tint t = sc.nextInt()-1;\n\t\t\t\tes[r][t] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int k=0;k<n;k++) for (int i=0;i<n;i++) for (int j=0;j<n;j++) {\n\t\t\tes[i][j] = min(es[i][j], es[i][k] + es[k][j]);\n\t\t}\n\t\tint p = sc.nextInt();\n\t\tfor (int i=0;i<p;i++) {\n\t\t\tint s = sc.nextInt()-1, d = sc.nextInt()-1, v = sc.nextInt();\n\t\t\tSystem.out.println((es[s][d] + 1 <= v ? es[s][d] + 1 : \"NA\"));\n\t\t}\n\t}\n\t\n\n\tvoid debug(Object... os) {\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 283, "code1": "import java.util.*;\n\nclass Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    String N = sc.next();\n    int sum = 0;\n    for(int i = 0;i<N.length();i++){\n      sum+=Integer.parseInt(N.substring(i,i+1));\n      sum=sum%9;\n    }\n    if(sum == 0){\n      System.out.println(\"Yes\");\n    }else{\n      System.out.println(\"No\");\n    }\n  }\n}", "code2": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "label": 0}, {"id": 551, "code1": "import java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    static void solve() {\n        int n = nextInt();\n\n        long ans = nextLong();\n//        System.out.println(ans);\n        for (int i = 1; i < n; i++) {\n            long t = nextLong();\n            ans = lcm(ans, t);\n//            System.out.println(ans);\n        }\n        out.println(ans);\n    }\n\n    static final int MOD = 1_000_000_007;\n    static long[] fac, finv, inv;\n\n    // nCk\u306e\u521d\u671f\u5316\n    static void comInit(int max) {\n        fac = new long[max];\n        finv = new long[max];\n        inv = new long[max];\n        fac[0] = fac[1] = 1;\n        finv[0] = finv[1] = 1;\n        inv[1] = 1;\n\n        for (int i = 2; i < max; i++) {\n            fac[i] = fac[i - 1] * i % MOD;\n            inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;\n            finv[i] = finv[i - 1] * inv[i] % MOD;\n        }\n    }\n\n    // nCk\u306e\u8a08\u7b97\n    static long com(int n, int k) {\n        if (n < k)\n            return 0;\n        if (n < 0 || k < 0)\n            return 0;\n        return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n    }\n\n    static PrintWriter out;\n    static Scanner sc;\n\n    static int[][] newIntArray(int h, int w, int value) {\n        int[][] ret = new int[h][w];\n        for (int i = 0; i < h; i++) {\n            for (int j = 0; j < w; j++) {\n                ret[i][j] = value;\n            }\n        }\n        return ret;\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(sc.next());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(sc.next());\n    }\n\n    static String nextString() {\n        return sc.next();\n    }\n\n    static int[] nextIntArray(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    static List<Integer> nextIntList(int n) {\n        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextInt());\n        }\n        return list;\n    }\n\n    static List<Double> nextDoubleList(int n) {\n        List<Double> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add((double) nextInt());\n        }\n        return list;\n    }\n\n    static List<Long> nextLongList(int n) {\n        List<Long> list = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            list.add(nextLong());\n        }\n        return list;\n    }\n\n    static char[][] nextCharArray(int h, int w) {\n        char[][] c = new char[h][w];\n        for (int i = 0; i < h; i++) {\n            String str = nextString();\n            for (int j = 0; j < w; j++) {\n                c[i][j] = str.charAt(j);\n            }\n        }\n        return c;\n    }\n\n    static <T extends Comparable<? super T>> void sort(List<T> list) {\n        Collections.sort(list);\n    }\n\n    // greatest common divisor\n    // \u6700\u5927\u516c\u7d04\u6570\n    static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    // least common multiple\n    // \u6700\u5c0f\u516c\u500d\u6570\n    static long lcm(long a, long b) {\n        if (a >= b && a % b == 0)\n            return a;\n        if (b > a && b % a == 0)\n            return b;\n\n//        return a * b / gcd(a, b);\n        if (a > b) {\n            return (a / gcd(a, b)) * b;\n        } else {\n            return (b / gcd(a, b)) * a;\n        }\n    }\n\n    // base\u306en\u4e57\u3092\u8a08\u7b97\u3092\u8fd4\u3059\n    static int pow(int base, int n) {\n        int ret = 1;\n        for (int i = 0; i < n; i++) {\n            ret *= base;\n        }\n        return ret;\n    }\n\n    // return n^k mod m\n    static long powMod(long n, long k, long m) {\n        if (k == 0) {\n            return 1;\n        } else if (k % 2 == 1) {\n            return powMod(n, k - 1, m) * n % m;\n        } else {\n            long tmp = powMod(n, k / 2, m);\n            return tmp * tmp % m;\n        }\n    }\n\n    // int\u3092length\u6841\u306ebit\u6587\u5b57\u5217\u306b\u5909\u63db\n    static String toBitString(int length, int n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = length - 1; i >= 0; i--) {\n            if ((n >> i) % 2 == 1) {\n                sb.append(\"1\");\n            } else {\n                sb.append(\"0\");\n            }\n        }\n        return sb.toString();\n    }\n\n    public static void main(String[] args) {\n        out = new PrintWriter(System.out);\n        sc = new Scanner(System.in);\n\n        solve();\n\n        out.flush();\n        sc.close();\n    }\n\n}\n", "code2": "import java.io.*;\nimport java.util.*;\n\n/**\n *\n * @author baito\n */\nclass UnionFindTree\n{\n    int[] par;\n    int[] rank;\n    int[] sizes;\n\n    UnionFindTree(int n)\n    {\n        par = new int[n];\n        rank = new int[n];\n        sizes = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            par[i] = i;\n            rank[i] = 0;\n            sizes[i] = 1;\n        }\n    }\n\n    int find(int x)\n    {\n        if (par[x] == x) return x;\n        else return par[x] = find(par[x]);\n    }\n\n    void unite(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n\n        if (x == y) return;\n        if (rank[x] < rank[y])\n        {\n            par[x] = y;\n            sizes[y] += sizes[x];\n        }\n        else\n        {\n            par[y] = x;\n            sizes[x] += sizes[y];\n            if (rank[x] == rank[y]) rank[x]++;\n        }\n    }\n\n    boolean same(int x, int y)\n    {\n        return find(x) == find(y);\n    }\n\n    int size(int x)\n    {\n        return sizes[par[x]];\n    }\n}\npublic class Main\n{\n    static StringBuilder sb = new StringBuilder();\n    static FastScanner sc = new FastScanner(System.in);\n    static int INF = 10000;\n    static long MOD =1000000007;\n    static long[] f;//factorial\n    static int[] y4 = {0,1,0,-1};\n    static int[] x4 = {1,0,-1,0};\n    static int[] y8 = {0,1,0,-1,-1,1,1,-1};\n    static int[] x8 = {1,0,-1,0,1,-1,1,-1};\n\n    static int N,K,L;\n\n    public static void main(String[] args)\n    {\n\n        N = sc.nextInt();\n        K = sc.nextInt();\n        L = sc.nextInt();\n        UnionFindTree u1 = new UnionFindTree(N);\n        UnionFindTree u2 = new UnionFindTree(N);\n        //long\u3092\u5fd8\u308c\u308b\u306a\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3059\u308b\u305e\n        for (int i = 0; i < K; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u1.unite(p,q);\n        }\n        for (int i = 0; i < L; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u2.unite(p,q);\n        }\n        Map<Long,Integer> sizes = new HashMap<>();\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            int value = sizes.containsKey(hash) ? sizes.get(hash):0;\n            sizes.put(hash,value+1);\n\n\n        }\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            System.out.println(sizes.get(hash));\n        }\n\n\n\n    }\n    //\u2193nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3002\u3000***factorial(N)\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b***\n    static long comb(int n, int r)\n    {\n        long result = f[n];\n        result = result * modInv(f[n - r]) % MOD;\n        result = result * modInv(f[r]) % MOD;\n        return result;\n    }\n\n    static long modInv(long n)\n    {\n        return modPow(n, MOD - 2);\n    }\n\n    static void factorial(int n)\n    {\n        f = new long[n + 1];\n        f[0] = f[1] = 1;\n        for (int i = 2; i <= n; i++)\n        {\n            f[i] = (f[i - 1] * i) % MOD;\n        }\n    }\n\n    static long modPow(long x, long n)\n    {\n        long res = 1L;\n        while (n > 0)\n        {\n            if ((n & 1) == 1)\n            {\n                res = res * x % MOD;\n            }\n            x = x * x % MOD;\n            n >>= 1;\n        }\n        return res;\n    }\n\n    //\u2191nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n\n    static int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n    static long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\n    static <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n    static void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n    public static void reverse(int[] x)\n    {\n        int l = 0;\n        int r = x.length - 1;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    public static void reverse(int[] x,int s, int e)\n    {\n        int l = s;\n        int r = e;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    static int length(int a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int length(long a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int countC2(char[][] a, char c){\n        int co = 0;\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                if(a[i][j] == c)\n                    co++;\n        return co;\n    }\n    static void fill(int[][] a, int v){\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                a[i][j] = v;\n    }\n    static class FastScanner {\n\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        /*public String nextChar(){\n            return (char)next()[0];\n        }*/\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public int [][] nextIntArray2(int h, int w){\n            int[][] a = new int[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < w ; wi++){\n                    a[hi][wi] = nextInt();\n                }\n            }\n            return a;\n        }\n        public Integer[] nextIntegerArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public char[] nextCharArray(int n){\n            char[] a = next().toCharArray();\n\n            return a;\n        }\n        public char[][] nextCharArray2(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = next().toCharArray();\n            }\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\n        public char[][] nextCharArray2s(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = nextLine().replace(\" \",\"\").toCharArray();\n            }\n            return a;\n        }\n        public char[][] nextWrapCharArray2(int h , int w, char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + next() + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u308b\u6642\u7528\n        public char[][] nextWrapCharArray2s(int h , int w ,char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + nextLine().replace(\" \",\"\") + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n        public long [][] nextLongArray2(int h, int w){\n            long[][] a = new long[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < h ; wi++){\n                    a[h][w] = nextLong();\n                }\n            }\n            return a;\n        }\n    }\n}\n", "label": 0}, {"id": 642, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a=sc.nextInt(),b=sc.nextInt(),ab=sc.nextInt(),x=sc.nextInt(),y=sc.nextInt();\n        if(ab*2>a+b){\n          System.out.println(a*x+b*y);\n        }else if(x>y&&ab*2<a){\n          System.out.println(ab*2*x);\n        }else if(x<y&&ab*2<b){\n          System.out.println(ab*2*y);\n        }else if(x>y){\n          System.out.println(ab*2*y+a*(x-y));\n        }else if(x<y){\n          System.out.println(ab*2*x+b*(y-x));\n        }else{\n          System.out.println(ab*2*x);\n        }\n\n\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        try (Scanner s = new Scanner(System.in)) {\n            int k = s.nextInt();\n            int a = s.nextInt();\n            int b = s.nextInt();\n            int mod = a % k;\n            int d = b - a;\n            System.out.println((mod == 0 || (k - mod) <= d) ? \"OK\" : \"NG\");\n        }\n    }\n}\n", "label": 0}, {"id": 96, "code1": "import java.util.Scanner;\nimport java.util.Stack;\n\nclass Main{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString str=sc.next();\n\t\t\tStack<Integer> st=new Stack<Integer>();\n\t\t\tfor(int i=0;i<str.length();i++){\n\t\t\t\tif(st.isEmpty() || st.peek()==1 || str.charAt(i)=='S') st.add(str.charAt(i)=='S' ? 0 : 1);\n\t\t\t\telse st.pop();\n\t\t\t}\n\t\t\tSystem.out.println(st.size());\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\t\tchar[] s = sc.next().toCharArray();\n\t\tStack<Character> st = new Stack<>();\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < s.length; i++) {\n\t\t\tif (s[i] == 'T') {\n\t\t\t\tif (st.isEmpty()) cnt++;\n\t\t\t\telse st.pop();\n\t\t\t} else {\n\t\t\t\tst.push('S');\n\t\t\t}\n\t\t}\n\t\tcnt += st.size();\n\t\tSystem.out.println(cnt);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}", "label": 1}, {"id": 644, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author GYSHGX868\n */\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    OutputWriter out = new OutputWriter(outputStream);\n    TaskA solver = new TaskA();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskA {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n      char a = in.nextChar();\n      char b = in.nextChar();\n      if (a == 'H') {\n        out.printLine(b);\n      } else {\n        out.printLine(b == 'H' ? 'D' : 'H');\n      }\n    }\n\n  }\n\n  static class InputReader {\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private InputReader.SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n      this.stream = stream;\n    }\n\n    public int read() {\n      if (numChars == -1) {\n        throw new InputMismatchException();\n      }\n      if (curChar >= numChars) {\n        curChar = 0;\n        try {\n          numChars = stream.read(buf);\n        } catch (IOException e) {\n          throw new InputMismatchException();\n        }\n        if (numChars <= 0) {\n          return -1;\n        }\n      }\n      return buf[curChar++];\n    }\n\n    public boolean isSpaceChar(int c) {\n      if (filter != null) {\n        return filter.isSpaceChar(c);\n      }\n      return isWhitespace(c);\n    }\n\n    public static boolean isWhitespace(int c) {\n      return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public char nextChar() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      return (char) c;\n    }\n\n    public interface SpaceCharFilter {\n      boolean isSpaceChar(int ch);\n\n    }\n\n  }\n\n  static class OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n      writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n      this.writer = new PrintWriter(writer);\n    }\n\n    public void printLine(char i) {\n      writer.println(i);\n    }\n\n    public void close() {\n      writer.close();\n    }\n\n  }\n}\n\n", "code2": "/*\n    Arnab Chanda \n*/\n\n// All imports here\n\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.InputStream;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n// Template code starts here //\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Debugger debug = new Debugger(out);\n        Objectify objectify = new Objectify(debug);\n        Task solver = new Task();\n        int test = 1;\n        while(test-->0){\n            solver.solve(1, in, out, debug, objectify);\n        }\n\t\tout.close();\n\t}\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n \n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public Double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public float nextFloat() {\n        return Float.parseFloat(next());\n    }\n \n}\n\nclass Debugger{\n    PrintWriter out;\n\n    Debugger(PrintWriter out){    \n        this.out = out;\n    }\n\n    public <T> void printList(List<T> arrayList){\n        for( Object ob: arrayList){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printSet(Set<T> set){\n        for(Object ob: set){\n            out.print(ob+\" \");\n        }\n        out.println();\n    }\n\n    public <T> void printMap(Map<?,?> map){\n        for(Object ob: map.keySet()){\n            System.out.println(ob+\" : \"+map.get(ob));\n        }\n    }\n}\n\nclass Objectify{\n    \n    Debugger debug;\n\n    Objectify(Debugger ob){ debug = ob; }\n\n    public void printArr(int[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(double[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(long[] arr){ debug.printList(Arrays.stream(arr).boxed().collect(Collectors.toList())); }\n    public void printArr(char[] arr){ debug.printList( String.valueOf(arr).chars().mapToObj(c -> (char) c).collect(Collectors.toList())); }\n    public void printArr(String[] arr){ debug.printList(Arrays.asList(arr)); }\n\n    public void printMatrix(int[][] arr){ for(int a[]:arr) printArr(a); }\n    public void printMatrix(double[][] arr){ for(double a[]:arr) printArr(a); }\n    public void printMatrix(long[][] arr){ for(long a[]:arr) printArr(a); }\n    public void printMatrix(char[][] arr){ for(char a[]:arr) printArr(a); }\n    public void printMatrix(String[][] arr){ for(String a[]:arr) printArr(a); }\n\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Template code ends here\n\n\nclass Task {\n\n    final long MOD = (int)Math.pow(10,9)+7;\n\n    public void solve(int testNumber, InputReader sc, PrintWriter out, Debugger debug, Objectify objectify) {\n        \n        // write your code here\n        int k = sc.nextInt();\n\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n\n        for(int i = A; i <= B; ++i){\n            if (i%k == 0){\n                out.println(\"OK\");\n                return;\n                // break;\n            }\n        }\n\n        out.println(\"NG\");\n    }\n}", "label": 0}, {"id": 576, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.stream.IntStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.util.PriorityQueue;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.AbstractCollection;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            Dijkstra d = new Dijkstra(n);\n            for (int i = 0; i < n - 1; i++) {\n                int from = in.readInt() - 1;\n                int to = in.readInt() - 1;\n                d.addUndirectedEdge(from, to, 1);\n            }\n            long[] dist1 = d.getDist(0);\n            long[] distN = d.getDist(n - 1);\n            long count1 = IntStream.range(0, n)\n                    .filter(i -> dist1[i] <= distN[i])\n                    .count();\n            out.printLine(count1 > n - count1 ? \"Fennec\" : \"Snuke\");\n        }\n\n    }\n\n    static class Dijkstra {\n        int n;\n        ArrayList<Pair>[] G;\n        private long INF = Long.MAX_VALUE / 3;\n\n        public Dijkstra(int n) {\n            this.n = n;\n            G = new ArrayList[n];\n            for (int i = 0; i < n; i++) {\n                G[i] = new ArrayList<>();\n            }\n        }\n\n        public void addUndirectedEdge(int from, int to, long cost) {\n            G[from].add(new Pair(to, cost));\n            G[to].add(new Pair(from, cost));\n        }\n\n        public long[] getDist(int s) {\n            PriorityQueue<Pair> Q = new PriorityQueue<>();\n            Q.add(new Pair(s, 0));\n            long[] dist = new long[n];\n            Arrays.fill(dist, INF);\n            boolean[] used = new boolean[n];\n            while (!Q.isEmpty()) {\n                Pair p = Q.poll();\n                if (used[p.x]) continue;\n                used[p.x] = true;\n                dist[p.x] = p.y;\n\n                for (Pair edge : G[p.x]) {\n                    Q.add(new Pair(edge.x, p.y + edge.y));\n                }\n            }\n            return dist;\n        }\n\n        class Pair implements Comparable<Pair> {\n            int x;\n            long y;\n\n            Pair(int x, long y) {\n                this.x = x;\n                this.y = y;\n            }\n\n            public int compareTo(Pair p) {\n                return Long.compare(y, p.y);\n            }\n\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long[] a = new long[n];\n        long[] b = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextLong();\n        }\n        for (int i = 0; i < n; i++) {\n            b[i] = sc.nextLong();\n        }\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += b[i] - a[i];\n        }\n\n        long cnt = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] < b[i]) {\n                cnt += (b[i] - a[i] + 1) / 2;\n            }\n        }\n        if (cnt <= sum) {\n            System.out.println(\"Yes\");\n            return;\n        }\n        System.out.println(\"No\");\n    }\n}\n", "label": 0}, {"id": 496, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    private static int[] arr;\n\n    public static void main(String[] args) {\n\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        arr = Arrays.stream(input.split(\"\")).mapToInt(Integer::parseInt).toArray();\n\n        long sum = calc(0, arr.length - 1);\n        System.out.println(sum);\n    }\n\n    private static long calc(int position, int end) {\n        if (position > end) return 0;\n\n        long tmp = 0;\n        for (int i = position; i < end; i++) {\n            tmp += toInt(position, i) * Math.pow(2, (end - i - 1)) + calc(i + 1, end);\n        }\n        tmp += toInt(position, end);\n        return tmp;\n    }\n\n    private static long toInt(int start, int end) {\n        if (start == end) {\n//            System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + arr[start]);\n            return arr[start];\n        }\n\n        long tmp = 0;\n        for (int i = start; i <= end; i++) {\n            tmp += arr[i] * Math.pow(10, (end - i));\n        }\n//        System.out.println(\"start: \" + start + \" end: \" + end + \" -> \" + tmp);\n        return tmp;\n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tprivate void solve() {\n\t\tScanner io = new Scanner(System.in);\n\t\tint N = io.nextInt();\n\t\tint M = io.nextInt();\n\t\tboolean[] medium = new boolean[N];\n\t\tboolean[] ableToN = new boolean[N];\n\t\tfor(int i=0;i<M;i++){\n\t\t\tint a = io.nextInt()-1;\n\t\t\tint b = io.nextInt()-1;\n\t\t\tif(a==0) medium[b] = true;\n\t\t\tif(b==0) medium[a] = true;\n\t\t\tif(a==N-1) ableToN[b] = true;\n\t\t\tif(b==N-1) ableToN[a] = true;\n\t\t}\n\t\tfor(int i=0;i<N;i++){\n\t\t\tif(medium[i] && ableToN[i]){\n\t\t\t\tSystem.out.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n}", "label": 0}, {"id": 190, "code1": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "code2": "class Main {\n\tpublic static void main(String args[]){\n\t\tfor(int i=0;i<1000;i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 1}, {"id": 702, "code1": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.Queue;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint h = Integer.parseInt(sa[0]);\n\t\tint w = Integer.parseInt(sa[1]);\n\t\tchar[][] s = new char[h][w];\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\ts[i] = br.readLine().toCharArray();\n\t\t}\n\t\tbr.close();\n\n\t\tint[] dx = {0, 0, -1, 1};\n\t\tint[] dy = {-1, 1, 0, 0};\n\t\tboolean[][] visit = new boolean[h][w];\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < h; i++) {\n\t\t\tfor (int j = 0; j < w; j++) {\n\t\t\t\tif (visit[i][j]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong kuro = 0;\n\t\t\t\tlong siro = 0;\n\t\t\t\tQueue<Integer> que = new ArrayDeque<Integer>();\n\t\t\t\tque.add(i * 1000 + j);\n\t\t\t\tvisit[i][j] = true;\n\t\t\t\twhile (!que.isEmpty()) {\n\t\t\t\t\tint cur = que.poll();\n\t\t\t\t\tint x = cur / 1000;\n\t\t\t\t\tint y = cur % 1000;\n\t\t\t\t\tif (s[x][y] == '#') {\n\t\t\t\t\t\tkuro++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsiro++;\n\t\t\t\t\t}\n\t\t\t\t\tfor (int a = 0; a < 4; a++) {\n\t\t\t\t\t\tint xx = x + dx[a];\n\t\t\t\t\t\tint yy = y + dy[a];\n\t\t\t\t\t\tif (0 <= xx && xx < h && 0 <= yy && yy < w\n\t\t\t\t\t\t\t\t&& !visit[xx][yy] && s[x][y] != s[xx][yy]) {\n\t\t\t\t\t\t\tque.add(xx * 1000 + yy);\n\t\t\t\t\t\t\tvisit[xx][yy] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans += kuro * siro;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n\n    //input\n    int d = sc.nextInt();\n    /*\n    int[] c = new int[26]; //array of decrease\n    for(int i = 0; i < c.length; i++){\n      c[i] = sc.nextInt();\n    }\n    */\n\n    int[] c = new int[26];\n    for(int i = 0; i < 26; i++){\n      c[i] = sc.nextInt();\n    }\n\n    int[][] s = new int[d][26]; //two dimensional array of increase\n    for(int row = 0; row < s.length; row++){ //day\n      for(int col = 0; col < s[row].length; col++){ //contest number\n        s[row][col] = sc.nextInt();\n      }\n    }\n    int[] t = new int[d]; //array of contest numbers of the day\n    for(int i = 0; i < t.length; i++){\n      t[i] = 13;\n    }\n\n    //output\n    //based on increase\n    /*\n    int largestNum = s[0][0];\n    int largestNumRow = 0;\n    int largestNumCol = 0;\n    for(int row = 0; row < s.length; row++){\n      for(int col = 0; col < s[row].length; col++){\n        if( s[row][col] > largestNum ){\n          largestNum = s[row][col];\n          largestNumRow = row;\n          largestNumCol = col;\n        }\n      }\n    }\n\n    int largestNuM = c.get(0);\n    int largestNumPos = 0;\n    for(int j = 0; j < c.size(); j++){\n      if( c.get(j) > largestNuM ){\n        largestNuM = c.get(j);\n        largestNumPos = j;\n      }\n    }\n\n    for(int i = 0; i < d; i++){\n      if( largestNum > largestNuM ){\n        System.out.println(largestNumCol+1);\n      }else{\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n    /*\n\n    for(int m = 0; m < d; m++){\n      if( m%2 == 0 ){\n        System.out.println(largestNumCol+1);\n      }else{\n        int largestNuM = c.get(0);\n        int largestNumPos = 0;\n        for(int j = 0; j < c.size(); j++){\n          if( c.get(j) > largestNuM ){\n            largestNuM = c.get(j);\n            largestNumPos = j;\n          }\n        }\n        c.remove(largestNumPos);\n        System.out.println(largestNumPos+1);\n      }\n    }\n    */\n\n\n\n    for(int i = 0; i < d; i++){\n      System.out.println((int)(Math.random()*26+1));\n      //System.out.println(largestNumCol+1);\n    }\n\n    /*\n    int value = 0;\n    for(int i = 0; i < t.length; i++){\n      int contestNum = t[i]-1;\n      int day = i+1;\n      value += s[day-1][contestNum]; //increase\n      for(int j = 0; j < c.length; j++){\n        if( !(j == contestNum) ){\n          int daySinceLast = day;\n          for(int m = 0; m < i; m++){\n            if( j == t[m]-1 ){\n              daySinceLast = day-m-1;\n            }\n          }\n          value -= c[j]*(daySinceLast); //decrease (amount of decrease * days since last one)\n        }\n      }\n      System.out.println(value);\n    }\n    */\n\n\n  }\n}\n", "label": 0}, {"id": 76, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        double[] a = new double[]{sc.nextDouble(), sc.nextDouble(), sc.nextDouble()};\n        System.out.println(a[0] * a[1] * Math.sin((Math.PI / 180) * a[2]) / 2.0);\n        System.out.println(\n            a[0] + a[1] + Math.sqrt(a[0] * a[0] + a[1] * a[1] - 2 * a[0] * a[1] * Math.cos(Math.PI / 180 * a[2])));\n        System.out.println(a[1] * Math.sin(Math.PI / 180 * a[2]));\n    }\n}", "code2": "import java.util.Scanner;\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tdouble a = sc.nextDouble();\n\t\tdouble b = sc.nextDouble();\n\t\tdouble c = sc.nextDouble();\n\t\tdouble c1 = c*Math.PI/180;\n\t\t\n\t\tSystem.out.println(String.format(\"%f\", 0.5*a*b*Math.sin(c1))\n\t\t\t\t+ \" \" + String.format(\"%f\", a+b+Math.pow(a*a+b*b-2*a*b*Math.cos(c1), 0.5))\n\t\t\t\t+ \" \" + String.format(\"%f\", b*Math.sin(c1)));\n\t}\n}\n", "label": 1}, {"id": 361, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int count = Integer.valueOf(reader.readLine());\n        String s = reader.readLine();\n\n        long[][] dp = new long[count][count];\n        dp[0][0] = 1;\n        long modulo = 1_000_000_007;\n\n        for (int i = 1; i < count; ++i) {\n            if (s.charAt(i - 1) == '<') {\n                dp[i][0] = 0;\n                for (int j = 1; j <= i; ++j) {\n                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1];\n                    dp[i][j] %= modulo;\n                }\n            } else {\n                dp[i][i] = 0;\n                for (int j = i - 1; j >= 0; --j) {\n                    dp[i][j] = dp[i][j + 1] + dp[i - 1][j];\n                    dp[i][j] %= modulo;\n                }\n            }\n        }\n\n        long res = 0;\n        for (int i = 0; i < count; ++i) {\n            res += dp[count - 1][i];\n            res %= modulo;\n        }\n        System.out.println(res);\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint[] pri = new int[25000];\n\t\tpri[0] = 2;\n\t\tpri[1] = 3;\n\t\tpri[2] = 5;\n\t\tpri[3] = 7;\n\t\tpri[4] = 11;\n\t\tpri[5] = 13;\n\t\tpri[6] = 17;\n\t\tpri[7] = 19;\n\t\tpri[8] = 23;\n\t\tpri[9] = 29;\n\t\tint fl = 0;\n\t\tint a=0;\n\t\tint b=0;\n\t\tint c=0;\n\t\twhile(pri[a]<=250000){\n\t\t\tfl++;\n\t\t\tfor(int i=0;i<8;i++){\n\t\t\t\ta=0;\n\t\t\t\tb=0;\n\t\t\t\tc=0;\t\t\t\t\n\t\t\t\tif(i==0){\n\t\t\t\t\tc=1;\n\t\t\t\t}else if(i>0){\n\t\t\t\t\tc=pri[2+i];\n\t\t\t\t}\n\t\t\t\twhile(pri[a]!=0){\n\t\t\t\t\tif((30*fl + c)%pri[a]==0){\n\t\t\t\t\t\tb=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ta++;\n\t\t\t\t}\n\t\t\t\tif(b==0){\n\t\t\t\t\tpri[a]=(30*fl + c);\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t}\n\t\t\n\t\tboolean exit = true;\n\t\twhile(exit==true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0)exit=false;\n\t\t\tif(exit==true){\n\t\t\t\tint sum=-1;\n\t\t\t\tint i=0;\n\t\t\t\twhile(true){\n\t\t\t\t\tif(pri[i]>n)sum++;\n\t\t\t\t\tif(pri[i]>2*n)break;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tSystem.out.println(sum);\n\t\t\t}\n\t\t}\n\t}\n\t\n}", "label": 0}, {"id": 776, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.NoSuchElementException;\nimport java.util.Random;\npublic class Main {\n\tstatic final long C =  1000000007;\n\tstatic final int CY = 1000000000;\n\tstatic final int INF = Integer.MAX_VALUE/2;\n\tStringBuilder sb;\n\t//\u30bb\u30c3\u30c8\n\tclass Set<F,S> {\n\t\tF f;\n\t\tS s;\n\t\tSet(F f, S s) {this.f = f;this.s = s;}\n\t}\n\tint[][] G;\n\tMap<Integer,List<Integer>> Genb = new HashMap<>();\n\tint V;\n\tint E;\n\tint Venb;\n\tint Eenb;\n\tlong START_TIME;\n\tint GenbSize;//Genb\u30b0\u30e9\u30d5\u306e1\u8fba\n\tRandom rand = new Random();\n\tpublic void calc() {\n\n\t\tsb = new StringBuilder();\n\n\n\t\t//\u5165\u529b\u51e6\u7406\n\t\tIO sc = new IO();\n\t\tchar[] s = sc.next().toCharArray();\n\t\tlong ans = s.length/2 + s.length%2;\n\t\tchar f = s[0];\n\t\tlong min = INF;\n\t\tfor (int i=1; i < s.length;i++) {\n\t\t\tif (s[i] != f) {\n\t\t\t\tmin = Math.min(min, Math.max(i, s.length-i));\n\t\t\t\tf = s[i];\n\t\t\t}else {\n\t\t\t}\n\t\t}\n\n\t\tans = Math.min(min,s.length);\n\n\t\tSystem.out.println(ans);\n\n\n\n\t}\n\t//\u5f97\u70b9\u8a08\u7b97\u30e1\u30bd\u30c3\u30c9\n\tpublic int calcScore(int[] ans) {\n\t\tint ret = 0;\n\t\tfor (int i=0; i < Venb; i++) {\n\t\t\tif (ans[i] != 0) {\n\t\t\t\tfor(int t: Genb.get(i)) {\n\t\t\t\t\t//\u81ea\u5206\u3088\u308a\u5c0f\u3055\u3044\u8fba\u306b\u5bfe\u3057\u3066\u306f2\u91cd\u306b\u306a\u308b\u306e\u3067\u8db3\u3055\u306a\u3044\n\t\t\t\t\t//\u9802\u70b9\u306b\u306a\u306b\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u306a\u3044\u5834\u5408\u3082\u8db3\u3055\u306a\u3044\n\t\t\t\t\tif (t < i || ans[t] == 0) continue;\n\t\t\t\t\t//\u3053\u306e\u8fba\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u308b\u91cd\u307f\u8db3\u3059\n\t\t\t\t\tret += G[ans[i]][ans[t]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tmain.calc();\n\n\t}\n}\nclass IO extends PrintWriter {\n\tprivate final InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic IO() { this(System.in);}\n\tpublic IO(InputStream source) { super(System.out); this.in = source;}\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tprivate static boolean isNewLine(int c) { return c == '\\n' || c == '\\r';}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic boolean hasNextLine() { while(hasNextByte() && isNewLine(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic char[] nextCharArray(int len) {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tchar[] s = new char[len];\n\t\tint i = 0;\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tif (i == len) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\ts[i++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn s;\n\t}\n\tpublic String nextLine() {\n\t\tif (!hasNextLine()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(!isNewLine(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\treturn (int) nl;\n\t}\n\tpublic char nextChar() {\n\t\tif (!hasNext()) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\treturn (char) readByte();\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n\tpublic int[] nextIntArray(int n) { int[] a = new int[n]; for(int i=0;i<n;i++) a[i] = nextInt(); return a;}\n\tpublic long[] nextLongArray(int n) { long[] a = new long[n]; for(int i=0;i<n;i++) a[i] = nextLong(); return a;}\n\tpublic double[] nextDoubleArray(int n) { double[] a = new double[n]; for(int i=0;i<n;i++) a[i] = nextDouble(); return a;}\n\tpublic void nextIntArrays(int[]... a) { for(int i=0;i<a[0].length;i++) for(int j=0;j<a.length;j++) a[j][i] = nextInt();}\n\tpublic int[][] nextIntMatrix(int n,int m) { int[][] a = new int[n][]; for(int i=0;i<n;i++) a[i] = nextIntArray(m); return a;}\n\tpublic char[][] nextCharMap(int n,int m) { char[][] a = new char[n][]; for(int i=0;i<n;i++) a[i] = nextCharArray(m); return a;}\n\tpublic void close() { super.close(); try {in.close();} catch (IOException e) {}}\n}", "code2": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tint w, h;\n\tint sx, sy;\n\tint gx, gy;\n\tint[][] a;\n\n\tvoid run(){\n\t\tfor(;;){\n\t\t\tw=sc.nextInt();\n\t\t\th=sc.nextInt();\n\t\t\tif((w|h)==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsx=sc.nextInt()-1;\n\t\t\tsy=sc.nextInt()-1;\n\t\t\tgx=sc.nextInt()-1;\n\t\t\tgy=sc.nextInt()-1;\n\t\t\tint n=sc.nextInt();\n\t\t\ta=new int[h][w];\n\t\t\tfor(int k=0; k<n; k++){\n\t\t\t\tint c=sc.nextInt();\n\t\t\t\tint d=sc.nextInt();\n\t\t\t\tint x=sc.nextInt()-1;\n\t\t\t\tint y=sc.nextInt()-1;\n\t\t\t\tfor(int j=0; j<2; j++){\n\t\t\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\t\t\tif(d==0){\n\t\t\t\t\t\t\ta[y+j][x+i]=c;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\ta[y+i][x+j]=c;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve(){\n\t\tLinkedList<P> que=new LinkedList<P>();\n\t\tboolean[][] visited=new boolean[h][w];\n\n\t\tint[] dx={0, 0, -1, 1};\n\t\tint[] dy={-1, 1, 0, 0};\n\n\t\tque.offer(new P(sx, sy));\n\t\tvisited[sy][sx]=true;\n\n\t\tfor(; !que.isEmpty();){\n\t\t\tP p=que.poll();\n\t\t\tfor(int i=0; i<4; i++){\n\t\t\t\tP q=new P(p.x+dx[i], p.y+dy[i]);\n\t\t\t\tif(q.x>=0&&q.x<w&&q.y>=0&&q.y<h&&a[q.y][q.x]==a[sy][sx]\n\t\t\t\t\t\t&&!visited[q.y][q.x]){\n\t\t\t\t\tque.offer(q);\n\t\t\t\t\tvisited[q.y][q.x]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintln(visited[gy][gx]?\"OK\":\"NG\");\n\t}\n\n\tclass P{\n\t\tint x, y;\n\n\t\tP(int x, int y){\n\t\t\tthis.x=x;\n\t\t\tthis.y=y;\n\t\t}\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "label": 0}, {"id": 673, "code1": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "code2": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 683, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "code2": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\n\tstatic void solve()\n\t{\n\t\tint n = ni();\n\t\tint mod = 1000000007;\n\t\tlong[][] res =  guessLeaned(1000000007, \n\t\t\t\t1, 4, 16, 84, 516, 3696, 30096, 275040, 2786400, 31000320, 375736320, 928152292\n\t\t\t\t);\n\t\t\n\t\tlong[] u = {1, 4, 16};\n\t\tfor(int i = 3;i <= n;i++){\n\t\t\tlong v = f(res, u, i, mod);\n\t\t\tfor(int j = 0;j < 2;j++){\n\t\t\t\tu[j] = u[j+1];\n\t\t\t}\n\t\t\tu[2] = v;\n\t\t}\n\t\tout.println(u[0]);\n\t}\n\t\n\tpublic static long f(long[][] ged, long[] prevs, long x, int mod)\n\t{\n\t\tint n = ged.length;\n\t\tassert prevs.length == n-1;\n\t\tx -= n-1;\n\t\t\n\t\tlong s = 0;\n\t\tlong tar = 0;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tlong co = 0;\n\t\t\tfor(int j = ged[i].length-1;j >= 0;j--){\n\t\t\t\tco = (co * x + ged[i][j]) % mod;\n\t\t\t}\n\t\t\tif(i < n-1){\n\t\t\t\ts += co * prevs[i];\n\t\t\t\ts %= mod;\n\t\t\t}else{\n\t\t\t\ttar = co;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong ret = -invl(tar, mod) * s % mod;\n\t\tif(ret < 0)ret += mod;\n\t\treturn ret;\n\t}\n\t\n\tpublic static long[][] guessLeaned(int mod, long... a)\n\t{\n\t\tint n = a.length;\n\t\t\n\t\t// #formula >= #variable\n\t\t// n-r+2 >= r(r+1)/2\n\t\tfor(int r = n;r >= 1;r--){\n\t\t\tif(n-r+2 < r*(r+1)/2)continue;\n\t\t\tint[][] M = new int[n-r+2][r*(r+1)/2];\n\t\t\tfor(int i = 0;i < n-r+1;i++){\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int j = 0;j < r;j++){\n\t\t\t\t\tlong prod = 1;\n\t\t\t\t\tfor(int k = 0;k <= r-j-1;k++){\n\t\t\t\t\t\tM[i][p++] = (int)(prod*a[i+j]%mod);\n\t\t\t\t\t\tprod = prod * i % mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tM[n-r+1][0] = 1;\n\t\t\t\n\t\t\tint[] v = new int[n-r+2];\n\t\t\tv[n-r+1] = 1;\n\t\t\t\n\t\t\tResult res = gaussElimination(M, v, mod);\n\t\t\tif(res.exists){\n\t\t\t\tlong[][] ret = new long[r][];\n\t\t\t\tint p = 0;\n\t\t\t\tfor(int i = 0;i < r;i++){\n\t\t\t\t\tret[i] = new long[r-i];\n\t\t\t\t\tfor(int j = 0;j < r-i;j++){\n\t\t\t\t\t\tret[i][j] = res.sol[p++];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic static Result gaussElimination(int[][] M, int[] v, int mod)\n\t{\n\t\tint n = M.length, m = M[0].length;\n\t\tint[] head = new int[n];\n\t\t\n\t\t// if not needed, comment out.\n\t\tfor(int[] row : M){\n\t\t\tfor(int i = 0;i < row.length;i++){\n\t\t\t\trow[i] %= mod;\n\t\t\t\tif(row[i] < 0)row[i] += mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forward Elimination\n\t\tint row = 0;\n\t\tfor(int col = 0;col < m;col++){\n\t\t\t// select pivot\n\t\t\tboolean pivotFound = false;\n\t\t\tout:\n\t\t\tfor(int prow = row;prow < n;prow++){\n\t\t\t\tif(M[prow][col] != 0){\n\t\t\t\t\t// pivot found\n\t\t\t\t\tif(prow != row){\n\t\t\t\t\t\t// swap rows\n\t\t\t\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\t\t\t\tint u = M[prow][k]; M[prow][k] = M[row][k]; M[row][k] = u;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint dum = v[prow]; v[prow] = v[row]; v[row] = dum;\n\t\t\t\t\t}\n\t\t\t\t\tpivotFound = true;\n\t\t\t\t\tbreak out;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!pivotFound)continue;\n\t\t\thead[row] = col;\n\t\t\t\n\t\t\t// diag to 1\n\t\t\tlong imul = invl(M[row][col], mod);\n\t\t\tfor(int k = 0;k < m;k++){\n\t\t\t\tM[row][k] = (int)(M[row][k] * imul % mod);\n\t\t\t}\n\t\t\tv[row] = (int)(v[row] * imul % mod);\n\t\t\t\n\t\t\tfor(int j = row+1;j < n;j++){\n\t\t\t\tif(M[j][col] != 0){\n\t\t\t\t\tlong mul = mod-M[j][col];\n\t\t\t\t\tfor(int k = col;k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[row][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[row] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t\trow++;\n\t\t}\n\t\t\n\t\tResult ret = new Result();\n\t\tret.mat = M;\n\t\tfor(int i = row;i < n;i++){\n\t\t\tif(v[i] != 0){\n\t\t\t\tret.rank = row;\n\t\t\t\tret.exists = false;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = row-1;i >= 0;i--){\n\t\t\tfor(int j = i-1;j >= 0;j--){\n\t\t\t\tif(M[j][head[i]] != 0){\n\t\t\t\t\tlong mul = mod-M[j][head[i]];\n\t\t\t\t\tfor(int k = head[i];k < m;k++){\n\t\t\t\t\t\tM[j][k] = (int)((M[j][k] + M[i][k] * mul) % mod);\n\t\t\t\t\t}\n\t\t\t\t\tv[j] = (int)((v[j] + v[i] * mul) % mod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] retv = new int[m];\n\t\tfor(int i = 0;i < row;i++){\n\t\t\tretv[head[i]] = v[i];\n\t\t}\n\t\t\n\t\tret.sol = retv;\n\t\tret.rank = row;\n\t\tret.exists = true;\n\t\treturn ret;\n\t}\n\t\n\tpublic static class Result\n\t{\n\t\tpublic int[][] mat;\n\t\tpublic int[] sol;\n\t\tpublic int rank;\n\t\tpublic boolean exists;\n\t}\n\t\n\tpublic static long invl(long a, long mod) {\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\treturn p < 0 ? p + mod : p;\n\t}\n\n\n\t\n\tpublic static long C(int n, int r, int mod, int[][] fif) {\n\t\tif (n < 0 || r < 0 || r > n)\n\t\t\treturn 0;\n\t\treturn (long) fif[0][n] * fif[1][r] % mod * fif[1][n - r] % mod;\n\t}\n\n\t\n\tpublic static int[][] enumFIF(int n, int mod) {\n\t\tint[] f = new int[n + 1];\n\t\tint[] invf = new int[n + 1];\n\t\tf[0] = 1;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tf[i] = (int) ((long) f[i - 1] * i % mod);\n\t\t}\n\t\tlong a = f[n];\n\t\tlong b = mod;\n\t\tlong p = 1, q = 0;\n\t\twhile (b > 0) {\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a;\n\t\t\ta = b;\n\t\t\tb = d % b;\n\t\t\td = p;\n\t\t\tp = q;\n\t\t\tq = d - c * q;\n\t\t}\n\t\tinvf[n] = (int) (p < 0 ? p + mod : p);\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tinvf[i] = (int) ((long) invf[i + 1] * (i + 1) % mod);\n\t\t}\n\t\treturn new int[][] { f, invf };\n\t}\n\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\n", "label": 0}, {"id": 738, "code1": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner scan = new Scanner(System.in);\n\t\tint[] v = new int[500000];\n        for(int i = 0;i < 500000;i++){\n            v[i] = 1;\n        }\n        int p = 3;\n        while(true){\n            if(p*p > 1000000){\n                break;\n            }else{\n                if(v[(p-1)/2] == 0){\n                    p += 2;\n                }else{\n                    int t = p*p;\n                    while(t < 1000000){\n                        v[(t-1)/2] = 0;\n                        t += 2*p;\n                    }\n                    p += 2;\n                }\n            }\n        }\n        v[0] = 0;\n\t\twhile(scan.hasNext()){\n\t\t\tint n = scan.nextInt();\n\t\t\tif(n == 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint count = 0;\n\t\t\tfor(int i = 1;i < n/2;i++){\n\t\t\t\tif(v[i] != 1){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(v[(n-2*i-2)/2] == 1){\n\t\t\t\t\tcount += ((n-2*i-2)/2 == i)?2:1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count/2);\n        }\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.awt.Point;\n\npublic class Main {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n    int n;\n    void solve()\n    {\n        n = ni();\n        int[] d  = new int[n+1];\n        d[0] = 0;\n        for(int i = 0; i < n; i++){\n            d[i+1] = ni();\n        }\n        n++;\n        boolean[] seen = new boolean[25];\n        int min = 0;\n        int ans = 0;\n        for(int i = 0; i <= 24; i++){\n            int[][] e = new int[n][2];\n            e[0][0] = i;\n            e[0][1] = i;\n            for(int j = 0; j < n-1; j++){\n                e[j+1][0] = (d[j+1]+i)%24;\n                e[j+1][1] = (-d[j+1]+i+24)%24;\n            }\n            int left = 1;\n            int right = 24;\n            while(left+1<right){\n                int res = (left+right)/2;\n                if(f(e,res,0,seen)) left = res;\n                else{\n                    right = res;\n                }\n            }\n            if(left>min){\n                // if(left==5){\n                //     out.println(i);\n                // }\n                if(left == 1){\n                    if(f(e,left,0,seen)){\n                        min = left;\n                    }\n                }\n                else min = left;\n            }\n        }\n\n        ans = min;\n        out.println(ans);\n    }\n\n    boolean f(int[][] d, int sub, int k, boolean[] seen){\n        if(k==n){\n            return true;\n        }\n        boolean res = false;\n        for(int i = 0; i < 2; i++){\n            boolean[] seenc  = new boolean[25];\n            for(int j = 0; j <= 24; j++) seenc[j] = seen[j];\n            seenc[d[k][i]] = true;\n            if(d[k][i]==0) seenc[24] = true;\n            if(d[k][i]==24) seenc[0] = true;\n            for(int j = 0; j <= 24; j++){\n                if(d[k][i]-sub < j && j < d[k][i]+sub) seenc[j] = true;\n                if(d[k][i]-sub < 0 && j > d[k][i]-sub+24) seenc[j] = true;\n                if(d[k][i]+sub > 24 && j < d[k][i]+sub-24) seenc[j] = true;\n            }\n            // for(int g = 0; g <= 24; g++){\n            //     if(seenc[g]) out.print(g);\n            // }\n            // out.println();\n            // out.println(d[k][i]);\n            // if(!seen[d[k][i]])out.println(\"ok\");\n            // else out.println(\"ng\");\n            if(!seen[d[k][i]]){\n                if(d[k][i]==0){\n                    if(!seen[24])res |= f(d, sub, k+1, seenc);\n                } \n                else if(d[k][i]==24){\n                    if(!seen[0])res |= f(d, sub, k+1, seenc);\n                } \n                else res |= f(d, sub, k+1, seenc);\n            }\n        }  \n        return res;\n    }   \n    \n    void run() throws Exception\n    {\n        is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n        \n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        if(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n    }\n    \n    public static void main(String[] args) throws Exception { new Main().run(); }\n    \n    private byte[] inbuf = new byte[1024];\n    private int lenbuf = 0, ptrbuf = 0;\n    \n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n    \n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n    \n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b) && b != ' ')){\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n    \n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n    \n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n        \n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private static void tr(Object... o) { System.out.println(Arrays.deepToString(o)); }\n\n    static class ArrayUtils {\n        public static void fill(double[][] array, double value) {\n            for (double[] a : array) Arrays.fill(a, value);\n        }\n \n        public static void fill(double[][][] array, double value) {\n            for (double[][] l : array) fill(l, value);\n        } \n    }\n}", "label": 0}, {"id": 81, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n    \tScanner sc = new Scanner(System.in);\n      \tint A,B,C;\n      \tA = sc.nextInt();\n      \tB = sc.nextInt();\n      \tC = sc.nextInt();\n      \tif ((A < C && C < B) || (B < C && C < A)) {\n            \tSystem.out.print(\"Yes\");\n        }  else {\n        \tSystem.out.print(\"No\");\n        }   \n    }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n\n        int min = Math.min(a, b);\n        int max = Math.max(a, b);\n        \n        boolean ans = false;\n        if (min < c && c < max)\n            ans = true;\n        System.out.println(ans ? \"Yes\" : \"No\");\n    }\n}", "label": 1}, {"id": 586, "code1": "import java.util.*;\n\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int[] a = new int[N];\n        int[] b = new int[N];\n        for(int i = 0; i < N; i++)\n            a[i] = sc.nextInt();\n        for(int i = 0; i < N; i++)\n            b[i] = sc.nextInt();\n        sc.close();\n        long sum1 = 0;\n        long sum2 = 0;\n        for(int i = 0; i < N; i++){\n            if(a[i] > b[i]){\n                sum1 += (a[i]-b[i]);\n            } else {\n                sum2 += (b[i]-a[i])/2;\n            }\n        }\n        if(sum1 <= sum2)\n            System.out.println(\"Yes\");\n        else\n            System.out.println(\"No\");\n\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    private static class FastScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        int array[] = new int[3], num = 0;\n        int count = 0;\n\n        while (count < 3) {\n            num = sc.nextInt();\n            if (0 < num && num < 10) {\n                array[count] = num;\n                count++;\n            }\n        }\n\n\n        for (int i = 0; i < 3; i++) {\n            for (int j = i + 1; j < 3; j++) {\n                if (array[i] == array[j]) {\n                    count = count - 1;\n                }\n            }\n        }\n        if (count == 2) {\n            System.out.print(\"Yes\");\n        } else {\n            System.out.print(\"No\");\n        }\n    }\n}\n", "label": 0}, {"id": 543, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n        int[] a = new int[N];\n        for (int i=0; i<N; i++) {\n            a[i] = sc.nextInt();\n        }\n\n        int[] ans = solve(N, a);\n\n        for (int i=0; i<N; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n\n    private static int[] solve(int N, int[] a) {\n        int[] ans = new int[N];\n        int total = Math.abs(a[0]) + Math.abs(a[N-1]);\n\n        for (int i=0; i<N-1; i++) {\n            total += Math.abs(a[i+1] - a[i]);\n        }\n\n        for (int i=0; i<N; i++) {\n            ans[i] = total;\n\n            if (i == 0) {\n                if (0 <= a[i] && a[i] <= a[i+1]\n                        || a[i+1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            } else if (i == N-1) {\n                if (0 <= a[i] && a[i] <= a[i-1]\n                        || a[i-1] <= a[i] && a[i] <= 0) {\n//                    System.err.println(\"ans[\" + i + \"] : skip\");\n                    continue;\n                }\n\n                ans[i] = total - Math.abs(a[i] - 0) - Math.abs(a[i] - a[i-1]) + Math.abs(a[i-1] - 0);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n            else if (a[i-1] <= a[i] && a[i] <= a[i+1]\n                    || a[i+1] <= a[i] && a[i] < a[i-1]) {\n//                System.err.println(\"ans[\" + i + \"] : skip\");\n                continue;\n            } else {\n                ans[i] = total - Math.abs(a[i] - a[i-1]) - Math.abs(a[i] - a[i+1]) + Math.abs(a[i+1] - a[i-1]);\n//                System.err.println(\"ans[\" + i + \"] = \" + ans[i]);\n            }\n        }\n\n        return ans;\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tString[][] a = new String[n][];\n\t\t\tint p;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ts = sc.next().replaceAll(\":\", \" \").replaceAll(\",\", \" \");\n\t\t\t\ta[i] = s.split(\" \");\n\t\t\t\tp = a[i].length-1;\n\t\t\t\ta[i][p] = a[i][p].substring(0,a[i][p].length()-1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tArrayList<String> list = new ArrayList<String>();\n\t\t\tfor(int i=1;i<a[0].length;i++) list.add(a[0][i]);\n\t\t\t\n\t\t\tboolean flag;\n\t\t\twhile(true){\n\t\t\t\tflag = false;\n\t\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\t\tif(list.contains(a[i][0])==true){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\tlist.remove(list.indexOf(a[i][0]));\n\t\t\t\t\t\tfor(int j=1;j<a[i].length;j++){\n\t\t\t\t\t\t\tif(list.contains(a[i][j])==false) list.add(a[i][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==false) break;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(list.size());\n\t\t}\t\n\t}\t\n}", "label": 0}, {"id": 32, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.text.DecimalFormat;\n\npublic class Main {\n\tpublic static void main(String[] args)throws Exception{\n\t\tInputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n    \n        \n        DecimalFormat df = new DecimalFormat(\"0.00000\");\n        while (true)\n        {\n        \tint n = Integer.parseInt(br.readLine());\n        \tif (n == 0)\n        \t\tbreak;\n        \tString[] tensu = br.readLine().split(\" \");\n        \t\n        \tdouble sum = 0;\n        \tdouble asum = 0;\n        \tdouble average = 0;\n        \tdouble hensa = 0;\n        \tfor (int i = 0; i < n; i++)\n        \t{\n        \t\tsum += Double.parseDouble(tensu[i]);\n        \t}\n        \taverage = sum / n;\n        \tfor (int i = 0; i < n; i++)\n        \t{\n        \t\tasum += Math.pow(Double.parseDouble(tensu[i]) - average, 2);\n        \t}\n        \t\n        \thensa = Math.sqrt(asum / n);\n        \tSystem.out.println(df.format(hensa));\n        }\n    \t\n\t}\n}", "label": 1}, {"id": 55, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "code2": "import java.util.Scanner;\n\tpublic class Main{\n\t\tpublic static void main(String args[]){\n\t\t\tScanner sc = new Scanner(System.in);\n\t\t\tint count[] = {0,0,0,0};\n\t\t\twhile(sc.hasNext()){\n\t\t\t\tString str = sc.nextLine();\n\t\t\t\tString [] blood = str.split(\",\");\n\t\t\t\t\tif(blood[1].equals(\"A\")){\n\t\t\t\t\t\tcount[0]++;\n\t\t\t\t\t}else if(blood[1].equals(\"B\")){\n\t\t\t\t\t\tcount[1]++;\n\t\t\t\t\t}else if(blood[1].equals(\"AB\")){\n\t\t\t\t\t\tcount[2]++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcount[3]++;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0; i < 4; i++ ){\n\t\t\t\tSystem.out.println(count[i]);\n\t\t\t}\n\t\t}\n\t}\t\t", "label": 1}, {"id": 185, "code1": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String a = sc.next();\n        String b = sc.next();\n        if(a.equals(b)){\n            System.out.println('H');\n        }else{\n            System.out.println('D');\n        }\n    }\n}", "label": 1}, {"id": 481, "code1": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "code2": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint[] total = new int[3];\n\n\t\ttotal[0] = sc.nextInt();\n\t\ttotal[1] = sc.nextInt();\n\t\ttotal[2] = sc.nextInt();\n\n\t\tsc.close();\n\n\t\tArrays.sort(total);\n\n\t\tSystem.out.println(total[0] + total[1]);\n\t}\n}", "label": 0}, {"id": 515, "code1": "import java.util.Scanner;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\tprivate static final int INF = (int)1e9;\n\n\tstatic class Pair {\n\t\tint first;\n\t\tint second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn first + second;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object other) {\n\t\t\tif (other instanceof Pair) {\n\t\t\t\tPair p = (Pair)other;\n\n\t\t\t\treturn p.first == first && p.second == second;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner in = new Scanner(System.in)) {\n\t\t\tint n = in.nextInt();\n\t\t\tList<Integer>[] g = new ArrayList[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tg[i] = new ArrayList<>();\n\n\t\t\tint m = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tMap<Pair, Integer> dist = new HashMap<>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint f = in.nextInt();\n\t\t\t\tint t = in.nextInt();\n\t\t\t\tint w = in.nextInt();\n\n\t\t\t\tg[f].add(t);\n\t\t\t\tdist.put(new Pair(f, t), w);\n\t\t\t}\n\n\t\t\tdijkstra(g, n, dist, r);\n\t\t} catch (Exception ex) {\n\t\t\tthrow new RuntimeException(ex);\n\t\t}\n\t}\n\n\tpublic static void dijkstra(List<Integer> g[], int n, Map<Pair, Integer> dist, int s) {\n\t\tint[] d = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\td[i] = INF;\n\n\t\td[s] = 0;\n\t\tPriorityQueue<Pair> pq = new PriorityQueue<>((x, y) -> x.second-y.second);\n\t\tpq.add(new Pair(s, 0));\n\n\t\twhile (!pq.isEmpty()) {\n\t\t\tPair p = pq.remove();\n\n\t\t\tfor (int v : g[p.first]) {\n\t\t\t\tint dd = d[p.first] + dist.get(new Pair(p.first, v));\n\t\t\t\tif (dd < d[v]) {\n\t\t\t\t\td[v] = dd;\n\t\t\t\t\tpq.add(new Pair(v, d[v]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (d[i] == INF)\n\t\t\t\tSystem.out.println(\"INF\");\n\t\t\telse\n\t\t\t\tSystem.out.println(d[i]);\n\t\t}\n\t}\n}", "code2": "// -*- coding: utf-8 -*-\n//import java.awt.*;\nimport java.io.*;\nimport java.math.*;\nimport java.text.*;\nimport java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream;\n    if (args.length > 0 && args[0].equals(\"devTesting\")) {\n      try {\n        inputStream = new FileInputStream(args[1]);\n      } catch(FileNotFoundException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      inputStream = System.in;\n    }\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskC solver = new TaskC();\n    int testCase = 1;\n    solver.solve(1, in, out);\n    out.close();\n  }\n  \n  static class TaskC {\n    long h, w;\n    \n    void solve(int testNumber, InputReader in, PrintWriter out) {\n      h = in.nextInt();\n      w = in.nextInt();\n      char[][] superpost = new char[(int) h][];\n      for (int i = 0; i < h; ++i)\n        superpost[i] = in.next().toCharArray();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 0 && j < w - 1 || j == 0 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n        out.println();\n      }\n      out.println();\n      for (int i = 0; i < h; ++i) {\n        for (int j = 0; j < w; ++j)\n          if (i % 2 == 1 && j > 0 || j == w - 1 || superpost[i][j] == '#')\n            out.print('#');\n          else\n            out.print('.');\n          out.println();\n      }\n    }\n    \n  }\n      \n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream));\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n    \n    public String nextLine() {\n      try {\n        return reader.readLine();\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n    \n    public double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    public boolean hasInput() {\n      try {\n        if (tokenizer != null && tokenizer.hasMoreTokens()) {\n          return true;\n        }\n        reader.mark(1);\n        int ch = reader.read();\n        if (ch != -1) {\n          reader.reset();\n          return true;\n        }\n        return false;\n      } catch(IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    \n  }\n}\n", "label": 0}, {"id": 184, "code1": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString AtCoDeer = sc.next();\n\t\tString TopCoDeer = sc.next();\n\n\t\tif(AtCoDeer.equals(TopCoDeer)){\n\t\t\tSystem.out.println(\"H\");\n\t\t}else {\n\t\t\tSystem.out.println(\"D\");\n\t\t}\n\t}\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar a=scan.next().charAt(0);\n\t\tchar b=scan.next().charAt(0);\n\t\tif(a=='H' && b!='D') System.out.println(\"H\");\n\t\telse if(b=='H' && a!='D') System.out.println(\"H\");\n\t\telse if(a=='D' && b=='D') System.out.println(\"H\");\n\t\telse System.out.println(\"D\");\n\t}\n\n}\n", "label": 1}, {"id": 242, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args){\n    \tScanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        do{\n        \tint n = sc.nextInt();\n        \tint sum = 0;\n        \tfor(int i = 0;i < n;i++){\n        \t\tsum += Math.abs(sc.nextInt() - sc.nextInt());\n        \t}\n        \tif(sum >= t){\n        \t\tSystem.out.println(\"OK\");\n        \t}else{\n        \t\tSystem.out.println(t - sum);\n        \t}\n        } while((t = sc.nextInt()) != 0);\n    }\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint t = sc.nextInt();\n\t\t\tif(t==0)break;\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tt += (sc.nextInt() - sc.nextInt());\n\t\t\t}\n\t\t\t\n\t\t\tif(t<=0) System.out.println(\"OK\");\n\t\t\telse System.out.println(t);\n\t\t}\n\t}\t\n}", "label": 1}, {"id": 454, "code1": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);  \n\t\twhile(true){\n\t\t\t    int n=sc.nextInt();\n\t\t\t    int x=sc.nextInt();\n\t\t\t    if(n==0&&x==0)break;\n\t\t\t    int cnt=0;\n\t\t\t    for(int i=1;i<=n;i++){\n\t\t\t        for(int j=i+1;j<=n;j++){\n\t\t\t            for(int k=j+1;k<=n;k++){\n\t\t\t                if(i+j+k==x)cnt++;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    System.out.println(cnt);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n       int ar[]=new int[] {0,0,0,0};\n       for(int i=0;i<3;i++)\n       {\n           int a=sc.nextInt();\n           int b=sc.nextInt();\n           ar[a-1]+=1;\n           ar[b-1]+=1;\n       }\n       \n       for(int i = 0; i < 4; i++) {\n\t\t\tif(ar[i] < 1 || ar[i] > 2) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(\"YES\");\n       \n//       for(int i:ar)\n//       {\n//           if(i>2)\n//           {\n//               System.out.println(\"NO\");\n//               System.exit(0);\n//           }\n//       }\n//       System.out.println(\"YES\");\n    }\n}", "label": 0}, {"id": 143, "code1": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt(),b = scanner.nextInt(),c = scanner.nextInt();\n\t\tint[] x = {a,b,c};\n\t\tArrays.sort(x);\n\t\tSystem.out.println(x[0]+x[1]);\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner scanner;\n\tpublic static void main(String[] args) {\n\t    scanner = new Scanner(System.in);\n\n\t    int a=gi();\n\t    int b=gi();\n\t    int c=gi();\n\n\n\n        System.out.println(Math.min(Math.min(a+b, b+c), c+a));\n//        if (b-a<=0) {\n//        \tSystem.out.print(Math.);\n//        }else if (b-a>x){\n//            System.out.print(\"dangerous\");\n//        } else {\n//        \tSystem.out.print(\"safe\");\n//        }\n\n\n\t}\n\n\t// \u6587\u5b57\u5217\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static String gs() {\n\t\treturn scanner.next();\n\t}\n\n\t// int\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static int gi() {\n\t\treturn Integer.parseInt(scanner.next());\n\t}\n\n\t// long\u3068\u3057\u3066\u5165\u529b\u3092\u53d6\u5f97\n\tpublic static long gl() {\n\t\treturn Long.parseLong(scanner.next());\n\t}\n}", "label": 1}, {"id": 611, "code1": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint l = sc.nextInt();\n\t\tint t = sc.nextInt();\n\t\tint[] x = new int[n];\n\t\tint[] w = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tx[i] = sc.nextInt();\n\t\t\tw[i] = sc.nextInt();\n\t\t}\n\n\t\tint cnt = 0;\n\t\tfor(int i=1; i<n; i++){\n\t\t\tif(w[0]==1 && w[i]==2){\n\t\t\t\tif(t*2>=x[i]-x[0]){\n\t\t\t\t\tcnt += (1+(t*2-x[i]+x[0])/l);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(w[0]==2 && w[i]==1){\n\t\t\t\tif(t*2>=l-x[i]+x[0]){\n\t\t\t\t\tcnt -= (1+(t*2-l+x[i]-x[0])/l);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(w[0]==1){\n\t\t\tcnt %= n;\n\t\t}\n\t\telse{\n\t\t\tcnt = ((cnt%n)+n)%n;\n\t\t}\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(w[i]==1){\n\t\t\t\tx[i] = (x[i]+t)%l;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tx[i] = ((x[i]-t)%l+l)%l;\n\t\t\t}\n\t\t}\n\t\tint dist0 = x[0];\n\t\tArrays.sort(x);\n\t\tint index0 = 0;\n\t\tif(w[0]==1){\n\t\t\tfor(int i=n-1; i>=0; i--){\n\t\t\t\tif(x[i]==dist0){\n\t\t\t\t\tindex0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tif(x[i]==dist0){\n\t\t\t\t\tindex0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i<n; i++){\n\t\t\tSystem.out.println(x[(index0-cnt+n+i)%n]);\n\t\t}\n\t}\n}", "code2": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        ArrayList<Integer> list = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            list.add(scanner.nextInt());\n        }\n        list.sort((val1, val2) -> val1 - val2);\n        int b = list.get(0);\n        for (int i = 1; i < list.size(); i++) {\n            int a = list.get(i);\n            int r = a % b;\n            while (r != 0) {\n                a = b;\n                b = r;\n                r = a % b;\n            }\n        }\n        System.out.println(b);\n    }\n}", "label": 0}, {"id": 127, "code1": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic final class Main{\n    public static void main(String[] args){\n        FastScanner stdIn = new FastScanner(System.in);\n        long a = stdIn.nextLong();\n        long b = stdIn.nextLong();\n        long c = stdIn.nextLong();\n\n        if(c-(a-b)<0){\n            System.out.println(0);\n        }else{\n            System.out.println(c-(a-b));\n        }\n    }\n}\n\nclass FastScanner {\n    private BufferedReader reader = null;\n    private StringTokenizer tokenizer = null;\n\n    public FastScanner(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n        tokenizer = null;\n    }\n\n    public String next() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String nextLine() {\n        if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        return tokenizer.nextToken(\"\\n\");\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    \n    public long nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        // \u6574\u6570\u306e\u5165\u529b\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int c = sc.nextInt();\n        // \u51fa\u529b\n        int o = c-a+b;\n        System.out.println(o > 0 ? o : 0);\n    }\n}", "label": 1}, {"id": 661, "code1": "public class Main {\n\tpublic static void main(String[] args){\n\t\tfor(int i=0; i<1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n\n}", "code2": "import java.util.*;\n\nclass Main{\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n\n        int x = sc.nextInt();\n        if(x==3 || x==2){\n            System.out.println(x);\n            return;\n        }\n        if(x==1){\n            System.out.println(2);\n            return;\n        }\n\n        for(int i=0; i<=100003; i++){\n            for(int j=2; j*j<=x+i; j++){\n                if((x+i)%j==0){\n                    break;\n                }\n                if((j+1)*(j+1)>x+i){\n                    System.out.println(x + i);\n                    return;\n                }\n            }\n        }\n    }\n}", "label": 0}, {"id": 254, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint t = in.nextInt();\n\t\tint a = in.nextInt();\n\t\tint[] h = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\th[i] = in.nextInt();\n\t\t}\n\t\tdouble min = Double.MAX_VALUE;\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdouble diff = Math.abs(a - (t - h[i] * 0.006));\n\t\t\tif (min > diff) {\n\t\t\t\tmin = diff;\n\t\t\t\tans = i + 1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tin.close();\n\t}\n}", "label": 1}, {"id": 43, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            int sum = scn.nextInt() + scn.nextInt() + scn.nextInt() + scn.nextInt();\n            System.out.println(sum / 60);\n            System.out.println(sum % 60);\n        }\n    }\n}", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tint i=0;\n\t\tint sum=0;\n\n\t\ttry (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n            String line;\n            while ((line = br.readLine()) != null ) {\n            \tsum+=Integer.parseInt(line);\n            \ti++;\n            \tif(i==4){\n            \t\tbreak;\n            \t}\n            }\n            System.out.println(sum/60);\n            System.out.println(sum%60);\n\t\t}\n\t}\n}", "label": 1}, {"id": 546, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.util.NoSuchElementException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author HBonsai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CMultipleClocks solver = new CMultipleClocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CMultipleClocks {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            int N = in.nextInt();\n            long[] T = in.nextLongArray(N);\n            long ans = T[0];\n            for (int i = 1; i < N; i++) {\n                long gcd = gcd(ans, T[i]);\n                ans = T[i] * (ans / gcd);\n            }\n            out.println(ans);\n        }\n\n        private static long gcd(long m, long n) {\n            if (m < n) return gcd(n, m);\n            if (n == 0) return m;\n            return gcd(n, m % n);\n        }\n\n    }\n\n    static class FastScanner implements Closeable {\n        private final InputStream in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n\n        public FastScanner(InputStream in) {\n            this.in = in;\n        }\n\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            } else {\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        private int readByte() {\n            if (hasNextByte()) return buffer[ptr++];\n            else return -1;\n        }\n\n        private static boolean isPrintableChar(int c) {\n            return 33 <= c && c <= 126;\n        }\n\n        public boolean hasNext() {\n            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;\n            return hasNextByte();\n        }\n\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while (true) {\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                } else if (b == -1 || !isPrintableChar(b)) {\n                    return minus ? -n : n;\n                } else {\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public void close() {\n            try {\n                in.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n}\n\n", "code2": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n==0) break;\n\t\t\t\n\t\t\tString s;\n\t\t\tString[][] a = new String[n][];\n\t\t\tint p;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ts = sc.next().replaceAll(\":\", \" \").replaceAll(\",\", \" \");\n\t\t\t\ta[i] = s.split(\" \");\n\t\t\t\tp = a[i].length-1;\n\t\t\t\ta[i][p] = a[i][p].substring(0,a[i][p].length()-1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tArrayList<String> list = new ArrayList<String>();\n\t\t\tfor(int i=1;i<a[0].length;i++) list.add(a[0][i]);\n\t\t\t\n\t\t\tboolean flag;\n\t\t\twhile(true){\n\t\t\t\tflag = false;\n\t\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\t\tif(list.contains(a[i][0])==true){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\tlist.remove(list.indexOf(a[i][0]));\n\t\t\t\t\t\tfor(int j=1;j<a[i].length;j++){\n\t\t\t\t\t\t\tif(list.contains(a[i][j])==false) list.add(a[i][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==false) break;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(list.size());\n\t\t}\t\n\t}\t\n}", "label": 0}, {"id": 513, "code1": "import java.util.Scanner;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\tprivate static final int INF = (int)1e9;\n\n\tstatic class Pair {\n\t\tint first;\n\t\tint second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn first + second;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object other) {\n\t\t\tif (other instanceof Pair) {\n\t\t\t\tPair p = (Pair)other;\n\n\t\t\t\treturn p.first == first && p.second == second;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static void main(String[] args) {\n\t\ttry (Scanner in = new Scanner(System.in)) {\n\t\t\tint n = in.nextInt();\n\t\t\tList<Integer>[] g = new ArrayList[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tg[i] = new ArrayList<>();\n\n\t\t\tint m = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tMap<Pair, Integer> dist = new HashMap<>();\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint f = in.nextInt();\n\t\t\t\tint t = in.nextInt();\n\t\t\t\tint w = in.nextInt();\n\n\t\t\t\tg[f].add(t);\n\t\t\t\tdist.put(new Pair(f, t), w);\n\t\t\t}\n\n\t\t\tdijkstra(g, n, dist, r);\n\t\t} catch (Exception ex) {\n\t\t\tthrow new RuntimeException(ex);\n\t\t}\n\t}\n\n\tpublic static void dijkstra(List<Integer> g[], int n, Map<Pair, Integer> dist, int s) {\n\t\tint[] d = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\td[i] = INF;\n\n\t\td[s] = 0;\n\t\tPriorityQueue<Pair> pq = new PriorityQueue<>((x, y) -> x.second-y.second);\n\t\tpq.add(new Pair(s, 0));\n\n\t\twhile (!pq.isEmpty()) {\n\t\t\tPair p = pq.remove();\n\n\t\t\tfor (int v : g[p.first]) {\n\t\t\t\tint dd = d[p.first] + dist.get(new Pair(p.first, v));\n\t\t\t\tif (dd < d[v]) {\n\t\t\t\t\td[v] = dd;\n\t\t\t\t\tpq.add(new Pair(v, d[v]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (d[i] == INF)\n\t\t\t\tSystem.out.println(\"INF\");\n\t\t\telse\n\t\t\t\tSystem.out.println(d[i]);\n\t\t}\n\t}\n}", "code2": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\tboolean eof;\n\t\n\tlong go(long a, long b, long c) {\n\t\tif (a < 0 || b < 0 || c < 0) {\n\t\t\treturn Long.MIN_VALUE;\n\t\t}\n\t\t\n\t\treturn a + b + c - (a & 1) - (b & 1) - (c & 1);\n\t}\n\n\tvoid solve() throws IOException {\n\t\tlong i = nextLong();\n\t\tlong o = nextLong();\n\t\tlong t = nextLong();\n\t\tlong j = nextLong();\n\t\tlong l = nextLong();\n\t\tlong s = nextLong();\n\t\tlong z = nextLong();\n\t\t\n\t\tlong ans = o + Math.max(go(i, j, l), go(i - 1, j - 1, l - 1) + 3);\n\t\t\n\t\tout.println(ans);\n\t}\n\n\tMain() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main();\n\t}\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (Exception e) {\n\t\t\t\teof = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\teof = true;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}", "label": 0}, {"id": 29, "code1": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "code2": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Optional;\nimport java.util.OptionalDouble;\nimport java.util.stream.DoubleStream;\nimport java.util.stream.Stream;\n\npublic class Main {\n\n  public static void main(String[] args) throws IOException {\n    \n    try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n\n      String line;\n      String[] lines;\n      double[] s;\n      while( !(line = br.readLine()).equals(\"0\") ){\n\n        int n = Integer.parseInt(line);\n        lines = br.readLine().split(\" \");\n\n        s =\n          Stream.of(lines)\n            .mapToDouble(Double::parseDouble)\n            .toArray();\n        \n        double dm =\n          Arrays.stream(s)\n            .average()\n          .getAsDouble();\n\n        double result =\n        Arrays.stream(s)\n          .map(d -> Math.pow((d-dm),2) / n)\n          .sum();\n\n        System.out.printf(\"%.8f\\n\" , Math.sqrt(result));\n      }\n    }\n  }\n}\n", "label": 1}, {"id": 300, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tMyInput in = new MyInput(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, MyInput in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong a = in.nextLong(), b = in.nextLong();\n\t\t\tlong[] x = in.nextLongArray(n);\n\n\t\t\tlong ans = 0;\n\t\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\t\tans += Math.min(a * (x[i+1] - x[i]), b);\n\t\t\t}\n\t\t\tout.println(ans);\n\n\t\t}\n\t}\n\n\tstatic class MyInput {\n\t\tprivate final BufferedReader in;\n\t\tprivate static int pos;\n\t\tprivate static int readLen;\n\t\tprivate static final char[] buffer = new char[1024 * 8];\n\t\tprivate static char[] str = new char[500 * 8 * 2];\n\t\tprivate static boolean[] isDigit = new boolean[256];\n\t\tprivate static boolean[] isSpace = new boolean[256];\n\t\tprivate static boolean[] isLineSep = new boolean[256];\n\n\t\tstatic {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tisDigit['0' + i] = true;\n\t\t\t}\n\t\t\tisDigit['-'] = true;\n\t\t\tisSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n\t\t\tisLineSep['\\r'] = isLineSep['\\n'] = true;\n\t\t}\n\n\t\tpublic MyInput(InputStream is) {\n\t\t\tin = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (pos >= readLen) {\n\t\t\t\tpos = 0;\n\t\t\t\ttry {\n\t\t\t\t\treadLen = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException();\n\t\t\t\t}\n\t\t\t\tif (readLen <= 0) {\n\t\t\t\t\tthrow new MyInput.EndOfFileRuntimeException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer[pos++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tint ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\tint i = 0;\n\t\t\tlong ret = 0;\n\t\t\tif (str[0] == '-') {\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor (; i < len; i++)\n\t\t\t\tret = ret * 10 + str[i] - '0';\n\t\t\tif (str[0] == '-') {\n\t\t\t\tret = -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic char nextChar() {\n\t\t\twhile (true) {\n\t\t\t\tfinal int c = read();\n\t\t\t\tif (!isSpace[c]) {\n\t\t\t\t\treturn (char) c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\treturn new String(nextChars());\n\t\t}\n\n\t\tpublic char[] nextChars() {\n\t\t\tint len = 0;\n\t\t\tstr[len++] = nextChar();\n\t\t\tlen = reads(len, isSpace);\n\t\t\treturn Arrays.copyOf(str, len);\n\t\t}\n\n\t\tpublic char[][] next2DChars(int h, int w) {\n\t\t\tchar[][] s = new char[h][w];\n\t\t\tfor (int i = 0; i < h; i++) {\n\t\t\t\ts[i] = nextChars();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\t\tint reads(int len, boolean[] accept) {\n\t\t\ttry {\n\t\t\t\twhile (true) {\n\t\t\t\t\tfinal int c = read();\n\t\t\t\t\tif (accept[c]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (str.length == len) {\n\t\t\t\t\t\tchar[] rep = new char[str.length * 3 / 2];\n\t\t\t\t\t\tSystem.arraycopy(str, 0, rep, 0, str.length);\n\t\t\t\t\t\tstr = rep;\n\t\t\t\t\t}\n\t\t\t\t\tstr[len++] = (char) c;\n\t\t\t\t}\n\t\t\t} catch (MyInput.EndOfFileRuntimeException e) {\n\t\t\t}\n\t\t\treturn len;\n\t\t}\n\n\t\tpublic int[] nextIntArray(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArray1Index(final int n) {\n\t\t\tfinal int[] res = new int[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic int[] nextIntArrayDec(final int n) {\n\t\t\tfinal int[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray1Index(final int n) {\n\t\t\tfinal long[] res = new long[n + 1];\n\t\t\tfor (int i = 1; i < n + 1; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArrayDec(final int n) {\n\t\t\tfinal long[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong() - 1;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) {\n\t\t\tdouble[] res = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tstatic class EndOfFileRuntimeException extends RuntimeException {\n\t\t}\n\n\t}\n\n}\n", "code2": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic long LINF = 1L << 55;\n\tstatic int MOD = 1000000007;\n\tstatic int[] mh4 = { 0, -1, 1, 0 };\n\tstatic int[] mw4 = { -1, 0, 0, 1 };\n\tstatic int[] mh8 = { -1, -1, -1, 0, 0, 1, 1, 1 };\n\tstatic int[] mw8 = { -1, 0, 1, -1, 1, -1, 0, 1 };\n\n\tstatic class TaskX {\n\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint[] a = in.nextIntArray(n);\n\n\t\t\tint count = 0;\n\n\t\t\tfor (int l = 0, r = 0; l < n; l = r) {\n\t\t\t\twhile (r < n && a[l] == a[r]) {\n\t\t\t\t\tr++;\n\t\t\t\t}\n\t\t\t\tint len = r-l;\n\t\t\t\tcount += len/2;\n\t\t\t}\n\n\t\t\tout.println(count);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\t}\n\n}\n", "label": 0}, {"id": 206, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "code2": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "label": 1}, {"id": 494, "code1": "import java.util.Scanner;\n\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    // \u6574\u6570\u306e\u5165\u529b\n    int a = sc.nextInt();\n    // \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n\n//    int ab = a + b;\n//    int bc = b + c;\n//    int ac = a+c;\n//\n//    int result = Math.min(ab, Math.min(bc , ac));\n\n    int max = Math.max(a, Math.max(b, c));\n\n    System.out.println(a + b + c - max);\n  }\n}\n", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass Solver extends Main{\n\tSolver(){\n\t\t\n\t}\n}//Solver_end\n\n@SuppressWarnings(\"unchecked\")\nclass Main{\n\tstatic int imax=Integer.MAX_VALUE;\n\tstatic long lmax=Long.MAX_VALUE;\n\t\n\tpublic static void main(String[] args) throws FileNotFoundException{\n\t\t\n\t\t\n\t\tScanner sc=new Scanner(System.in);\n\t\t//Scanner sc=new Scanner(fp);\n\t\t\n\t\tint[] data=readlnI(sc,\" \");\n\t\tint n=data[0];\n\t\tint m=data[1];\n\t\tint[] path=new int[200000];\n\t\t\n\t\tfor(int i=0;i<m; i++){\n\t\t\tint[] line=readlnI(sc,\" \");\n\t\t\tif(line[0]==1){\n\t\t\t\tpath[line[1]-1]+=1;\n\t\t\t}else if(line[1]==n){\n\t\t\t\tpath[line[0]-1]+=1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tboolean fnd=false;\n\t\t\n\t\tfor(int x:path){\n\t\t\tif(x==2)fnd=true;\n\t\t}\n\t\t\n\t\tputs(fnd==true ? \"POSSIBLE\" : \"IMPOSSIBLE\");\n\t\t\n\t}//main_end\n\t\n//---------------------------------------------------------------------------\n\tstatic int readI(Scanner sc){\n\t\treturn Integer.parseInt(sc.nextLine().trim());\n\t}\n\tstatic long readL(Scanner sc){\n\t\treturn Long.parseLong(sc.nextLine().trim());\n\t}\n\tstatic String readS(Scanner sc){\n\t\treturn sc.nextLine().trim();\n\t}\n\tstatic int[] readlnI(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToInt(Integer::parseInt).toArray();\n\t}\n\tstatic long[] readlnL(Scanner sc, String dl){\n\t\treturn Arrays.stream(sc.nextLine().trim().split(dl)).mapToLong(Long::parseLong).toArray();\n\t}\n\tstatic String[] readlnS(Scanner sc, String dl){\n\t\treturn sc.nextLine().trim().split(dl);\n\t}\n\t@SuppressWarnings(\"unchecked\")\n\tstatic <T> void puts(T... args){\n\t\tfor(int i=0; i<args.length-1; i++){\n\t\t\tSystem.out.printf(\"%s \",args[i]);\n\t\t}\n\t\tSystem.out.println(args[args.length-1]);\n\t}\n\tstatic void puts(int[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void puts(long[] ary){\n\t\tfor(int i=0; i<ary.length-1; i++){\n\t\t\tSystem.out.printf(\"%d \",ary[i]);\n\t\t}\n\t\tSystem.out.println(ary[ary.length-1]);\n\t}\n\tstatic void bs(){\n\t\tSystem.out.println(\"\");\n\t}\n\tstatic int sum(int[] ary){\n\t\tint sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic long sum(long[] ary){\n\t\tlong sum=0;\n\t\tfor(int i=0; i<ary.length; i++) sum+=ary[i];\n\t\treturn sum;\n\t}\n\tstatic void tblSort(int[][] tbl){\n\t\tArrays.sort(tbl, new Comparator<int[]>(){\n\t\t\t@Override\n\t\t\tpublic int compare(int[] a, int[] b){\n\t\t\t\tif(a[0]==b[0]){\n\t\t\t\t\treturn b[1]-a[1];\n\t\t\t\t}else{\n\t\t\t\t\treturn b[0]-a[0];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "label": 0}, {"id": 698, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\nimport java.util.StringTokenizer;\n\n\nclass Main{\n\tstatic int[][] ban;\n\tstatic boolean[][] visited;\n\tstatic long sum=0;\n\tstatic int H,W;\n\tstatic long kuro=0;\n\tstatic long siro=0;\n\tpublic static void main(String[] args) {\n\t\tSC sc=new SC(System.in);\n\t\tH=sc.nextInt();\n\t\tW=sc.nextInt();\n\t\tvisited=new boolean[H][W];\n\t\tban=new int[H][W];\n\t\tString s;\n\t\tfor(int i=0; i<H; i++){\n\t\t\ts=sc.next();\n\t\t\tfor(int j=0; j<W; j++){\n\t\t\t\tif(s.charAt(j)=='#'){\n\t\t\t\t\tban[i][j]=1;\t//\u9ed2\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tban[i][j]=0;\t//\u767d\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(int i=0; i<H; i++){\t\t//\u3057\u3089\u3079\u308b\n\t\t\tfor(int j=0; j<W; j++){\n\t\t\t\tif(ban[i][j]==1 && !visited[i][j]){\n\t\t\t\t\tkuro=0; siro=0;\n\t\t\t\t\tdfs(i,j);\n\t\t\t\t\tsum+=kuro*siro;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpl(sum);\n\t}\n\n\tpublic static void dfs(int y,int x){\n\t\tint[] vx={0,1,0,-1};\n\t\tint[] vy={-1,0,1,0};\n\t\tif(ban[y][x]==1){\n\t\t\tkuro++;\n\t\t}\n\t\telse{\n\t\t\tsiro++;\n\t\t}\n\t\tvisited[y][x]=true;\n\t\tfor(int i=0; i<4; i++){\n\t\t\tif(x+vx[i]>=0 && x+vx[i]<W && y+vy[i]>=0 && y+vy[i]<H){\n\t\t\t\tif(ban[y][x]!=ban[y+vy[i]][x+vx[i]] && !visited[y+vy[i]][x+vx[i]]){\n\t\t\t\t\tdfs(y+vy[i],x+vx[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void pl(Object o) {\n\t\tSystem.out.println(o);\n\t}\n\tpublic static void pl() {\n\t\tSystem.out.println();\n\t}\n\tpublic static void p(Object o) {\n\t\tSystem.out.print(o);\n\t}\n\tstatic class SC {\n\t\tprivate BufferedReader reader = null;\n\t\tprivate StringTokenizer tokenizer = null;\n\t\tpublic SC(InputStream in) {\n\t\t\treader = new BufferedReader(new InputStreamReader(in));\n\t\t}\n\t\tpublic String next() {\n\t\t\tif (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new UncheckedIOException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new UncheckedIOException(e);\n\t\t\t}\n\t\t}\n\t}\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int N = in.nextInt();\n            int A[] = new int[2 * N - 1];\n            for (int i = 0; i < 2 * N - 1; i++) {\n                A[i] = in.nextInt();\n            }\n\n            int lo = 0, hi = 2 * N;\n\n            while (lo + 1 < hi) {\n                int mid = lo + (hi - lo) / 2;\n\n                if (onTopAtLeast(mid, A)) {\n                    lo = mid;\n                } else {\n                    hi = mid;\n                }\n            }\n\n            out.println(lo);\n        }\n\n        private boolean onTopAtLeast(int x, int[] a) {\n            int LEN = a.length; // LEN = 2*N-1\n            int[] b = new int[LEN];\n            for (int i = 0; i < LEN; i++) {\n                b[i] = a[i] < x ? 0 : 1;\n            }\n            int[] c = new int[LEN - 2];\n            for (int i = 1; i < LEN - 1; i++) {\n                c[i - 1] = b[i - 1] + b[i] + b[i + 1] < 2 ? 0 : 1;\n            }\n\n            int MID = c.length / 2;\n            int left = MID;\n            int right = MID;\n\n            while (left > 0 && c[left - 1] != c[left]) left--;\n            while (right < c.length - 1 && c[right] != c[right + 1]) right++;//C[1, 2*N-3]\n\n            int ANS = (MID - left < right - MID) ? c[left] : c[right];\n\n            return ANS == 1;\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n", "label": 0}, {"id": 341, "code1": "import java.util.*;\n\npublic class Main{\n  public static void main(String[] args){\n    Scanner sc = new Scanner(System.in);\n    long n = sc.nextLong();\n    long k = sc.nextLong();\n\n    long a = n % k;\n    long b = Math.abs(a - k);\n\n    if(a>b){\n      System.out.println(b);\n    }else{\n      System.out.println(a);\n    }\n\n\n  }\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = Integer.parseInt(sc.next());\n\t\tint b = Integer.parseInt(sc.next());\n\t\tint c = Integer.parseInt(sc.next());\n\n\t\tif (a < c && c < b || b < c && c < a){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t}else {\n\t\t\tSystem.out.println(\"No\");\n\t\t}\n\t}\n}", "label": 0}, {"id": 575, "code1": "/*\n *           AUTHOR: Maria Theresa M. Padayhag\n *             DATE: 20160326\n *  PRE-REQUIREMENT: JDK 1.8\n */\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.time.*;\nimport java.time.format.TextStyle;\nimport java.util.Locale;\n\nclass DayIndentifier\n{\n\tLocalDate date = null;\n\t\n\tpublic \tDayIndentifier( String inMonth, String inDay )\n\t{\n\t\t// NumberFormatException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tint month = Integer.parseInt( inMonth );\n\t\tint day   = Integer.parseInt( inDay );\n\t\t\n\t\t// DateTimeException might be thrown here\n\t\t// but it will be handled by the caller.\n\t\tdate = LocalDate.of( 2004, month, day );\n\t}\n\t\n\tpublic String getDayOfWeek()\n\t{\n\t\t// NullPointerException might be thrown here\n\t\t// but it will handled by the caller.\n\t\treturn date.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.ENGLISH);\n\t}\n}\n\npublic class Main\n{\n\tpublic static boolean toExit( String[] dataset )\n\t{\n\t\tfor(String data: dataset)\n\t\t{\n\t\t\tif(data.equals(\"0\"))\n\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tpublic static void main( String args[] ) throws IOException\n\t{\n\t\tBufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );\n\t\tString input;\n\t\tString dataset[];\n\t\tDayIndentifier di;\n\t\t\n\t\tREAD: \n\t\twhile( ( input = br.readLine() ) != null ) {\n\t\t\ttry {\n\t\t\t\tdataset = input.split(\" \");\n\t\t\t\n\t\t\t\tif( toExit( dataset ) ) {\n\t\t\t\t\tbreak READ;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( dataset.length != 2 ) {\n\t\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\t\tcontinue READ;\n\t\t\t\t} \t\t\n\t\t\t\t\n\t\t\t\tdi = new DayIndentifier(dataset[0], dataset[1]);\n\t\t\t\tSystem.out.println( di.getDayOfWeek() );\n\t\t\t} catch( Exception e ) {\n\t\t\t\tSystem.out.println(\"Invalid input.\");\n\t\t\t\tcontinue READ;\n\t\t\t}\t\t\n\t\t}\n\t}\n}", "code2": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tMain m = new Main();\n\t\tm.run();\n\t}\n\n\tScanner sc = new Scanner(System.in);\n\n\tvoid run() {\n\n\t\tint n = sc.nextInt();\n\n\t\tint a[] = new int[n];\n\t\tint b[] = new int[n];\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tb[i] = sc.nextInt();\n\t\t}\n\n\t\tlong ba = 0;\n\t\tlong ab = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (b[i] > a[i]) {\n\t\t\t\tba += (b[i] - a[i]) / 2;\n\t\t\t} else {\n\t\t\t\tab += (a[i] - b[i]);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tSystem.out.println(ab <= ba ? \"Yes\" : \"No\");\n\t}\n}\n", "label": 0}, {"id": 680, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString Sa = scanner.next();\n\t\tString Sb = scanner.next();\n\t\tString Sc = scanner.next();\n\n\t\tchar[][] C = new char[3][100];\n\t\tC[0] = Sa.toCharArray();\n\t\tC[1] = Sb.toCharArray();\n\t\tC[2] = Sc.toCharArray();\n\n\t\tint[] t = new int[3];\n\t\tint now = 0;\n\t\tString ans = \"\";\n\t\twhile(true) {\n\t\t\tswitch(C[now][t[now]]) {\n\t\t\tcase 'a':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tt[now]++;\n\t\t\t\tnow = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(t[0]==Sa.length()&&now==0) {\n\t\t\t\tans = \"A\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[1]==Sb.length()&&now==1) {\n\t\t\t\tans = \"B\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(t[2]==Sc.length()&&now==2) {\n\t\t\t\tans = \"C\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tscanner.close();\n\t}\n\n}\n", "code2": "import java.util.*;\n\npublic class Main {    \n    \n  public static void main(String[] args) {              \n     Scanner sc = new Scanner(System.in);\n     \n     int N = sc.nextInt();\n     \n     int sum = 0;\n     int min = Integer.MAX_VALUE;\n     \n     int count = 0;\n     for(int i = 0;i < N;i++){\n         int a = sc.nextInt();\n         if(a%10 == 0){\n               count++;\n         }\n         sum += a;\n         if(a%10 != 0){\n           min = Math.min(min,a);\n         }\n     }\n     \n     if(count == N){\n         System.out.println(0);\n         return;\n     }     \n                           \n     if(sum%10 != 0){\n         System.out.println(sum);\n         return;\n     }else{\n         System.out.println(sum - min);\n         return;\n     }\n      \n  }          \n}", "label": 0}, {"id": 23, "code1": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main {\n    static final int MOD = 1000000007;\n    static final int INF = 1 << 30;\n\n    Main() {\n        Scanner sc = new Scanner(System.in);\n        long ans = 0;\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        if(H==1 || W==1){\n        System.out.println(1);\n        return;\n        }\n        long ht = H/2+H%2;\n        long hd = H/2;\n        long wt = W/2+W%2;\n        long wd = W/2;\n        ans += ht*wt;\n        ans += hd*wd;\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) {\n        new Main();\n    }\n}\n ", "code2": "import java.util.Scanner;\n\n\npublic class Main {\n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        long H = sc.nextLong();\n        long W = sc.nextLong();\n        long ans = 0;\n        if (H == 1 || W == 1) {\n            System.out.println(1);\n        } else if ((H*W)%2 == 0) {\n            System.out.println((H*W)/2);\n        } else {\n            System.out.println(((H*W)/2)+1);\n        }\n    }\n}", "label": 1}, {"id": 554, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static HashMap<String,HashSet<String>> map;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tmap = new HashMap<String, HashSet<String>>();\n\t\t\tString first = null;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString[] s = sc.next().split(\":\");\n\t\t\t\tif(i == 0) first = s[0];\n\t\t\t\ts[1] = s[1].replaceAll(\"\\\\.\", \"\");\n\t\t\t\tString[] ss = s[1].split(\",\");\n\t\t\t\tmap.put(s[0], new HashSet<String>());\n\t\t\t\tfor(String tmp : ss){\n\t\t\t\t\tmap.get(s[0]).add(tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(String si : map.keySet()){\n\t\t\t\tfor(String sj : map.keySet()){\n\t\t\t\t\tif(map.get(si).contains(sj)){\n\t\t\t\t\t\tmap.get(si).remove(sj);\n\t\t\t\t\t\tmap.get(si).addAll(map.get(sj));\n\t\t\t\t\t}\n\t\t\t\t\tif(map.get(sj).contains(si)){\n\t\t\t\t\t\tmap.get(sj).remove(si);\n\t\t\t\t\t\tmap.get(sj).addAll(map.get(si));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(map.get(first).size());\n\t\t}\n\t}\n/*\n\tpublic static HashSet<String> solve(String group){\n\t\tfor(String s : map.get(group)){\n\n\t\t}\n\n\t}\n\t*/\n}", "code2": "import java.io.*;\nimport java.util.*;\n\n/**\n *\n * @author baito\n */\nclass UnionFindTree\n{\n    int[] par;\n    int[] rank;\n    int[] sizes;\n\n    UnionFindTree(int n)\n    {\n        par = new int[n];\n        rank = new int[n];\n        sizes = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            par[i] = i;\n            rank[i] = 0;\n            sizes[i] = 1;\n        }\n    }\n\n    int find(int x)\n    {\n        if (par[x] == x) return x;\n        else return par[x] = find(par[x]);\n    }\n\n    void unite(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n\n        if (x == y) return;\n        if (rank[x] < rank[y])\n        {\n            par[x] = y;\n            sizes[y] += sizes[x];\n        }\n        else\n        {\n            par[y] = x;\n            sizes[x] += sizes[y];\n            if (rank[x] == rank[y]) rank[x]++;\n        }\n    }\n\n    boolean same(int x, int y)\n    {\n        return find(x) == find(y);\n    }\n\n    int size(int x)\n    {\n        return sizes[par[x]];\n    }\n}\npublic class Main\n{\n    static StringBuilder sb = new StringBuilder();\n    static FastScanner sc = new FastScanner(System.in);\n    static int INF = 10000;\n    static long MOD =1000000007;\n    static long[] f;//factorial\n    static int[] y4 = {0,1,0,-1};\n    static int[] x4 = {1,0,-1,0};\n    static int[] y8 = {0,1,0,-1,-1,1,1,-1};\n    static int[] x8 = {1,0,-1,0,1,-1,1,-1};\n\n    static int N,K,L;\n\n    public static void main(String[] args)\n    {\n\n        N = sc.nextInt();\n        K = sc.nextInt();\n        L = sc.nextInt();\n        UnionFindTree u1 = new UnionFindTree(N);\n        UnionFindTree u2 = new UnionFindTree(N);\n        //long\u3092\u5fd8\u308c\u308b\u306a\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3059\u308b\u305e\n        for (int i = 0; i < K; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u1.unite(p,q);\n        }\n        for (int i = 0; i < L; i++)\n        {\n            int p = sc.nextInt()-1;\n            int q = sc.nextInt()-1;\n            u2.unite(p,q);\n        }\n        Map<Long,Integer> sizes = new HashMap<>();\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            int value = sizes.containsKey(hash) ? sizes.get(hash):0;\n            sizes.put(hash,value+1);\n\n\n        }\n        for (int i = 0; i < N; i++)\n        {\n            long root1 = u1.find(i);\n            long root2 = u2.find(i);\n            long hash = root1 * 1000000L + root2;\n            System.out.println(sizes.get(hash));\n        }\n\n\n\n    }\n    //\u2193nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3002\u3000***factorial(N)\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b***\n    static long comb(int n, int r)\n    {\n        long result = f[n];\n        result = result * modInv(f[n - r]) % MOD;\n        result = result * modInv(f[r]) % MOD;\n        return result;\n    }\n\n    static long modInv(long n)\n    {\n        return modPow(n, MOD - 2);\n    }\n\n    static void factorial(int n)\n    {\n        f = new long[n + 1];\n        f[0] = f[1] = 1;\n        for (int i = 2; i <= n; i++)\n        {\n            f[i] = (f[i - 1] * i) % MOD;\n        }\n    }\n\n    static long modPow(long x, long n)\n    {\n        long res = 1L;\n        while (n > 0)\n        {\n            if ((n & 1) == 1)\n            {\n                res = res * x % MOD;\n            }\n            x = x * x % MOD;\n            n >>= 1;\n        }\n        return res;\n    }\n\n    //\u2191nCr\u3092mod\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n\n    static int gcd(int n, int r) { return r == 0 ? n : gcd(r, n%r); }\n    static long gcd(long n, long r) { return r == 0 ? n : gcd(r, n%r); }\n\n    static <T> void swap(T[] x, int i, int j) { T t = x[i]; x[i] = x[j]; x[j] = t; }\n    static void swap(int[] x, int i, int j) { int t = x[i]; x[i] = x[j]; x[j] = t; }\n    public static void reverse(int[] x)\n    {\n        int l = 0;\n        int r = x.length - 1;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    public static void reverse(int[] x,int s, int e)\n    {\n        int l = s;\n        int r = e;\n        while (l < r)\n        {\n            int temp = x[l];\n            x[l] = x[r];\n            x[r] = temp;\n            l++;\n            r--;\n        }\n    }\n    static int length(int a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int length(long a) {int cou = 0; while(a != 0){ a /= 10; cou++; } return cou;}\n    static int countC2(char[][] a, char c){\n        int co = 0;\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                if(a[i][j] == c)\n                    co++;\n        return co;\n    }\n    static void fill(int[][] a, int v){\n        for (int i = 0; i < a.length; i++)\n            for (int j = 0; j < a[0].length; j++)\n                a[i][j] = v;\n    }\n    static class FastScanner {\n\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        public String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        /*public String nextChar(){\n            return (char)next()[0];\n        }*/\n        public String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public int [][] nextIntArray2(int h, int w){\n            int[][] a = new int[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < w ; wi++){\n                    a[hi][wi] = nextInt();\n                }\n            }\n            return a;\n        }\n        public Integer[] nextIntegerArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n        public char[] nextCharArray(int n){\n            char[] a = next().toCharArray();\n\n            return a;\n        }\n        public char[][] nextCharArray2(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = next().toCharArray();\n            }\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\n        public char[][] nextCharArray2s(int h , int w){\n            char[][] a = new char[h][w];\n            for (int i = 0; i < h; i++) {\n                a[i] = nextLine().replace(\" \",\"\").toCharArray();\n            }\n            return a;\n        }\n        public char[][] nextWrapCharArray2(int h , int w, char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + next() + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        //\u30b9\u30da\u30fc\u30b9\u304c\u5165\u3063\u3066\u308b\u6642\u7528\n        public char[][] nextWrapCharArray2s(int h , int w ,char c){\n            char[][] a = new char[h + 2][w + 2];\n            //char c = '*';\n            int i;\n            for (i = 0; i < w + 2; i++)\n                a[0][i] = c;\n            for (i = 1; i < h + 1; i++) {\n                a[i] = (c + nextLine().replace(\" \",\"\") + c).toCharArray();\n            }\n            for (i = 0; i < w + 2; i++)\n                a[h + 1][i] = c;\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n        public long [][] nextLongArray2(int h, int w){\n            long[][] a = new long[h][w];\n            for(int hi = 0 ; hi < h ; hi++){\n                for(int wi = 0 ; wi < h ; wi++){\n                    a[h][w] = nextLong();\n                }\n            }\n            return a;\n        }\n    }\n}\n", "label": 0}, {"id": 103, "code1": "import java.util.Scanner;\n\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a = scan.nextInt();\n\t\tint b = scan.nextInt();\n\t\tscan.close();\n\t\tint ans = 12;\n\t\tif(b >= a) {\n\t\t\tans = a;\n\t\t}else {\n\t\t\tans = a - 1;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    static Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[]$) {\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        System.out.println(a > b ? a - 1 : a);\n    }\n}", "label": 1}, {"id": 470, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.Reader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        MyInput in = new MyInput(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CStreamline solver = new CStreamline();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CStreamline {\n        public void solve(int testNumber, MyInput in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int[] x = in.nextIntArray(m);\n            Arrays.sort(x);\n            int ans = x[m - 1] - x[0];\n            PriorityQueue<Integer> q = new PriorityQueue<>();\n            for (int i = 0; i < m - 1; i++) {\n                q.add(-(x[i + 1] - x[i]));\n            }\n            for (int i = 0; i < n - 1 && !q.isEmpty(); i++) {\n                ans += q.poll();\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class MyInput {\n        private final BufferedReader in;\n        private static int pos;\n        private static int readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static char[] str = new char[500 * 8 * 2];\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n        private static boolean[] isLineSep = new boolean[256];\n\n        static {\n            for (int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n            isLineSep['\\r'] = isLineSep['\\n'] = true;\n        }\n\n        public MyInput(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n        }\n\n        public int read() {\n            if (pos >= readLen) {\n                pos = 0;\n                try {\n                    readLen = in.read(buffer);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (readLen <= 0) {\n                    throw new MyInput.EndOfFileRuntimeException();\n                }\n            }\n            return buffer[pos++];\n        }\n\n        public int nextInt() {\n            int len = 0;\n            str[len++] = nextChar();\n            len = reads(len, isSpace);\n            int i = 0;\n            int ret = 0;\n            if (str[0] == '-') {\n                i = 1;\n            }\n            for (; i < len; i++) ret = ret * 10 + str[i] - '0';\n            if (str[0] == '-') {\n                ret = -ret;\n            }\n            return ret;\n        }\n\n        public char nextChar() {\n            while (true) {\n                final int c = read();\n                if (!isSpace[c]) {\n                    return (char) c;\n                }\n            }\n        }\n\n        int reads(int len, boolean[] accept) {\n            try {\n                while (true) {\n                    final int c = read();\n                    if (accept[c]) {\n                        break;\n                    }\n                    if (str.length == len) {\n                        char[] rep = new char[str.length * 3 / 2];\n                        System.arraycopy(str, 0, rep, 0, str.length);\n                        str = rep;\n                    }\n                    str[len++] = (char) c;\n                }\n            } catch (MyInput.EndOfFileRuntimeException e) {\n            }\n            return len;\n        }\n\n        public int[] nextIntArray(final int n) {\n            final int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        static class EndOfFileRuntimeException extends RuntimeException {\n        }\n\n    }\n}\n\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint a=scan.nextInt();\n\t\tint b=scan.nextInt();\n\t\tint c=scan.nextInt();\n\t\tint d=a-b;\n\t\tif(c-d>0) System.out.println(c-d);\n\t\telse System.out.println(\"0\");\n\n\t}\n\n}\n", "label": 0}, {"id": 289, "code1": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "label": 0}, {"id": 771, "code1": "\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String args[]){\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try{\n            String line;\n            while((line=br.readLine())!=null){  if(line.equals(\"\"))break;\n                String[] splited = line.split(\",\");\n                double xa=Double.parseDouble(splited[0]),ya=Double.parseDouble(splited[1]);\n                double xb=Double.parseDouble(splited[2]),yb=Double.parseDouble(splited[3]);\n                double xc=Double.parseDouble(splited[4]),yc=Double.parseDouble(splited[5]);\n                double xd=Double.parseDouble(splited[6]),yd=Double.parseDouble(splited[7]);\n                gra=(yc-ya)/(xc-xa);y0=ya;x0=xa;\n                boolean check1;\n                check1=linemaker(xb,yb)*linemaker(xd,yd)<0;\n      if(!check1){System.out.println(\"NO\");continue;}\n      gra=(yd-yb)/(xd-xb);y0=yb;x0=xb;\n                boolean check2=linemaker(xa,ya)*linemaker(xc,yc)<0;\n                if(check2)System.out.println(\"YES\");else System.out.println(\"NO\");\n                \n            }         \n        }catch(Exception e){e.printStackTrace();}        \n    }\n    static double gra=0,y0=0,x0=0;\n    static double linemaker(double x1, double y1){\n        return y1-y0-(gra*(x1-x0));\n    }\n}", "code2": "import java.io.*;\nimport java.util.StringTokenizer;\nimport java.util.Arrays;\n\nclass Point {\n\tint x,y;\n\tPoint(int x,int y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\nclass Main {\n\tpublic static void main(String args[]) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString buf;\n\t\tint w,h,xs,ys,xg,yg,n,c,d,x,y;\n\n\t\ttry {\n\t\t\twhile (!(buf = br.readLine()).equals(\"0 0\")) {\n\t\t\t\tStringTokenizer st = new StringTokenizer(buf);\n\t\t\t\tw = Integer.parseInt(st.nextToken());\n\t\t\t\th = Integer.parseInt(st.nextToken());\n\t\t\t\tint board[][] = new int[h][w];\n\t\t\t\tint check[][] = new int[h][w];\n\t\t\t\tfor (int i=0;i<h;i++) {\n\t\t\t\t\tArrays.fill(board[i],-1);\n\t\t\t\t\tArrays.fill(check[i],0);\n\t\t\t\t}\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\txs = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tys = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\txg = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tyg = Integer.parseInt(st.nextToken())-1;\n\t\t\t\tn = Integer.parseInt(br.readLine());\n\t\t\t\tfor (int i=0;i<n;i++) {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t\tc = Integer.parseInt(st.nextToken());\n\t\t\t\t\td = Integer.parseInt(st.nextToken());\n\t\t\t\t\tx = Integer.parseInt(st.nextToken());\n\t\t\t\t\ty = Integer.parseInt(st.nextToken());\n\t\t\t\t\tPutBlock(board,x,y,c,d);\n\t\t\t\t}\n\t\t\t\tif (board[ys][xs]==-1) {\n\t\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tboolean OK = false;\n\t\t\t\tPoint queue[] = new Point[h*w];\n\t\t\t\tint p = 0;\n\t\t\t\tqueue[p++] = new Point(xs,ys);\n\t\t\t\twhile (p>0) {\n\t\t\t\t\tPoint dq = queue[--p];\n\t\t\t\t\tcheck[dq.y][dq.x] = 1;\n\t\t\t\t\tif (dq.x==xg&&dq.y==yg) {\n\t\t\t\t\t\tOK = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.x>0) {\n\t\t\t\t\t\tif (board[dq.y][dq.x-1]==board[dq.y][dq.x]&&check[dq.y][dq.x-1]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x-1,dq.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.x<w-1) {\n\t\t\t\t\t\tif (board[dq.y][dq.x+1]==board[dq.y][dq.x]&&check[dq.y][dq.x+1]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x+1,dq.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.y>0) {\n\t\t\t\t\t\tif (board[dq.y-1][dq.x]==board[dq.y][dq.x]&&check[dq.y-1][dq.x]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x,dq.y-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dq.y<h-1) {\n\t\t\t\t\t\tif (board[dq.y+1][dq.x]==board[dq.y][dq.x]&&check[dq.y+1][dq.x]==0) {\n\t\t\t\t\t\t\tqueue[p++] = new Point(dq.x,dq.y+1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (OK) System.out.println(\"OK\");\n\t\t\t\telse System.out.println(\"NG\");\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tpublic static void PutBlock(int[][] b,int x,int y,int c,int target) {\n\t\tif (target==0) {\n\t\t\tfor (int i=y-1;i<y+1;i++) {\n\t\t\t\tfor (int j=x-1;j<x+3;j++) b[i][j] = c;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i=y-1;i<y+3;i++) {\n\t\t\t\tfor (int j=x-1;j<x+1;j++) b[i][j] = c;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void PrintBoard(int[][] b,int h,int w) {\n\t\tfor (int i=0;i<h;i++) {\n\t\t\tfor (int j=0;j<w;j++) System.out.print(b[i][j]+\" \");\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}", "label": 0}, {"id": 677, "code1": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid solve() {\n\t\tint r = in.nextInt(), c = in.nextInt();\n\t\tint[] cnt = new int[26];\n\t\tfor (int i = 0; i < r; i++) {\n\t\t\tfor (char ch : in.nextToken().toCharArray()){ \n\t\t\t\tcnt[ch - 'a']++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint cnt4 = (r / 2) * (c / 2);\n\t\tint cnt2 = (r / 2) * (c % 2) + (c / 2) * (r % 2);\n\t\tint cnt1 = (r % 2) * (c % 2);\n\t\t\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 4 && cnt4 > 0) {\n\t\t\t\tcnt[i] -= 4;\n\t\t\t\tcnt4--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 2 && cnt2 > 0) {\n\t\t\t\tcnt[i] -= 2;\n\t\t\t\tcnt2--;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < 26; i++) {\n\t\t\twhile (cnt[i] >= 1 && cnt1 > 0) {\n\t\t\t\tcnt[i] -= 1;\n\t\t\t\tcnt1--;\n\t\t\t}\n\t\t}\n\t\tout.println((cnt1 == 0 && cnt2 == 0 && cnt4 == 0) ? \"Yes\" : \"No\");\n\t}\n\n\tFastScanner in;\n\tPrintWriter out;\n\n\tvoid run() {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {    \n    \n  public static void main(String[] args) {              \n     Scanner sc = new Scanner(System.in);\n     \n     int N = sc.nextInt();\n     \n     int sum = 0;\n     int min = Integer.MAX_VALUE;\n     \n     int count = 0;\n     for(int i = 0;i < N;i++){\n         int a = sc.nextInt();\n         if(a%10 == 0){\n               count++;\n         }\n         sum += a;\n         if(a%10 != 0){\n           min = Math.min(min,a);\n         }\n     }\n     \n     if(count == N){\n         System.out.println(0);\n         return;\n     }     \n                           \n     if(sum%10 != 0){\n         System.out.println(sum);\n         return;\n     }else{\n         System.out.println(sum - min);\n         return;\n     }\n      \n  }          \n}", "label": 0}, {"id": 54, "code1": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tint[] num = new int[4];\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString st =sc.nextLine().split(\",\")[1];\n\t\t\tif(st.equals(\"A\")){\n\t\t\t\tnum[0]++;\n\t\t\t}else if(st.equals(\"B\")){\n\t\t\t\tnum[1]++;\n\t\t\t}else if(st.equals(\"AB\")){\n\t\t\t\tnum[2]++;\n\t\t\t}else if(st.equals(\"O\")){\n\t\t\t\tnum[3]++;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0 ; i < num.length ; i++){\n\t\t\tSystem.out.println(num[i]);\n\t\t}\n\t\tsc.close();\n\t}\n}", "code2": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tblood_groups();\n\t}\n\n\tprivate static void blood_groups() {\n\t\tint[] bg = new int[4];\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString[] datas = sc.nextLine().split(\",\");\n\n\t\t\tswitch( datas[1] ) {\n\t\t\tcase \"A\":\n\t\t\t\tbg[0]++;\n\t\t\t\tbreak;\n\t\t\tcase \"B\":\n\t\t\t\tbg[1]++;\n\t\t\t\tbreak;\n\t\t\tcase \"AB\":\n\t\t\t\tbg[2]++;\n\t\t\t\tbreak;\n\t\t\tcase \"O\":\n\t\t\t\tbg[3]++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(bg[0]);\n\t\tSystem.out.println(bg[1]);\n\t\tSystem.out.println(bg[2]);\n\t\tSystem.out.println(bg[3]);\n\n\t}\n\n}\n\n", "label": 1}, {"id": 16, "code1": "import java.util.*;\n \nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    \n    String s = sc.next();\n    boolean a = true, b = true;\n \n    for(int i=0;i<s.length();i+=2){\n        if(s.charAt(i) == 'L'){\n            a = false;\n            break;\n        }\n    }\n    \n    for(int i=1;i<s.length();i+=2){\n        if (!a){break;}\n        if(s.charAt(i) == 'R'){\n            b = false;\n            break;\n        }\n    }\n    \n    if(a&&b){System.out.println(\"Yes\");}\n    else{System.out.println(\"No\");}\n  }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String steps = sc.next();\n        sc.close();\n\n        boolean judge = true;\n        for (int i = 0; i < steps.length(); i++) {\n            char step = steps.charAt(i);\n            if (i % 2 == 0) {\n                if (step == 'L') {\n                    judge = false;\n                    break;\n                }\n            } else {\n                if (step == 'R') {\n                    judge = false;\n                    break;\n                }\n            }\n        }\n\n        if (judge) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}", "label": 1}, {"id": 276, "code1": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n * The Number of Area\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = \"\";\n\n\t\twhile ((line = br.readLine()) != null && !line.isEmpty()) {\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tSystem.out.println((n * (n + 1) >> 1) + 1);\n\t\t}\n\t}\n}", "code2": "import java.util.Scanner;\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner input = new Scanner(System.in);\n\t\tint n, num;\n\t\t\n\t\twhile (input.hasNext()){\n\t\t\tn = input.nextInt();\n\t\t\tnum = (n + 1) * n / 2 + 1;\n\t\t\tSystem.out.println(num);\n\t\t}\n\t}\n}", "label": 1}, {"id": 26, "code1": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        long a = sc.nextLong();\n        long b = sc.nextLong();\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = sc.nextLong();\n        }\n        \n        long ans = 0;\n        for (int i = 1; i < n; i++) {\n            long dis = array[i] - array[i-1];\n            if (dis * a < b) {\n                ans += dis * a;\n            } else {\n                ans += b;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}", "code2": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n        long A = sc.nextLong();\n        long B = sc.nextLong();\n\n        int[] X = new int[N];\n        for (int i = 0; i < N; i++) {\n            X[i] = sc.nextInt();\n        }\n\n        long ret = 0;\n\n        for (int i = 0; i < N - 1; i++) {\n            int distance = X[i+1] - X[i];\n\n            ret += Math.min(distance * A, B);\n        }\n\n        System.out.println(ret);\n    }\n}", "label": 1}, {"id": 252, "code1": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int t = scan.nextInt();\n        int a = scan.nextInt();\n\n        double[] h = new double[n];\n        for(int i = 0; i < n; i++) {\n        \th[i] = Math.abs(a - (t - scan.nextDouble() * 6 / 1000));\n        }\n\n        int ans = 0;\n        double temp = Double.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n        \tif(temp > h[i]) {\n        \t\ttemp = h[i];\n        \t\tans = i + 1;\n        \t}\n        }\n\n        System.out.println(ans);\n    }\n}\n", "code2": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint N = in.nextInt();\n\t\tint T = in.nextInt();\n\t\tint A = in.nextInt();\n\t\tint h[] =new int[N];\n\t\tdouble t[] =new double[N];\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\th[i]= in.nextInt();\n\t\t\tt[i]=Math.abs((T-h[i]*0.006)-A);\n\t\t}\n\t\tint minn=10000;\n\t\tdouble min=10000000;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif(min>t[i]) {\n\t\t\t\tmin=t[i];\n\t\t\t\tminn=i;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(minn+1);\n\t}\n}\n", "label": 1}, {"id": 144, "code1": "import java.util.*;\nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    String S[] = sc.next().split(\"\");\n    \n    int n = (int)Math.pow(2, S.length - 1);\n    \n    long total = 0;\n    for (int i = 0; i < n; i++) {\n      String s = S[0];\n      \n      for (int j = 0; j < S.length - 1; j++) {\n        if ((1&i>>j) == 1) {\n          total += Long.parseLong(s);\n          s = S[j + 1];\n        } else {\n          s += S[j + 1];\n        }\n      }\n      total += Long.parseLong(s);\n    }\n    System.out.println(total);\n  }\n}", "code2": "import java.util.*;\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tString S = sc.next();\n\t\tS = S + \"a\";\n\t\tlong[][] num = new long[S.length()-1][S.length()+1];\n\t\tlong answer = 0;\n\t\tfor( int i=0; i<S.length()-1; i++ ){\n\t\t\tfor( int j=i+1; j<S.length(); j++ ){\n\t\t\t\tString ss = S.substring(i,j);\n\t\t\t\tnum[i][j] = Long.parseLong(ss);\n\t\t\t\tlong a=2,b=2;\n\t\t\t\tif( i==0 || i==1 ){\n\t\t\t\t\ta = 1;\n\t\t\t\t}else{\n\t\t\t\t\tfor( int m=0; m<i-2; m++ ){\n\t\t\t\t\t\ta=2*a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( j==S.length()-2 || j==S.length()-1 ){\n\t\t\t\t\tb = 1;                  \n                }else{                  \n\t\t\t\t\tfor( int m=0; m<S.length()-j-3; m++ ){\n\t\t\t\t\t\tb=2*b;\n\t\t\t\t\t}\n                }\t                  \n\t\t\t\tnum[i][j] *= a*b;\n\t\t\t\tanswer += num[i][j];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println( answer );\n\t}\n}\n", "label": 1}, {"id": 293, "code1": "import java.util.Scanner;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner stdIn = new Scanner(System.in);\n\n\t\tlong h = stdIn.nextLong();\n\t\tlong w = stdIn.nextLong();\n\t\t\n\t\tlong cnt = 0;\n\t\tif(h==1 || w == 1) {\n\t\t\tSystem.out.println(1);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(h % 2 == 0 && w % 2 == 0) { //h\u5076\u6570\u3001w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else if(h % 2 == 0 && w % 2 != 0) { //h\u5076\u6570\u3001w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}else if( h % 2 != 0 && w % 2 == 0) { // h\u5947\u6570,w\u5076\u6570\n\t\t\tfor(int i = 0; i < h; i++) {\n\t\t\t\tcnt += w/2;\n\t\t\t}\n\t\t}else {                                //h\u5947\u6570,w\u5947\u6570\n\t\t\tfor(int i = 0; i < h ; i++) {\n\t\t\t\tif(i % 2 == 0) {\n\t\t\t\t\tcnt += (w+1)/2;\n\t\t\t\t}else {\n\t\t\t\t\tcnt += w/2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(cnt);\n\n\t}\n\n}\n", "code2": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "label": 0}, {"id": 393, "code1": "import java.util.Scanner;\n\npublic class Main {\n\n\tstatic int[][] field;\n\tstatic String[][] dp;\n\tstatic int h,w;\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tw = cin.nextInt();\n\t\t\th = cin.nextInt();\n\t\t\tif(w+h==0)break;\n\t\t\tfield=new int[h][w];\n\t\t\tdp=new String[h][w];\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tString s = cin.next();\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tdp[i][j]=\"\";\n\t\t\t\t\tif(Character.isDigit(s.charAt(j))){\n\t\t\t\t\t\tfield[i][j]=s.charAt(j)-'0';\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tfield[i][j]=-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<w;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[0][i]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[0][i]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[0][i-1].equals(\"0\")&&!dp[0][i-1].equals(\"\")){\n\t\t\t\t\t\t\tdp[0][i]=dp[0][i-1]+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[0][i]=\"\"+field[0][i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tif(field[i][0]<=0){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(field[i][0]==-1){\n\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(!dp[i-1][0].equals(\"0\")&&!dp[i-1][0].equals(\"\")){\n\t\t\t\t\t\t\tdp[i][0]=dp[i-1][0]+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][0]=\"\"+field[i][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tString ans=\"0\";\n\t\t\tfor(int i = 1;i<h;i++){\n\t\t\t\tfor(int j = 1;j<w;j++){\n\t\t\t\t\tif(field[i][j]==-1)continue;\n\t\t\t\t\tString s1=dp[i-1][j]+field[i][j];\n\t\t\t\t\tString s2=dp[i][j-1]+field[i][j];\n\t\t\t\t\tString s3=field[i][j]+\"\";\n\t\t\t\t\tif(big(s1,s2)>=0){\n\t\t\t\t\t\tif(big(s1,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(big(s2,s3)>=0){\n\t\t\t\t\t\t\tdp[i][j]=s2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tdp[i][j]=s3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twhile(dp[i][j].charAt(0)=='0'&&dp[i][j].length()>1){\n\t\t\t\t\t\tdp[i][j]=dp[i][j].substring(1,dp[i][j].length());\n\t\t\t\t\t}\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<h;i++){\n\t\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\t\tif(big(dp[i][j],ans)>0){\n\t\t\t\t\t\tans=dp[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//output();\n\t\t\tSystem.out.println(ans);\n\t\t}\n\n\t}\n\tstatic int big(String s1,String s2){\n\t\tif(s1.length()==s2.length()){\n\t\t\treturn s1.compareTo(s2);\n\t\t}\n\t\treturn s1.length()-s2.length();\n\t}\n\tstatic void output(){\n\t\tfor(int i = 0;i<h;i++){\n\t\t\tfor(int j = 0;j<w;j++){\n\t\t\t\tSystem.out.print(dp[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println();\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\n\n\nclass Main {\n\n    public static void main(String[] args) throws IOException\n    {\n        PrintWriter out = new PrintWriter(System.out);\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        int n = Integer.parseInt(br.readLine());\n        Long arr[] = new Long[n];\n        StringTokenizer st1 = new StringTokenizer(br.readLine());\n        for(int i = 0 ; i < n ; i++)\n        {\n            arr[i] = Long.parseLong(st1.nextToken());\n        }\n        Arrays.sort(arr);\n        long sum = arr[n-1];\n        int ind = n-2;\n        for(int i = 0 ; i < n-2 ; i++)\n        {\n            sum += arr[ind];\n\n            if(i%2 != 0)\n                ind--;\n        }\n        out.println(sum);\n\n        out.flush();\n        out.close();\n\n    }\n\n    static class pair{\n        long x1;\n        long x2;\n\n        public pair(long x1 , long x2)\n        {\n            this.x1 = x1;\n            this.x2 = x2;\n        }\n\n    }\n\n}\n", "label": 0}, {"id": 105, "code1": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\n\t\tif (b < a) {\n\t\t\ta--;\n\t\t}\n\n\t\tpr.println(a);\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n\t\tpr = new Printer(System.out);\n\n\t\tsolve();\n\n//\t\tpr.close();\n\t\tpr.flush();\n//\t\tsc.close();\n\t}\n\n\tstatic String INPUT = null;\n\n\tprivate static class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t}\n}\n", "code2": "import java.util.*;\n\npublic class Main {\n    static Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[]$) {\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        System.out.println(a > b ? a - 1 : a);\n    }\n}", "label": 1}, {"id": 39, "code1": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tvoid run(){\n\t\tint s=0;\n\t\tfor(int i=0; i<4; i++){\n\t\t\ts+=sc.nextInt();\n\t\t}\n\t\tprintln(s/60+\"\");\n\t\tprintln(s%60+\"\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}", "code2": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO ?????????????????????????????????????????????\n\t\tint i=0;\n\t\tint sum=0;\n\n\t\ttry (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n            String line;\n            while ((line = br.readLine()) != null ) {\n            \tsum+=Integer.parseInt(line);\n            \ti++;\n            \tif(i==4){\n            \t\tbreak;\n            \t}\n            }\n            System.out.println(sum/60);\n            System.out.println(sum%60);\n\t\t}\n\t}\n}", "label": 1}, {"id": 753, "code1": "import java.util.*;\npublic class Main{\n\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String ss =s.substring(0,s.length()-1);\n        int len = ss.length();\n        \n        for(int i =0;i<len;i++){\n            if(ss.length()%2==0){\n                String s1=ss.substring(0,(ss.length()/2));\n                String s2=ss.substring(ss.length()/2,ss.length());\n                if(s1.equals(s2)){\n                    System.out.println(ss.length());\n                    break;\n                }\n            }\n            ss = ss.substring(0,ss.length()-1);\n        }\n    }\n}\n\n\n\n\n", "code2": "import java.util.*;\n\npublic class Main{\n    public static void main(String[] args) {\n        double num = 0.006;\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        sc.nextLine();\n        int T = sc.nextInt();\n        int A = sc.nextInt();\n        sc.nextLine();\n        int num2 = Integer.MAX_VALUE;\n        int tmp;\n        int ans = 0;\n        for(int i = 0; i < N; i++){\n            tmp = sc.nextInt();\n            tmp = T*1000 - tmp*6;\n            tmp = Math.abs(A*1000 - tmp);\n            if(tmp < num2){\n                num2 = tmp;\n                ans = i+1;\n            }\n        }\n        System.out.println(ans);\n    }\n}", "label": 0}, {"id": 402, "code1": "import java.util.*;\nimport java.io.*;\n\n\nclass Main {\n\n    public static void main(String[] args) throws IOException\n    {\n        PrintWriter out = new PrintWriter(System.out);\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        int n = Integer.parseInt(br.readLine());\n        Long arr[] = new Long[n];\n        StringTokenizer st1 = new StringTokenizer(br.readLine());\n        for(int i = 0 ; i < n ; i++)\n        {\n            arr[i] = Long.parseLong(st1.nextToken());\n        }\n        Arrays.sort(arr);\n        long sum = arr[n-1];\n        int ind = n-2;\n        for(int i = 0 ; i < n-2 ; i++)\n        {\n            sum += arr[ind];\n\n            if(i%2 != 0)\n                ind--;\n        }\n        out.println(sum);\n\n        out.flush();\n        out.close();\n\n    }\n\n    static class pair{\n        long x1;\n        long x2;\n\n        public pair(long x1 , long x2)\n        {\n            this.x1 = x1;\n            this.x2 = x2;\n        }\n\n    }\n\n}\n", "code2": "\nimport static java.lang.Math.*;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskX solver = new TaskX();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic int INF = 1 << 30;\n\tstatic int modP = 1000000007;\n\n\tstatic class TaskX {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tlong[] t = in.nextLongArray(n), a = in.nextLongArray(n);\n\n\t\t\tlong[] tCalc = new long[n];\n\t\t\tArrays.fill(tCalc, -1);\n\n\t\t\tlong[] aCalc = new long[n];\n\t\t\tArrays.fill(aCalc, -1);\n\n\t\t\tlong[] tDef = new long[n];\n\t\t\tlong[] aDef = new long[n];\n\n\t\t\tlong tMax = -1, aMax = -1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tMax < t[i]) {\n\t\t\t\t\ttMax = t[i];\n\t\t\t\t\ttDef[i] = t[i];\n\t\t\t\t} else {\n\t\t\t\t\ttCalc[i] = tMax;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = n-1; i >= 0; i--) {\n\t\t\t\tif (aMax < a[i]) {\n\t\t\t\t\taMax = a[i];\n\t\t\t\t\taDef[i] = a[i];\n\t\t\t\t} else {\n\t\t\t\t\taCalc[i] = aMax;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (aCalc[i] == -1 && tCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] != tDef[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (aCalc[i] == -1) {\n\t\t\t\t\tif (aDef[i] > tCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (tCalc[i] == -1) {\n\t\t\t\t\tif (tDef[i] > aCalc[i]) {\n\t\t\t\t\t\tout.println(0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlong ans = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (tCalc[i] == -1 || aCalc[i] == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tans = ans * min(aCalc[i],tCalc[i]) % modP;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader in;\n\t\tStringTokenizer tok;\n\n\t\tpublic String nextString() {\n\t\t\twhile (!tok.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttok = new StringTokenizer(in.readLine(), \" \");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextString());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextString());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextString());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] res = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextInt();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] res = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic InputReader(InputStream inputStream) {\n\t\t\tin = new BufferedReader(new InputStreamReader(inputStream));\n\t\t\ttok = new StringTokenizer(\"\");\n\t\t}\n\n\t}\n\n}\n", "label": 0}, {"id": 211, "code1": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\t// \u5165\u529b\n\t\tfinal String[] s = new String[3];\n\t\ttry(Scanner scan = new Scanner(System.in)) {\n\t\t\ts[0] = scan.next();\n\t\t\ts[1] = scan.next();\n\t\t\ts[2] = scan.next();\n\t\t}\n\t\t\n\t\tint[] index = {0, -1, -1};\n\t\t\n\n\t\tint next = 0;\n\t\twhile (s[next].length() > index[next]) {\n\t\t\tnext = (int) (s[next].charAt(index[next]) - 'a');\n\t\t\tindex[next]++;\n\t\t}\n\t\t\n\t\tchar result = (char) (next + 'A');\n\t\t\n\t\t// \u51fa\u529b\n\t\ttry (PrintWriter out = new PrintWriter(System.out)) {\n\t\t\tout.println(result);\n\t\t}\n\n\t}\n\n}\n", "code2": "import java.util.*;\n \npublic class Main{\n \n\tpublic static void main(String[] args){\n \n\t\tScanner sc = new Scanner(System.in);\n        String ss[] = {sc.next(),sc.next(),sc.next()};\n      \tint counts[] = {0,0,0};\n      \tboolean game = true;\n      \tint istack;\n      \tchar cstack;\n      \tMap<Character, Integer> pMap1 = new HashMap<Character, Integer>();\n\t\tpMap1.put('a',0);\n      \tpMap1.put('b',1);\n      \tpMap1.put('c',2);\n      \tMap<Integer,Character> pMap2 = new HashMap<Integer,Character>();\n\t\tpMap2.put(0,'A');\n      \tpMap2.put(1,'B');\n      \tpMap2.put(2,'C');\n      \t\n      \tcstack = ss[0].charAt(0);\n      \tcounts[0]++;\n      \tistack = istack = pMap1.get(cstack);\n       \twhile(game){\n          \tif(counts[istack] == ss[istack].length()) {\n              System.out.println(pMap2.get(istack));\n              game = false;\n            } else{            \t              \t\n              \tcstack = ss[istack].charAt(counts[istack]); \n                counts[istack]++;\n              \tistack = pMap1.get(cstack);         }\n        }\n   }\n}\n", "label": 1}, {"id": 500, "code1": "import java.util.*;\nclass Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    String S[] = sc.next().split(\"\");\n    \n    int n = (int)Math.pow(2, S.length - 1);\n    \n    long total = 0;\n    for (int i = 0; i < n; i++) {\n      String s = S[0];\n      \n      for (int j = 0; j < S.length - 1; j++) {\n        if ((1&i>>j) == 1) {\n          total += Long.parseLong(s);\n          s = S[j + 1];\n        } else {\n          s += S[j + 1];\n        }\n      }\n      total += Long.parseLong(s);\n    }\n    System.out.println(total);\n  }\n}", "code2": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Arrays;\nimport java.util.NoSuchElementException;\nimport java.util.Scanner;\nclass FastScanner {\n\tprivate final InputStream in = System.in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\tprivate boolean hasNextByte() {\n\t\tif (ptr < buflen) {\n\t\t\treturn true;\n\t\t}else{\n\t\t\tptr = 0;\n\t\t\ttry {\n\t\t\t\tbuflen = in.read(buffer);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tif (buflen <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\tpublic String next() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = readByte();\n\t\twhile(isPrintableChar(b)) {\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\tpublic long nextLong() {\n\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\tlong n = 0;\n\t\tboolean minus = false;\n\t\tint b = readByte();\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\tif (b < '0' || '9' < b) {\n\t\t\tthrow new NumberFormatException();\n\t\t}\n\t\twhile(true){\n\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\tn *= 10;\n\t\t\t\tn += b - '0';\n\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\treturn minus ? -n : n;\n\t\t\t}else{\n\t\t\t\tthrow new NumberFormatException();\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\tpublic int nextInt() {\n\t\tlong nl = nextLong();\n\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n\t\treturn (int) nl;\n\t}\n\tpublic double nextDouble() { return Double.parseDouble(next());}\n}\npublic class Main {\n\tstatic FastScanner scan=new FastScanner();\n\tstatic Scanner scanner=new Scanner(System.in);\n\tstatic long mod=1000000007;\n\tstatic double eps=0.0000000001;\n\tstatic int big=Integer.MAX_VALUE;\n\tstatic long gcd (long a, long b) {return b>0?gcd(b,a%b):a;}\n\tstatic long lcm (long a, long b) {return a*b/gcd(a,b);}\n\tstatic int max(int a,int b) {return a>b?a:b;}\n\tstatic int min(int a,int b) {return a<b?a:b;}\n\tstatic long factorial(int i) {return i==1?1:i*factorial(i-1);}\n\tstatic int lower_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<=key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic int upper_bound(int a[],int key) {\n\t\tint low=0,high=a.length;\n\t\twhile(low<high) {\n\t\t\tint mid=((high-low)/2)+low;\n\t\t\tif(a[mid]<key)low=mid+1;\n\t\t\telse high=mid;\n\t\t}\n\t\treturn high;\n\t}\n\tstatic boolean isPrime (long n) {\n\t\tif (n==2) return true;\n\t\tif (n<2 || n%2==0) return false;\n\t\tdouble d = Math.sqrt(n);\n\t\tfor (int i=3; i<=d; i+=2)if(n%i==0){return false;}\n\t\treturn true;\n\t}\n\tstatic int upper_division(int a,int b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lupper_division(long a,long b) {\n\t\tif(a%b==0) {\n\t\t\treturn a/b;\n\t\t}\n\t\telse {\n\t\t\treturn a/b+1;\n\t\t}\n\t}\n\tstatic long lmax(long a,long b) {return Math.max(a, b);}\n\tstatic long lmin(long a,long b) {return Math.min(a, b);}\n\tstatic int[] setArray(int a) {\n\t\tint b[]=new int[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextInt();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic long[] lsetArray(int a) {\n\t\tlong b[]=new long[a];\n\t\tfor(int i=0;i<a;i++) {\n\t\t\tb[i]=scan.nextLong();\n\t\t}\n\t\treturn b;\n\t}\n\tstatic String reverce(String str) {\n\t\tString strr=\"\";\n\t\tfor(int i=str.length()-1;i>=0;i--) {\n\t\t\tstrr+=str.charAt(i);\n\t\t}\n\t\treturn strr;\n\t}\n\tpublic static void printArray(char[] ch) {\n\t\tfor(int i=0;i<ch.length-1;i++) {\n\t\t\tSystem.out.print(ch[i]+\" \");\n\t\t}\n\t\tSystem.out.println(ch[ch.length-1]);\n\t}\n\tpublic static int[][] doublesort(int[][]a) {\n\t\tArrays.sort(a,(x,y)->Integer.compare(x[0],y[0]));\n\t\treturn a;\n\t}\n\tstatic long modpow(long x,long n,long mo) {\n\t\tlong sum=1;\n\t\twhile(n>0) {\n\t\t\tif((n&1)==1) {\n\t\t\t\tsum=sum*x%mo;\n\t\t\t}\n\t\t\tx=x*x%mo;\n\t\t\tn>>=1;\n\t\t}\n\t\treturn sum;\n\t}\n\tpublic static char[] revch(char ch[]) {\n\t\tchar ret[]=new char[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static int[] revint(int ch[]) {\n\t\tint ret[]=new int[ch.length];\n\t\tfor(int i=ch.length-1,j=0;i>=0;i--,j++) {\n\t\t\tret[j]=ch[i];\n\t\t}\n\t\treturn ret;\n\t}\n\tpublic static void warshall_floyd(int v[][],int n) {\n\t\tfor(int k=0;k<n;k++)\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tfor(int j=0;j<n;j++)\n\t\t\t\t\tv[i][j]=min(v[i][j],v[i][k]+v[k][j]);\n\t}\n\tpublic static void main(String[] args) {\n\t\tlong a=scan.nextLong();\n\t\tlong b=scan.nextLong();\n\t\tint cnt=0;\n\t\tlong now=a;\n\t\twhile(now<=b) {\n\t\t\tcnt++;\n\t\t\tnow*=2;\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n}", "label": 0}, {"id": 504, "code1": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\n\tint N,M;\n\tboolean[] first,second;\n\n\tpublic void solve() {\n\n\t\tN = nextInt();\n\t\tM = nextInt();\n\n\t\tfirst = new boolean[N];\n\t\tsecond = new boolean[N];\n\n\t\tfor(int i = 0;i < M;i++){\n\t\t\tint a = nextInt()-1;\n\t\t\tint b = nextInt()-1;\n\n\t\t\tif(a == 0){\n\t\t\t\tfirst[b] = true;\n\t\t\t}\n\n\t\t\tif(b == N-1){\n\t\t\t\tsecond[a] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 1;i < N - 1;i++){\n\t\t\tif(first[i] && second[i]){\n\t\t\t\tout.println(\"POSSIBLE\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tout.println(\"IMPOSSIBLE\");\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\n\t/* Input */\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n\n\tprivate boolean hasNextByte() {\n\t\tif (p < buflen)\n\t\t\treturn true;\n\t\tp = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (buflen <= 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic boolean hasNext() {\n\t\twhile (hasNextByte() && !isPrint(buffer[p])) {\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n\n\tprivate boolean isPrint(int ch) {\n\t\tif (ch >= '!' && ch <= '~')\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tprivate int nextByte() {\n\t\tif (!hasNextByte())\n\t\t\treturn -1;\n\t\treturn buffer[p++];\n\t}\n\n\tpublic String next() {\n\t\tif (!hasNext())\n\t\t\tthrow new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile (isPrint((b = nextByte()))) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}", "code2": "import java.util.*;\nimport java.io.*;\n\npublic class Main implements Runnable {\n    public static void main(String[] args) {\n        Thread.setDefaultUncaughtExceptionHandler((t,e)->System.exit(1));\n        // keep stack\n        new Thread(null, new Main(), \"\", 16 * 1024 * 1024).start();\n    }\n    public void run() {\n        FastScanner sc = new FastScanner();\n        PrintWriter out = new PrintWriter(System.out);\n        long X = sc.nextLong();\n        long Y = sc.nextLong();\n\n        long count = 1;\n        while(true) {\n            long A = X * 2;\n            if (Y < A) {\n                break;\n            }\n            X = A;\n            count++;\n        }\n        out.printf(\"%d\\n\", count);\n        out.flush();\n    }\n}\n\nclass FastScanner {\n    private final InputStream in = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        } else {\n            ptr = 0;\n            try {\n                buflen = in.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private int readByte() {\n        if (hasNextByte()) {\n            return buffer[ptr++];\n        }\n        else {\n            return -1;\n        }\n    }\n\n    private static boolean isPrintableChar(int c) {\n        return 33 <= c && c <= 126;\n    }\n\n    private void skipUnprintable() {\n        while (hasNextByte() && !isPrintableChar(buffer[ptr])) {\n            ptr++;\n        }\n    }\n\n    public boolean hasNext() {\n        skipUnprintable();\n        return hasNextByte();\n    }\n\n    public String next() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while (isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n\n    public int nextInt() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        int n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while (true) {\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            } else if (b == -1 || !isPrintableChar(b)) {\n                return minus ? -n : n;\n            } else {\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n\n    public long nextLong() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while (true) {\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            } else if (b == -1 || !isPrintableChar(b)) {\n                return minus ? -n : n;\n            } else {\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n}", "label": 0}, {"id": 595, "code1": "\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int A = scanner.nextInt();\n        int B = scanner.nextInt();\n        int C = scanner.nextInt();\n\n        if ((A == B && A != C) || (A == C && A != B) || (B == C &&  A != B)) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\n\tpublic class Main {\n\tprivate static Scanner scanner;\n\tpublic static void main(String args[]) {\n\n\t\tscanner = new Scanner(System.in);\n\t\tint a = scanner.nextInt();\n\t\tint[] b = new int[a];\n\t\tint minj,count = 0;\n\t\tfor(int i=0;i < a;i++) b[i] = scanner.nextInt();\n\n\t\tfor(int i = 0;i < a;i++) {\n\t\t\tminj = i;\n\t\t\tfor(int j = i;j < a;j++) {\n\t\t\t\tif(b[j] < b[minj]) {\n\t\t\t\t\tminj = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tif(minj != i) {\n\t\t\t\t\tint tmp = b[i];\n\t\t\t\t\tb[i] = b[minj];\n\t\t\t\t\tb[minj] = tmp;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t}\n\t\tfor(int i=0;i < a;i++) {\n\t\t\tSystem.out.print(b[i]);\n\t\t\tif(i == a-1) System.out.println(\"\");\n\t\t\telse System.out.print(\" \");\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\t}\n\n", "label": 0}, {"id": 302, "code1": "import java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while (true) {\n            int n = sc.nextInt();\n            if (n == 0) break;\n            int[] s = new int[n];\n            double e = 0.0, v = 0.0;\n            for (int i = 0; i < n; i++) {\n                s[i] = sc.nextInt();\n                e += s[i];\n                v += s[i] * s[i];\n            }\n            e /= n;\n            v = v / n - e * e;\n            System.out.println(Math.sqrt(v));\n        }\n    }\n}\n", "code2": "import java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayDeque;\nimport java.util.Deque;\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\nclass Main{\n          public static void main(String[] args) {\n                  Scanner scan = new Scanner(System.in);\n                  int count = 0;\n                  int N = scan.nextInt();\n                  int a[] = new int[N];\n                  for (int i = 0; i < N; i++) {\n                          a[i] = scan.nextInt();\n                  }\n                  for(int j = 1; j < N; j++){\n                          if (a[j-1] == a[j]) {\n                                  a[j] = 10001;\n                                  count++;\n                          }\n                  }\n                  System.out.println(count);\n                  }\n}\n", "label": 0}, {"id": 557, "code1": "import java.util.*;\n\npublic class Main {\n\tpublic static HashMap<String,HashSet<String>> map;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tint n = sc.nextInt();\n\t\t\tif(n == 0) break;\n\t\t\tmap = new HashMap<String, HashSet<String>>();\n\t\t\tString first = null;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString[] s = sc.next().split(\":\");\n\t\t\t\tif(i == 0) first = s[0];\n\t\t\t\ts[1] = s[1].replaceAll(\"\\\\.\", \"\");\n\t\t\t\tString[] ss = s[1].split(\",\");\n\t\t\t\tmap.put(s[0], new HashSet<String>());\n\t\t\t\tfor(String tmp : ss){\n\t\t\t\t\tmap.get(s[0]).add(tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(String si : map.keySet()){\n\t\t\t\tfor(String sj : map.keySet()){\n\t\t\t\t\tif(map.get(si).contains(sj)){\n\t\t\t\t\t\tmap.get(si).remove(sj);\n\t\t\t\t\t\tmap.get(si).addAll(map.get(sj));\n\t\t\t\t\t}\n\t\t\t\t\tif(map.get(sj).contains(si)){\n\t\t\t\t\t\tmap.get(sj).remove(si);\n\t\t\t\t\t\tmap.get(sj).addAll(map.get(si));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(map.get(first).size());\n\t\t}\n\t}\n/*\n\tpublic static HashSet<String> solve(String group){\n\t\tfor(String s : map.get(group)){\n\n\t\t}\n\n\t}\n\t*/\n}", "code2": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        BRemovingBlocks solver = new BRemovingBlocks();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BRemovingBlocks {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            long[] a = in.readLongArray(n);\n\n            Modulo.mod = MiscUtils.MOD7;\n\n            long[] s = new long[n];\n            s[0] = 1;\n            for (int i = 1; i < n; i++) {\n                s[i] = Modulo.add(s[i - 1], Modulo.rev(i + 1));\n            }\n\n            long ans = 0;\n            for (int i = 0; i < n; i++) {\n                long sum = Modulo.mlt(a[i], s[i] + s[n - 1 - i] - 1);\n                ans = Modulo.add(ans, sum);\n            }\n            for (int i = 1; i <= n; i++) ans = Modulo.mlt(ans, i);\n            out.printLine(ans);\n        }\n\n    }\n\n    static class Modulo {\n        public static long mod;\n        private long value;\n\n        public Modulo(long value) {\n            this.value = (value % mod + mod) % mod;\n        }\n\n        public static long add(long a, long b) {\n            return ((a + b) % mod + mod) % mod;\n        }\n\n        public static long mlt(long a, long b) {\n            return ((a % mod + mod) * (b % mod + mod)) % mod;\n        }\n\n        public static long rev(long a) {\n            //return pow(a, mod - 2);\n            return (Euclid.extgcd(a, mod, new long[3])[0] % mod + mod) % mod;\n        }\n\n        public String toString() {\n            return \"\" + value;\n        }\n\n    }\n\n    static class Euclid {\n        public static long[] extgcd(long a, long b, long[] is) {\n            if (a == 0) {\n                is[0] = 0;\n                is[1] = 1;\n                is[2] = b;\n            } else {\n                extgcd(b % a, a, is);\n                long x = is[1] - b / a * is[0];\n                is[1] = is[0];\n                is[0] = x;\n            }\n            return is;\n        }\n\n    }\n\n    static class MiscUtils {\n        public static final int MOD7 = (int) (1e9 + 7);\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public long[] readLongArray(int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n", "label": 0}, {"id": 647, "code1": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author GYSHGX868\n */\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    OutputWriter out = new OutputWriter(outputStream);\n    TaskA solver = new TaskA();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskA {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n      char a = in.nextChar();\n      char b = in.nextChar();\n      if (a == 'H') {\n        out.printLine(b);\n      } else {\n        out.printLine(b == 'H' ? 'D' : 'H');\n      }\n    }\n\n  }\n\n  static class InputReader {\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private InputReader.SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n      this.stream = stream;\n    }\n\n    public int read() {\n      if (numChars == -1) {\n        throw new InputMismatchException();\n      }\n      if (curChar >= numChars) {\n        curChar = 0;\n        try {\n          numChars = stream.read(buf);\n        } catch (IOException e) {\n          throw new InputMismatchException();\n        }\n        if (numChars <= 0) {\n          return -1;\n        }\n      }\n      return buf[curChar++];\n    }\n\n    public boolean isSpaceChar(int c) {\n      if (filter != null) {\n        return filter.isSpaceChar(c);\n      }\n      return isWhitespace(c);\n    }\n\n    public static boolean isWhitespace(int c) {\n      return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public char nextChar() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      return (char) c;\n    }\n\n    public interface SpaceCharFilter {\n      boolean isSpaceChar(int ch);\n\n    }\n\n  }\n\n  static class OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n      writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n      this.writer = new PrintWriter(writer);\n    }\n\n    public void printLine(char i) {\n      writer.println(i);\n    }\n\n    public void close() {\n      writer.close();\n    }\n\n  }\n}\n\n", "code2": "import java.io.*;\nimport java.lang.*;\nimport java.util.Scanner;\nimport java.util.Arrays;\nimport java.util.ArrayList;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tint i;\n\t\tfor(i = 0; i < 1000; i++){\n\t\t\tSystem.out.println(\"Hello World\");\n\t\t}\n\t}\n}", "label": 0}]